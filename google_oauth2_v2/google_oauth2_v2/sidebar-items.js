initSidebarItems({"enum":[["Error",""],["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["DefaultDelegate","A delegate with a conservative default implementation, which is used if no other delegate is set."],["ErrorResponse","A utility to represent detailed errors we might see in case there are BadRequests. The latter happen if the sent parameters or request structures are unsound"],["Jwk","There is no detailed description."],["JwkKeys","There is no detailed description."],["MethodGetCertForOpenIdConnectCall","A builder for the *getCertForOpenIdConnect* method. It is not used directly, but through a `MethodMethods` instance."],["MethodInfo","Contains information about an API request."],["MethodMethods","A builder providing access to all free methods, which are not associated with a particular resource. It is not used directly, but through the `Oauth2` hub."],["MethodTokeninfoCall","A builder for the *tokeninfo* method. It is not used directly, but through a `MethodMethods` instance."],["MultiPartReader","Provides a `Read` interface that converts multiple parts into the protocol identified by RFC2387. **Note**: This implementation is just as rich as it needs to be to perform uploads to google APIs, and might not be a fully-featured implementation."],["Oauth2","Central instance to access all Oauth2 related resource activities"],["Tokeninfo","There is no detailed description."],["UserinfoGetCall","A builder for the *get* method supported by a *userinfo* resource. It is not used directly, but through a `UserinfoMethods` instance."],["UserinfoMethods","A builder providing access to all methods supported on *userinfo* resources. It is not used directly, but through the `Oauth2` hub."],["UserinfoV2MeGetCall","A builder for the *v2.me.get* method supported by a *userinfo* resource. It is not used directly, but through a `UserinfoMethods` instance."],["Userinfoplus","There is no detailed description."]],"trait":[["CallBuilder","Identifies types which represent builders for a particular resource method"],["Delegate","A trait specifying functionality to help controlling any request performed by the API. The trait has a conservative default implementation."],["Hub","Identifies the Hub. There is only one per library, this trait is supposed to make intended use more explicit. The hub allows to access all resource methods more easily."],["MethodsBuilder","Identifies types for building methods of a particular resource type"],["NestedType","Identifies types which are only used by other types internally. They have no special meaning, this trait just marks them for completeness."],["Part","Identifies types which are only used as part of other types, which usually are carrying the `Resource` trait."],["ReadSeek","A utility to specify reader types which provide seeking capabilities too"],["RequestValue","Identifies types which are used in API requests."],["Resource","Identifies types which can be inserted and deleted. Types with this trait are most commonly used by clients of this API."],["ResponseResult","Identifies types which are used in API responses."],["ToParts","A trait for all types that can convert themselves into a *parts* string"]],"type":[["Result","A universal result type used as return for all calls."]]});