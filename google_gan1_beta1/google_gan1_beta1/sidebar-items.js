initSidebarItems({"enum":[["Error",""]],"struct":[["Advertiser","An AdvertiserResource."],["AdvertiserGetCall","Retrieves data about a single advertiser if that the requesting advertiser/publisher has access to it. Only publishers can lookup advertisers. Advertisers can request information about themselves by omitting the advertiserId query parameter."],["AdvertiserListCall","Retrieves data about all advertisers that the requesting advertiser/publisher has access to."],["AdvertiserMethods","A builder providing access to all methods supported on *advertiser* resources. It is not used directly, but through the `Gan` hub."],["Advertisers","There is no detailed description."],["CcOffer","A credit card offer. There are many possible result fields. We provide two different views of the data, or \"projections.\" The \"full\" projection includes every result field. And the \"summary\" projection, which is the default, includes a smaller subset of the fields. The fields included in the summary projection are marked as such in their descriptions."],["CcOfferBonusRewards","For cards with rewards programs, extra circumstances whereby additional rewards may be granted."],["CcOfferDefaultFees","Fees for defaulting on your payments."],["CcOfferListCall","Retrieves credit card offers for the given publisher."],["CcOfferMethods","A builder providing access to all methods supported on *ccOffer* resources. It is not used directly, but through the `Gan` hub."],["CcOfferRewards","For cards with rewards programs, detailed rules about how the program works."],["CcOffers","There is no detailed description."],["DefaultDelegate","A delegate with a conservative default implementation, which is used if no other delegate is set."],["ErrorResponse","A utility to represent detailed errors we might see in case there are BadRequests. The latter happen if the sent parameters or request structures are unsound"],["Event","An EventResource."],["EventListCall","Retrieves event data for a given advertiser/publisher."],["EventMethods","A builder providing access to all methods supported on *event* resources. It is not used directly, but through the `Gan` hub."],["EventProducts","Products associated with the event."],["Events","There is no detailed description."],["Gan","Central instance to access all Gan related resource activities"],["Link","A LinkResource."],["LinkGetCall","Retrieves data about a single link if the requesting advertiser/publisher has access to it. Advertisers can look up their own links. Publishers can look up visible links or links belonging to advertisers they are in a relationship with."],["LinkInsertCall","Inserts a new link."],["LinkListCall","Retrieves all links that match the query parameters."],["LinkMethods","A builder providing access to all methods supported on *link* resources. It is not used directly, but through the `Gan` hub."],["LinkSpecialOffers","Special offers on the link."],["Links","There is no detailed description."],["MethodInfo","Contains information about an API request."],["Money","An ApiMoneyProto."],["MultiPartReader","Provides a `Read` interface that converts multiple parts into the protocol identified by RFC2387. **Note**: This implementation is just as rich as it needs to be to perform uploads to google APIs, and might not be a fully-featured implementation."],["Publisher","A PublisherResource."],["PublisherGetCall","Retrieves data about a single advertiser if that the requesting advertiser/publisher has access to it. Only advertisers can look up publishers. Publishers can request information about themselves by omitting the publisherId query parameter."],["PublisherListCall","Retrieves data about all publishers that the requesting advertiser/publisher has access to."],["PublisherMethods","A builder providing access to all methods supported on *publisher* resources. It is not used directly, but through the `Gan` hub."],["Publishers","There is no detailed description."],["Report","A ReportResource representing a report of a certain type either for an advertiser or publisher."],["ReportGetCall","Retrieves a report of the specified type."],["ReportMethods","A builder providing access to all methods supported on *report* resources. It is not used directly, but through the `Gan` hub."]],"trait":[["CallBuilder","Identifies types which represent builders for a particular resource method"],["Delegate","A trait specifying functionality to help controlling any request performed by the API. The trait has a conservative default implementation."],["Hub","Identifies the Hub. There is only one per library, this trait is supposed to make intended use more explicit. The hub allows to access all resource methods more easily."],["MethodsBuilder","Identifies types for building methods of a particular resource type"],["NestedType","Identifies types which are only used by other types internally. They have no special meaning, this trait just marks them for completeness."],["Part","Identifies types which are only used as part of other types, which usually are carrying the `Resource` trait."],["ReadSeek","A utility to specify reader types which provide seeking capabilities too"],["RequestValue","Identifies types which are used in API requests."],["Resource","Identifies types which can be inserted and deleted. Types with this trait are most commonly used by clients of this API."],["ResponseResult","Identifies types which are used in API responses."],["ToParts","A trait for all types that can convert themselves into a *parts* string"]],"type":[["Result","A universal result type used as return for all calls."]]});