initSidebarItems({"enum":[["Error",""]],"struct":[["AdministrationRegion","Describes information about a regional election administrative area."],["AdministrativeBody","Information about an election administrative body (e.g. County Board of Elections)."],["Candidate","Information about a candidate running for elected office."],["Channel","A social media or web channel for a candidate."],["CivicInfo","Central instance to access all CivicInfo related resource activities"],["Contest","Information about a contest that appears on a voter's ballot."],["DefaultDelegate","A delegate with a conservative default implementation, which is used if no other delegate is set."],["DivisionMethods","A builder providing access to all methods supported on *division* resources. It is not used directly, but through the `CivicInfo` hub."],["DivisionSearchCall","Searches for political divisions by their natural name or OCD ID."],["DivisionSearchResponse","The result of a division search query."],["DivisionSearchResult","Represents a political geographic division that matches the requested query."],["Election","Information about the election that was queried."],["ElectionElectionQueryCall","List of available elections to query."],["ElectionMethods","A builder providing access to all methods supported on *election* resources. It is not used directly, but through the `CivicInfo` hub."],["ElectionOfficial","Information about individual election officials."],["ElectionVoterInfoQueryCall","Looks up information relevant to a voter based on the voter's registered address."],["ElectionsQueryResponse","The list of elections available for this version of the API."],["ElectoralDistrict","Describes the geographic scope of a contest."],["ErrorResponse","A utility to represent detailed errors we might see in case there are BadRequests. The latter happen if the sent parameters or request structures are unsound"],["GeographicDivision","Describes a political geography."],["MethodInfo","Contains information about an API request."],["MultiPartReader","Provides a `Read` interface that converts multiple parts into the protocol identified by RFC2387. **Note**: This implementation is just as rich as it needs to be to perform uploads to google APIs, and might not be a fully-featured implementation."],["Office","Information about an Office held by one or more Officials."],["Official","Information about a person holding an elected office."],["PollingLocation","A location where a voter can vote. This may be an early vote site, an election day voting location, or a drop off location for a completed ballot."],["RepresentativeInfoData","There is no detailed description."],["RepresentativeInfoResponse","The result of a representative info lookup query."],["RepresentativeMethods","A builder providing access to all methods supported on *representative* resources. It is not used directly, but through the `CivicInfo` hub."],["RepresentativeRepresentativeInfoByAddresCall","Looks up political geography and representative information for a single address."],["RepresentativeRepresentativeInfoByDivisionCall","Looks up representative information for a single geographic division."],["SimpleAddressType","A simple representation of an address."],["Source","Contains information about the data source for the element containing it."],["VoterInfoResponse","The result of a voter info lookup query."]],"trait":[["CallBuilder","Identifies types which represent builders for a particular resource method"],["Delegate","A trait specifying functionality to help controlling any request performed by the API. The trait has a conservative default implementation."],["Hub","Identifies the Hub. There is only one per library, this trait is supposed to make intended use more explicit. The hub allows to access all resource methods more easily."],["MethodsBuilder","Identifies types for building methods of a particular resource type"],["NestedType","Identifies types which are only used by other types internally. They have no special meaning, this trait just marks them for completeness."],["Part","Identifies types which are only used as part of other types, which usually are carrying the `Resource` trait."],["ReadSeek","A utility to specify reader types which provide seeking capabilities too"],["RequestValue","Identifies types which are used in API requests."],["Resource","Identifies types which can be inserted and deleted. Types with this trait are most commonly used by clients of this API."],["ResponseResult","Identifies types which are used in API responses."],["ToParts","A trait for all types that can convert themselves into a *parts* string"]],"type":[["Result","A universal result type used as return for all calls."]]});