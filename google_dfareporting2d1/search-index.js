var searchIndex = {};
searchIndex['google_dfareporting2d1'] = {"items":[[0,"","google_dfareporting2d1","This documentation was generated from *dfareporting* crate version *0.1.7+20150326*, where *20150326* is the exact revision of the *dfareporting:v2.1* schema built by the [mako](http://www.makotemplates.org/) code generator *v0.1.7*.",null,null],[3,"MultiPartReader","","Provides a `Read` interface that converts multiple parts into the protocol\nidentified by [RFC2387](https://tools.ietf.org/html/rfc2387).\n**Note**: This implementation is just as rich as it needs to be to perform uploads\nto google APIs, and might not be a fully-featured implementation.",null,null],[3,"MethodInfo","","Contains information about an API request.",null,null],[12,"id","","",0,null],[12,"http_method","","",0,null],[3,"DefaultDelegate","","A delegate with a conservative default implementation, which is used if no other delegate is\nset.",null,null],[3,"ErrorResponse","","A utility to represent detailed errors we might see in case there are BadRequests.\nThe latter happen if the sent parameters or request structures are unsound",null,null],[3,"Dfareporting","","Central instance to access all Dfareporting related resource activities",null,null],[3,"OperatingSystemsListResponse","","Operating System List Response",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#operatingSystemsListResponse\".",1,null],[12,"operating_systems","","Operating system collection.",1,null],[3,"DirectorySiteSettings","","Directory Site Settings",null,null],[12,"interstitial_placement_accepted","","Whether this site accepts interstitial ads.",2,null],[12,"nielsen_ocr_opt_out","","Whether this directory site has disabled Nielsen OCR reach ratings.",2,null],[12,"active_view_opt_out","","Whether this directory site has disabled active view creatives.",2,null],[12,"video_active_view_opt_out","","Whether this directory site has disabled active view for in-stream video creatives.",2,null],[12,"dfp_settings","","Directory site DFP settings.",2,null],[12,"verification_tag_opt_out","","Whether this directory site has disabled generation of Verification ins tags.",2,null],[12,"instream_video_placement_accepted","","Whether this site accepts in-stream video ads.",2,null],[3,"MobileCarrier","","Contains information about a mobile carrier that can be targeted by ads.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#mobileCarrier\".",3,null],[12,"country_dart_id","","DART ID of the country to which this mobile carrier belongs.",3,null],[12,"id","","ID of this mobile carrier.",3,null],[12,"country_code","","Country code of the country to which this mobile carrier belongs.",3,null],[12,"name","","Name of this mobile carrier.",3,null],[3,"Subaccount","","Contains properties of a DCM subaccount.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#subaccount\".",4,null],[12,"account_id","","ID of the account that contains this subaccount. This is a read-only field that can be left blank.",4,null],[12,"available_permission_ids","","IDs of the available user role permissions for this subaccount.",4,null],[12,"id","","ID of this subaccount. This is a read-only, auto-generated field.",4,null],[12,"name","","Name of this subaccount. This is a required field. Must be less than 128 characters long and be unique among subaccounts of the same account.",4,null],[3,"AccountPermissionGroup","","AccountPermissionGroups contains a mapping of permission group IDs to names. A permission group is a grouping of account permissions.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountPermissionGroup\".",5,null],[12,"id","","ID of this account permission group.",5,null],[12,"name","","Name of this account permission group.",5,null],[3,"DimensionValueList","","Represents the list of DimensionValue resources.",null,null],[12,"next_page_token","","Continuation token used to page through dimension values. To retrieve the next page of results, set the next request's \"pageToken\" to the value of this field. The page token is only valid for a limited amount of time and should not be persisted.",6,null],[12,"items","","The dimension values returned in this response.",6,null],[12,"kind","","The kind of list this is, in this case dfareporting#dimensionValueList.",6,null],[12,"etag","","The eTag of this response for caching purposes.",6,null],[3,"CampaignCreativeAssociationsListResponse","","Campaign Creative Association List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",7,null],[12,"campaign_creative_associations","","Campaign creative association collection",7,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#campaignCreativeAssociationsListResponse\".",7,null],[3,"FloodlightActivitiesListResponse","","Floodlight Activity List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",8,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivitiesListResponse\".",8,null],[12,"floodlight_activities","","Floodlight activity collection.",8,null],[3,"UserRolePermissionGroupsListResponse","","User Role Permission Group List Response",null,null],[12,"user_role_permission_groups","","User role permission group collection.",9,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRolePermissionGroupsListResponse\".",9,null],[3,"FileList","","Represents the list of File resources.",null,null],[12,"next_page_token","","Continuation token used to page through files. To retrieve the next page of results, set the next request's \"pageToken\" to the value of this field. The page token is only valid for a limited amount of time and should not be persisted.",10,null],[12,"items","","The files returned in this response.",10,null],[12,"kind","","The kind of list this is, in this case dfareporting#fileList.",10,null],[12,"etag","","The eTag of this response for caching purposes.",10,null],[3,"CustomRichMediaEvents","","Represents a Custom Rich Media Events group.",null,null],[12,"kind","","The kind of resource this is, in this case dfareporting#customRichMediaEvents.",11,null],[12,"filtered_event_ids","","List of custom rich media event IDs. Dimension values must be all of type dfa:richMediaEventTypeIdAndName.",11,null],[3,"EventTagOverride","","Event tag override information.",null,null],[12,"enabled","","Whether this override is enabled.",12,null],[12,"id","","ID of this event tag override. This is a read-only, auto-generated field.",12,null],[3,"AccountActiveAdSummary","","Gets a summary of active ads in an account.",null,null],[12,"available_ads","","Ads that can be activated for the account.",13,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountActiveAdSummary\".",13,null],[12,"account_id","","ID of the account.",13,null],[12,"active_ads","","Ads that have been activated for the account",13,null],[12,"active_ads_limit_tier","","Maximum number of active ads allowed for the account.",13,null],[3,"LookbackConfiguration","","Lookback configuration settings.",null,null],[12,"click_duration","","Lookback window, in days, from the last time a given user clicked on one of your ads. If you enter 0, clicks will not be considered as triggering events for floodlight tracking. If you leave this field blank, the default value for your account will be used.",14,null],[12,"post_impression_activities_duration","","Lookback window, in days, from the last time a given user viewed one of your ads. If you enter 0, impressions will not be considered as triggering events for floodlight tracking. If you leave this field blank, the default value for your account will be used.",14,null],[3,"FloodlightActivitiesGenerateTagResponse","","Floodlight Activity GenerateTag Response",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivitiesGenerateTagResponse\".",15,null],[12,"floodlight_activity_tag","","Generated tag for this floodlight activity.",15,null],[3,"ListPopulationTerm","","Remarketing List Population Rule Term.",null,null],[12,"remarketing_list_id","","ID of the list in question. This field is only relevant when type is set to LIST_MEMBERSHIP_TERM.",16,null],[12,"contains","","Will be true if the term should check if the user is in the list and false if the term should check if the user is not in the list. This field is only relevant when type is set to LIST_MEMBERSHIP_TERM. False by default.",16,null],[12,"negation","","Whether to negate the comparison result of this term during rule evaluation. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.",16,null],[12,"value","","Literal to compare the variable to. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.",16,null],[12,"variable_friendly_name","","Friendly name of this term's variable. This is a read-only, auto-generated field. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM.",16,null],[12,"operator","","Comparison operator of this term. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.",16,null],[12,"type_","","List population term type determines the applicable fields in this object. If left unset or set to CUSTOM_VARIABLE_TERM, then variableName, variableFriendlyName, operator, value, and negation are applicable. If set to LIST_MEMBERSHIP_TERM then remarketingListId and contains are applicable. If set to REFERRER_TERM then operator, value, and negation are applicable.",16,null],[12,"variable_name","","Name of the variable (U1, U2, etc.) being compared in this term. This field is only relevant when type is set to null, CUSTOM_VARIABLE_TERM or REFERRER_TERM.",16,null],[3,"SiteSettings","","Site Settings",null,null],[12,"disable_brand_safe_ads","","Whether brand safe ads are disabled for this site.",17,null],[12,"creative_settings","","Site-wide creative settings.",17,null],[12,"active_view_opt_out","","Whether active view creatives are disabled for this site.",17,null],[12,"lookback_configuration","","Lookback window settings for this site.",17,null],[12,"disable_new_cookie","","Whether new cookies are disabled for this site.",17,null],[12,"tag_setting","","Configuration settings for dynamic and image floodlight tags.",17,null],[3,"AccountUserProfile","","AccountUserProfiles contains properties of a DCM user profile. This resource is specifically for managing user profiles, whereas UserProfiles is for accessing the API.",null,null],[12,"locale","","Locale of the user profile. This is a required field.\nAcceptable values are:  \n- \"cs\" (Czech) \n- \"de\" (German) \n- \"en\" (English) \n- \"en-GB\" (English United Kingdom) \n- \"es\" (Spanish) \n- \"fr\" (French) \n- \"it\" (Italian) \n- \"ja\" (Japanese) \n- \"ko\" (Korean) \n- \"pl\" (Polish) \n- \"pt-BR\" (Portuguese Brazil)\n- \"ru\" (Russian) \n- \"sv\" (Swedish) \n- \"tr\" (Turkish) \n- \"zh-CN\" (Chinese Simplified) \n- \"zh-TW\" (Chinese Traditional)",18,null],[12,"site_filter","","Filter that describes which sites are visible to the user profile.",18,null],[12,"campaign_filter","","Filter that describes which campaigns are visible to the user profile.",18,null],[12,"user_role_id","","User role ID of the user profile. This is a required field.",18,null],[12,"user_access_type","","User type of the user profile. This is a read-only field that can be left blank.",18,null],[12,"active","","Whether this user profile is active. This defaults to false, and must be set true on insert for the user profile to be usable.",18,null],[12,"id","","ID of the user profile. This is a read-only, auto-generated field.",18,null],[12,"account_id","","Account ID of the user profile. This is a read-only field that can be left blank.",18,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountUserProfile\".",18,null],[12,"subaccount_id","","Subaccount ID of the user profile. This is a read-only field that can be left blank.",18,null],[12,"user_role_filter","","Filter that describes which user roles are visible to the user profile.",18,null],[12,"trafficker_type","","Trafficker type of this user profile.",18,null],[12,"comments","","Comments for this user profile.",18,null],[12,"name","","Name of the user profile. This is a required field. Must be less than 64 characters long, must be globally unique, and cannot contain whitespace or any of the following characters: \"&;\"#%,\".",18,null],[12,"advertiser_filter","","Filter that describes which advertisers are visible to the user profile.",18,null],[12,"email","","Email of the user profile. The email addresss must be linked to a Google Account. This field is required on insertion and is read-only after insertion.",18,null],[3,"TagSettings","","Dynamic and Image Tag Settings.",null,null],[12,"dynamic_tag_enabled","","Whether dynamic floodlight tags are enabled.",19,null],[12,"image_tag_enabled","","Whether image tags are enabled.",19,null],[3,"TargetableRemarketingList","","Contains properties of a targetable remarketing list. Remarketing enables you to create lists of users who have performed specific actions on a site, then target ads to members of those lists. This resource is a read-only view of a remarketing list to be used to faciliate targeting ads to specific lists. Remarketing lists that are owned by your advertisers and those that are shared to your advertisers or account are accessible via this resource. To manage remarketing lists that are owned by your advertisers, use the RemarketingList resource.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#targetableRemarketingList\".",20,null],[12,"subaccount_id","","Subaccount ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.",20,null],[12,"description","","Targetable remarketing list description.",20,null],[12,"list_size","","Number of users currently in the list. This is a read-only field.",20,null],[12,"life_span","","Number of days that a user should remain in the targetable remarketing list without an impression.",20,null],[12,"advertiser_id","","Dimension value for the advertiser ID that owns this targetable remarketing list.",20,null],[12,"list_source","","Product from which this targetable remarketing list was originated.",20,null],[12,"active","","Whether this targetable remarketing list is active.",20,null],[12,"advertiser_id_dimension_value","","Dimension value for the ID of the advertiser.",20,null],[12,"account_id","","Account ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.",20,null],[12,"id","","Targetable remarketing list ID.",20,null],[12,"name","","Name of the targetable remarketing list. Is no greater than 128 characters long.",20,null],[3,"OperatingSystemVersion","","Contains information about a particular version of an operating system that can be targeted by ads.",null,null],[12,"major_version","","Major version (leftmost number) of this operating system version.",21,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#operatingSystemVersion\".",21,null],[12,"minor_version","","Minor version (number after the first dot) of this operating system version.",21,null],[12,"name","","Name of this operating system version.",21,null],[12,"operating_system","","Operating system of this operating system version.",21,null],[12,"id","","ID of this operating system version.",21,null],[3,"RemarketingListsListResponse","","Remarketing list response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",22,null],[12,"remarketing_lists","","Remarketing list collection.",22,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#remarketingListsListResponse\".",22,null],[3,"CreativeFieldAssignment","","Creative Field Assignment.",null,null],[12,"creative_field_id","","ID of the creative field.",23,null],[12,"creative_field_value_id","","ID of the creative field value.",23,null],[3,"ListPopulationRule","","Remarketing List Population Rule.",null,null],[12,"floodlight_activity_id","","Floodlight activity ID associated with this rule. This field can be left blank.",24,null],[12,"floodlight_activity_name","","Name of floodlight activity associated with this rule. This is a read-only, auto-generated field.",24,null],[12,"list_population_clauses","","Clauses that make up this list population rule. Clauses are joined by ANDs, and the clauses themselves are made up of list population terms which are joined by ORs.",24,null],[3,"Account","","Contains properties of a DCM account.",null,null],[12,"teaser_size_limit","","File size limit in kilobytes of Rich Media teaser creatives. Must be between 1 and 10240.",25,null],[12,"active_view_opt_out","","Whether to serve creatives with Active View tags. If disabled, viewability data will not be available for any impressions.",25,null],[12,"description","","Description of this account.",25,null],[12,"locale","","Locale of this account.\nAcceptable values are: \n- \"cs\" (Czech) \n- \"de\" (German) \n- \"en\" (English) \n- \"en-GB\" (English United Kingdom) \n- \"es\" (Spanish) \n- \"fr\" (French) \n- \"it\" (Italian) \n- \"ja\" (Japanese) \n- \"ko\" (Korean) \n- \"pl\" (Polish) \n- \"pt-BR\" (Portuguese Brazil) \n- \"ru\" (Russian) \n- \"sv\" (Swedish) \n- \"tr\" (Turkish) \n- \"zh-CN\" (Chinese Simplified) \n- \"zh-TW\" (Chinese Traditional)",25,null],[12,"account_profile","","Profile for this account. This is a read-only field that can be left blank.",25,null],[12,"active","","Whether this account is active.",25,null],[12,"comscore_vce_enabled","","Whether campaigns created in this account will be enabled for comScore vCE by default.",25,null],[12,"id","","ID of this account. This is a read-only, auto-generated field.",25,null],[12,"available_permission_ids","","User role permissions available to the user roles of this account.",25,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#account\".",25,null],[12,"country_id","","ID of the country associated with this account.",25,null],[12,"name","","Name of this account. This is a required field, and must be less than 128 characters long and be globally unique.",25,null],[12,"maximum_image_size","","Maximum image size allowed for this account.",25,null],[12,"nielsen_ocr_enabled","","Whether campaigns created in this account will be enabled for Nielsen OCR reach ratings by default.",25,null],[12,"default_creative_size_id","","Default placement dimensions for this account.",25,null],[12,"account_permission_ids","","Account permissions assigned to this account.",25,null],[12,"currency_id","","ID of currency associated with this account. This is a required field.\nAcceptable values are: \n- \"1\" for USD \n- \"2\" for GBP \n- \"3\" for ESP \n- \"4\" for SEK \n- \"5\" for CAD \n- \"6\" for JPY \n- \"7\" for DEM \n- \"8\" for AUD \n- \"9\" for FRF \n- \"10\" for ITL \n- \"11\" for DKK \n- \"12\" for NOK \n- \"13\" for FIM \n- \"14\" for ZAR \n- \"15\" for IEP \n- \"16\" for NLG \n- \"17\" for EUR \n- \"18\" for KRW \n- \"19\" for TWD \n- \"20\" for SGD \n- \"21\" for CNY \n- \"22\" for HKD \n- \"23\" for NZD \n- \"24\" for MYR \n- \"25\" for BRL \n- \"26\" for PTE \n- \"27\" for MXP \n- \"28\" for CLP \n- \"29\" for TRY \n- \"30\" for ARS \n- \"31\" for PEN \n- \"32\" for ILS \n- \"33\" for CHF \n- \"34\" for VEF \n- \"35\" for COP \n- \"36\" for GTQ",25,null],[12,"reports_configuration","","Reporting configuration of this account.",25,null],[12,"active_ads_limit_tier","","Maximum number of active ads allowed for this account.",25,null],[3,"DayPartTargeting","","Day Part Targeting.",null,null],[12,"days_of_week","","Days of the week when the ad will serve.",26,null],[12,"hours_of_day","","Hours of the day when the ad will serve. Must be an integer between 0 and 23 (inclusive), where 0 is midnight to 1 AM, and 23 is 11 PM to midnight. Can be specified with days of week, in which case the ad would serve during these hours on the specified days. For example, if Monday, Wednesday, Friday are the days of week specified and 9-10am, 3-5pm (hours 9, 15, and 16) is specified, the ad would serve Monday, Wednesdays, and Fridays at 9-10am and 3-5pm.",26,null],[12,"user_local_time","","Whether or not to use the user's local time. If false, the America/New York time zone applies.",26,null],[3,"CompatibleFields","","Represents a response to the queryCompatibleFields method.",null,null],[12,"kind","","The kind of resource this is, in this case dfareporting#compatibleFields.",27,null],[12,"cross_dimension_reach_report_compatible_fields","","Contains items that are compatible to be selected for a report of type \"CROSS_DIMENSION_REACH\".",27,null],[12,"reach_report_compatible_fields","","Contains items that are compatible to be selected for a report of type \"REACH\".",27,null],[12,"path_to_conversion_report_compatible_fields","","Contains items that are compatible to be selected for a report of type \"PATH_TO_CONVERSION\".",27,null],[12,"floodlight_report_compatible_fields","","Contains items that are compatible to be selected for a report of type \"FLOODLIGHT\".",27,null],[12,"report_compatible_fields","","Contains items that are compatible to be selected for a report of type \"STANDARD\".",27,null],[3,"Region","","Contains information about a region that can be targeted by ads.",null,null],[12,"region_code","","Region code.",28,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#region\".",28,null],[12,"country_dart_id","","DART ID of the country to which this region belongs.",28,null],[12,"name","","Name of this region.",28,null],[12,"country_code","","Country code of the country to which this region belongs.",28,null],[12,"dart_id","","DART ID of this region.",28,null],[3,"ReportCriteria","","The report criteria for a report of type \"STANDARD\".",null,null],[12,"activities","","Activity group.",29,null],[12,"dimensions","","The list of standard dimensions the report should include.",29,null],[12,"metric_names","","The list of names of metrics the report should include.",29,null],[12,"date_range","","The date range for which this report should be run.",29,null],[12,"custom_rich_media_events","","Custom Rich Media Events group.",29,null],[12,"dimension_filters","","The list of filters on which dimensions are filtered.\nFilters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed.",29,null],[3,"OrdersListResponse","","Order List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",30,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#ordersListResponse\".",30,null],[12,"orders","","Order collection.",30,null],[3,"CrossDimensionReachReportCompatibleFields","","Represents fields that are compatible to be selected for a report of type \"CROSS_DIMENSION_REACH\".",null,null],[12,"breakdown","","Dimensions which are compatible to be selected in the \"breakdown\" section of the report.",31,null],[12,"metrics","","Metrics which are compatible to be selected in the \"metricNames\" section of the report.",31,null],[12,"kind","","The kind of resource this is, in this case dfareporting#crossDimensionReachReportCompatibleFields.",31,null],[12,"overlap_metrics","","Metrics which are compatible to be selected in the \"overlapMetricNames\" section of the report.",31,null],[12,"dimension_filters","","Dimensions which are compatible to be selected in the \"dimensionFilters\" section of the report.",31,null],[3,"UserRole","","Contains properties of auser role, which is used to manage user access.",null,null],[12,"default_user_role","","Whether this is a default user role. Default user roles are created by the system for the account/subaccount and cannot be modified or deleted. Each default user role comes with a basic set of preassigned permissions.",32,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRole\".",32,null],[12,"subaccount_id","","Subaccount ID of this user role. This is a read-only field that can be left blank.",32,null],[12,"name","","Name of this user role. This is a required field. Must be less than 256 characters long. If this user role is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this user role is a top-level user role, and the name must be unique among top-level user roles of the same account.",32,null],[12,"parent_user_role_id","","ID of the user role that this user role is based on or copied from. This is a required field.",32,null],[12,"account_id","","Account ID of this user role. This is a read-only field that can be left blank.",32,null],[12,"id","","ID of this user role. This is a read-only, auto-generated field.",32,null],[12,"permissions","","List of permissions associated with this user role.",32,null],[3,"EventTagsListResponse","","Event Tag List Response",null,null],[12,"event_tags","","Event tag collection.",33,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#eventTagsListResponse\".",33,null],[3,"FloodlightActivityGroup","","Contains properties of a Floodlight activity group.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivityGroup\".",34,null],[12,"subaccount_id","","Subaccount ID of this floodlight activity group. This is a read-only field that can be left blank.",34,null],[12,"name","","Name of this floodlight activity group. This is a required field. Must be less than 65 characters long and cannot contain quotes.",34,null],[12,"floodlight_configuration_id","","Floodlight configuration ID of this floodlight activity group. This is a required field.",34,null],[12,"advertiser_id","","Advertiser ID of this floodlight activity group. If this field is left blank, the value will be copied over either from the floodlight configuration's advertiser or from the existing activity group's advertiser.",34,null],[12,"floodlight_configuration_id_dimension_value","","Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated field.",34,null],[12,"id_dimension_value","","Dimension value for the ID of this floodlight activity group. This is a read-only, auto-generated field.",34,null],[12,"advertiser_id_dimension_value","","Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",34,null],[12,"tag_string","","Value of the type= parameter in the floodlight tag, which the ad servers use to identify the activity group that the activity belongs to. This is optional: if empty, a new tag string will be generated for you. This string must be 1 to 8 characters long, with valid characters being [a-z][A-Z][0-9][-][ _ ]. This tag string must also be unique among activity groups of the same floodlight configuration. This field is read-only after insertion.",34,null],[12,"type_","","Type of the floodlight activity group. This is a required field that is read-only after insertion.",34,null],[12,"id","","ID of this floodlight activity group. This is a read-only, auto-generated field.",34,null],[12,"account_id","","Account ID of this floodlight activity group. This is a read-only field that can be left blank.",34,null],[3,"AudienceSegment","","Audience Segment.",null,null],[12,"allocation","","Weight allocated to this segment. Must be between 1 and 1000. The weight assigned will be understood in proportion to the weights assigned to other segments in the same segment group.",35,null],[12,"id","","ID of this audience segment. This is a read-only, auto-generated field.",35,null],[12,"name","","Name of this audience segment. This is a required field and must be less than 65 characters long.",35,null],[3,"Campaign","","Contains properties of a DCM campaign.",null,null],[12,"comment","","Arbitrary comments about this campaign. Must be less than 256 characters long.",36,null],[12,"start_date","","Date on which the campaign starts running. The start date can be any date. The hours, minutes, and seconds of the start date should not be set, as doing so will result in an error. This is a required field.",36,null],[12,"end_date","","Date on which the campaign will stop running. On insert, the end date must be today or a future date. The end date must be later than or be the same as the start date. If, for example, you set 6/25/2015 as both the start and end dates, the effective campaign run date is just that day only, 6/25/2015. The hours, minutes, and seconds of the end date should not be set, as doing so will result in an error. This is a required field.",36,null],[12,"click_through_url_suffix_properties","","Click-through URL suffix override properties for this campaign.",36,null],[12,"archived","","Whether this campaign has been archived.",36,null],[12,"additional_creative_optimization_configurations","","Additional creative optimization configurations for the campaign.",36,null],[12,"advertiser_id","","Advertiser ID of this campaign. This is a required field.",36,null],[12,"audience_segment_groups","","Audience segment groups assigned to this campaign. Cannot have more than 300 segment groups.",36,null],[12,"create_info","","Information about the creation of this campaign. This is a read-only field.",36,null],[12,"default_click_through_event_tag_properties","","Click-through event tag ID override properties for this campaign.",36,null],[12,"advertiser_id_dimension_value","","Dimension value for the advertiser ID of this campaign. This is a read-only, auto-generated field.",36,null],[12,"event_tag_overrides","","Overrides that can be used to activate or deactivate advertiser event tags.",36,null],[12,"creative_optimization_configuration","","Creative optimization configuration for the campaign.",36,null],[12,"id","","ID of this campaign. This is a read-only auto-generated field.",36,null],[12,"account_id","","Account ID of this campaign. This is a read-only field that can be left blank.",36,null],[12,"trafficker_emails","","Campaign trafficker contact emails.",36,null],[12,"creative_group_ids","","List of creative group IDs that are assigned to the campaign.",36,null],[12,"subaccount_id","","Subaccount ID of this campaign. This is a read-only field that can be left blank.",36,null],[12,"name","","Name of this campaign. This is a required field and must be less than 256 characters long and unique among campaigns of the same advertiser.",36,null],[12,"lookback_configuration","","Lookback window settings for the campaign.",36,null],[12,"nielsen_ocr_enabled","","Whether Nielsen reports are enabled for this campaign.",36,null],[12,"last_modified_info","","Information about the most recent modification of this campaign. This is a read-only field.",36,null],[12,"comscore_vce_enabled","","Whether comScore vCE reports are enabled for this campaign.",36,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#campaign\".",36,null],[12,"external_id","","External ID for this campaign.",36,null],[12,"advertiser_group_id","","Advertiser group ID of the associated advertiser.",36,null],[12,"id_dimension_value","","Dimension value for the ID of this campaign. This is a read-only, auto-generated field.",36,null],[12,"billing_invoice_code","","Billing invoice code included in the DCM client billing invoices associated with the campaign.",36,null],[3,"ChangeLog","","Describes a change that a user has made to a resource.",null,null],[12,"change_time","","Time when the object was modified.",37,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#changeLog\".",37,null],[12,"subaccount_id","","Subaccount ID of the modified object.",37,null],[12,"old_value","","Old value of the object field.",37,null],[12,"object_id","","ID of the object of this change log. The object could be a campaign, placement, ad, or other type.",37,null],[12,"id","","ID of this change log.",37,null],[12,"user_profile_name","","User profile name of the user who modified the object.",37,null],[12,"field_name","","Field name of the object which changed.",37,null],[12,"user_profile_id","","ID of the user who modified the object.",37,null],[12,"action","","Action which caused the change.",37,null],[12,"transaction_id","","Transaction ID of this change log. When a single API call results in many changes, each change will have a separate ID in the change log but will share the same transactionId.",37,null],[12,"account_id","","Account ID of the modified object.",37,null],[12,"new_value","","New value of the object field.",37,null],[12,"object_type","","Object type of the change log.",37,null],[3,"File","","Represents a File resource. A file contains the metadata for a report run. It shows the status of the run and holds the URLs to the generated report data if the run is finished and the status is \"REPORT_AVAILABLE\".",null,null],[12,"status","","The status of the report file.",38,null],[12,"kind","","The kind of resource this is, in this case dfareporting#file.",38,null],[12,"format","","The output format of the report. Only available once the file is available.",38,null],[12,"date_range","","The date range for which the file has report data. The date range will always be the absolute date range for which the report is run.",38,null],[12,"file_name","","The filename of the file.",38,null],[12,"etag","","The eTag of this response for caching purposes.",38,null],[12,"report_id","","The ID of the report this file was generated from.",38,null],[12,"urls","","The URLs where the completed report file can be downloaded.",38,null],[12,"last_modified_time","","The timestamp in milliseconds since epoch when this file was last modified.",38,null],[12,"id","","The unique ID of this report file.",38,null],[3,"KeyValueTargetingExpression","","Key Value Targeting Expression.",null,null],[12,"expression","","Keyword expression being targeted by the ad.",39,null],[3,"ReportCrossDimensionReachCriteria","","The report criteria for a report of type \"CROSS_DIMENSION_REACH\".",null,null],[12,"breakdown","","The list of dimensions the report should include.",40,null],[12,"pivoted","","Whether the report is pivoted or not. Defaults to true.",40,null],[12,"overlap_metric_names","","The list of names of overlap metrics the report should include.",40,null],[12,"metric_names","","The list of names of metrics the report should include.",40,null],[12,"date_range","","The date range this report should be run for.",40,null],[12,"dimension_filters","","The list of filters on which dimensions are filtered.",40,null],[12,"dimension","","The dimension option.",40,null],[3,"Placement","","Contains properties of a placement.",null,null],[12,"comment","","Comments for this placement.",41,null],[12,"campaign_id","","Campaign ID of this placement. This field is a required field on insertion.",41,null],[12,"payment_source","","Payment source for this placement. This is a required field that is read-only after insertion.",41,null],[12,"directory_site_id_dimension_value","","Dimension value for the ID of the directory site. This is a read-only, auto-generated field.",41,null],[12,"advertiser_id","","Advertiser ID of this placement. This field can be left blank.",41,null],[12,"key_name","","Key name of this placement. This is a read-only, auto-generated field.",41,null],[12,"directory_site_id","","Directory site ID of this placement. On insert, you must set either this field or the siteId field to specify the site associated with this placement. This is a required field that is read-only after insertion.",41,null],[12,"advertiser_id_dimension_value","","Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",41,null],[12,"content_category_id","","ID of the content category assigned to this placement.",41,null],[12,"size","","Size associated with this placement. When inserting or updating a placement, only the size ID field is used. This field is required on insertion.",41,null],[12,"archived","","Whether this placement is archived.",41,null],[12,"publisher_update_info","","Information about the last publisher update. This is a read-only field.",41,null],[12,"tag_formats","","Tag formats to generate for this placement. This field is required on insertion.\nAcceptable values are:\n- \"PLACEMENT_TAG_STANDARD\"\n- \"PLACEMENT_TAG_IFRAME_JAVASCRIPT\"\n- \"PLACEMENT_TAG_IFRAME_ILAYER\"\n- \"PLACEMENT_TAG_INTERNAL_REDIRECT\"\n- \"PLACEMENT_TAG_JAVASCRIPT\"\n- \"PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT\"\n- \"PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT\"\n- \"PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT\"\n- \"PLACEMENT_TAG_CLICK_COMMANDS\"\n- \"PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH\"\n- \"PLACEMENT_TAG_TRACKING\"\n- \"PLACEMENT_TAG_TRACKING_IFRAME\"\n- \"PLACEMENT_TAG_TRACKING_JAVASCRIPT\"",41,null],[12,"payment_approved","","Whether payment was approved for this placement. This is a read-only field relevant only to publisher-paid placements.",41,null],[12,"tag_setting","","Tag settings for this placement.",41,null],[12,"id","","ID of this placement. This is a read-only, auto-generated field.",41,null],[12,"external_id","","External ID for this placement.",41,null],[12,"id_dimension_value","","Dimension value for the ID of this placement. This is a read-only, auto-generated field.",41,null],[12,"account_id","","Account ID of this placement. This field can be left blank.",41,null],[12,"ssl_required","","Whether creatives assigned to this placement must be SSL-compliant.",41,null],[12,"status","","Third-party placement status.",41,null],[12,"campaign_id_dimension_value","","Dimension value for the ID of the campaign. This is a read-only, auto-generated field.",41,null],[12,"primary","","Whether this placement is the primary placement of a roadblock (placement group). You cannot change this field from true to false. Setting this field to true will automatically set the primary field on the original primary placement of the roadblock to false, and it will automatically set the roadblock's primaryPlacementId field to the ID of this placement.",41,null],[12,"placement_group_id","","ID of this placement's group, if applicable.",41,null],[12,"create_info","","Information about the creation of this placement. This is a read-only field.",41,null],[12,"site_id","","Site ID associated with this placement. On insert, you must set either this field or the directorySiteId field to specify the site associated with this placement. This is a required field that is read-only after insertion.",41,null],[12,"site_id_dimension_value","","Dimension value for the ID of the site. This is a read-only, auto-generated field.",41,null],[12,"compatibility","","Placement compatibility. WEB and WEB_INTERSTITIAL refer to rendering either on desktop or on mobile devices for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps.IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard. This field is required on insertion.",41,null],[12,"placement_strategy_id","","ID of the placement strategy assigned to this placement.",41,null],[12,"placement_group_id_dimension_value","","Dimension value for the ID of the placement group. This is a read-only, auto-generated field.",41,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placement\".",41,null],[12,"subaccount_id","","Subaccount ID of this placement. This field can be left blank.",41,null],[12,"name","","Name of this placement.This is a required field and must be less than 256 characters long.",41,null],[12,"lookback_configuration","","Lookback window settings for this placement.",41,null],[12,"last_modified_info","","Information about the most recent modification of this placement. This is a read-only field.",41,null],[12,"pricing_schedule","","Pricing schedule of this placement. This field is required on insertion, specifically subfields startDate, endDate and pricingType.",41,null],[3,"InventoryItemsListResponse","","Inventory item List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",42,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#inventoryItemsListResponse\".",42,null],[12,"inventory_items","","Inventory item collection",42,null],[3,"AudienceSegmentGroup","","Audience Segment Group.",null,null],[12,"audience_segments","","Audience segments assigned to this group. The number of segments must be between 2 and 100.",43,null],[12,"id","","ID of this audience segment group. This is a read-only, auto-generated field.",43,null],[12,"name","","Name of this audience segment group. This is a required field and must be less than 65 characters long.",43,null],[3,"PlacementStrategy","","Contains properties of a placement strategy.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementStrategy\".",44,null],[12,"account_id","","Account ID of this placement strategy.This is a read-only field that can be left blank.",44,null],[12,"id","","ID of this placement strategy. This is a read-only, auto-generated field.",44,null],[12,"name","","Name of this placement strategy. This is a required field. It must be less than 256 characters long and unique among placement strategies of the same account.",44,null],[3,"PlacementTag","","Placement Tag",null,null],[12,"tag_datas","","Tags generated for this placement.",45,null],[12,"placement_id","","Placement ID",45,null],[3,"CountriesListResponse","","Country List Response",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#countriesListResponse\".",46,null],[12,"countries","","Country collection.",46,null],[3,"ClickThroughUrl","","Click-through URL",null,null],[12,"landing_page_id","","ID of the landing page for the click-through URL. Applicable if the defaultLandingPage field is set to false.",47,null],[12,"custom_click_through_url","","Custom click-through URL. Applicable if the defaultLandingPage field is set to false and the landingPageId field is left unset.",47,null],[12,"default_landing_page","","Whether the campaign default landing page is used.",47,null],[3,"CompanionClickThroughOverride","","Companion Click-through override.",null,null],[12,"click_through_url","","Click-through URL of this companion click-through override.",48,null],[12,"creative_id","","ID of the creative for this companion click-through override.",48,null],[3,"FrequencyCap","","Frequency Cap.",null,null],[12,"duration","","Duration of time, in seconds, for this frequency cap. The maximum duration is 90 days in seconds, or 7,776,000.",49,null],[12,"impressions","","Number of times an individual user can be served the ad within the specified duration. The maximum allowed is 15.",49,null],[3,"CampaignCreativeAssociation","","Identifies a creative which has been associated with a given campaign.",null,null],[12,"creative_id","","ID of the creative associated with the campaign. This is a required field.",50,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#campaignCreativeAssociation\".",50,null],[3,"RemarketingListShare","","Contains properties of a remarketing list's sharing information. Sharing allows other accounts or advertisers to target to your remarketing lists. This resource can be used to manage remarketing list sharing to other accounts and advertisers.",null,null],[12,"shared_advertiser_ids","","Advertisers that the remarketing list is shared with.",51,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#remarketingListShare\".",51,null],[12,"remarketing_list_id","","Remarketing list ID. This is a read-only, auto-generated field.",51,null],[12,"shared_account_ids","","Accounts that the remarketing list is shared with.",51,null],[3,"OperatingSystemVersionsListResponse","","Operating System Version List Response",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#operatingSystemVersionsListResponse\".",52,null],[12,"operating_system_versions","","Operating system version collection.",52,null],[3,"ContentCategory","","Organizes placements according to the contents of their associated webpages.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#contentCategory\".",53,null],[12,"account_id","","Account ID of this content category. This is a read-only field that can be left blank.",53,null],[12,"id","","ID of this content category. This is a read-only, auto-generated field.",53,null],[12,"name","","Name of this content category. This is a required field and must be less than 256 characters long and unique among content categories of the same account.",53,null],[3,"TargetableRemarketingListsListResponse","","Targetable remarketing list response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",54,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#targetableRemarketingListsListResponse\".",54,null],[12,"targetable_remarketing_lists","","Targetable remarketing list collection.",54,null],[3,"InventoryItem","","Represents a buy from the DoubleClick Planning inventory store.",null,null],[12,"order_id","","Order ID of this inventory item.",55,null],[12,"advertiser_id","","Advertiser ID of this inventory item.",55,null],[12,"site_id","","ID of the site this inventory item is associated with.",55,null],[12,"ad_slots","","Ad slots of this inventory item. If this inventory item represents a standalone placement, there will be exactly one ad slot. If this inventory item represents a placement group, there will be more than one ad slot, each representing one child placement in that placement group.",55,null],[12,"rfp_id","","RFP ID of this inventory item.",55,null],[12,"content_category_id","","Content category ID of this inventory item.",55,null],[12,"placement_strategy_id","","Placement strategy ID of this inventory item.",55,null],[12,"account_id","","Account ID of this inventory item.",55,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#inventoryItem\".",55,null],[12,"negotiation_channel_id","","Negotiation channel ID of this inventory item.",55,null],[12,"subaccount_id","","Subaccount ID of this inventory item.",55,null],[12,"name","","Name of this inventory item. For standalone inventory items, this is the same name as that of its only ad slot. For group inventory items, this can differ from the name of any of its ad slots.",55,null],[12,"estimated_click_through_rate","","Estimated click-through rate of this inventory item.",55,null],[12,"last_modified_info","","Information about the most recent modification of this inventory item.",55,null],[12,"estimated_conversion_rate","","Estimated conversion rate of this inventory item.",55,null],[12,"in_plan","","Whether this inventory item is in plan.",55,null],[12,"id","","ID of this inventory item.",55,null],[12,"project_id","","Project ID of this inventory item.",55,null],[12,"pricing","","Pricing of this inventory item.",55,null],[3,"FloodlightReportCompatibleFields","","Represents fields that are compatible to be selected for a report of type \"FlOODLIGHT\".",null,null],[12,"metrics","","Metrics which are compatible to be selected in the \"metricNames\" section of the report.",56,null],[12,"kind","","The kind of resource this is, in this case dfareporting#floodlightReportCompatibleFields.",56,null],[12,"dimension_filters","","Dimensions which are compatible to be selected in the \"dimensionFilters\" section of the report.",56,null],[12,"dimensions","","Dimensions which are compatible to be selected in the \"dimensions\" section of the report.",56,null],[3,"CreativeAssetId","","Creative Asset ID.",null,null],[12,"type_","","Type of asset to upload. This is a required field. IMAGE is solely used for IMAGE creatives. Other image assets should use HTML_IMAGE.",57,null],[12,"name","","Name of the creative asset. This is a required field while inserting an asset. After insertion, this assetIdentifier is used to identify the uploaded asset. Characters in the name must be alphanumeric or one of the following: \".-_ \". Spaces are allowed.",57,null],[3,"DirectorySiteContactAssignment","","Directory Site Contact Assignment",null,null],[12,"contact_id","","ID of this directory site contact. This is a read-only, auto-generated field.",58,null],[12,"visibility","","Visibility of this directory site contact assignment. When set to PUBLIC this contact assignment is visible to all account and agency users; when set to PRIVATE it is visible only to the site.",58,null],[3,"CreativeAssignment","","Creative Assignment.",null,null],[12,"weight","","Weight of the creative assignment, applicable when the rotation type is CREATIVE_ROTATION_TYPE_RANDOM.",59,null],[12,"sequence","","Sequence number of the creative assignment, applicable when the rotation type is CREATIVE_ROTATION_TYPE_SEQUENTIAL.",59,null],[12,"click_through_url","","Click-through URL of the creative assignment.",59,null],[12,"rich_media_exit_overrides","","Rich media exit overrides for this creative assignment.\nApplicable when the creative type is any of the following: \n- RICH_MEDIA_INPAGE\n- RICH_MEDIA_INPAGE_FLOATING\n- RICH_MEDIA_IM_EXPAND\n- RICH_MEDIA_EXPANDING\n- RICH_MEDIA_INTERSTITIAL_FLOAT\n- RICH_MEDIA_MOBILE_IN_APP\n- RICH_MEDIA_MULTI_FLOATING\n- RICH_MEDIA_PEEL_DOWN\n- ADVANCED_BANNER\n- VPAID_LINEAR\n- VPAID_NON_LINEAR",59,null],[12,"apply_event_tags","","Whether applicable event tags should fire when this creative assignment is rendered. If this value is unset when the ad is inserted or updated, it will default to true for all creative types EXCEPT for INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and INSTREAM_VIDEO.",59,null],[12,"creative_group_assignments","","Creative group assignments for this creative assignment. Only one assignment per creative group number is allowed for a maximum of two assignments.",59,null],[12,"companion_creative_overrides","","Companion creative overrides for this creative assignment. Applicable to video ads.",59,null],[12,"start_time","","Date and time that the assigned creative should start serving.",59,null],[12,"ssl_compliant","","Whether the creative to be assigned is SSL-compliant. This is a read-only field that is auto-generated when the ad is inserted or updated.",59,null],[12,"active","","Whether this creative assignment is active. When true, the creative will be included in the ad's rotation.",59,null],[12,"creative_id","","ID of the creative to be assigned. This is a required field.",59,null],[12,"end_time","","Date and time that the assigned creative should stop serving. Must be later than the start time.",59,null],[12,"creative_id_dimension_value","","Dimension value for the ID of the creative. This is a read-only, auto-generated field.",59,null],[3,"DimensionValueRequest","","Represents a DimensionValuesRequest.",null,null],[12,"dimension_name","","The name of the dimension for which values should be requested.",60,null],[12,"start_date","","The start date of the date range for which to retrieve dimension values. A string of the format \"yyyy-MM-dd\".",60,null],[12,"kind","","The kind of request this is, in this case dfareporting#dimensionValueRequest.",60,null],[12,"end_date","","The end date of the date range for which to retrieve dimension values. A string of the format \"yyyy-MM-dd\".",60,null],[12,"filters","","The list of filters by which to filter values. The filters are ANDed.",60,null],[3,"AdSlot","","Ad Slot",null,null],[12,"comment","","Comment for this ad slot.",61,null],[12,"linked_placement_id","","ID of the placement from an external platform that is linked to this ad slot.",61,null],[12,"name","","Name of this ad slot.",61,null],[12,"primary","","Primary ad slot of a roadblock inventory item.",61,null],[12,"height","","Height of this ad slot.",61,null],[12,"width","","Width of this ad slot.",61,null],[12,"payment_source_type","","Payment source type of this ad slot.",61,null],[12,"compatibility","","Ad slot compatibility. WEB and WEB_INTERSTITIAL refer to rendering either on desktop or on mobile devices for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard.",61,null],[3,"DefaultClickThroughEventTagProperties","","Properties of inheriting and overriding the default click-through event tag. A campaign may override the event tag defined at the advertiser level, and an ad may also override the campaign's setting further.",null,null],[12,"override_inherited_event_tag","","Whether this entity should override the inherited default click-through event tag with its own defined value.",62,null],[12,"default_click_through_event_tag_id","","ID of the click-through event tag to apply to all ads in this entity's scope.",62,null],[3,"UserProfileList","","Represents the list of user profiles.",null,null],[12,"items","","The user profiles returned in this response.",63,null],[12,"kind","","The kind of list this is, in this case dfareporting#userProfileList.",63,null],[12,"etag","","The eTag of this response for caching purposes.",63,null],[3,"SubaccountsListResponse","","Subaccount List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",64,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#subaccountsListResponse\".",64,null],[12,"subaccounts","","Subaccount collection.",64,null],[3,"OrderDocument","","Contains properties of a DoubleClick Planning order document.",null,null],[12,"order_id","","ID of the order from which this order document is created.",65,null],[12,"advertiser_id","","Advertiser ID of this order document.",65,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#orderDocument\".",65,null],[12,"subaccount_id","","Subaccount ID of this order document.",65,null],[12,"effective_date","","Effective date of this order document.",65,null],[12,"title","","Title of this order document.",65,null],[12,"project_id","","Project ID of this order document.",65,null],[12,"amended_order_document_id","","The amended order document ID of this order document. An order document can be created by optionally amending another order document so that the change history can be preserved.",65,null],[12,"signed","","Whether this order document has been signed.",65,null],[12,"created_info","","Information about the creation of this order document.",65,null],[12,"approved_by_user_profile_ids","","IDs of users who have approved this order document.",65,null],[12,"cancelled","","Whether this order document is cancelled.",65,null],[12,"type_","","Type of this order document",65,null],[12,"id","","ID of this order document.",65,null],[12,"account_id","","Account ID of this order document.",65,null],[3,"Report","","Represents a Report resource.",null,null],[12,"owner_profile_id","","The user profile id of the owner of this report.",66,null],[12,"sub_account_id","","The subaccount ID to which this report belongs if applicable.",66,null],[12,"schedule","","The report's schedule. Can only be set if the report's 'dateRange' is a relative date range and the relative date range is not \"TODAY\".",66,null],[12,"path_to_conversion_criteria","","The report criteria for a report of type \"PATH_TO_CONVERSION\".",66,null],[12,"reach_criteria","","The report criteria for a report of type \"REACH\".",66,null],[12,"floodlight_criteria","","The report criteria for a report of type \"FLOODLIGHT\".",66,null],[12,"file_name","","The filename used when generating report files for this report.",66,null],[12,"delivery","","The report's email delivery settings.",66,null],[12,"last_modified_time","","The timestamp (in milliseconds since epoch) of when this report was last modified.",66,null],[12,"cross_dimension_reach_criteria","","The report criteria for a report of type \"CROSS_DIMENSION_REACH\".",66,null],[12,"account_id","","The account ID to which this report belongs.",66,null],[12,"kind","","The kind of resource this is, in this case dfareporting#report.",66,null],[12,"name","","The name of the report.",66,null],[12,"format","","The output format of the report. If not specified, default format is \"CSV\". Note that the actual format in the completed report file might differ if for instance the report's size exceeds the format's capabilities. \"CSV\" will then be the fallback format.",66,null],[12,"id","","The unique ID identifying this report resource.",66,null],[12,"etag","","The eTag of this response for caching purposes.",66,null],[12,"criteria","","The report criteria for a report of type \"STANDARD\".",66,null],[12,"type_","","The type of the report.",66,null],[3,"PlatformType","","Contains information about a platform type that can be targeted by ads.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#platformType\".",67,null],[12,"id","","ID of this platform type.",67,null],[12,"name","","Name of this platform type.",67,null],[3,"AdvertisersListResponse","","Advertiser List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",68,null],[12,"advertisers","","Advertiser collection.",68,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertisersListResponse\".",68,null],[3,"CreativeAsset","","Creative Asset.",null,null],[12,"mime_type","","Detected MIME type for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",69,null],[12,"artwork_type","","Artwork type of rich media creative. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.",69,null],[12,"position_left_unit","","Offset left unit for an asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.",69,null],[12,"collapsed_size","","Size of an asset when collapsed. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA and all VPAID. Additionally, applicable to assets whose displayType is ASSET_DISPLAY_TYPE_EXPANDING or ASSET_DISPLAY_TYPE_PEEL_DOWN.",69,null],[12,"flash_version","","Flash version of the asset. This is a read-only field. Applicable to the following creative types: FLASH_INPAGE, ENHANCED_BANNER, all RICH_MEDIA, and all VPAID.",69,null],[12,"pushdown","","Whether the asset pushes down other content. Applicable to the following creative types: all RICH_MEDIA. Additionally, only applicable when the asset offsets are 0, the collapsedSize.width matches size.width, and the collapsedSize.height is less than size.height.",69,null],[12,"hide_flash_objects","","Whether to hide Flash objects flag for an asset. Applicable to the following creative types: all RICH_MEDIA.",69,null],[12,"detected_features","","List of feature dependencies for the creative asset that are detected by DCM. Feature dependencies are features that a browser must be able to support in order to render your HTML5 creative correctly. This is a read-only, auto-generated field. Applicable to the following creative types: ENHANCED_BANNER and HTML5_BANNER.",69,null],[12,"duration","","Duration in seconds for which an asset will be displayed. Applicable to the following creative types: INSTREAM_VIDEO and VPAID_LINEAR.",69,null],[12,"position_top_unit","","Offset top unit for an asset. This is a read-only field if the asset displayType is ASSET_DISPLAY_TYPE_OVERLAY. Applicable to the following creative types: all RICH_MEDIA.",69,null],[12,"id","","Numeric ID of this creative asset. This is a required field and should not be modified. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.",69,null],[12,"alignment","","Possible alignments for an asset. This is a read-only field. Applicable to the following creative types: RICH_MEDIA_MULTI_FLOATING.",69,null],[12,"size","","Size associated with this creative asset. This is a required field when applicable; however for IMAGE and FLASH_INPAGE creatives, if left blank, this field will be automatically set using the actual size of the associated image asset. Applicable to the following creative types: ENHANCED_BANNER, ENHANCED_IMAGE, FLASH_INPAGE, HTML5_BANNER, IMAGE, and all RICH_MEDIA.",69,null],[12,"horizontally_locked","","Whether the asset is horizontally locked. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.",69,null],[12,"start_time_type","","Initial wait time type before making the asset visible. Applicable to the following creative types: all RICH_MEDIA.",69,null],[12,"display_type","","Type of rich media asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.",69,null],[12,"expanded_dimension","","Detected expanded dimension for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",69,null],[12,"vertically_locked","","Whether the asset is vertically locked. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.",69,null],[12,"role","","Role of the asset in relation to creative. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT. This is a required field.\nPRIMARY applies to ENHANCED_BANNER, FLASH_INPAGE, HTML5_BANNER, IMAGE, IMAGE_GALLERY, all RICH_MEDIA (which may contain multiple primary assets), and all VPAID creatives.\nBACKUP_IMAGE applies to ENHANCED_BANNER, FLASH_INPAGE, HTML5_BANNER, all RICH_MEDIA, and all VPAID creatives.\nADDITIONAL_IMAGE and ADDITIONAL_FLASH apply to FLASH_INPAGE creatives.\nOTHER refers to assets from sources other than DCM, such as Studio uploaded assets, applicable to all RICH_MEDIA and all VPAID creatives.\nPARENT_VIDEO refers to videos uploaded by the user in DCM and is applicable to INSTREAM_VIDEO and VPAID_LINEAR creatives.\nTRANSCODED_VIDEO refers to videos transcoded by DCM from PARENT_VIDEO assets and is applicable to INSTREAM_VIDEO and VPAID_LINEAR creatives.\nALTERNATE_VIDEO refers to the DCM representation of child asset videos from Studio, and is applicable to VPAID_LINEAR creatives. These cannot be added or removed within DCM.\nFor VPAID_LINEAR creatives, PARENT_VIDEO, TRANSCODED_VIDEO and ALTERNATE_VIDEO assets that are marked active serve as backup in case the VPAID creative cannot be served. Only PARENT_VIDEO assets can be added or removed for an INSTREAM_VIDEO or VPAID_LINEAR creative.",69,null],[12,"zip_filesize","","Size of zip file. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.",69,null],[12,"bit_rate","","Detected bit-rate for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",69,null],[12,"window_mode","","Window mode options for flash assets. Applicable to the following creative types: FLASH_INPAGE, RICH_MEDIA_EXPANDING, RICH_MEDIA_IM_EXPAND, RICH_MEDIA_INPAGE, and RICH_MEDIA_INPAGE_FLOATING.",69,null],[12,"progressive_serving_url","","Progressive URL for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",69,null],[12,"duration_type","","Duration type for which an asset will be displayed. Applicable to the following creative types: all RICH_MEDIA.",69,null],[12,"video_duration","","Detected video duration for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",69,null],[12,"file_size","","File size associated with this creative asset. This is a read-only field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.",69,null],[12,"offset","","Offset position for an asset in collapsed mode. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA and all VPAID. Additionally, only applicable to assets whose displayType is ASSET_DISPLAY_TYPE_EXPANDING or ASSET_DISPLAY_TYPE_PEEL_DOWN.",69,null],[12,"active","","Whether the video asset is active. This is a read-only field for VPAID_NON_LINEAR assets. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",69,null],[12,"original_backup","","Whether the backup asset is original or changed by the user in DCM. Applicable to the following creative types: all RICH_MEDIA.",69,null],[12,"hide_selection_boxes","","Whether to hide selection boxes flag for an asset. Applicable to the following creative types: all RICH_MEDIA.",69,null],[12,"streaming_serving_url","","Streaming URL for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",69,null],[12,"z_index","","zIndex value of an asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.Additionally, only applicable to assets whose displayType is NOT one of the following types: ASSET_DISPLAY_TYPE_INPAGE or ASSET_DISPLAY_TYPE_OVERLAY.",69,null],[12,"child_asset_type","","Rich media child asset type. This is a read-only field. Applicable to the following creative types: all VPAID.",69,null],[12,"backup_image_exit","","Exit event configured for the backup image. Applicable to the following creative types: all RICH_MEDIA.",69,null],[12,"action_script3","","Whether ActionScript3 is enabled for the flash asset. This is a read-only field. Applicable to the following creative types: FLASH_INPAGE and ENHANCED_BANNER.",69,null],[12,"pushdown_duration","","Pushdown duration in seconds for an asset. Must be between 0 and 9.99. Applicable to the following creative types: all RICH_MEDIA.Additionally, only applicable when the asset pushdown field is true, the offsets are 0, the collapsedSize.width matches size.width, and the collapsedSize.height is less than size.height.",69,null],[12,"asset_identifier","","Identifier of this asset. This is the same identifier returned during creative asset insert operation. This is a required field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.",69,null],[12,"transparency","","Whether the asset is transparent. Applicable to the following creative types: all RICH_MEDIA. Additionally, only applicable to HTML5 assets.",69,null],[12,"ssl_compliant","","Whether the asset is SSL-compliant. This is a read-only field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.",69,null],[12,"position","","Offset position for an asset. Applicable to the following creative types: all RICH_MEDIA.",69,null],[12,"custom_start_time_value","","Custom start time in seconds for making the asset visible. Applicable to the following creative types: all RICH_MEDIA.",69,null],[12,"zip_filename","","File name of zip file. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.",69,null],[3,"DirectorySitesListResponse","","Directory Site List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",70,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#directorySitesListResponse\".",70,null],[12,"directory_sites","","Directory site collection.",70,null],[3,"LastModifiedInfo","","Modification timestamp.",null,null],[12,"time","","Timestamp of the last change in milliseconds since epoch.",71,null],[3,"RegionsListResponse","","Region List Response",null,null],[12,"regions","","Region collection.",72,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#regionsListResponse\".",72,null],[3,"UserRolePermissionGroup","","Represents a grouping of related user role permissions.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRolePermissionGroup\".",73,null],[12,"id","","ID of this user role permission.",73,null],[12,"name","","Name of this user role permission group.",73,null],[3,"ClickTag","","Creative Click Tag.",null,null],[12,"event_name","","Advertiser event name associated with the click tag. This field is used by ENHANCED_BANNER, ENHANCED_IMAGE, and HTML5_BANNER creatives.",74,null],[12,"name","","Parameter name for the specified click tag. For ENHANCED_IMAGE creative assets, this field must match the value of the creative asset's creativeAssetId.name field.",74,null],[12,"value","","Parameter value for the specified click tag. This field contains a click-through url.",74,null],[3,"ConnectionType","","Contains information about an internet connection type that can be targeted by ads. Clients can use the connection type to target mobile vs. broadband users.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#connectionType\".",75,null],[12,"id","","ID of this connection type.",75,null],[12,"name","","Name of this connection type.",75,null],[3,"BrowsersListResponse","","Browser List Response",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#browsersListResponse\".",76,null],[12,"browsers","","Browser collection.",76,null],[3,"ObjectFilter","","Object Filter.",null,null],[12,"object_ids","","Applicable when status is ASSIGNED. The user has access to objects with these object IDs.",77,null],[12,"status","","Status of the filter. NONE means the user has access to none of the objects. ALL means the user has access to all objects. ASSIGNED means the user has access to the objects with IDs in the objectIds list.",77,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#objectFilter\".",77,null],[3,"CreativeSettings","","Creative Settings",null,null],[12,"i_frame_header","","Header text for iFrames for this site. Must be less than or equal to 2000 characters long.",78,null],[12,"i_frame_footer","","Header text for iFrames for this site. Must be less than or equal to 2000 characters long.",78,null],[3,"Dimension","","Represents a dimension.",null,null],[12,"kind","","The kind of resource this is, in this case dfareporting#dimension.",79,null],[12,"name","","The dimension name, e.g. dfa:advertiser",79,null],[3,"OrderContact","","Contact of an order.",null,null],[12,"contact_type","","Type of this contact.",80,null],[12,"contact_title","","Title of this contact.",80,null],[12,"contact_info","","Free-form information about this contact. It could be any information related to this contact in addition to type, title, name, and signature user profile ID.",80,null],[12,"contact_name","","Name of this contact.",80,null],[12,"signature_user_profile_id","","ID of the user profile containing the signature that will be embedded into order documents.",80,null],[3,"DirectorySite","","DirectorySites contains properties of a website from the Site Directory. Sites need to be added to an account via the Sites resource before they can be assigned to a placement.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#directorySite\".",81,null],[12,"country_id","","Country ID of this directory site.",81,null],[12,"description","","Description of this directory site.",81,null],[12,"settings","","Directory site settings.",81,null],[12,"currency_id","","Currency ID of this directory site.\nPossible values are: \n- \"1\" for USD \n- \"2\" for GBP \n- \"3\" for ESP \n- \"4\" for SEK \n- \"5\" for CAD \n- \"6\" for JPY \n- \"7\" for DEM \n- \"8\" for AUD \n- \"9\" for FRF \n- \"10\" for ITL \n- \"11\" for DKK \n- \"12\" for NOK \n- \"13\" for FIM \n- \"14\" for ZAR \n- \"15\" for IEP \n- \"16\" for NLG \n- \"17\" for EUR \n- \"18\" for KRW \n- \"19\" for TWD \n- \"20\" for SGD \n- \"21\" for CNY \n- \"22\" for HKD \n- \"23\" for NZD \n- \"24\" for MYR \n- \"25\" for BRL \n- \"26\" for PTE \n- \"27\" for MXP \n- \"28\" for CLP \n- \"29\" for TRY \n- \"30\" for ARS \n- \"31\" for PEN \n- \"32\" for ILS \n- \"33\" for CHF \n- \"34\" for VEF \n- \"35\" for COP \n- \"36\" for GTQ",81,null],[12,"inpage_tag_formats","","Tag types for regular placements.",81,null],[12,"url","","URL of this directory site.",81,null],[12,"contact_assignments","","Directory site contacts.",81,null],[12,"parent_id","","Parent directory site ID.",81,null],[12,"interstitial_tag_formats","","Tag types for interstitial placements.",81,null],[12,"id_dimension_value","","Dimension value for the ID of this directory site. This is a read-only, auto-generated field.",81,null],[12,"active","","Whether this directory site is active.",81,null],[12,"id","","ID of this directory site. This is a read-only, auto-generated field.",81,null],[12,"name","","Name of this directory site.",81,null],[3,"CitiesListResponse","","City List Response",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#citiesListResponse\".",82,null],[12,"cities","","City collection.",82,null],[3,"CreativeGroup","","Contains properties of a creative group.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeGroup\".",83,null],[12,"subaccount_id","","Subaccount ID of this creative group. This is a read-only field that can be left blank.",83,null],[12,"name","","Name of this creative group. This is a required field and must be less than 256 characters long and unique among creative groups of the same advertiser.",83,null],[12,"group_number","","Subgroup of the creative group. Assign your creative groups to one of the following subgroups in order to filter or manage them more easily. This field is required on insertion and is read-only after insertion.\nAcceptable values are: \n- 1\n- 2",83,null],[12,"advertiser_id","","Advertiser ID of this creative group. This is a required field on insertion.",83,null],[12,"advertiser_id_dimension_value","","Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",83,null],[12,"id","","ID of this creative group. This is a read-only, auto-generated field.",83,null],[12,"account_id","","Account ID of this creative group. This is a read-only field that can be left blank.",83,null],[3,"Metric","","Represents a metric.",null,null],[12,"kind","","The kind of resource this is, in this case dfareporting#metric.",84,null],[12,"name","","The metric name, e.g. dfa:impressions",84,null],[3,"RichMediaExitOverride","","Rich Media Exit Override.",null,null],[12,"custom_exit_url","","Click-through URL to override the default exit URL. Applicable if the useCustomExitUrl field is set to true.",85,null],[12,"use_custom_exit_url","","Whether to use the custom exit URL.",85,null],[12,"exit_id","","ID for the override to refer to a specific exit in the creative.",85,null],[3,"AccountPermissionsListResponse","","Account Permission List Response",null,null],[12,"account_permissions","","Account permission collection.",86,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountPermissionsListResponse\".",86,null],[3,"PlacementsGenerateTagsResponse","","Placement GenerateTags Response",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementsGenerateTagsResponse\".",87,null],[12,"placement_tags","","Set of generated tags for the specified placements.",87,null],[3,"CreativeFieldValue","","Contains properties of a creative field value.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeFieldValue\".",88,null],[12,"id","","ID of this creative field value. This is a read-only, auto-generated field.",88,null],[12,"value","","Value of this creative field value. It needs to be less than 256 characters in length and unique per creative field.",88,null],[3,"FloodlightActivityGroupsListResponse","","Floodlight Activity Group List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",89,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivityGroupsListResponse\".",89,null],[12,"floodlight_activity_groups","","Floodlight activity group collection.",89,null],[3,"DirectorySiteContactsListResponse","","Directory Site Contact List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",90,null],[12,"directory_site_contacts","","Directory site contact collection",90,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#directorySiteContactsListResponse\".",90,null],[3,"CreativeCustomEvent","","Creative Custom Event.",null,null],[12,"target_type","","Target type used by the event.",91,null],[12,"artwork_type","","Artwork type used by the creative.This is a read-only field.",91,null],[12,"video_reporting_id","","Reporting ID, used to differentiate multiple videos in a single creative.",91,null],[12,"popup_window_properties","","Properties for rich media popup windows. This field is used only for exit events.",91,null],[12,"artwork_label","","Artwork label column, used to link events in DCM back to events in Studio. This is a required field and should not be modified after insertion.",91,null],[12,"active","","Whether the event is active.",91,null],[12,"advertiser_custom_event_type","","Type of the event. This is a read-only field.",91,null],[12,"exit_url","","Exit URL of the event. This field is used only for exit events.",91,null],[12,"id","","ID of this event. This is a required field and should not be modified after insertion.",91,null],[12,"advertiser_custom_event_name","","User-entered name for the event.",91,null],[3,"CreativesListResponse","","Creative List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",92,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativesListResponse\".",92,null],[12,"creatives","","Creative collection.",92,null],[3,"OmnitureSettings","","Omniture Integration Settings.",null,null],[12,"omniture_cost_data_enabled","","Whether placement cost data will be sent to Omniture. This property can be enabled only if omnitureIntegrationEnabled is true.",93,null],[12,"omniture_integration_enabled","","Whether Omniture integration is enabled. This property can be enabled only when the \"Advanced Ad Serving\" account setting is enabled.",93,null],[3,"PathToConversionReportCompatibleFields","","Represents fields that are compatible to be selected for a report of type \"PATH_TO_CONVERSION\".",null,null],[12,"metrics","","Metrics which are compatible to be selected in the \"metricNames\" section of the report.",94,null],[12,"per_interaction_dimensions","","Per-interaction dimensions which are compatible to be selected in the \"perInteractionDimensions\" section of the report.",94,null],[12,"kind","","The kind of resource this is, in this case dfareporting#pathToConversionReportCompatibleFields.",94,null],[12,"conversion_dimensions","","Conversion dimensions which are compatible to be selected in the \"conversionDimensions\" section of the report.",94,null],[12,"custom_floodlight_variables","","Custom floodlight variables which are compatible to be selected in the \"customFloodlightVariables\" section of the report.",94,null],[3,"MobileCarriersListResponse","","Mobile Carrier List Response",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#mobileCarriersListResponse\".",95,null],[12,"mobile_carriers","","Mobile carrier collection.",95,null],[3,"FloodlightActivityDynamicTag","","Dynamic Tag",null,null],[12,"tag","","Tag code.",96,null],[12,"id","","ID of this dynamic tag. This is a read-only, auto-generated field.",96,null],[12,"name","","Name of this tag.",96,null],[3,"Creative","","Contains properties of a Creative.",null,null],[12,"artwork_type","","Type of artwork used for the creative. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",97,null],[12,"latest_trafficked_creative_id","","Latest Studio trafficked creative ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",97,null],[12,"counter_custom_events","","List of counter events configured for the creative. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",97,null],[12,"advertiser_id","","Advertiser ID of this creative. This is a required field. Applicable to all creative types.",97,null],[12,"active","","Whether the creative is active. Applicable to all creative types.",97,null],[12,"timer_custom_events","","List of timer events configured for the creative. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",97,null],[12,"rendering_id_dimension_value","","Dimension value for the rendering ID of this creative. This is a read-only field. Applicable to all creative types.",97,null],[12,"fs_command","","OpenWindow FSCommand of this creative. This lets the SWF file communicate with either Flash Player or the program hosting Flash Player, such as a web browser. This is only triggered if allowScriptAccess field is true. Applicable to the following creative types: FLASH_INPAGE.",97,null],[12,"id","","ID of this creative. This is a read-only, auto-generated field. Applicable to all creative types.",97,null],[12,"account_id","","Account ID of this creative. This field, if left unset, will be auto-generated for both insert and update operations. Applicable to all creative types.",97,null],[12,"studio_trafficked_creative_id","","Studio trafficked creative ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",97,null],[12,"archived","","Whether the creative is archived. Applicable to all creative types.",97,null],[12,"override_css","","Override CSS value for rich media creatives. Applicable to the following creative types: all RICH_MEDIA.",97,null],[12,"allow_script_access","","Whether script access is allowed for this creative. This is a read-only and deprecated field which will automatically be set to true on update. Applicable to the following creative types: FLASH_INPAGE.",97,null],[12,"required_flash_version","","The internal Flash version for this creative as calculated by DoubleClick Studio. This is a read-only field. Applicable to the following creative types: FLASH_INPAGE, ENHANCED_BANNER, all RICH_MEDIA, and all VPAID.",97,null],[12,"exit_custom_events","","List of exit events configured for the creative. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",97,null],[12,"rendering_id","","ID of current rendering version. This is a read-only field. Applicable to all creative types.",97,null],[12,"video_description","","Description of the video ad. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",97,null],[12,"third_party_backup_image_impressions_url","","Third-party URL used to record backup image impressions. Applicable to the following creative types: all RICH_MEDIA",97,null],[12,"version","","The version number helps you keep track of multiple versions of your creative in your reports. The version number will always be auto-generated during insert operations to start at 1. For tracking creatives the version cannot be incremented and will always remain at 1. For all other creative types the version can be incremented only by 1 during update operations. In addition, the version will be automatically incremented by 1 when undergoing Rich Media creative merging. Applicable to all creative types.",97,null],[12,"creative_field_assignments","","Creative field assignments for this creative. Applicable to all creative types.",97,null],[12,"background_color","","The 6-character HTML color code, beginning with #, for the background of the window area where the Flash file is displayed. Default is white. Applicable to the following creative types: FLASH_INPAGE.",97,null],[12,"custom_key_values","","Custom key-values for a Rich Media creative. Key-values let you customize the creative settings of a Rich Media ad running on your site without having to contact the advertiser. You can use key-values to dynamically change the look or functionality of a creative. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",97,null],[12,"id_dimension_value","","Dimension value for the ID of this creative. This is a read-only field. Applicable to all creative types.",97,null],[12,"auto_advance_images","","Whether images are automatically advanced for enhanced image creatives. Applicable to the following creative types: ENHANCED_IMAGE.",97,null],[12,"size","","Size associated with this creative. When inserting or updating a creative either the size ID field or size width and height fields can be used. This is a required field when applicable; however for IMAGE and FLASH_INPAGE creatives, if left blank, this field will be automatically set using the actual size of the associated image assets. Applicable to the following creative types: ENHANCED_BANNER, ENHANCED_IMAGE, FLASH_INPAGE, HTML5_BANNER, IMAGE, and all RICH_MEDIA.",97,null],[12,"type_","","Type of this creative.This is a required field. Applicable to all creative types.",97,null],[12,"total_file_size","","Combined size of all creative assets. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",97,null],[12,"third_party_rich_media_impressions_url","","Third-party URL used to record rich media impressions. Applicable to the following creative types: all RICH_MEDIA",97,null],[12,"studio_advertiser_id","","Studio advertiser ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",97,null],[12,"creative_assets","","Assets associated with a creative. Applicable to all but the following creative types: INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and REDIRECT",97,null],[12,"backup_image_features","","List of feature dependencies that will cause a backup image to be served if the browser that serves the ad does not support them. Feature dependencies are features that a browser must be able to support in order to render your HTML5 creative asset correctly. This field is initially auto-generated to contain all features detected by DCM for all the assets of this creative and can then be modified by the client. To reset this field, copy over all the creativeAssets' detected features. Applicable to the following creative types: ENHANCED_BANNER and HTML5_BANNER.",97,null],[12,"html_code_locked","","Whether HTML code is DCM-generated or manually entered. Set to true to ignore changes to htmlCode. Applicable to the following creative types: FLASH_INPAGE and HTML5_BANNER.",97,null],[12,"redirect_url","","URL of hosted image or another ad tag. This is a required field when applicable. Applicable to the following creative types: INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and REDIRECT",97,null],[12,"click_tags","","Click tags of the creative. For ENHANCED_BANNER, FLASH_INPAGE, and HTML5_BANNER creatives, this is a subset of detected click tags for the assets associated with this creative. After creating a flash asset, detected click tags will be returned in the creativeAssetMetadata. When inserting the creative, populate the creative clickTags field using the creativeAssetMetadata.clickTags field. For ENHANCED_IMAGE creatives, there should be exactly one entry in this list for each image creative asset. A click tag is matched with a corresponding creative asset by matching the clickTag.name field with the creativeAsset.assetIdentifier.name field. Applicable to the following creative types: ENHANCED_BANNER, ENHANCED_IMAGE, FLASH_INPAGE, HTML5_BANNER.",97,null],[12,"backup_image_target_window","","Target window for backup image. Applicable to the following creative types: ENHANCED_BANNER, FLASH_INPAGE, and HTML5_BANNER.",97,null],[12,"required_flash_plugin_version","","The minimum required Flash plugin version for this creative. For example, 11.2.202.235. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",97,null],[12,"backup_image_reporting_label","","Reporting label used for HTML5 banner backup image. Applicable to the following creative types: ENHANCED_BANNER.",97,null],[12,"compatibility","","Compatibilities associated with this creative. This is a read-only field. WEB and WEB_INTERSTITIAL refer to rendering either on desktop or on mobile devices for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard. Applicable to all creative types.",97,null],[12,"ad_parameters","","Ad parameters user for VPAID creative. This is a read-only field. Applicable to the following creative types: all VPAID.",97,null],[12,"ad_tag_keys","","Keywords for a Rich Media creative. Keywords let you customize the creative settings of a Rich Media ad running on your site without having to contact the advertiser. You can use keywords to dynamically change the look or functionality of a creative. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",97,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creative\".",97,null],[12,"subaccount_id","","Subaccount ID of this creative. This field, if left unset, will be auto-generated for both insert and update operations. Applicable to all creative types.",97,null],[12,"name","","Name of the creative. This is a required field and must be less than 256 characters long. Applicable to all creative types.",97,null],[12,"convert_flash_to_html5","","Whether Flash assets associated with the creative need to be automatically converted to HTML5. This flag is enabled by default and users can choose to disable it if they don't want the system to generate and use HTML5 asset for this creative. Applicable to the following creative types: ENHANCED_BANNER and FLASH_INPAGE.",97,null],[12,"video_duration","","Creative video duration in seconds. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO, all RICH_MEDIA, and all VPAID.",97,null],[12,"last_modified_info","","Creative last modification information. This is a read-only field. Applicable to all creative types.",97,null],[12,"backup_image_click_through_url","","Click-through URL for backup image. Applicable to the following creative types: ENHANCED_BANNER, FLASH_INPAGE, and HTML5_BANNER.",97,null],[12,"studio_creative_id","","Studio creative ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",97,null],[12,"authoring_tool","","Authoring tool for HTML5 banner creatives. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.",97,null],[12,"third_party_urls","","Third-party URLs for tracking in-stream video creative events. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",97,null],[12,"companion_creatives","","List of companion creatives assigned to an in-Stream videocreative. Acceptable values include IDs of existing flash and image creatives. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",97,null],[12,"html_code","","HTML code for the creative. This is a required field when applicable. This field is ignored if htmlCodeLocked is false. Applicable to the following creative types: all CUSTOM, FLASH_INPAGE, and HTML5_BANNER, and all RICH_MEDIA.",97,null],[12,"ssl_compliant","","Whether the creative is SSL-compliant. This is a read-only field. Applicable to all creative types.",97,null],[12,"commercial_id","","Industry standard ID assigned to creative for reach and frequency. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",97,null],[12,"skippable","","Whether the user can choose to skip the creative. Applicable to the following creative types: INSTREAM_VIDEO.",97,null],[3,"ReportsConfiguration","","Reporting Configuration",null,null],[12,"exposure_to_conversion_enabled","","Whether the exposure to conversion report is enabled. This report shows detailed pathway information on up to 10 of the most recent ad exposures seen by a user before converting.",98,null],[12,"report_generation_time_zone_id","","Report generation time zone ID of this account. This is a required field that can only be changed by a superuser.\nAcceptable values are:",98,null],[12,"lookback_configuration","","Default lookback windows for new advertisers in this account.",98,null],[3,"CampaignsListResponse","","Campaign List Response",null,null],[12,"campaigns","","Campaign collection.",99,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",99,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#campaignsListResponse\".",99,null],[3,"UserRolePermissionsListResponse","","User Role Permission List Response",null,null],[12,"user_role_permissions","","User role permission collection.",100,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRolePermissionsListResponse\".",100,null],[3,"UserProfile","","Represents a UserProfile resource.",null,null],[12,"user_name","","The user name.",101,null],[12,"kind","","The kind of resource this is, in this case dfareporting#userProfile.",101,null],[12,"sub_account_id","","The sub account ID this profile belongs to if applicable.",101,null],[12,"account_name","","The account name this profile belongs to.",101,null],[12,"etag","","The eTag of this response for caching purposes.",101,null],[12,"sub_account_name","","The sub account name this profile belongs to if applicable.",101,null],[12,"profile_id","","The unique ID of the user profile.",101,null],[12,"account_id","","The account ID to which this profile belongs.",101,null],[3,"CreativeGroupAssignment","","Creative Group Assignment.",null,null],[12,"creative_group_id","","ID of the creative group to be assigned.",102,null],[12,"creative_group_number","","Creative group number of the creative group assignment.",102,null],[3,"ReportPathToConversionCriteria","","The report criteria for a report of type \"PATH_TO_CONVERSION\".",null,null],[12,"conversion_dimensions","","The list of conversion dimensions the report should include.",103,null],[12,"metric_names","","The list of names of metrics the report should include.",103,null],[12,"date_range","","The date range this report should be run for.",103,null],[12,"custom_floodlight_variables","","The list of custom floodlight variables the report should include.",103,null],[12,"activity_filters","","The list of 'dfa:activity' values to filter on.",103,null],[12,"custom_rich_media_events","","The list of custom rich media events to include.",103,null],[12,"per_interaction_dimensions","","The list of per interaction dimensions the report should include.",103,null],[12,"report_properties","","The properties of the report.",103,null],[12,"floodlight_config_id","","The floodlight ID for which to show data in this report. All advertisers associated with that ID will automatically be added. The dimension of the value needs to be 'dfa:floodlightConfigId'.",103,null],[3,"CreativeFieldsListResponse","","Creative Field List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",104,null],[12,"creative_fields","","Creative field collection.",104,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeFieldsListResponse\".",104,null],[3,"ReportDelivery","","The report's email delivery settings.",null,null],[12,"message","","The message to be sent with each email.",105,null],[12,"email_owner_delivery_type","","The type of delivery for the owner to receive, if enabled.",105,null],[12,"recipients","","The list of recipients to which to email the report.",105,null],[12,"email_owner","","Whether the report should be emailed to the report owner.",105,null],[3,"ProjectsListResponse","","Project List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",106,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#projectsListResponse\".",106,null],[12,"projects","","Project collection.",106,null],[3,"GeoTargeting","","Geographical Targeting.",null,null],[12,"regions","","Regions to be targeted. For each region only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a region, do not target or exclude the country of the region.",107,null],[12,"countries","","Countries to be targeted or excluded from targeting, depending on the setting of the excludeCountries field. For each country only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting or excluding a country, do not target regions, cities, metros, or postal codes in the same country.",107,null],[12,"metros","","Metros to be targeted. For each metro only dmaId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a metro, do not target or exclude the country of the metro.",107,null],[12,"cities","","Cities to be targeted. For each city only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a city, do not target or exclude the country of the city, and do not target the metro or region of the city.",107,null],[12,"exclude_countries","","Whether or not to exclude the countries in the countries field from targeting. If false, the countries field refers to countries which will be targeted by the ad.",107,null],[12,"postal_codes","","Postal codes to be targeted. For each postal code only id is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a postal code, do not target or exclude the country of the postal code.",107,null],[3,"DeliverySchedule","","Delivery Schedule.",null,null],[12,"priority","","Serving priority of an ad, with respect to other ads. The lower the priority number, the greater the priority with which it is served.",108,null],[12,"hard_cutoff","","Whether or not hard cutoff is enabled. If true, the ad will not serve after the end date and time. Otherwise the ad will continue to be served until it has reached its delivery goals.",108,null],[12,"frequency_cap","","Limit on the number of times an individual user can be served the ad within a specified period of time.",108,null],[12,"impression_ratio","","Impression ratio for this ad. This ratio determines how often each ad is served relative to the others. For example, if ad A has an impression ratio of 1 and ad B has an impression ratio of 3, then DCM will serve ad B three times as often as ad A. Must be between 1 and 10.",108,null],[3,"ReportSchedule","","The report's schedule. Can only be set if the report's 'dateRange' is a relative date range and the relative date range is not \"TODAY\".",null,null],[12,"start_date","","Start date of date range for which scheduled reports should be run.",109,null],[12,"runs_on_day_of_month","","Enum to define for \"MONTHLY\" scheduled reports whether reports should be repeated on the same day of the month as \"startDate\" or the same day of the week of the month.\nExample: If 'startDate' is Monday, April 2nd 2012 (2012-04-02), \"DAY_OF_MONTH\" would run subsequent reports on the 2nd of every Month, and \"WEEK_OF_MONTH\" would run subsequent reports on the first Monday of the month.",109,null],[12,"expiration_date","","The expiration date when the scheduled report stops running.",109,null],[12,"active","","Whether the schedule is active or not. Must be set to either true or false.",109,null],[12,"every","","Defines every how many days, weeks or months the report should be run. Needs to be set when \"repeats\" is either \"DAILY\", \"WEEKLY\" or \"MONTHLY\".",109,null],[12,"repeats","","The interval for which the report is repeated. Note:\n- \"DAILY\" also requires field \"every\" to be set. \n- \"WEEKLY\" also requires fields \"every\" and \"repeatsOnWeekDays\" to be set. \n- \"MONTHLY\" also requires fields \"every\" and \"runsOnDayOfMonth\" to be set.",109,null],[12,"repeats_on_week_days","","List of week days \"WEEKLY\" on which scheduled reports should run.",109,null],[3,"Recipient","","Represents a recipient.",null,null],[12,"kind","","The kind of resource this is, in this case dfareporting#recipient.",110,null],[12,"delivery_type","","The delivery type for the recipient.",110,null],[12,"email","","The email address of the recipient.",110,null],[3,"ReportCompatibleFields","","Represents fields that are compatible to be selected for a report of type \"STANDARD\".",null,null],[12,"metrics","","Metrics which are compatible to be selected in the \"metricNames\" section of the report.",111,null],[12,"kind","","The kind of resource this is, in this case dfareporting#reportCompatibleFields.",111,null],[12,"pivoted_activity_metrics","","Metrics which are compatible to be selected as activity metrics to pivot on in the \"activities\" section of the report.",111,null],[12,"dimensions","","Dimensions which are compatible to be selected in the \"dimensions\" section of the report.",111,null],[12,"dimension_filters","","Dimensions which are compatible to be selected in the \"dimensionFilters\" section of the report.",111,null],[3,"AdvertiserGroupsListResponse","","Advertiser Group List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",112,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertiserGroupsListResponse\".",112,null],[12,"advertiser_groups","","Advertiser group collection.",112,null],[3,"PlacementGroupsListResponse","","Placement Group List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",113,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementGroupsListResponse\".",113,null],[12,"placement_groups","","Placement group collection.",113,null],[3,"ReportPathToConversionCriteriaReportProperties","","The properties of the report.",null,null],[12,"clicks_lookback_window","","DFA checks to see if a click interaction occurred within the specified period of time before a conversion. By default the value is pulled from Floodlight or you can manually enter a custom value. Valid values: 1-90.",114,null],[12,"pivot_on_interaction_path","","Enable pivoting on interaction path.",114,null],[12,"impressions_lookback_window","","DFA checks to see if an impression interaction occurred within the specified period of time before a conversion. By default the value is pulled from Floodlight or you can manually enter a custom value. Valid values: 1-90.",114,null],[12,"include_unattributed_ip_conversions","","Include conversions that have no associated cookies and no exposures. It’s therefore impossible to know how the user was exposed to your ads during the lookback window prior to a conversion.",114,null],[12,"include_unattributed_cookie_conversions","","Include conversions of users with a DoubleClick cookie but without an exposure. That means the user did not click or see an ad from the advertiser within the Floodlight group, or that the interaction happened outside the lookback window.",114,null],[12,"maximum_interaction_gap","","The maximum amount of time that can take place between interactions (clicks or impressions) by the same user. Valid values: 1-90.",114,null],[12,"include_attributed_ip_conversions","","Deprecated: has no effect.",114,null],[12,"maximum_click_interactions","","The maximum number of click interactions to include in the report. Advertisers currently paying for E2C reports get up to 200 (100 clicks, 100 impressions). If another advertiser in your network is paying for E2C, you can have up to 5 total exposures per report.",114,null],[12,"maximum_impression_interactions","","The maximum number of click interactions to include in the report. Advertisers currently paying for E2C reports get up to 200 (100 clicks, 100 impressions). If another advertiser in your network is paying for E2C, you can have up to 5 total exposures per report.",114,null],[3,"TechnologyTargeting","","Technology Targeting.",null,null],[12,"browsers","","Browsers that this ad targets. For each browser either set browserVersionId or dartId along with the version numbers. If both are specified, only browserVersionId will be used.The other fields are populated automatically when the ad is inserted or updated.",115,null],[12,"operating_systems","","Operating systems that this ad targets. To target specific versions, use operatingSystemVersions. For each operating system only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting an operating system, do not set targeting for operating system versions for the same operating system.",115,null],[12,"mobile_carriers","","Mobile carriers that this ad targets. For each mobile carrier only id is required, and the other fields are populated automatically when the ad is inserted or updated. If targeting a mobile carrier, do not set targeting for any zip codes.",115,null],[12,"connection_types","","Connection types that this ad targets. For each connection type only id is required.The other fields are populated automatically when the ad is inserted or updated.",115,null],[12,"platform_types","","Platform types that this ad targets. For example, desktop, mobile, or tablet. For each platform type, only id is required, and the other fields are populated automatically when the ad is inserted or updated.",115,null],[12,"operating_system_versions","","Operating system versions that this ad targets. To target all versions, use operatingSystems. For each operating system version, only id is required. The other fields are populated automatically when the ad is inserted or updated. If targeting an operating system version, do not set targeting for the corresponding operating system in operatingSystems.",115,null],[3,"OptimizationActivity","","Creative optimization activity.",null,null],[12,"floodlight_activity_id","","Floodlight activity ID of this optimization activity. This is a required field.",116,null],[12,"floodlight_activity_id_dimension_value","","Dimension value for the ID of the floodlight activity. This is a read-only, auto-generated field.",116,null],[12,"weight","","Weight associated with this optimization. Must be greater than 1. The weight assigned will be understood in proportion to the weights assigned to the other optimization activities.",116,null],[3,"ListTargetingExpression","","Remarketing List Targeting Expression.",null,null],[12,"expression","","Expression describing which lists are being targeted by the ad.",117,null],[3,"CreativeAssetMetadata","","CreativeAssets contains properties of a creative asset file which will be uploaded or has already been uploaded. Refer to the creative sample code for how to upload assets and insert a creative.",null,null],[12,"warned_validation_rules","","Rules validated during code generation that generated a warning. This is a read-only, auto-generated field.",118,null],[12,"detected_features","","List of feature dependencies for the creative asset that are detected by DCM. Feature dependencies are features that a browser must be able to support in order to render your HTML5 creative correctly. This is a read-only, auto-generated field.",118,null],[12,"click_tags","","List of detected click tags for assets. This is a read-only auto-generated field.",118,null],[12,"asset_identifier","","ID of the creative asset. This is a required field.",118,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeAssetMetadata\".",118,null],[3,"TagData","","Placement Tag Data",null,null],[12,"click_tag","","Tag string to record a click.",119,null],[12,"impression_tag","","Tag string for serving an ad.",119,null],[12,"creative_id","","Creative associated with this placement tag.",119,null],[12,"ad_id","","Ad associated with this placement tag.",119,null],[12,"format","","TagData tag format of this tag.",119,null],[3,"ReportFloodlightCriteria","","The report criteria for a report of type \"FLOODLIGHT\".",null,null],[12,"floodlight_config_id","","The floodlight ID for which to show data in this report. All advertisers associated with that ID will automatically be added. The dimension of the value needs to be 'dfa:floodlightConfigId'.",120,null],[12,"dimensions","","The list of dimensions the report should include.",120,null],[12,"metric_names","","The list of names of metrics the report should include.",120,null],[12,"date_range","","The date range this report should be run for.",120,null],[12,"custom_rich_media_events","","The list of custom rich media events to include.",120,null],[12,"dimension_filters","","The list of filters on which dimensions are filtered.\nFilters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed.",120,null],[12,"report_properties","","The properties of the report.",120,null],[3,"LandingPagesListResponse","","Landing Page List Response",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#landingPagesListResponse\".",121,null],[12,"landing_pages","","Landing page collection",121,null],[3,"SitesListResponse","","Site List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",122,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#sitesListResponse\".",122,null],[12,"sites","","Site collection",122,null],[3,"DimensionFilter","","Represents a dimension filter.",null,null],[12,"dimension_name","","The name of the dimension to filter.",123,null],[12,"kind","","The kind of resource this is, in this case dfareporting#dimensionFilter.",123,null],[12,"value","","The value of the dimension to filter.",123,null],[3,"PostalCode","","Contains information about a postal code that can be targeted by ads.",null,null],[12,"code","","Postal code. This is equivalent to the id field.",124,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#postalCode\".",124,null],[12,"country_dart_id","","DART ID of the country to which this postal code belongs.",124,null],[12,"id","","ID of this postal code.",124,null],[12,"country_code","","Country code of the country to which this postal code belongs.",124,null],[3,"RemarketingList","","Contains properties of a remarketing list. Remarketing enables you to create lists of users who have performed specific actions on a site, then target ads to members of those lists. This resource can be used to manage remarketing lists that are owned by your advertisers. To see all remarketing lists that are visible to your advertisers, including those that are shared to your advertiser or account, use the TargetableRemarketingList resource.",null,null],[12,"list_population_rule","","Rule used to populate the remarketing list with users.",125,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#remarketingList\".",125,null],[12,"subaccount_id","","Subaccount ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.",125,null],[12,"description","","Remarketing list description.",125,null],[12,"list_size","","Number of users currently in the list. This is a read-only field.",125,null],[12,"life_span","","Number of days that a user should remain in the remarketing list without an impression.",125,null],[12,"advertiser_id","","Dimension value for the advertiser ID that owns this remarketing list. This is a required field.",125,null],[12,"list_source","","Product from which this remarketing list was originated.",125,null],[12,"active","","Whether this remarketing list is active.",125,null],[12,"advertiser_id_dimension_value","","Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",125,null],[12,"account_id","","Account ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.",125,null],[12,"id","","Remarketing list ID. This is a read-only, auto-generated field.",125,null],[12,"name","","Name of the remarketing list. This is a required field. Must be no greater than 128 characters long.",125,null],[3,"FloodlightActivity","","Contains properties of a Floodlight activity.",null,null],[12,"secure","","Whether this tag should use SSL.",126,null],[12,"id_dimension_value","","Dimension value for the ID of this floodlight activity. This is a read-only, auto-generated field.",126,null],[12,"floodlight_activity_group_name","","Name of the associated floodlight activity group. This is a read-only field.",126,null],[12,"image_tag_enabled","","Whether the image tag is enabled for this activity.",126,null],[12,"advertiser_id","","Advertiser ID of this floodlight activity. If this field is left blank, the value will be copied over either from the activity group's advertiser or the existing activity's advertiser.",126,null],[12,"cache_busting_type","","Code type used for cache busting in the generated tag.",126,null],[12,"advertiser_id_dimension_value","","Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",126,null],[12,"floodlight_activity_group_id","","Floodlight activity group ID of this floodlight activity. This is a required field.",126,null],[12,"user_defined_variable_types","","List of the user-defined variables used by this conversion tag. These map to the \"u[1-20]=\" in the tags. Each of these can have a user defined type.\nAcceptable values are:\n- \"U1\"\n- \"U2\"\n- \"U3\"\n- \"U4\"\n- \"U5\"\n- \"U6\"\n- \"U7\"\n- \"U8\"\n- \"U9\"\n- \"U10\"\n- \"U11\"\n- \"U12\"\n- \"U13\"\n- \"U14\"\n- \"U15\"\n- \"U16\"\n- \"U17\"\n- \"U18\"\n- \"U19\"\n- \"U20\"",126,null],[12,"tag_string","","Value of the cat= paramter in the floodlight tag, which the ad servers use to identify the activity. This is optional: if empty, a new tag string will be generated for you. This string must be 1 to 8 characters long, with valid characters being [a-z][A-Z][0-9][-][ _ ]. This tag string must also be unique among activities of the same activity group. This field is read-only after insertion.",126,null],[12,"floodlight_activity_group_tag_string","","Tag string of the associated floodlight activity group. This is a read-only field.",126,null],[12,"expected_url","","URL where this tag will be deployed. If specified, must be less than 256 characters long.",126,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivity\".",126,null],[12,"subaccount_id","","Subaccount ID of this floodlight activity. This is a read-only field that can be left blank.",126,null],[12,"name","","Name of this floodlight activity. This is a required field. Must be less than 129 characters long and cannot contain quotes.",126,null],[12,"publisher_tags","","Publisher dynamic floodlight tags.",126,null],[12,"ssl_compliant","","Whether the floodlight activity is SSL-compliant. This is a read-only field, its value detected by the system from the floodlight tags.",126,null],[12,"notes","","General notes or implementation instructions for the tag.",126,null],[12,"floodlight_configuration_id","","Floodlight configuration ID of this floodlight activity. If this field is left blank, the value will be copied over either from the activity group's floodlight configuration or from the existing activity's floodlight configuration.",126,null],[12,"id","","ID of this floodlight activity. This is a read-only, auto-generated field.",126,null],[12,"counting_method","","Counting method for conversions for this floodlight activity. This is a required field.",126,null],[12,"default_tags","","Dynamic floodlight tags.",126,null],[12,"floodlight_configuration_id_dimension_value","","Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated field.",126,null],[12,"tag_format","","Tag format type for the floodlight activity. If left blank, the tag format will default to HTML.",126,null],[12,"hidden","","Whether this activity is archived.",126,null],[12,"account_id","","Account ID of this floodlight activity. This is a read-only field that can be left blank.",126,null],[12,"ssl_required","","Whether this floodlight activity must be SSL-compliant.",126,null],[12,"floodlight_activity_group_type","","Type of the associated floodlight activity group. This is a read-only field.",126,null],[3,"Browser","","Contains information about a browser that can be targeted by ads.",null,null],[12,"major_version","","Major version number (leftmost number) of this browser. For example, for Chrome 5.0.376.86 beta, this field should be set to 5. An asterisk (*) may be used to target any version number, and a question mark (?) may be used to target cases where the version number cannot be identified. For example, Chrome *.* targets any version of Chrome: 1.2, 2.5, 3.5, and so on. Chrome 3.* targets Chrome 3.1, 3.5, but not 4.0. Firefox ?.? targets cases where the ad server knows the browser is Firefox but can't tell which version it is.",127,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#browser\".",127,null],[12,"browser_version_id","","ID referring to this grouping of browser and version numbers. This is the ID used for targeting.",127,null],[12,"name","","Name of this browser.",127,null],[12,"dart_id","","DART ID of this browser. This is the ID used when generating reports.",127,null],[12,"minor_version","","Minor version number (number after first dot on left) of this browser. For example, for Chrome 5.0.375.86 beta, this field should be set to 0. An asterisk (*) may be used to target any version number, and a question mark (?) may be used to target cases where the version number cannot be identified. For example, Chrome *.* targets any version of Chrome: 1.2, 2.5, 3.5, and so on. Chrome 3.* targets Chrome 3.1, 3.5, but not 4.0. Firefox ?.? targets cases where the ad server knows the browser is Firefox but can't tell which version it is.",127,null],[3,"AccountUserProfilesListResponse","","Account User Profile List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",128,null],[12,"account_user_profiles","","Account user profile collection.",128,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountUserProfilesListResponse\".",128,null],[3,"Advertiser","","Contains properties of a DCM advertiser.",null,null],[12,"status","","Status of this advertiser.",129,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertiser\".",129,null],[12,"subaccount_id","","Subaccount ID of this advertiser.This is a read-only field that can be left blank.",129,null],[12,"name","","Name of this advertiser. This is a required field and must be less than 256 characters long and unique among advertisers of the same account.",129,null],[12,"default_click_through_event_tag_id","","ID of the click-through event tag to apply by default to the landing pages of this advertiser's campaigns.",129,null],[12,"original_floodlight_configuration_id","","Original floodlight configuration before any sharing occurred. Set the floodlightConfigurationId of this advertiser to originalFloodlightConfigurationId to unshare the advertiser's current floodlight configuration. You cannot unshare an advertiser's floodlight configuration if the shared configuration has activities associated with any campaign or placement.",129,null],[12,"click_through_url_suffix","","Suffix added to click-through URL of ad creative associations under this advertiser. Must be less than 129 characters long.",129,null],[12,"floodlight_configuration_id","","Floodlight configuration ID of this advertiser. The floodlight configuration ID will be created automatically, so on insert this field should be left blank. This field can be set to another advertiser's floodlight configuration ID in order to share that advertiser's floodlight configuration with this advertiser, so long as:\n- This advertiser's original floodlight configuration is not already associated with floodlight activities or floodlight activity groups. \n- This advertiser's original floodlight configuration is not already shared with another advertiser.",129,null],[12,"floodlight_configuration_id_dimension_value","","Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated field.",129,null],[12,"advertiser_group_id","","ID of the advertiser group this advertiser belongs to. You can group advertisers for reporting purposes, allowing you to see aggregated information for all advertisers in each group.",129,null],[12,"id_dimension_value","","Dimension value for the ID of this advertiser. This is a read-only, auto-generated field.",129,null],[12,"default_email","","Default email address used in sender field for tag emails.",129,null],[12,"id","","ID of this advertiser. This is a read-only, auto-generated field.",129,null],[12,"account_id","","Account ID of this advertiser.This is a read-only field that can be left blank.",129,null],[3,"PlatformTypesListResponse","","Platform Type List Response",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#platformTypesListResponse\".",130,null],[12,"platform_types","","Platform type collection.",130,null],[3,"ChangeLogsListResponse","","Change Log List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",131,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#changeLogsListResponse\".",131,null],[12,"change_logs","","Change log collection.",131,null],[3,"PlacementsListResponse","","Placement List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",132,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementsListResponse\".",132,null],[12,"placements","","Placement collection.",132,null],[3,"AdsListResponse","","Ad List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",133,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#adsListResponse\".",133,null],[12,"ads","","Ad collection.",133,null],[3,"ReportReachCriteria","","The report criteria for a report of type \"REACH\".",null,null],[12,"activities","","Activity group.",134,null],[12,"dimensions","","The list of dimensions the report should include.",134,null],[12,"metric_names","","The list of names of metrics the report should include.",134,null],[12,"date_range","","The date range this report should be run for.",134,null],[12,"dimension_filters","","The list of filters on which dimensions are filtered.\nFilters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed.",134,null],[12,"reach_by_frequency_metric_names","","The list of names of  Reach By Frequency metrics the report should include.",134,null],[12,"custom_rich_media_events","","Custom Rich Media Events group.",134,null],[12,"enable_all_dimension_combinations","","Whether to enable all reach dimension combinations in the report. Defaults to false. If enabled, the date range of the report should be within the last three months.",134,null],[3,"FileUrls","","The URLs where the completed report file can be downloaded.",null,null],[12,"browser_url","","The URL for downloading the report data through a browser.",135,null],[12,"api_url","","The URL for downloading the report data through the API.",135,null],[3,"OrderDocumentsListResponse","","Order document List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",136,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#orderDocumentsListResponse\".",136,null],[12,"order_documents","","Order document collection",136,null],[3,"UserDefinedVariableConfiguration","","User Defined Variable configuration.",null,null],[12,"data_type","","Data type for the variable. This is a required field.",137,null],[12,"report_name","","User-friendly name for the variable which will appear in reports. This is a required field, must be less than 64 characters long, and cannot contain the following characters: \"\"<>\".",137,null],[12,"variable_type","","Variable name in the tag. This is a required field.",137,null],[3,"Pricing","","Pricing Information",null,null],[12,"group_type","","Group type of this inventory item if it represents a placement group. Is null otherwise. There are two type of placement groups: PLANNING_PLACEMENT_GROUP_TYPE_PACKAGE is a simple group of inventory items that acts as a single pricing point for a group of tags. PLANNING_PLACEMENT_GROUP_TYPE_ROADBLOCK is a group of inventory items that not only acts as a single pricing point, but also assumes that all the tags in it will be served at the same time. A roadblock requires one of its assigned inventory items to be marked as primary.",138,null],[12,"start_date","","Start date of this inventory item.",138,null],[12,"flights","","Flights of this inventory item. A flight (a.k.a. pricing period) represents the inventory item pricing information for a specific period of time.",138,null],[12,"end_date","","End date of this inventory item.",138,null],[12,"pricing_type","","Pricing type of this inventory item.",138,null],[12,"cap_cost_type","","Cap cost type of this inventory item.",138,null],[3,"FloodlightActivityPublisherDynamicTag","","Publisher Dynamic Tag",null,null],[12,"view_through","","Whether this tag is applicable only for view-throughs.",139,null],[12,"site_id","","Site ID of this dynamic tag.",139,null],[12,"click_through","","Whether this tag is applicable only for click-throughs.",139,null],[12,"directory_site_id","","Directory site ID of this dynamic tag. This is a write-only field that can be used as an alternative to the siteId field. When this resource is retrieved, only the siteId field will be populated.",139,null],[12,"site_id_dimension_value","","Dimension value for the ID of the site. This is a read-only, auto-generated field.",139,null],[12,"dynamic_tag","","Dynamic floodlight tag.",139,null],[3,"LandingPage","","Contains information about where a user's browser is taken after the user clicks an ad.",null,null],[12,"default","","Whether or not this landing page will be assigned to any ads or creatives that do not have a landing page assigned explicitly. Only one default landing page is allowed per campaign.",140,null],[12,"url","","URL of this landing page. This is a required field.",140,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#landingPage\".",140,null],[12,"id","","ID of this landing page. This is a read-only, auto-generated field.",140,null],[12,"name","","Name of this landing page. This is a required field. It must be less than 256 characters long, and must be unique among landing pages of the same campaign.",140,null],[3,"Size","","Represents the dimensions of ads, placements, creatives, or creative assets.",null,null],[12,"width","","Width of this size.",141,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#size\".",141,null],[12,"height","","Height of this size.",141,null],[12,"id","","ID of this size. This is a read-only, auto-generated field.",141,null],[12,"iab","","IAB standard size. This is a read-only, auto-generated field.",141,null],[3,"City","","Contains information about a city that can be targeted by ads.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#city\".",142,null],[12,"country_dart_id","","DART ID of the country to which this city belongs.",142,null],[12,"name","","Name of this city.",142,null],[12,"country_code","","Country code of the country to which this city belongs.",142,null],[12,"metro_code","","Metro region code of the metro region (DMA) to which this city belongs.",142,null],[12,"region_code","","Region code of the region to which this city belongs.",142,null],[12,"metro_dma_id","","ID of the metro region (DMA) to which this city belongs.",142,null],[12,"dart_id","","DART ID of this city. This is the ID used for targeting and generating reports.",142,null],[12,"region_dart_id","","DART ID of the region to which this city belongs.",142,null],[3,"ClickThroughUrlSuffixProperties","","Click Through URL Suffix settings.",null,null],[12,"click_through_url_suffix","","Click-through URL suffix to apply to all ads in this entity's scope. Must be less than 128 characters long.",143,null],[12,"override_inherited_suffix","","Whether this entity should override the inherited click-through URL suffix with its own defined value.",143,null],[3,"PlacementGroup","","Contains properties of a package or roadblock.",null,null],[12,"comment","","Comments for this placement group.",144,null],[12,"primary_placement_id","","ID of the primary placement, used to calculate the media cost of a roadblock (placement group). Modifying this field will automatically modify the primary field on all affected roadblock child placements.",144,null],[12,"campaign_id","","Campaign ID of this placement group. This field is required on insertion.",144,null],[12,"primary_placement_id_dimension_value","","Dimension value for the ID of the primary placement. This is a read-only, auto-generated field.",144,null],[12,"directory_site_id_dimension_value","","Dimension value for the ID of the directory site. This is a read-only, auto-generated field.",144,null],[12,"advertiser_id","","Advertiser ID of this placement group. This is a required field on insertion.",144,null],[12,"directory_site_id","","Directory site ID associated with this placement group. On insert, you must set either this field or the site_id field to specify the site associated with this placement group. This is a required field that is read-only after insertion.",144,null],[12,"create_info","","Information about the creation of this placement group. This is a read-only field.",144,null],[12,"site_id","","Site ID associated with this placement group. On insert, you must set either this field or the directorySiteId field to specify the site associated with this placement group. This is a required field that is read-only after insertion.",144,null],[12,"pricing_schedule","","Pricing schedule of this placement group. This field is required on insertion.",144,null],[12,"site_id_dimension_value","","Dimension value for the ID of the site. This is a read-only, auto-generated field.",144,null],[12,"placement_group_type","","Type of this placement group. A package is a simple group of placements that acts as a single pricing point for a group of tags. A roadblock is a group of placements that not only acts as a single pricing point, but also assumes that all the tags in it will be served at the same time. A roadblock requires one of its assigned placements to be marked as primary for reporting. This field is required on insertion.",144,null],[12,"advertiser_id_dimension_value","","Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",144,null],[12,"archived","","Whether this placement group is archived.",144,null],[12,"id","","ID of this placement group. This is a read-only, auto-generated field.",144,null],[12,"placement_strategy_id","","ID of the placement strategy assigned to this placement group.",144,null],[12,"account_id","","Account ID of this placement group. This is a read-only field that can be left blank.",144,null],[12,"programmatic_setting","","Settings for a programmatic placement.",144,null],[12,"campaign_id_dimension_value","","Dimension value for the ID of the campaign. This is a read-only, auto-generated field.",144,null],[12,"subaccount_id","","Subaccount ID of this placement group. This is a read-only field that can be left blank.",144,null],[12,"name","","Name of this placement group. This is a required field and must be less than 256 characters long.",144,null],[12,"child_placement_ids","","IDs of placements which are assigned to this placement group. This is a read-only, auto-generated field.",144,null],[12,"last_modified_info","","Information about the most recent modification of this placement group. This is a read-only field.",144,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementGroup\".",144,null],[12,"content_category_id","","ID of the content category assigned to this placement group.",144,null],[12,"external_id","","External ID for this placement.",144,null],[12,"id_dimension_value","","Dimension value for the ID of this placement group. This is a read-only, auto-generated field.",144,null],[3,"ThirdPartyTrackingUrl","","Third-party Tracking URL.",null,null],[12,"url","","URL for the specified third-party URL type.",145,null],[12,"third_party_url_type","","Third-party URL type for in-stream video creatives.",145,null],[3,"UserRolePermission","","Contains properties of a user role permission.",null,null],[12,"permission_group_id","","ID of the permission group that this user role permission belongs to.",146,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRolePermission\".",146,null],[12,"availability","","Levels of availability for a user role permission.",146,null],[12,"id","","ID of this user role permission.",146,null],[12,"name","","Name of this user role permission.",146,null],[3,"MetrosListResponse","","Metro List Response",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#metrosListResponse\".",147,null],[12,"metros","","Metro collection.",147,null],[3,"PricingSchedule","","Pricing Schedule",null,null],[12,"start_date","","Placement start date. This date must be later than, or the same day as, the campaign start date. The hours, minutes, and seconds of the start date should not be set, as doing so will result in an error. This field is required on insertion.",148,null],[12,"end_date","","Placement end date. This date must be later than, or the same day as, the placement start date, but not later than the campaign end date. If, for example, you set 6/25/2015 as both the start and end dates, the effective placement date is just that day only, 6/25/2015. The hours, minutes, and seconds of the end date should not be set, as doing so will result in an error. This field is required on insertion.",148,null],[12,"flighted","","Whether this placement is flighted. If true, pricing periods will be computed automatically.",148,null],[12,"disregard_overdelivery","","Whether cap costs are ignored by ad serving.",148,null],[12,"cap_cost_option","","Placement cap cost option.",148,null],[12,"pricing_periods","","Pricing periods for this placement.",148,null],[12,"pricing_type","","Placement pricing type. This field is required on insertion.",148,null],[12,"testing_start_date","","Testing start date of this placement. The hours, minutes, and seconds of the start date should not be set, as doing so will result in an error.",148,null],[12,"floodlight_activity_id","","Floodlight activity ID associated with this placement. This field should be set when placement pricing type is set to PRICING_TYPE_CPA.",148,null],[3,"AccountsListResponse","","Account List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",149,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountsListResponse\".",149,null],[12,"accounts","","Account collection.",149,null],[3,"OperatingSystem","","Contains information about an operating system that can be targeted by ads.",null,null],[12,"mobile","","Whether this operating system is for mobile.",150,null],[12,"dart_id","","DART ID of this operating system. This is the ID used for targeting.",150,null],[12,"desktop","","Whether this operating system is for desktop.",150,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#operatingSystem\".",150,null],[12,"name","","Name of this operating system.",150,null],[3,"Activities","","Represents an activity group.",null,null],[12,"kind","","The kind of resource this is, in this case dfareporting#activities.",151,null],[12,"filters","","List of activity filters. The dimension values need to be all either of type \"dfa:activity\" or \"dfa:activityGroup\".",151,null],[12,"metric_names","","List of names of floodlight activity metrics.",151,null],[3,"ListPopulationClause","","A group clause made up of list population terms representing constraints joined by ORs.",null,null],[12,"terms","","Terms of this list population clause. Each clause is made up of list population terms representing constraints and are joined by ORs.",152,null],[3,"Flight","","Flight",null,null],[12,"rate_or_cost","","Rate or cost of this flight.",153,null],[12,"start_date","","Inventory item flight start date.",153,null],[12,"units","","Units of this flight.",153,null],[12,"end_date","","Inventory item flight end date.",153,null],[3,"SortedDimension","","Represents a sorted dimension.",null,null],[12,"kind","","The kind of resource this is, in this case dfareporting#sortedDimension.",154,null],[12,"name","","The name of the dimension.",154,null],[12,"sort_order","","An optional sort order for the dimension column.",154,null],[3,"PlacementStrategiesListResponse","","Placement Strategy List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",155,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementStrategiesListResponse\".",155,null],[12,"placement_strategies","","Placement strategy collection.",155,null],[3,"ReportList","","Represents the list of reports.",null,null],[12,"next_page_token","","Continuation token used to page through reports. To retrieve the next page of results, set the next request's \"pageToken\" to the value of this field. The page token is only valid for a limited amount of time and should not be persisted.",156,null],[12,"items","","The reports returned in this response.",156,null],[12,"kind","","The kind of list this is, in this case dfareporting#reportList.",156,null],[12,"etag","","The eTag of this response for caching purposes.",156,null],[3,"AdvertiserGroup","","Groups advertisers together so that reports can be generated for the entire group at once.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertiserGroup\".",157,null],[12,"account_id","","Account ID of this advertiser group. This is a read-only field that can be left blank.",157,null],[12,"id","","ID of this advertiser group. This is a read-only, auto-generated field.",157,null],[12,"name","","Name of this advertiser group. This is a required field and must be less than 256 characters long and unique among advertiser groups of the same account.",157,null],[3,"FsCommand","","FsCommand.",null,null],[12,"window_height","","Height of the window.",158,null],[12,"top","","Distance from the top of the browser. Applicable when positionOption is DISTANCE_FROM_TOP_LEFT_CORNER.",158,null],[12,"window_width","","Width of the window.",158,null],[12,"position_option","","Position in the browser where the window will open.",158,null],[12,"left","","Distance from the left of the browser.Applicable when positionOption is DISTANCE_FROM_TOP_LEFT_CORNER.",158,null],[3,"CreativeOptimizationConfiguration","","Creative optimization settings.",null,null],[12,"optimization_activitys","","List of optimization activities associated with this configuration.",159,null],[12,"id","","ID of this creative optimization config. This field is auto-generated when the campaign is inserted or updated. It can be null for existing campaigns.",159,null],[12,"name","","Name of this creative optimization config. This is a required field and must be less than 129 characters long.",159,null],[12,"optimization_model","","Optimization model for this configuration.",159,null],[3,"CreativeGroupsListResponse","","Creative Group List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",160,null],[12,"creative_groups","","Creative group collection.",160,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeGroupsListResponse\".",160,null],[3,"OffsetPosition","","Offset Position.",null,null],[12,"top","","Offset distance from top side of an asset or a window.",161,null],[12,"left","","Offset distance from left side of an asset or a window.",161,null],[3,"TargetWindow","","Target Window.",null,null],[12,"custom_html","","User-entered value.",162,null],[12,"target_window_option","","Type of browser window for which the backup image of the flash creative can be displayed.",162,null],[3,"ProgrammaticSetting","","Programmatic Setting",null,null],[12,"trafficker_emails","","Trafficker emails assigned to the placement.",163,null],[12,"programmatic","","Whether programmatic is enabled.",163,null],[12,"media_cost_nanos","","Media cost for the programmatic placement.",163,null],[12,"adx_deal_ids","","Adx deal IDs assigned to the placement.",163,null],[12,"insertion_order_id","","Insertion order ID.",163,null],[12,"insertion_order_id_status","","Whether insertion order ID has been placed in DFP. This is a read-only field.",163,null],[3,"SiteContact","","Site Contact",null,null],[12,"first_name","","First name of this site contact.",164,null],[12,"title","","Title or designation of this site contact.",164,null],[12,"last_name","","Last name of this site contact.",164,null],[12,"contact_type","","Site contact type.",164,null],[12,"id","","ID of this site contact. This is a read-only, auto-generated field.",164,null],[12,"phone","","Primary phone number of this site contact.",164,null],[12,"address","","Address of this site contact.",164,null],[12,"email","","Email address of this site contact. This is a required field.",164,null],[3,"CreativeRotation","","Creative Rotation.",null,null],[12,"creative_assignments","","Creative assignments in this creative rotation.",165,null],[12,"weight_calculation_strategy","","Strategy for calculating weights. Used with CREATIVE_ROTATION_TYPE_RANDOM.",165,null],[12,"creative_optimization_configuration_id","","Creative optimization configuration that is used by this ad. It should refer to one of the existing optimization configurations in the ad's campaign. If it is unset or set to 0, then the campaign's default optimization configuration will be used for this ad.",165,null],[12,"type_","","Type of creative rotation. Can be used to specify whether to use sequential or random rotation.",165,null],[3,"Metro","","Contains information about a metro region that can be targeted by ads.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#metro\".",166,null],[12,"country_dart_id","","DART ID of the country to which this metro region belongs.",166,null],[12,"name","","Name of this metro region.",166,null],[12,"country_code","","Country code of the country to which this metro region belongs.",166,null],[12,"metro_code","","Metro code of this metro region. This is equivalent to dma_id.",166,null],[12,"dart_id","","DART ID of this metro region.",166,null],[12,"dma_id","","DMA ID of this metro region. This is the ID used for targeting and generating reports, and is equivalent to metro_code.",166,null],[3,"Country","","Contains information about a country that can be targeted by ads.",null,null],[12,"dart_id","","DART ID of this country. This is the ID used for targeting and generating reports.",167,null],[12,"ssl_enabled","","Whether ad serving supports secure servers in this country.",167,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#country\".",167,null],[12,"country_code","","Country code.",167,null],[12,"name","","Name of this country.",167,null],[3,"PostalCodesListResponse","","Postal Code List Response",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#postalCodesListResponse\".",168,null],[12,"postal_codes","","Postal code collection.",168,null],[3,"TagSetting","","Tag Settings",null,null],[12,"include_click_through_urls","","Whether static landing page URLs should be included in the tags. This setting applies only to placements.",169,null],[12,"include_click_tracking","","Whether click-tracking string should be included in the tags.",169,null],[12,"additional_key_values","","Additional key-values to be included in tags. Each key-value pair must be of the form key=value, and pairs must be separated by a semicolon (;). Keys and values must not contain commas. For example, id=2;color=red is a valid value for this field.",169,null],[12,"keyword_option","","Option specifying how keywords are embedded in ad tags. This setting can be used to specify whether keyword placeholders are inserted in placement tags for this site. Publishers can then add keywords to those placeholders.",169,null],[3,"CreativeField","","Contains properties of a creative field.",null,null],[12,"advertiser_id","","Advertiser ID of this creative field. This is a required field on insertion.",170,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeField\".",170,null],[12,"subaccount_id","","Subaccount ID of this creative field. This is a read-only field that can be left blank.",170,null],[12,"name","","Name of this creative field. This is a required field and must be less than 256 characters long and unique among creative fields of the same advertiser.",170,null],[12,"advertiser_id_dimension_value","","Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",170,null],[12,"id","","ID of this creative field. This is a read-only, auto-generated field.",170,null],[12,"account_id","","Account ID of this creative field. This is a read-only field that can be left blank.",170,null],[3,"CreativeFieldValuesListResponse","","Creative Field Value List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",171,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeFieldValuesListResponse\".",171,null],[12,"creative_field_values","","Creative field value collection.",171,null],[3,"ReportFloodlightCriteriaReportProperties","","The properties of the report.",null,null],[12,"include_unattributed_ip_conversions","","Include conversions that have no associated cookies and no exposures. It’s therefore impossible to know how the user was exposed to your ads during the lookback window prior to a conversion.",172,null],[12,"include_unattributed_cookie_conversions","","Include conversions of users with a DoubleClick cookie but without an exposure. That means the user did not click or see an ad from the advertiser within the Floodlight group, or that the interaction happened outside the lookback window.",172,null],[12,"include_attributed_ip_conversions","","Include conversions that have no cookie, but do have an exposure path.",172,null],[3,"DirectorySiteContact","","Contains properties of a Site Directory contact.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#directorySiteContact\".",173,null],[12,"first_name","","First name of this directory site contact.",173,null],[12,"title","","Title or designation of this directory site contact.",173,null],[12,"last_name","","Last name of this directory site contact.",173,null],[12,"id","","ID of this directory site contact. This is a read-only, auto-generated field.",173,null],[12,"phone","","Phone number of this directory site contact.",173,null],[12,"role","","Directory site contact role.",173,null],[12,"address","","Address of this directory site contact.",173,null],[12,"type_","","Directory site contact type.",173,null],[12,"email","","Email address of this directory site contact.",173,null],[3,"DimensionValue","","Represents a DimensionValue resource.",null,null],[12,"dimension_name","","The name of the dimension.",174,null],[12,"kind","","The kind of resource this is, in this case dfareporting#dimensionValue.",174,null],[12,"etag","","The eTag of this response for caching purposes.",174,null],[12,"match_type","","Determines how the 'value' field is matched when filtering. If not specified, defaults to EXACT. If set to WILDCARD_EXPRESSION, '*' is allowed as a placeholder for variable length character sequences, and it can be escaped with a backslash. Note, only paid search dimensions ('dfa:paidSearch*') allow a matchType other than EXACT.",174,null],[12,"id","","The ID associated with the value if available.",174,null],[12,"value","","The value of the dimension.",174,null],[3,"ContentCategoriesListResponse","","Content Category List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",175,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#contentCategoriesListResponse\".",175,null],[12,"content_categories","","Content category collection.",175,null],[3,"FloodlightConfigurationsListResponse","","Floodlight Configuration List Response",null,null],[12,"floodlight_configurations","","Floodlight configuration collection.",176,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightConfigurationsListResponse\".",176,null],[3,"Order","","Describes properties of a DoubleClick Planning order.",null,null],[12,"terms_and_conditions","","Terms and conditions of this order.",177,null],[12,"buyer_organization_name","","Name of the buyer organization.",177,null],[12,"advertiser_id","","Advertiser ID of this order.",177,null],[12,"site_id","","Site IDs this order is associated with.",177,null],[12,"buyer_invoice_id","","Buyer invoice ID associated with this order.",177,null],[12,"planning_term_id","","ID of the terms and conditions template used in this order.",177,null],[12,"id","","ID of this order. This is a read-only, auto-generated field.",177,null],[12,"account_id","","Account ID of this order.",177,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#order\".",177,null],[12,"subaccount_id","","Subaccount ID of this order.",177,null],[12,"name","","Name of this order.",177,null],[12,"contacts","","Contacts for this order.",177,null],[12,"last_modified_info","","Information about the most recent modification of this order.",177,null],[12,"notes","","Notes of this order.",177,null],[12,"seller_organization_name","","Name of the seller organization.",177,null],[12,"comments","","Comments in this order.",177,null],[12,"approver_user_profile_ids","","IDs for users that have to approve documents created for this order.",177,null],[12,"seller_order_id","","Seller order ID associated with this order.",177,null],[12,"project_id","","Project ID of this order.",177,null],[12,"site_names","","Free-form site names this order is associated with.",177,null],[3,"PopupWindowProperties","","Popup Window Properties.",null,null],[12,"show_status_bar","","Whether to display the browser status bar.",178,null],[12,"show_scroll_bar","","Whether to display the browser scroll bar.",178,null],[12,"show_address_bar","","Whether to display the browser address bar.",178,null],[12,"show_menu_bar","","Whether to display the browser menu bar.",178,null],[12,"title","","Title of popup window.",178,null],[12,"offset","","Upper-left corner coordinates of the popup window. Applicable if positionType is COORDINATES.",178,null],[12,"position_type","","Popup window position either centered or at specific coordinate.",178,null],[12,"show_tool_bar","","Whether to display the browser tool bar.",178,null],[12,"dimension","","Popup dimension for a creative. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA and all VPAID",178,null],[3,"AccountPermission","","AccountPermissions contains information about a particular account permission. Some features of DCM require an account permission to be present in the account.",null,null],[12,"permission_group_id","","Permission group of this account permission.",179,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountPermission\".",179,null],[12,"name","","Name of this account permission.",179,null],[12,"level","","Administrative level required to enable this account permission.",179,null],[12,"account_profiles","","Account profiles associated with this account permission.",179,null],[12,"id","","ID of this account permission.",179,null],[3,"Project","","Contains properties of a DoubleClick Planning project.",null,null],[12,"start_date","","Start date of the project.",180,null],[12,"target_cpm_nanos","","CPM that the advertiser is targeting.",180,null],[12,"end_date","","End date of the project.",180,null],[12,"client_billing_code","","Client billing code of this project.",180,null],[12,"overview","","Overview of this project.",180,null],[12,"target_clicks","","Number of clicks that the advertiser is targeting.",180,null],[12,"target_cpa_nanos","","CPA that the advertiser is targeting.",180,null],[12,"advertiser_id","","Advertiser ID of this project.",180,null],[12,"target_impressions","","Number of impressions that the advertiser is targeting.",180,null],[12,"subaccount_id","","Subaccount ID of this project.",180,null],[12,"audience_gender","","Audience gender of this project.",180,null],[12,"id","","ID of this project. This is a read-only, auto-generated field.",180,null],[12,"account_id","","Account ID of this project.",180,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#project\".",180,null],[12,"target_cpc_nanos","","CPC that the advertiser is targeting.",180,null],[12,"name","","Name of this project.",180,null],[12,"last_modified_info","","Information about the most recent modification of this project.",180,null],[12,"budget","","Budget of this project in the currency specified by the current account. The value stored in this field represents only the non-fractional amount. For example, for USD, the smallest value that can be represented by this field is 1 US dollar.",180,null],[12,"audience_age_group","","Audience age group of this project.",180,null],[12,"target_conversions","","Number of conversions that the advertiser is targeting.",180,null],[12,"client_name","","Name of the project client.",180,null],[3,"Ad","","Contains properties of a DCM ad.",null,null],[12,"click_through_url_suffix_properties","","Click-through URL suffix properties for this ad. Applies to the URL in the ad or (if overriding ad properties) the URL in the creative.",181,null],[12,"campaign_id","","Campaign ID of this ad. This is a required field on insertion.",181,null],[12,"advertiser_id","","Advertiser ID of this ad. This is a required field on insertion.",181,null],[12,"geo_targeting","","Geographical targeting information for this ad.Applicable when type is AD_SERVING_STANDARD_AD.",181,null],[12,"comments","","Comments for this ad.",181,null],[12,"delivery_schedule","","Delivery schedule information for this ad. Applicable when type is AD_SERVING_STANDARD_AD or AD_SERVING_TRACKING. This field along with subfields priority and impressionRatio are required on insertion when type is AD_SERVING_STANDARD_AD.",181,null],[12,"advertiser_id_dimension_value","","Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",181,null],[12,"event_tag_overrides","","Event tag overrides for this ad.",181,null],[12,"id","","ID of this ad. This is a read-only, auto-generated field.",181,null],[12,"remarketing_list_expression","","Applicable when type is AD_SERVING_STANDARD_AD. Remarketing list targeting expression for this ad.",181,null],[12,"size","","Size of this ad. Applicable when type is AD_SERVING_DEFAULT_AD.",181,null],[12,"archived","","Whether this ad is archived.",181,null],[12,"technology_targeting","","Technology platform targeting information for this ad. Applicable when type is AD_SERVING_STANDARD_AD.",181,null],[12,"creative_rotation","","Creative rotation for this ad. Applicable when type is AD_SERVING_DEFAULT_AD, AD_SERVING_STANDARD_AD, or AD_SERVING_TRACKING. When type is AD_SERVING_DEFAULT_AD, this field should have exactly one creativeAssignment.",181,null],[12,"click_through_url","","Click-through URL for this ad. This is a required field on insertion. Applicable when type is AD_SERVING_CLICK_TRACKER.",181,null],[12,"creative_group_assignments","","Creative group assignments for this ad. Applicable when type is AD_SERVING_CLICK_TRACKER. Only one assignment per creative group number is allowed for a maximum of two assignments.",181,null],[12,"id_dimension_value","","Dimension value for the ID of this ad. This is a read-only, auto-generated field.",181,null],[12,"account_id","","Account ID of this ad. This is a read-only field that can be left blank.",181,null],[12,"type_","","Type of ad. This is a required field on insertion. Note that default ads (AD_SERVING_DEFAULT_AD) cannot be created directly (see Creative resource).",181,null],[12,"ssl_required","","Whether this ad requires ssl. This is a read-only field that is auto-generated when the ad is inserted or updated.",181,null],[12,"audience_segment_id","","Audience segment ID that is being targeted for this ad. Applicable when type is AD_SERVING_STANDARD_AD.",181,null],[12,"key_value_targeting_expression","","Key-value targeting information for this ad. Applicable when type is AD_SERVING_STANDARD_AD.",181,null],[12,"campaign_id_dimension_value","","Dimension value for the ID of the campaign. This is a read-only, auto-generated field.",181,null],[12,"default_click_through_event_tag_properties","","Default click-through event tag properties for this ad.",181,null],[12,"create_info","","Information about the creation of this ad.This is a read-only field.",181,null],[12,"start_time","","Date and time that this ad should start serving. If creating an ad, this field must be a time in the future. This is a required field on insertion.",181,null],[12,"active","","Whether this ad is active.",181,null],[12,"compatibility","","Compatibility of this ad. Applicable when type is AD_SERVING_DEFAULT_AD. WEB and WEB_INTERSTITIAL refer to rendering either on desktop or on mobile devices for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering an in-stream video ads developed with the VAST standard.",181,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#ad\".",181,null],[12,"subaccount_id","","Subaccount ID of this ad. This is a read-only field that can be left blank.",181,null],[12,"name","","Name of this ad. This is a required field and must be less than 256 characters long.",181,null],[12,"day_part_targeting","","Time and day targeting information for this ad. Applicable when type is AD_SERVING_STANDARD_AD.",181,null],[12,"last_modified_info","","Information about the most recent modification of this ad. This is a read-only field.",181,null],[12,"ssl_compliant","","Whether this ad is ssl compliant. This is a read-only field that is auto-generated when the ad is inserted or updated.",181,null],[12,"end_time","","Date and time that this ad should stop serving. Must be later than the start time. This is a required field on insertion.",181,null],[12,"dynamic_click_tracker","","Whether this ad is a dynamic click tracker. Applicable when type is AD_SERVING_CLICK_TRACKER. This is a required field on insert, and is read-only after insert.",181,null],[12,"placement_assignments","","Placement assignments for this ad.",181,null],[3,"PricingSchedulePricingPeriod","","Pricing Period",null,null],[12,"units","","Units of this pricing period.",182,null],[12,"start_date","","Pricing period start date. This date must be later than, or the same day as, the placement start date. The hours, minutes, and seconds of the start date should not be set, as doing so will result in an error.",182,null],[12,"rate_or_cost_nanos","","Rate or cost of this pricing period.",182,null],[12,"end_date","","Pricing period end date. This date must be later than, or the same day as, the pricing period start date, but not later than the placement end date. The period end date can be the same date as the period start date. If, for example, you set 6/25/2015 as both the start and end dates, the effective pricing period date is just that day only, 6/25/2015. The hours, minutes, and seconds of the end date should not be set, as doing so will result in an error.",182,null],[12,"pricing_comment","","Comments for this pricing period.",182,null],[3,"EventTag","","Contains properties of an event tag.",null,null],[12,"status","","Status of this event tag. Must be ENABLED for this event tag to fire. This is a required field.",183,null],[12,"site_ids","","Filter list of site IDs associated with this event tag. The siteFilterType determines whether this is a whitelist or blacklist filter.",183,null],[12,"campaign_id","","Campaign ID of this event tag. This field or the advertiserId field is required on insertion.",183,null],[12,"campaign_id_dimension_value","","Dimension value for the ID of the campaign. This is a read-only, auto-generated field.",183,null],[12,"enabled_by_default","","Whether this event tag should be automatically enabled for all of the advertiser's campaigns and ads.",183,null],[12,"advertiser_id","","Advertiser ID of this event tag. This field or the campaignId field is required on insertion.",183,null],[12,"site_filter_type","","Site filter type for this event tag. If no type is specified then the event tag will be applied to all sites.",183,null],[12,"type_","","Event tag type. Can be used to specify whether to use a third-party pixel, a third-party JavaScript URL, or a third-party click-through URL for either impression or click tracking. This is a required field.",183,null],[12,"advertiser_id_dimension_value","","Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",183,null],[12,"id","","ID of this event tag. This is a read-only, auto-generated field.",183,null],[12,"account_id","","Account ID of this event tag. This is a read-only field that can be left blank.",183,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#eventTag\".",183,null],[12,"subaccount_id","","Subaccount ID of this event tag. This is a read-only field that can be left blank.",183,null],[12,"name","","Name of this event tag. This is a required field and must be less than 256 characters long.",183,null],[12,"url","","Payload URL for this event tag. The URL on a click-through event tag should have a landing page URL appended to the end of it. This field is required on insertion.",183,null],[12,"ssl_compliant","","Whether this tag is SSL-compliant or not.",183,null],[12,"url_escape_levels","","Number of times the landing page URL should be URL-escaped before being appended to the click-through event tag URL. Only applies to click-through event tags as specified by the event tag type.",183,null],[3,"PlacementAssignment","","Placement Assignment.",null,null],[12,"active","","Whether this placement assignment is active. When true, the placement will be included in the ad's rotation.",184,null],[12,"placement_id_dimension_value","","Dimension value for the ID of the placement. This is a read-only, auto-generated field.",184,null],[12,"placement_id","","ID of the placement to be assigned. This is a required field.",184,null],[12,"ssl_required","","Whether the placement to be assigned requires SSL. This is a read-only field that is auto-generated when the ad is inserted or updated.",184,null],[3,"ReachReportCompatibleFields","","Represents fields that are compatible to be selected for a report of type \"REACH\".",null,null],[12,"metrics","","Metrics which are compatible to be selected in the \"metricNames\" section of the report.",185,null],[12,"kind","","The kind of resource this is, in this case dfareporting#reachReportCompatibleFields.",185,null],[12,"dimensions","","Dimensions which are compatible to be selected in the \"dimensions\" section of the report.",185,null],[12,"reach_by_frequency_metrics","","Metrics which are compatible to be selected in the \"reachByFrequencyMetricNames\" section of the report.",185,null],[12,"dimension_filters","","Dimensions which are compatible to be selected in the \"dimensionFilters\" section of the report.",185,null],[12,"pivoted_activity_metrics","","Metrics which are compatible to be selected as activity metrics to pivot on in the \"activities\" section of the report.",185,null],[3,"Site","","Contains properties of a site.",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#site\".",186,null],[12,"subaccount_id","","Subaccount ID of this site. This is a read-only field that can be left blank.",186,null],[12,"name","","Name of this site.This is a required field. Must be less than 128 characters long. If this site is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this site is a top-level site, and the name must be unique among top-level sites of the same account.",186,null],[12,"directory_site_id_dimension_value","","Dimension value for the ID of the directory site. This is a read-only, auto-generated field.",186,null],[12,"site_settings","","Site-wide settings.",186,null],[12,"id","","ID of this site. This is a read-only, auto-generated field.",186,null],[12,"directory_site_id","","Directory site associated with this site. This is a required field that is read-only after insertion.",186,null],[12,"site_contacts","","Site contacts.",186,null],[12,"key_name","","Key name of this site. This is a read-only, auto-generated field.",186,null],[12,"id_dimension_value","","Dimension value for the ID of this site. This is a read-only, auto-generated field.",186,null],[12,"approved","","Whether this site is approved.",186,null],[12,"account_id","","Account ID of this site. This is a read-only field that can be left blank.",186,null],[3,"DfpSettings","","DFP Settings",null,null],[12,"dfp_network_name","","DFP network name for this directory site.",187,null],[12,"dfp_network_code","","DFP network code for this directory site.",187,null],[12,"publisher_portal_only","","Whether this directory site is available only via DoubleClick Publisher Portal.",187,null],[12,"programmatic_placement_accepted","","Whether this directory site accepts programmatic placements.",187,null],[12,"pub_paid_placement_accepted","","Whether this directory site accepts publisher-paid tags.",187,null],[3,"ConnectionTypesListResponse","","Connection Type List Response",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#connectionTypesListResponse\".",188,null],[12,"connection_types","","Collection of connection types such as broadband and mobile.",188,null],[3,"FloodlightConfiguration","","Contains properties of a Floodlight configuration.",null,null],[12,"user_defined_variable_configurations","","List of user defined variables enabled for this configuration.",189,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightConfiguration\".",189,null],[12,"advertiser_id","","Advertiser ID of the parent advertiser of this floodlight configuration.",189,null],[12,"tag_settings","","Configuration settings for dynamic and image floodlight tags.",189,null],[12,"advertiser_id_dimension_value","","Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",189,null],[12,"id","","ID of this floodlight configuration. This is a read-only, auto-generated field.",189,null],[12,"account_id","","Account ID of this floodlight configuration. This is a read-only field that can be left blank.",189,null],[12,"natural_search_conversion_attribution_option","","Types of attribution options for natural search conversions.",189,null],[12,"omniture_settings","","Settings for DCM Omniture integration.",189,null],[12,"exposure_to_conversion_enabled","","Whether the exposure-to-conversion report is enabled. This report shows detailed pathway information on up to 10 of the most recent ad exposures seen by a user before converting.",189,null],[12,"lookback_configuration","","Lookback window settings for this floodlight configuration.",189,null],[12,"first_day_of_week","","Day that will be counted as the first day of the week in reports. This is a required field.",189,null],[12,"standard_variable_types","","List of standard variables enabled for this configuration.",189,null],[12,"subaccount_id","","Subaccount ID of this floodlight configuration. This is a read-only field that can be left blank.",189,null],[12,"analytics_data_sharing_enabled","","Whether advertiser data is shared with Google Analytics.",189,null],[12,"id_dimension_value","","Dimension value for the ID of this floodlight configuration. This is a read-only, auto-generated field.",189,null],[12,"ssl_required","","Whether floodlight activities owned by this configuration are required to be SSL-compliant.",189,null],[3,"DateRange","","Represents a date range.",null,null],[12,"start_date","","The start date of the date range, inclusive. A string of the format: \"yyyy-MM-dd\".",190,null],[12,"kind","","The kind of resource this is, in this case dfareporting#dateRange.",190,null],[12,"end_date","","The end date of the date range, inclusive. A string of the format: \"yyyy-MM-dd\".",190,null],[12,"relative_date_range","","The date range relative to the date of when the report is run.",190,null],[3,"AccountPermissionGroupsListResponse","","Account Permission Group List Response",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountPermissionGroupsListResponse\".",191,null],[12,"account_permission_groups","","Account permission group collection.",191,null],[3,"SizesListResponse","","Size List Response",null,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#sizesListResponse\".",192,null],[12,"sizes","","Size collection.",192,null],[3,"UserRolesListResponse","","User Role List Response",null,null],[12,"next_page_token","","Pagination token to be used for the next list operation.",193,null],[12,"kind","","Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRolesListResponse\".",193,null],[12,"user_roles","","User role collection.",193,null],[3,"UserRolePermissionGroupMethods","","A builder providing access to all methods supported on *userRolePermissionGroup* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"PlatformTypeMethods","","A builder providing access to all methods supported on *platformType* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"CreativeFieldValueMethods","","A builder providing access to all methods supported on *creativeFieldValue* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"CreativeFieldMethods","","A builder providing access to all methods supported on *creativeField* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"UserRoleMethods","","A builder providing access to all methods supported on *userRole* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"OperatingSystemVersionMethods","","A builder providing access to all methods supported on *operatingSystemVersion* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"LandingPageMethods","","A builder providing access to all methods supported on *landingPage* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"CreativeAssetMethods","","A builder providing access to all methods supported on *creativeAsset* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"CampaignCreativeAssociationMethods","","A builder providing access to all methods supported on *campaignCreativeAssociation* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"ChangeLogMethods","","A builder providing access to all methods supported on *changeLog* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"RemarketingListShareMethods","","A builder providing access to all methods supported on *remarketingListShare* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"ReportMethods","","A builder providing access to all methods supported on *report* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"AdvertiserMethods","","A builder providing access to all methods supported on *advertiser* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"DimensionValueMethods","","A builder providing access to all methods supported on *dimensionValue* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"FloodlightActivityGroupMethods","","A builder providing access to all methods supported on *floodlightActivityGroup* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"MetroMethods","","A builder providing access to all methods supported on *metro* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"OrderMethods","","A builder providing access to all methods supported on *order* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"DirectorySiteContactMethods","","A builder providing access to all methods supported on *directorySiteContact* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"UserProfileMethods","","A builder providing access to all methods supported on *userProfile* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"AdMethods","","A builder providing access to all methods supported on *ad* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"AccountPermissionMethods","","A builder providing access to all methods supported on *accountPermission* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"ConnectionTypeMethods","","A builder providing access to all methods supported on *connectionType* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"AdvertiserGroupMethods","","A builder providing access to all methods supported on *advertiserGroup* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"SiteMethods","","A builder providing access to all methods supported on *site* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"FloodlightActivityMethods","","A builder providing access to all methods supported on *floodlightActivity* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"RegionMethods","","A builder providing access to all methods supported on *region* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"CreativeGroupMethods","","A builder providing access to all methods supported on *creativeGroup* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"TargetableRemarketingListMethods","","A builder providing access to all methods supported on *targetableRemarketingList* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"SubaccountMethods","","A builder providing access to all methods supported on *subaccount* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"MobileCarrierMethods","","A builder providing access to all methods supported on *mobileCarrier* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"FloodlightConfigurationMethods","","A builder providing access to all methods supported on *floodlightConfiguration* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"OperatingSystemMethods","","A builder providing access to all methods supported on *operatingSystem* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"FileMethods","","A builder providing access to all methods supported on *file* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"PlacementGroupMethods","","A builder providing access to all methods supported on *placementGroup* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"InventoryItemMethods","","A builder providing access to all methods supported on *inventoryItem* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"UserRolePermissionMethods","","A builder providing access to all methods supported on *userRolePermission* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"AccountPermissionGroupMethods","","A builder providing access to all methods supported on *accountPermissionGroup* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"ContentCategoryMethods","","A builder providing access to all methods supported on *contentCategory* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"CreativeMethods","","A builder providing access to all methods supported on *creative* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"CampaignMethods","","A builder providing access to all methods supported on *campaign* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"EventTagMethods","","A builder providing access to all methods supported on *eventTag* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"RemarketingListMethods","","A builder providing access to all methods supported on *remarketingList* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"CityMethods","","A builder providing access to all methods supported on *city* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"PlacementStrategyMethods","","A builder providing access to all methods supported on *placementStrategy* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"ProjectMethods","","A builder providing access to all methods supported on *project* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"DirectorySiteMethods","","A builder providing access to all methods supported on *directorySite* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"SizeMethods","","A builder providing access to all methods supported on *size* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"AccountActiveAdSummaryMethods","","A builder providing access to all methods supported on *accountActiveAdSummary* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"AccountUserProfileMethods","","A builder providing access to all methods supported on *accountUserProfile* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"CountryMethods","","A builder providing access to all methods supported on *country* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"OrderDocumentMethods","","A builder providing access to all methods supported on *orderDocument* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"PostalCodeMethods","","A builder providing access to all methods supported on *postalCode* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"BrowserMethods","","A builder providing access to all methods supported on *browser* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"AccountMethods","","A builder providing access to all methods supported on *account* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"PlacementMethods","","A builder providing access to all methods supported on *placement* resources.\nIt is not used directly, but through the `Dfareporting` hub.",null,null],[3,"UserRolePermissionGroupGetCall","","Gets one user role permission group by ID.",null,null],[3,"UserRolePermissionGroupListCall","","Gets a list of all supported user role permission groups.",null,null],[3,"PlatformTypeGetCall","","Gets one platform type by ID.",null,null],[3,"PlatformTypeListCall","","Retrieves a list of platform types.",null,null],[3,"CreativeFieldValuePatchCall","","Updates an existing creative field value. This method supports patch semantics.",null,null],[3,"CreativeFieldValueGetCall","","Gets one creative field value by ID.",null,null],[3,"CreativeFieldValueDeleteCall","","Deletes an existing creative field value.",null,null],[3,"CreativeFieldValueInsertCall","","Inserts a new creative field value.",null,null],[3,"CreativeFieldValueUpdateCall","","Updates an existing creative field value.",null,null],[3,"CreativeFieldValueListCall","","Retrieves a list of creative field values, possibly filtered.",null,null],[3,"CreativeFieldUpdateCall","","Updates an existing creative field.",null,null],[3,"CreativeFieldListCall","","Retrieves a list of creative fields, possibly filtered.",null,null],[3,"CreativeFieldDeleteCall","","Deletes an existing creative field.",null,null],[3,"CreativeFieldGetCall","","Gets one creative field by ID.",null,null],[3,"CreativeFieldInsertCall","","Inserts a new creative field.",null,null],[3,"CreativeFieldPatchCall","","Updates an existing creative field. This method supports patch semantics.",null,null],[3,"UserRoleInsertCall","","Inserts a new user role.",null,null],[3,"UserRoleGetCall","","Gets one user role by ID.",null,null],[3,"UserRoleUpdateCall","","Updates an existing user role.",null,null],[3,"UserRoleDeleteCall","","Deletes an existing user role.",null,null],[3,"UserRolePatchCall","","Updates an existing user role. This method supports patch semantics.",null,null],[3,"UserRoleListCall","","Retrieves a list of user roles, possibly filtered.",null,null],[3,"OperatingSystemVersionGetCall","","Gets one operating system version by ID.",null,null],[3,"OperatingSystemVersionListCall","","Retrieves a list of operating system versions.",null,null],[3,"LandingPageGetCall","","Gets one campaign landing page by ID.",null,null],[3,"LandingPageUpdateCall","","Updates an existing campaign landing page.",null,null],[3,"LandingPageListCall","","Retrieves the list of landing pages for the specified campaign.",null,null],[3,"LandingPageInsertCall","","Inserts a new landing page for the specified campaign.",null,null],[3,"LandingPagePatchCall","","Updates an existing campaign landing page. This method supports patch semantics.",null,null],[3,"LandingPageDeleteCall","","Deletes an existing campaign landing page.",null,null],[3,"CreativeAssetInsertCall","","Inserts a new creative asset.",null,null],[3,"CampaignCreativeAssociationInsertCall","","Associates a creative with the specified campaign. This method creates a default ad with dimensions matching the creative in the campaign if such a default ad does not exist already.",null,null],[3,"CampaignCreativeAssociationListCall","","Retrieves the list of creative IDs associated with the specified campaign.",null,null],[3,"ChangeLogListCall","","Retrieves a list of change logs.",null,null],[3,"ChangeLogGetCall","","Gets one change log by ID.",null,null],[3,"RemarketingListShareGetCall","","Gets one remarketing list share by remarketing list ID.",null,null],[3,"RemarketingListSharePatchCall","","Updates an existing remarketing list share. This method supports patch semantics.",null,null],[3,"RemarketingListShareUpdateCall","","Updates an existing remarketing list share.",null,null],[3,"ReportRunCall","","Runs a report.",null,null],[3,"ReportPatchCall","","Updates a report. This method supports patch semantics.",null,null],[3,"ReportFileListCall","","Lists files for a report.",null,null],[3,"ReportInsertCall","","Creates a report.",null,null],[3,"ReportUpdateCall","","Updates a report.",null,null],[3,"ReportCompatibleFieldQueryCall","","Returns the fields that are compatible to be selected in the respective sections of a report criteria, given the fields already selected in the input report and user permissions.",null,null],[3,"ReportGetCall","","Retrieves a report by its ID.",null,null],[3,"ReportFileGetCall","","Retrieves a report file.",null,null],[3,"ReportDeleteCall","","Deletes a report by its ID.",null,null],[3,"ReportListCall","","Retrieves list of reports.",null,null],[3,"AdvertiserInsertCall","","Inserts a new advertiser.",null,null],[3,"AdvertiserPatchCall","","Updates an existing advertiser. This method supports patch semantics.",null,null],[3,"AdvertiserListCall","","Retrieves a list of advertisers, possibly filtered.",null,null],[3,"AdvertiserUpdateCall","","Updates an existing advertiser.",null,null],[3,"AdvertiserGetCall","","Gets one advertiser by ID.",null,null],[3,"DimensionValueQueryCall","","Retrieves list of report dimension values for a list of filters.",null,null],[3,"FloodlightActivityGroupDeleteCall","","Deletes an existing floodlight activity group.",null,null],[3,"FloodlightActivityGroupGetCall","","Gets one floodlight activity group by ID.",null,null],[3,"FloodlightActivityGroupPatchCall","","Updates an existing floodlight activity group. This method supports patch semantics.",null,null],[3,"FloodlightActivityGroupListCall","","Retrieves a list of floodlight activity groups, possibly filtered.",null,null],[3,"FloodlightActivityGroupInsertCall","","Inserts a new floodlight activity group.",null,null],[3,"FloodlightActivityGroupUpdateCall","","Updates an existing floodlight activity group.",null,null],[3,"MetroListCall","","Retrieves a list of metros.",null,null],[3,"OrderListCall","","Retrieves a list of orders, possibly filtered.",null,null],[3,"OrderGetCall","","Gets one order by ID.",null,null],[3,"DirectorySiteContactGetCall","","Gets one directory site contact by ID.",null,null],[3,"DirectorySiteContactListCall","","Retrieves a list of directory site contacts, possibly filtered.",null,null],[3,"UserProfileListCall","","Retrieves list of user profiles for a user.",null,null],[3,"UserProfileGetCall","","Gets one user profile by ID.",null,null],[3,"AdPatchCall","","Updates an existing ad. This method supports patch semantics.",null,null],[3,"AdInsertCall","","Inserts a new ad.",null,null],[3,"AdListCall","","Retrieves a list of ads, possibly filtered.",null,null],[3,"AdGetCall","","Gets one ad by ID.",null,null],[3,"AdUpdateCall","","Updates an existing ad.",null,null],[3,"AccountPermissionGetCall","","Gets one account permission by ID.",null,null],[3,"AccountPermissionListCall","","Retrieves the list of account permissions.",null,null],[3,"ConnectionTypeListCall","","Retrieves a list of connection types.",null,null],[3,"ConnectionTypeGetCall","","Gets one connection type by ID.",null,null],[3,"AdvertiserGroupGetCall","","Gets one advertiser group by ID.",null,null],[3,"AdvertiserGroupListCall","","Retrieves a list of advertiser groups, possibly filtered.",null,null],[3,"AdvertiserGroupInsertCall","","Inserts a new advertiser group.",null,null],[3,"AdvertiserGroupUpdateCall","","Updates an existing advertiser group.",null,null],[3,"AdvertiserGroupPatchCall","","Updates an existing advertiser group. This method supports patch semantics.",null,null],[3,"AdvertiserGroupDeleteCall","","Deletes an existing advertiser group.",null,null],[3,"SiteInsertCall","","Inserts a new site.",null,null],[3,"SiteGetCall","","Gets one site by ID.",null,null],[3,"SiteListCall","","Retrieves a list of sites, possibly filtered.",null,null],[3,"SiteUpdateCall","","Updates an existing site.",null,null],[3,"SitePatchCall","","Updates an existing site. This method supports patch semantics.",null,null],[3,"FloodlightActivityGetCall","","Gets one floodlight activity by ID.",null,null],[3,"FloodlightActivityListCall","","Retrieves a list of floodlight activities, possibly filtered.",null,null],[3,"FloodlightActivityInsertCall","","Inserts a new floodlight activity.",null,null],[3,"FloodlightActivityDeleteCall","","Deletes an existing floodlight activity.",null,null],[3,"FloodlightActivityPatchCall","","Updates an existing floodlight activity. This method supports patch semantics.",null,null],[3,"FloodlightActivityGeneratetagCall","","Generates a tag for a floodlight activity.",null,null],[3,"FloodlightActivityUpdateCall","","Updates an existing floodlight activity.",null,null],[3,"RegionListCall","","Retrieves a list of regions.",null,null],[3,"CreativeGroupInsertCall","","Inserts a new creative group.",null,null],[3,"CreativeGroupGetCall","","Gets one creative group by ID.",null,null],[3,"CreativeGroupUpdateCall","","Updates an existing creative group.",null,null],[3,"CreativeGroupListCall","","Retrieves a list of creative groups, possibly filtered.",null,null],[3,"CreativeGroupPatchCall","","Updates an existing creative group. This method supports patch semantics.",null,null],[3,"TargetableRemarketingListListCall","","Retrieves a list of targetable remarketing lists, possibly filtered.",null,null],[3,"TargetableRemarketingListGetCall","","Gets one remarketing list by ID.",null,null],[3,"SubaccountPatchCall","","Updates an existing subaccount. This method supports patch semantics.",null,null],[3,"SubaccountInsertCall","","Inserts a new subaccount.",null,null],[3,"SubaccountListCall","","Gets a list of subaccounts, possibly filtered.",null,null],[3,"SubaccountUpdateCall","","Updates an existing subaccount.",null,null],[3,"SubaccountGetCall","","Gets one subaccount by ID.",null,null],[3,"MobileCarrierGetCall","","Gets one mobile carrier by ID.",null,null],[3,"MobileCarrierListCall","","Retrieves a list of mobile carriers.",null,null],[3,"FloodlightConfigurationGetCall","","Gets one floodlight configuration by ID.",null,null],[3,"FloodlightConfigurationUpdateCall","","Updates an existing floodlight configuration.",null,null],[3,"FloodlightConfigurationPatchCall","","Updates an existing floodlight configuration. This method supports patch semantics.",null,null],[3,"FloodlightConfigurationListCall","","Retrieves a list of floodlight configurations, possibly filtered.",null,null],[3,"OperatingSystemListCall","","Retrieves a list of operating systems.",null,null],[3,"OperatingSystemGetCall","","Gets one operating system by DART ID.",null,null],[3,"FileListCall","","Lists files for a user profile.",null,null],[3,"FileGetCall","","Retrieves a report file by its report ID and file ID.",null,null],[3,"PlacementGroupListCall","","Retrieves a list of placement groups, possibly filtered.",null,null],[3,"PlacementGroupUpdateCall","","Updates an existing placement group.",null,null],[3,"PlacementGroupInsertCall","","Inserts a new placement group.",null,null],[3,"PlacementGroupGetCall","","Gets one placement group by ID.",null,null],[3,"PlacementGroupPatchCall","","Updates an existing placement group. This method supports patch semantics.",null,null],[3,"InventoryItemListCall","","Retrieves a list of inventory items, possibly filtered.",null,null],[3,"InventoryItemGetCall","","Gets one inventory item by ID.",null,null],[3,"UserRolePermissionGetCall","","Gets one user role permission by ID.",null,null],[3,"UserRolePermissionListCall","","Gets a list of user role permissions, possibly filtered.",null,null],[3,"AccountPermissionGroupListCall","","Retrieves the list of account permission groups.",null,null],[3,"AccountPermissionGroupGetCall","","Gets one account permission group by ID.",null,null],[3,"ContentCategoryListCall","","Retrieves a list of content categories, possibly filtered.",null,null],[3,"ContentCategoryUpdateCall","","Updates an existing content category.",null,null],[3,"ContentCategoryInsertCall","","Inserts a new content category.",null,null],[3,"ContentCategoryDeleteCall","","Deletes an existing content category.",null,null],[3,"ContentCategoryGetCall","","Gets one content category by ID.",null,null],[3,"ContentCategoryPatchCall","","Updates an existing content category. This method supports patch semantics.",null,null],[3,"CreativeUpdateCall","","Updates an existing creative.",null,null],[3,"CreativeInsertCall","","Inserts a new creative.",null,null],[3,"CreativeGetCall","","Gets one creative by ID.",null,null],[3,"CreativeListCall","","Retrieves a list of creatives, possibly filtered.",null,null],[3,"CreativePatchCall","","Updates an existing creative. This method supports patch semantics.",null,null],[3,"CampaignGetCall","","Gets one campaign by ID.",null,null],[3,"CampaignInsertCall","","Inserts a new campaign.",null,null],[3,"CampaignPatchCall","","Updates an existing campaign. This method supports patch semantics.",null,null],[3,"CampaignUpdateCall","","Updates an existing campaign.",null,null],[3,"CampaignListCall","","Retrieves a list of campaigns, possibly filtered.",null,null],[3,"EventTagDeleteCall","","Deletes an existing event tag.",null,null],[3,"EventTagListCall","","Retrieves a list of event tags, possibly filtered.",null,null],[3,"EventTagInsertCall","","Inserts a new event tag.",null,null],[3,"EventTagPatchCall","","Updates an existing event tag. This method supports patch semantics.",null,null],[3,"EventTagUpdateCall","","Updates an existing event tag.",null,null],[3,"EventTagGetCall","","Gets one event tag by ID.",null,null],[3,"RemarketingListGetCall","","Gets one remarketing list by ID.",null,null],[3,"RemarketingListUpdateCall","","Updates an existing remarketing list.",null,null],[3,"RemarketingListListCall","","Retrieves a list of remarketing lists, possibly filtered.",null,null],[3,"RemarketingListPatchCall","","Updates an existing remarketing list. This method supports patch semantics.",null,null],[3,"RemarketingListInsertCall","","Inserts a new remarketing list.",null,null],[3,"CityListCall","","Retrieves a list of cities, possibly filtered.",null,null],[3,"PlacementStrategyUpdateCall","","Updates an existing placement strategy.",null,null],[3,"PlacementStrategyGetCall","","Gets one placement strategy by ID.",null,null],[3,"PlacementStrategyListCall","","Retrieves a list of placement strategies, possibly filtered.",null,null],[3,"PlacementStrategyDeleteCall","","Deletes an existing placement strategy.",null,null],[3,"PlacementStrategyInsertCall","","Inserts a new placement strategy.",null,null],[3,"PlacementStrategyPatchCall","","Updates an existing placement strategy. This method supports patch semantics.",null,null],[3,"ProjectListCall","","Retrieves a list of projects, possibly filtered.",null,null],[3,"ProjectGetCall","","Gets one project by ID.",null,null],[3,"DirectorySiteInsertCall","","Inserts a new directory site.",null,null],[3,"DirectorySiteListCall","","Retrieves a list of directory sites, possibly filtered.",null,null],[3,"DirectorySiteGetCall","","Gets one directory site by ID.",null,null],[3,"SizeInsertCall","","Inserts a new size.",null,null],[3,"SizeListCall","","Retrieves a list of sizes, possibly filtered.",null,null],[3,"SizeGetCall","","Gets one size by ID.",null,null],[3,"AccountActiveAdSummaryGetCall","","Gets the account's active ad summary by account ID.",null,null],[3,"AccountUserProfileUpdateCall","","Updates an existing account user profile.",null,null],[3,"AccountUserProfileListCall","","Retrieves a list of account user profiles, possibly filtered.",null,null],[3,"AccountUserProfileInsertCall","","Inserts a new account user profile.",null,null],[3,"AccountUserProfilePatchCall","","Updates an existing account user profile. This method supports patch semantics.",null,null],[3,"AccountUserProfileGetCall","","Gets one account user profile by ID.",null,null],[3,"CountryListCall","","Retrieves a list of countries.",null,null],[3,"CountryGetCall","","Gets one country by ID.",null,null],[3,"OrderDocumentGetCall","","Gets one order document by ID.",null,null],[3,"OrderDocumentListCall","","Retrieves a list of order documents, possibly filtered.",null,null],[3,"PostalCodeGetCall","","Gets one postal code by ID.",null,null],[3,"PostalCodeListCall","","Retrieves a list of postal codes.",null,null],[3,"BrowserListCall","","Retrieves a list of browsers.",null,null],[3,"AccountGetCall","","Gets one account by ID.",null,null],[3,"AccountListCall","","Retrieves the list of accounts, possibly filtered.",null,null],[3,"AccountUpdateCall","","Updates an existing account.",null,null],[3,"AccountPatchCall","","Updates an existing account. This method supports patch semantics.",null,null],[3,"PlacementPatchCall","","Updates an existing placement. This method supports patch semantics.",null,null],[3,"PlacementListCall","","Retrieves a list of placements, possibly filtered.",null,null],[3,"PlacementInsertCall","","Inserts a new placement.",null,null],[3,"PlacementUpdateCall","","Updates an existing placement.",null,null],[3,"PlacementGeneratetagCall","","Generates tags for a placement.",null,null],[3,"PlacementGetCall","","Gets one placement by ID.",null,null],[4,"Error","","",null,null],[13,"HttpError","","The http connection failed",194,null],[13,"UploadSizeLimitExceeded","","An attempt was made to upload a resource with size stored in field `.0`\neven though the maximum upload size is what is stored in field `.1`.",194,null],[13,"BadRequest","","Represents information about a request that was not understood by the server.\nDetails are included.",194,null],[13,"MissingAPIKey","","We needed an API key for authentication, but didn't obtain one.\nNeither through the authenticator, nor through the Delegate.",194,null],[13,"MissingToken","","We required a Token, but didn't get one from the Authenticator",194,null],[13,"Cancelled","","The delgate instructed to cancel the operation",194,null],[13,"FieldClash","","An additional, free form field clashed with one of the built-in optional ones",194,null],[13,"JsonDecodeError","","Shows that we failed to decode the server response.\nThis can happen if the protocol changes in conjunction with strict json decoding.",194,null],[13,"Failure","","Indicates an HTTP repsonse with a non-success status code",194,null],[4,"Scope","","Identifies the an OAuth2 authorization scope.\nA scope is needed when requesting an\n[authorization token](https://developers.google.com/youtube/v3/guides/authentication).",null,null],[13,"Dfatrafficking","","View and manage your DoubleClick Campaign Manager's (DCM) display ad campaigns",195,null],[13,"Full","","View and manage DoubleClick for Advertisers reports",195,null],[11,"fmt","","",196,{"inputs":[{"name":"errorresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",196,{"inputs":[{"name":"errorresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"deserialize","","",196,{"inputs":[{"name":"errorresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",197,{"inputs":[{"name":"defaultdelegate"}],"output":{"name":"defaultdelegate"}}],[11,"fmt","","",194,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",194,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",194,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",194,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"default","","",198,{"inputs":[{"name":"multipartreader"}],"output":{"name":"multipartreader"}}],[11,"reserve_exact","","Reserve memory for exactly the given amount of parts",198,{"inputs":[{"name":"multipartreader"},{"name":"usize"}],"output":null}],[11,"add_part","","Add a new part to the queue of parts to be read on the first `read` call.",198,{"inputs":[{"name":"multipartreader"},{"name":"read"},{"name":"u64"},{"name":"mime"}],"output":{"name":"multipartreader"}}],[11,"mime_type","","Returns the mime-type representing our multi-part message.\nUse it with the ContentType header.",198,{"inputs":[{"name":"multipartreader"}],"output":{"name":"mime"}}],[11,"read","","",198,null],[11,"fmt","mime","",199,{"inputs":[{"name":"mime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",199,{"inputs":[{"name":"mime"},{"name":"mime"}],"output":{"name":"bool"}}],[11,"ne","","",199,{"inputs":[{"name":"mime"},{"name":"mime"}],"output":{"name":"bool"}}],[11,"clone","","",199,{"inputs":[{"name":"mime"}],"output":{"name":"mime"}}],[11,"fmt","","",200,{"inputs":[{"name":"toplevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",200,{"inputs":[{"name":"toplevel"}],"output":{"name":"toplevel"}}],[11,"eq","","",200,{"inputs":[{"name":"toplevel"},{"name":"toplevel"}],"output":{"name":"bool"}}],[11,"fmt","","",200,{"inputs":[{"name":"toplevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",200,{"inputs":[{"name":"toplevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",201,{"inputs":[{"name":"sublevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",201,{"inputs":[{"name":"sublevel"}],"output":{"name":"sublevel"}}],[11,"eq","","",201,{"inputs":[{"name":"sublevel"},{"name":"sublevel"}],"output":{"name":"bool"}}],[11,"fmt","","",201,{"inputs":[{"name":"sublevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",201,{"inputs":[{"name":"sublevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",202,{"inputs":[{"name":"attr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",202,{"inputs":[{"name":"attr"}],"output":{"name":"attr"}}],[11,"eq","","",202,{"inputs":[{"name":"attr"},{"name":"attr"}],"output":{"name":"bool"}}],[11,"fmt","","",202,{"inputs":[{"name":"attr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",202,{"inputs":[{"name":"attr"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",203,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",203,{"inputs":[{"name":"value"}],"output":{"name":"value"}}],[11,"eq","","",203,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"fmt","","",203,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",203,{"inputs":[{"name":"value"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",199,{"inputs":[{"name":"mime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",199,{"inputs":[{"name":"mime"},{"name":"str"}],"output":{"name":"result"}}],[6,"Result","google_dfareporting2d1","A universal result type used as return for all calls.",null,null],[8,"ToParts","","A trait for all types that can convert themselves into a *parts* string",null,null],[10,"to_parts","","",204,{"inputs":[{"name":"toparts"}],"output":{"name":"string"}}],[8,"CallBuilder","","Identifies types which represent builders for a particular resource method",null,null],[8,"Hub","","Identifies the Hub. There is only one per library, this trait is supposed\nto make intended use more explicit.\nThe hub allows to access all resource methods more easily.",null,null],[8,"ReadSeek","","A utility to specify reader types which provide seeking capabilities too",null,null],[8,"Part","","Identifies types which are only used as part of other types, which\nusually are carrying the `Resource` trait.",null,null],[8,"ResponseResult","","Identifies types which are used in API responses.",null,null],[8,"RequestValue","","Identifies types which are used in API requests.",null,null],[8,"NestedType","","Identifies types which are only used by other types internally.\nThey have no special meaning, this trait just marks them for completeness.",null,null],[8,"Delegate","","A trait specifying functionality to help controlling any request performed by the API.\nThe trait has a conservative default implementation.",null,null],[11,"begin","","Called at the beginning of any API request. The delegate should store the method\ninformation if he is interesting in knowing more context when further calls to it\nare made.\nThe matching `finished()` call will always be made, no matter whether or not the API\nrequest was successful. That way, the delegate may easily maintain a clean state \nbetween various API calls.",205,{"inputs":[{"name":"delegate"},{"name":"methodinfo"}],"output":null}],[11,"http_error","","Called whenever there is an [HttpError](http://hyperium.github.io/hyper/hyper/error/enum.HttpError.html), usually if there are network problems.",205,{"inputs":[{"name":"delegate"},{"name":"error"}],"output":{"name":"retry"}}],[11,"api_key","","Called whenever there is the need for your applications API key after\nthe official authenticator implementation didn't provide one, for some reason.\nIf this method returns None as well, the underlying operation will fail",205,{"inputs":[{"name":"delegate"}],"output":{"name":"option"}}],[11,"token","","Called whenever the Authenticator didn't yield a token. The delegate\nmay attempt to provide one, or just take it as a general information about the\nimpending failure.\nThe given Error provides information about why the token couldn't be acquired in the\nfirst place",205,{"inputs":[{"name":"delegate"},{"name":"error"}],"output":{"name":"option"}}],[11,"upload_url","","Called during resumable uploads to provide a URL for the impending upload.\nIt was saved after a previous call to `store_upload_url(...)`, and if not None,\nwill be used instead of asking the server for a new upload URL.\nThis is useful in case a previous resumable upload was aborted/canceled, but should now\nbe resumed.\nThe returned URL will be used exactly once - if it fails again and the delegate allows\nto retry, we will ask the server for a new upload URL.",205,{"inputs":[{"name":"delegate"}],"output":{"name":"option"}}],[11,"store_upload_url","","Called after we have retrieved a new upload URL for a resumable upload to store it\nin case we fail or cancel. That way, we can attempt to resume the upload later, \nsee `upload_url()`.\nIt will also be called with None after a successful upload, which allows the delegate\nto forget the URL. That way, we will not attempt to resume an upload that has already\nfinished.",205,{"inputs":[{"name":"delegate"},{"name":"option"}],"output":null}],[11,"response_json_decode_error","","Called whenever a server response could not be decoded from json.\nIt's for informational purposes only, the caller will return with an error\naccordingly.",205,{"inputs":[{"name":"delegate"},{"name":"str"},{"name":"error"}],"output":null}],[11,"http_failure","","Called whenever the http request returns with a non-success status code.\nThis can involve authentication issues, or anything else that very much \ndepends on the used API method.\nThe delegate should check the status, header and decoded json error to decide\nwhether to retry or not. In the latter case, the underlying call will fail.",205,{"inputs":[{"name":"delegate"},{"name":"response"},{"name":"option"},{"name":"option"}],"output":{"name":"retry"}}],[11,"pre_request","","Called prior to sending the main request of the given method. It can be used to time\nthe call or to print progress information.\nIt's also useful as you can be sure that a request will definitely be made.",205,{"inputs":[{"name":"delegate"}],"output":null}],[11,"chunk_size","","Return the size of each chunk of a resumable upload.\nMust be a power of two, with 1<<18 being the smallest allowed chunk size.\nWill be called once before starting any resumable upload.",205,{"inputs":[{"name":"delegate"}],"output":{"name":"u64"}}],[11,"cancel_chunk_upload","","Called before the given chunk is uploaded to the server.\nIf true is returned, the upload will be interrupted.\nHowever, it may be resumable if you stored the upload URL in a previous call\nto `store_upload_url()`",205,{"inputs":[{"name":"delegate"},{"name":"contentrange"}],"output":{"name":"bool"}}],[11,"finished","","Called before the API request method returns, in every case. It can be used to clean up\ninternal state between calls to the API.\nThis call always has a matching call to `begin(...)`.",205,{"inputs":[{"name":"delegate"},{"name":"bool"}],"output":null}],[8,"MethodsBuilder","","Identifies types for building methods of a particular resource type",null,null],[8,"Resource","","Identifies types which can be inserted and deleted.\nTypes with this trait are most commonly used by clients of this API.",null,null],[11,"hash","","",195,null],[11,"eq","","",195,{"inputs":[{"name":"scope"},{"name":"scope"}],"output":{"name":"bool"}}],[11,"ne","","",195,{"inputs":[{"name":"scope"},{"name":"scope"}],"output":{"name":"bool"}}],[11,"as_ref","","",195,{"inputs":[{"name":"scope"}],"output":{"name":"str"}}],[11,"default","","",195,{"inputs":[{"name":"scope"}],"output":{"name":"scope"}}],[11,"new","","",206,{"inputs":[{"name":"dfareporting"},{"name":"c"},{"name":"a"}],"output":{"name":"dfareporting"}}],[11,"account_active_ad_summaries","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"accountactiveadsummarymethods"}}],[11,"account_permission_groups","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"accountpermissiongroupmethods"}}],[11,"account_permissions","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"accountpermissionmethods"}}],[11,"account_user_profiles","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"accountuserprofilemethods"}}],[11,"accounts","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"accountmethods"}}],[11,"ads","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"admethods"}}],[11,"advertiser_groups","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"advertisergroupmethods"}}],[11,"advertisers","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"advertisermethods"}}],[11,"browsers","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"browsermethods"}}],[11,"campaign_creative_associations","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"campaigncreativeassociationmethods"}}],[11,"campaigns","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"campaignmethods"}}],[11,"change_logs","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"changelogmethods"}}],[11,"cities","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"citymethods"}}],[11,"connection_types","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"connectiontypemethods"}}],[11,"content_categories","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"contentcategorymethods"}}],[11,"countries","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"countrymethods"}}],[11,"creative_assets","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"creativeassetmethods"}}],[11,"creative_field_values","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"creativefieldvaluemethods"}}],[11,"creative_fields","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"creativefieldmethods"}}],[11,"creative_groups","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"creativegroupmethods"}}],[11,"creatives","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"creativemethods"}}],[11,"dimension_values","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"dimensionvaluemethods"}}],[11,"directory_site_contacts","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"directorysitecontactmethods"}}],[11,"directory_sites","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"directorysitemethods"}}],[11,"event_tags","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"eventtagmethods"}}],[11,"files","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"filemethods"}}],[11,"floodlight_activities","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"floodlightactivitymethods"}}],[11,"floodlight_activity_groups","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"floodlightactivitygroupmethods"}}],[11,"floodlight_configurations","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"floodlightconfigurationmethods"}}],[11,"inventory_items","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"inventoryitemmethods"}}],[11,"landing_pages","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"landingpagemethods"}}],[11,"metros","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"metromethods"}}],[11,"mobile_carriers","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"mobilecarriermethods"}}],[11,"operating_system_versions","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"operatingsystemversionmethods"}}],[11,"operating_systems","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"operatingsystemmethods"}}],[11,"order_documents","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"orderdocumentmethods"}}],[11,"orders","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"ordermethods"}}],[11,"placement_groups","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"placementgroupmethods"}}],[11,"placement_strategies","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"placementstrategymethods"}}],[11,"placements","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"placementmethods"}}],[11,"platform_types","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"platformtypemethods"}}],[11,"postal_codes","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"postalcodemethods"}}],[11,"projects","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"projectmethods"}}],[11,"regions","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"regionmethods"}}],[11,"remarketing_list_shares","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"remarketinglistsharemethods"}}],[11,"remarketing_lists","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"remarketinglistmethods"}}],[11,"reports","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"reportmethods"}}],[11,"sites","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"sitemethods"}}],[11,"sizes","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"sizemethods"}}],[11,"subaccounts","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"subaccountmethods"}}],[11,"targetable_remarketing_lists","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"targetableremarketinglistmethods"}}],[11,"user_profiles","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"userprofilemethods"}}],[11,"user_role_permission_groups","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"userrolepermissiongroupmethods"}}],[11,"user_role_permissions","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"userrolepermissionmethods"}}],[11,"user_roles","","",206,{"inputs":[{"name":"dfareporting"}],"output":{"name":"userrolemethods"}}],[11,"user_agent","","Set the user-agent header field to use in all requests to the server.\nIt defaults to `google-api-rust-client/0.1.7`.",206,{"inputs":[{"name":"dfareporting"},{"name":"string"}],"output":{"name":"string"}}],[11,"deserialize","","",1,{"inputs":[{"name":"operatingsystemslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",1,{"inputs":[{"name":"operatingsystemslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"operatingsystemslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"operatingsystemslistresponse"}],"output":{"name":"operatingsystemslistresponse"}}],[11,"default","","",1,{"inputs":[{"name":"operatingsystemslistresponse"}],"output":{"name":"operatingsystemslistresponse"}}],[11,"deserialize","","",2,{"inputs":[{"name":"directorysitesettings"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",2,{"inputs":[{"name":"directorysitesettings"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"directorysitesettings"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"directorysitesettings"}],"output":{"name":"directorysitesettings"}}],[11,"default","","",2,{"inputs":[{"name":"directorysitesettings"}],"output":{"name":"directorysitesettings"}}],[11,"deserialize","","",3,{"inputs":[{"name":"mobilecarrier"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",3,{"inputs":[{"name":"mobilecarrier"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"mobilecarrier"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"mobilecarrier"}],"output":{"name":"mobilecarrier"}}],[11,"default","","",3,{"inputs":[{"name":"mobilecarrier"}],"output":{"name":"mobilecarrier"}}],[11,"deserialize","","",4,{"inputs":[{"name":"subaccount"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",4,{"inputs":[{"name":"subaccount"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"subaccount"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"subaccount"}],"output":{"name":"subaccount"}}],[11,"default","","",4,{"inputs":[{"name":"subaccount"}],"output":{"name":"subaccount"}}],[11,"deserialize","","",5,{"inputs":[{"name":"accountpermissiongroup"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",5,{"inputs":[{"name":"accountpermissiongroup"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"accountpermissiongroup"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"accountpermissiongroup"}],"output":{"name":"accountpermissiongroup"}}],[11,"default","","",5,{"inputs":[{"name":"accountpermissiongroup"}],"output":{"name":"accountpermissiongroup"}}],[11,"deserialize","","",6,{"inputs":[{"name":"dimensionvaluelist"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",6,{"inputs":[{"name":"dimensionvaluelist"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"dimensionvaluelist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"dimensionvaluelist"}],"output":{"name":"dimensionvaluelist"}}],[11,"default","","",6,{"inputs":[{"name":"dimensionvaluelist"}],"output":{"name":"dimensionvaluelist"}}],[11,"deserialize","","",7,{"inputs":[{"name":"campaigncreativeassociationslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",7,{"inputs":[{"name":"campaigncreativeassociationslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"campaigncreativeassociationslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"campaigncreativeassociationslistresponse"}],"output":{"name":"campaigncreativeassociationslistresponse"}}],[11,"default","","",7,{"inputs":[{"name":"campaigncreativeassociationslistresponse"}],"output":{"name":"campaigncreativeassociationslistresponse"}}],[11,"deserialize","","",8,{"inputs":[{"name":"floodlightactivitieslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",8,{"inputs":[{"name":"floodlightactivitieslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"floodlightactivitieslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"floodlightactivitieslistresponse"}],"output":{"name":"floodlightactivitieslistresponse"}}],[11,"default","","",8,{"inputs":[{"name":"floodlightactivitieslistresponse"}],"output":{"name":"floodlightactivitieslistresponse"}}],[11,"deserialize","","",9,{"inputs":[{"name":"userrolepermissiongroupslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",9,{"inputs":[{"name":"userrolepermissiongroupslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"userrolepermissiongroupslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"userrolepermissiongroupslistresponse"}],"output":{"name":"userrolepermissiongroupslistresponse"}}],[11,"default","","",9,{"inputs":[{"name":"userrolepermissiongroupslistresponse"}],"output":{"name":"userrolepermissiongroupslistresponse"}}],[11,"deserialize","","",10,{"inputs":[{"name":"filelist"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",10,{"inputs":[{"name":"filelist"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"filelist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"filelist"}],"output":{"name":"filelist"}}],[11,"default","","",10,{"inputs":[{"name":"filelist"}],"output":{"name":"filelist"}}],[11,"deserialize","","",11,{"inputs":[{"name":"customrichmediaevents"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",11,{"inputs":[{"name":"customrichmediaevents"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"customrichmediaevents"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"customrichmediaevents"}],"output":{"name":"customrichmediaevents"}}],[11,"default","","",11,{"inputs":[{"name":"customrichmediaevents"}],"output":{"name":"customrichmediaevents"}}],[11,"deserialize","","",12,{"inputs":[{"name":"eventtagoverride"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",12,{"inputs":[{"name":"eventtagoverride"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"eventtagoverride"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"eventtagoverride"}],"output":{"name":"eventtagoverride"}}],[11,"default","","",12,{"inputs":[{"name":"eventtagoverride"}],"output":{"name":"eventtagoverride"}}],[11,"deserialize","","",13,{"inputs":[{"name":"accountactiveadsummary"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",13,{"inputs":[{"name":"accountactiveadsummary"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"accountactiveadsummary"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"accountactiveadsummary"}],"output":{"name":"accountactiveadsummary"}}],[11,"default","","",13,{"inputs":[{"name":"accountactiveadsummary"}],"output":{"name":"accountactiveadsummary"}}],[11,"deserialize","","",14,{"inputs":[{"name":"lookbackconfiguration"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",14,{"inputs":[{"name":"lookbackconfiguration"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"lookbackconfiguration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"lookbackconfiguration"}],"output":{"name":"lookbackconfiguration"}}],[11,"default","","",14,{"inputs":[{"name":"lookbackconfiguration"}],"output":{"name":"lookbackconfiguration"}}],[11,"deserialize","","",15,{"inputs":[{"name":"floodlightactivitiesgeneratetagresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",15,{"inputs":[{"name":"floodlightactivitiesgeneratetagresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"floodlightactivitiesgeneratetagresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"floodlightactivitiesgeneratetagresponse"}],"output":{"name":"floodlightactivitiesgeneratetagresponse"}}],[11,"default","","",15,{"inputs":[{"name":"floodlightactivitiesgeneratetagresponse"}],"output":{"name":"floodlightactivitiesgeneratetagresponse"}}],[11,"deserialize","","",16,{"inputs":[{"name":"listpopulationterm"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",16,{"inputs":[{"name":"listpopulationterm"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"listpopulationterm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"listpopulationterm"}],"output":{"name":"listpopulationterm"}}],[11,"default","","",16,{"inputs":[{"name":"listpopulationterm"}],"output":{"name":"listpopulationterm"}}],[11,"deserialize","","",17,{"inputs":[{"name":"sitesettings"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",17,{"inputs":[{"name":"sitesettings"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"sitesettings"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"sitesettings"}],"output":{"name":"sitesettings"}}],[11,"default","","",17,{"inputs":[{"name":"sitesettings"}],"output":{"name":"sitesettings"}}],[11,"deserialize","","",18,{"inputs":[{"name":"accountuserprofile"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",18,{"inputs":[{"name":"accountuserprofile"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",18,{"inputs":[{"name":"accountuserprofile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"accountuserprofile"}],"output":{"name":"accountuserprofile"}}],[11,"default","","",18,{"inputs":[{"name":"accountuserprofile"}],"output":{"name":"accountuserprofile"}}],[11,"deserialize","","",19,{"inputs":[{"name":"tagsettings"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",19,{"inputs":[{"name":"tagsettings"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"tagsettings"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"tagsettings"}],"output":{"name":"tagsettings"}}],[11,"default","","",19,{"inputs":[{"name":"tagsettings"}],"output":{"name":"tagsettings"}}],[11,"deserialize","","",20,{"inputs":[{"name":"targetableremarketinglist"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",20,{"inputs":[{"name":"targetableremarketinglist"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"targetableremarketinglist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"targetableremarketinglist"}],"output":{"name":"targetableremarketinglist"}}],[11,"default","","",20,{"inputs":[{"name":"targetableremarketinglist"}],"output":{"name":"targetableremarketinglist"}}],[11,"deserialize","","",21,{"inputs":[{"name":"operatingsystemversion"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",21,{"inputs":[{"name":"operatingsystemversion"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"operatingsystemversion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"operatingsystemversion"}],"output":{"name":"operatingsystemversion"}}],[11,"default","","",21,{"inputs":[{"name":"operatingsystemversion"}],"output":{"name":"operatingsystemversion"}}],[11,"deserialize","","",22,{"inputs":[{"name":"remarketinglistslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",22,{"inputs":[{"name":"remarketinglistslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"remarketinglistslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"remarketinglistslistresponse"}],"output":{"name":"remarketinglistslistresponse"}}],[11,"default","","",22,{"inputs":[{"name":"remarketinglistslistresponse"}],"output":{"name":"remarketinglistslistresponse"}}],[11,"deserialize","","",23,{"inputs":[{"name":"creativefieldassignment"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",23,{"inputs":[{"name":"creativefieldassignment"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"creativefieldassignment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"creativefieldassignment"}],"output":{"name":"creativefieldassignment"}}],[11,"default","","",23,{"inputs":[{"name":"creativefieldassignment"}],"output":{"name":"creativefieldassignment"}}],[11,"deserialize","","",24,{"inputs":[{"name":"listpopulationrule"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",24,{"inputs":[{"name":"listpopulationrule"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"listpopulationrule"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"listpopulationrule"}],"output":{"name":"listpopulationrule"}}],[11,"default","","",24,{"inputs":[{"name":"listpopulationrule"}],"output":{"name":"listpopulationrule"}}],[11,"deserialize","","",25,{"inputs":[{"name":"account"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",25,{"inputs":[{"name":"account"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"account"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"account"}],"output":{"name":"account"}}],[11,"default","","",25,{"inputs":[{"name":"account"}],"output":{"name":"account"}}],[11,"deserialize","","",26,{"inputs":[{"name":"dayparttargeting"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",26,{"inputs":[{"name":"dayparttargeting"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"dayparttargeting"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"dayparttargeting"}],"output":{"name":"dayparttargeting"}}],[11,"default","","",26,{"inputs":[{"name":"dayparttargeting"}],"output":{"name":"dayparttargeting"}}],[11,"deserialize","","",27,{"inputs":[{"name":"compatiblefields"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",27,{"inputs":[{"name":"compatiblefields"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"compatiblefields"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"compatiblefields"}],"output":{"name":"compatiblefields"}}],[11,"default","","",27,{"inputs":[{"name":"compatiblefields"}],"output":{"name":"compatiblefields"}}],[11,"deserialize","","",28,{"inputs":[{"name":"region"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",28,{"inputs":[{"name":"region"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"region"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"region"}],"output":{"name":"region"}}],[11,"default","","",28,{"inputs":[{"name":"region"}],"output":{"name":"region"}}],[11,"deserialize","","",29,{"inputs":[{"name":"reportcriteria"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",29,{"inputs":[{"name":"reportcriteria"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"reportcriteria"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"reportcriteria"}],"output":{"name":"reportcriteria"}}],[11,"default","","",29,{"inputs":[{"name":"reportcriteria"}],"output":{"name":"reportcriteria"}}],[11,"deserialize","","",30,{"inputs":[{"name":"orderslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",30,{"inputs":[{"name":"orderslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"orderslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"orderslistresponse"}],"output":{"name":"orderslistresponse"}}],[11,"default","","",30,{"inputs":[{"name":"orderslistresponse"}],"output":{"name":"orderslistresponse"}}],[11,"deserialize","","",31,{"inputs":[{"name":"crossdimensionreachreportcompatiblefields"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",31,{"inputs":[{"name":"crossdimensionreachreportcompatiblefields"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"crossdimensionreachreportcompatiblefields"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"crossdimensionreachreportcompatiblefields"}],"output":{"name":"crossdimensionreachreportcompatiblefields"}}],[11,"default","","",31,{"inputs":[{"name":"crossdimensionreachreportcompatiblefields"}],"output":{"name":"crossdimensionreachreportcompatiblefields"}}],[11,"deserialize","","",32,{"inputs":[{"name":"userrole"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",32,{"inputs":[{"name":"userrole"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"userrole"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"userrole"}],"output":{"name":"userrole"}}],[11,"default","","",32,{"inputs":[{"name":"userrole"}],"output":{"name":"userrole"}}],[11,"deserialize","","",33,{"inputs":[{"name":"eventtagslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",33,{"inputs":[{"name":"eventtagslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"eventtagslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"eventtagslistresponse"}],"output":{"name":"eventtagslistresponse"}}],[11,"default","","",33,{"inputs":[{"name":"eventtagslistresponse"}],"output":{"name":"eventtagslistresponse"}}],[11,"deserialize","","",34,{"inputs":[{"name":"floodlightactivitygroup"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",34,{"inputs":[{"name":"floodlightactivitygroup"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",34,{"inputs":[{"name":"floodlightactivitygroup"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"floodlightactivitygroup"}],"output":{"name":"floodlightactivitygroup"}}],[11,"default","","",34,{"inputs":[{"name":"floodlightactivitygroup"}],"output":{"name":"floodlightactivitygroup"}}],[11,"deserialize","","",35,{"inputs":[{"name":"audiencesegment"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",35,{"inputs":[{"name":"audiencesegment"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",35,{"inputs":[{"name":"audiencesegment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"audiencesegment"}],"output":{"name":"audiencesegment"}}],[11,"default","","",35,{"inputs":[{"name":"audiencesegment"}],"output":{"name":"audiencesegment"}}],[11,"deserialize","","",36,{"inputs":[{"name":"campaign"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",36,{"inputs":[{"name":"campaign"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"campaign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"campaign"}],"output":{"name":"campaign"}}],[11,"default","","",36,{"inputs":[{"name":"campaign"}],"output":{"name":"campaign"}}],[11,"deserialize","","",37,{"inputs":[{"name":"changelog"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",37,{"inputs":[{"name":"changelog"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"changelog"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"changelog"}],"output":{"name":"changelog"}}],[11,"default","","",37,{"inputs":[{"name":"changelog"}],"output":{"name":"changelog"}}],[11,"deserialize","","",38,{"inputs":[{"name":"file"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",38,{"inputs":[{"name":"file"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"file"}],"output":{"name":"file"}}],[11,"default","","",38,{"inputs":[{"name":"file"}],"output":{"name":"file"}}],[11,"deserialize","","",39,{"inputs":[{"name":"keyvaluetargetingexpression"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",39,{"inputs":[{"name":"keyvaluetargetingexpression"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"keyvaluetargetingexpression"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"keyvaluetargetingexpression"}],"output":{"name":"keyvaluetargetingexpression"}}],[11,"default","","",39,{"inputs":[{"name":"keyvaluetargetingexpression"}],"output":{"name":"keyvaluetargetingexpression"}}],[11,"deserialize","","",40,{"inputs":[{"name":"reportcrossdimensionreachcriteria"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",40,{"inputs":[{"name":"reportcrossdimensionreachcriteria"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"reportcrossdimensionreachcriteria"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"reportcrossdimensionreachcriteria"}],"output":{"name":"reportcrossdimensionreachcriteria"}}],[11,"default","","",40,{"inputs":[{"name":"reportcrossdimensionreachcriteria"}],"output":{"name":"reportcrossdimensionreachcriteria"}}],[11,"deserialize","","",41,{"inputs":[{"name":"placement"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",41,{"inputs":[{"name":"placement"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"placement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"placement"}],"output":{"name":"placement"}}],[11,"default","","",41,{"inputs":[{"name":"placement"}],"output":{"name":"placement"}}],[11,"deserialize","","",42,{"inputs":[{"name":"inventoryitemslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",42,{"inputs":[{"name":"inventoryitemslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"inventoryitemslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"inventoryitemslistresponse"}],"output":{"name":"inventoryitemslistresponse"}}],[11,"default","","",42,{"inputs":[{"name":"inventoryitemslistresponse"}],"output":{"name":"inventoryitemslistresponse"}}],[11,"deserialize","","",43,{"inputs":[{"name":"audiencesegmentgroup"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",43,{"inputs":[{"name":"audiencesegmentgroup"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"audiencesegmentgroup"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"audiencesegmentgroup"}],"output":{"name":"audiencesegmentgroup"}}],[11,"default","","",43,{"inputs":[{"name":"audiencesegmentgroup"}],"output":{"name":"audiencesegmentgroup"}}],[11,"deserialize","","",44,{"inputs":[{"name":"placementstrategy"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",44,{"inputs":[{"name":"placementstrategy"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"placementstrategy"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"placementstrategy"}],"output":{"name":"placementstrategy"}}],[11,"default","","",44,{"inputs":[{"name":"placementstrategy"}],"output":{"name":"placementstrategy"}}],[11,"deserialize","","",45,{"inputs":[{"name":"placementtag"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",45,{"inputs":[{"name":"placementtag"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"placementtag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"placementtag"}],"output":{"name":"placementtag"}}],[11,"default","","",45,{"inputs":[{"name":"placementtag"}],"output":{"name":"placementtag"}}],[11,"deserialize","","",46,{"inputs":[{"name":"countrieslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",46,{"inputs":[{"name":"countrieslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"countrieslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"countrieslistresponse"}],"output":{"name":"countrieslistresponse"}}],[11,"default","","",46,{"inputs":[{"name":"countrieslistresponse"}],"output":{"name":"countrieslistresponse"}}],[11,"deserialize","","",47,{"inputs":[{"name":"clickthroughurl"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",47,{"inputs":[{"name":"clickthroughurl"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"clickthroughurl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"clickthroughurl"}],"output":{"name":"clickthroughurl"}}],[11,"default","","",47,{"inputs":[{"name":"clickthroughurl"}],"output":{"name":"clickthroughurl"}}],[11,"deserialize","","",48,{"inputs":[{"name":"companionclickthroughoverride"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",48,{"inputs":[{"name":"companionclickthroughoverride"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"companionclickthroughoverride"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"companionclickthroughoverride"}],"output":{"name":"companionclickthroughoverride"}}],[11,"default","","",48,{"inputs":[{"name":"companionclickthroughoverride"}],"output":{"name":"companionclickthroughoverride"}}],[11,"deserialize","","",49,{"inputs":[{"name":"frequencycap"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",49,{"inputs":[{"name":"frequencycap"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"frequencycap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"frequencycap"}],"output":{"name":"frequencycap"}}],[11,"default","","",49,{"inputs":[{"name":"frequencycap"}],"output":{"name":"frequencycap"}}],[11,"deserialize","","",50,{"inputs":[{"name":"campaigncreativeassociation"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",50,{"inputs":[{"name":"campaigncreativeassociation"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",50,{"inputs":[{"name":"campaigncreativeassociation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"campaigncreativeassociation"}],"output":{"name":"campaigncreativeassociation"}}],[11,"default","","",50,{"inputs":[{"name":"campaigncreativeassociation"}],"output":{"name":"campaigncreativeassociation"}}],[11,"deserialize","","",51,{"inputs":[{"name":"remarketinglistshare"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",51,{"inputs":[{"name":"remarketinglistshare"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",51,{"inputs":[{"name":"remarketinglistshare"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"remarketinglistshare"}],"output":{"name":"remarketinglistshare"}}],[11,"default","","",51,{"inputs":[{"name":"remarketinglistshare"}],"output":{"name":"remarketinglistshare"}}],[11,"deserialize","","",52,{"inputs":[{"name":"operatingsystemversionslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",52,{"inputs":[{"name":"operatingsystemversionslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"operatingsystemversionslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"operatingsystemversionslistresponse"}],"output":{"name":"operatingsystemversionslistresponse"}}],[11,"default","","",52,{"inputs":[{"name":"operatingsystemversionslistresponse"}],"output":{"name":"operatingsystemversionslistresponse"}}],[11,"deserialize","","",53,{"inputs":[{"name":"contentcategory"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",53,{"inputs":[{"name":"contentcategory"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"contentcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"contentcategory"}],"output":{"name":"contentcategory"}}],[11,"default","","",53,{"inputs":[{"name":"contentcategory"}],"output":{"name":"contentcategory"}}],[11,"deserialize","","",54,{"inputs":[{"name":"targetableremarketinglistslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",54,{"inputs":[{"name":"targetableremarketinglistslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"targetableremarketinglistslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"targetableremarketinglistslistresponse"}],"output":{"name":"targetableremarketinglistslistresponse"}}],[11,"default","","",54,{"inputs":[{"name":"targetableremarketinglistslistresponse"}],"output":{"name":"targetableremarketinglistslistresponse"}}],[11,"deserialize","","",55,{"inputs":[{"name":"inventoryitem"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",55,{"inputs":[{"name":"inventoryitem"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"inventoryitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"inventoryitem"}],"output":{"name":"inventoryitem"}}],[11,"default","","",55,{"inputs":[{"name":"inventoryitem"}],"output":{"name":"inventoryitem"}}],[11,"deserialize","","",56,{"inputs":[{"name":"floodlightreportcompatiblefields"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",56,{"inputs":[{"name":"floodlightreportcompatiblefields"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"floodlightreportcompatiblefields"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"floodlightreportcompatiblefields"}],"output":{"name":"floodlightreportcompatiblefields"}}],[11,"default","","",56,{"inputs":[{"name":"floodlightreportcompatiblefields"}],"output":{"name":"floodlightreportcompatiblefields"}}],[11,"deserialize","","",57,{"inputs":[{"name":"creativeassetid"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",57,{"inputs":[{"name":"creativeassetid"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"creativeassetid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"creativeassetid"}],"output":{"name":"creativeassetid"}}],[11,"default","","",57,{"inputs":[{"name":"creativeassetid"}],"output":{"name":"creativeassetid"}}],[11,"deserialize","","",58,{"inputs":[{"name":"directorysitecontactassignment"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",58,{"inputs":[{"name":"directorysitecontactassignment"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"directorysitecontactassignment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",58,{"inputs":[{"name":"directorysitecontactassignment"}],"output":{"name":"directorysitecontactassignment"}}],[11,"default","","",58,{"inputs":[{"name":"directorysitecontactassignment"}],"output":{"name":"directorysitecontactassignment"}}],[11,"deserialize","","",59,{"inputs":[{"name":"creativeassignment"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",59,{"inputs":[{"name":"creativeassignment"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"creativeassignment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"creativeassignment"}],"output":{"name":"creativeassignment"}}],[11,"default","","",59,{"inputs":[{"name":"creativeassignment"}],"output":{"name":"creativeassignment"}}],[11,"serialize","","",60,{"inputs":[{"name":"dimensionvaluerequest"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",60,{"inputs":[{"name":"dimensionvaluerequest"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"dimensionvaluerequest"}],"output":{"name":"dimensionvaluerequest"}}],[11,"default","","",60,{"inputs":[{"name":"dimensionvaluerequest"}],"output":{"name":"dimensionvaluerequest"}}],[11,"deserialize","","",61,{"inputs":[{"name":"adslot"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",61,{"inputs":[{"name":"adslot"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"adslot"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"adslot"}],"output":{"name":"adslot"}}],[11,"default","","",61,{"inputs":[{"name":"adslot"}],"output":{"name":"adslot"}}],[11,"deserialize","","",62,{"inputs":[{"name":"defaultclickthrougheventtagproperties"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",62,{"inputs":[{"name":"defaultclickthrougheventtagproperties"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"defaultclickthrougheventtagproperties"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"defaultclickthrougheventtagproperties"}],"output":{"name":"defaultclickthrougheventtagproperties"}}],[11,"default","","",62,{"inputs":[{"name":"defaultclickthrougheventtagproperties"}],"output":{"name":"defaultclickthrougheventtagproperties"}}],[11,"deserialize","","",63,{"inputs":[{"name":"userprofilelist"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",63,{"inputs":[{"name":"userprofilelist"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",63,{"inputs":[{"name":"userprofilelist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"userprofilelist"}],"output":{"name":"userprofilelist"}}],[11,"default","","",63,{"inputs":[{"name":"userprofilelist"}],"output":{"name":"userprofilelist"}}],[11,"deserialize","","",64,{"inputs":[{"name":"subaccountslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",64,{"inputs":[{"name":"subaccountslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",64,{"inputs":[{"name":"subaccountslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"subaccountslistresponse"}],"output":{"name":"subaccountslistresponse"}}],[11,"default","","",64,{"inputs":[{"name":"subaccountslistresponse"}],"output":{"name":"subaccountslistresponse"}}],[11,"deserialize","","",65,{"inputs":[{"name":"orderdocument"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",65,{"inputs":[{"name":"orderdocument"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"orderdocument"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"orderdocument"}],"output":{"name":"orderdocument"}}],[11,"default","","",65,{"inputs":[{"name":"orderdocument"}],"output":{"name":"orderdocument"}}],[11,"deserialize","","",66,{"inputs":[{"name":"report"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",66,{"inputs":[{"name":"report"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",66,{"inputs":[{"name":"report"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",66,{"inputs":[{"name":"report"}],"output":{"name":"report"}}],[11,"default","","",66,{"inputs":[{"name":"report"}],"output":{"name":"report"}}],[11,"deserialize","","",67,{"inputs":[{"name":"platformtype"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",67,{"inputs":[{"name":"platformtype"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"platformtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",67,{"inputs":[{"name":"platformtype"}],"output":{"name":"platformtype"}}],[11,"default","","",67,{"inputs":[{"name":"platformtype"}],"output":{"name":"platformtype"}}],[11,"deserialize","","",68,{"inputs":[{"name":"advertiserslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",68,{"inputs":[{"name":"advertiserslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"advertiserslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",68,{"inputs":[{"name":"advertiserslistresponse"}],"output":{"name":"advertiserslistresponse"}}],[11,"default","","",68,{"inputs":[{"name":"advertiserslistresponse"}],"output":{"name":"advertiserslistresponse"}}],[11,"deserialize","","",69,{"inputs":[{"name":"creativeasset"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",69,{"inputs":[{"name":"creativeasset"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",69,{"inputs":[{"name":"creativeasset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",69,{"inputs":[{"name":"creativeasset"}],"output":{"name":"creativeasset"}}],[11,"default","","",69,{"inputs":[{"name":"creativeasset"}],"output":{"name":"creativeasset"}}],[11,"deserialize","","",70,{"inputs":[{"name":"directorysiteslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",70,{"inputs":[{"name":"directorysiteslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"directorysiteslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"directorysiteslistresponse"}],"output":{"name":"directorysiteslistresponse"}}],[11,"default","","",70,{"inputs":[{"name":"directorysiteslistresponse"}],"output":{"name":"directorysiteslistresponse"}}],[11,"deserialize","","",71,{"inputs":[{"name":"lastmodifiedinfo"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",71,{"inputs":[{"name":"lastmodifiedinfo"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",71,{"inputs":[{"name":"lastmodifiedinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",71,{"inputs":[{"name":"lastmodifiedinfo"}],"output":{"name":"lastmodifiedinfo"}}],[11,"default","","",71,{"inputs":[{"name":"lastmodifiedinfo"}],"output":{"name":"lastmodifiedinfo"}}],[11,"deserialize","","",72,{"inputs":[{"name":"regionslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",72,{"inputs":[{"name":"regionslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",72,{"inputs":[{"name":"regionslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"regionslistresponse"}],"output":{"name":"regionslistresponse"}}],[11,"default","","",72,{"inputs":[{"name":"regionslistresponse"}],"output":{"name":"regionslistresponse"}}],[11,"deserialize","","",73,{"inputs":[{"name":"userrolepermissiongroup"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",73,{"inputs":[{"name":"userrolepermissiongroup"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",73,{"inputs":[{"name":"userrolepermissiongroup"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"userrolepermissiongroup"}],"output":{"name":"userrolepermissiongroup"}}],[11,"default","","",73,{"inputs":[{"name":"userrolepermissiongroup"}],"output":{"name":"userrolepermissiongroup"}}],[11,"deserialize","","",74,{"inputs":[{"name":"clicktag"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",74,{"inputs":[{"name":"clicktag"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",74,{"inputs":[{"name":"clicktag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"clicktag"}],"output":{"name":"clicktag"}}],[11,"default","","",74,{"inputs":[{"name":"clicktag"}],"output":{"name":"clicktag"}}],[11,"deserialize","","",75,{"inputs":[{"name":"connectiontype"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",75,{"inputs":[{"name":"connectiontype"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"connectiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"connectiontype"}],"output":{"name":"connectiontype"}}],[11,"default","","",75,{"inputs":[{"name":"connectiontype"}],"output":{"name":"connectiontype"}}],[11,"deserialize","","",76,{"inputs":[{"name":"browserslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",76,{"inputs":[{"name":"browserslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"browserslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"browserslistresponse"}],"output":{"name":"browserslistresponse"}}],[11,"default","","",76,{"inputs":[{"name":"browserslistresponse"}],"output":{"name":"browserslistresponse"}}],[11,"deserialize","","",77,{"inputs":[{"name":"objectfilter"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",77,{"inputs":[{"name":"objectfilter"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",77,{"inputs":[{"name":"objectfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"objectfilter"}],"output":{"name":"objectfilter"}}],[11,"default","","",77,{"inputs":[{"name":"objectfilter"}],"output":{"name":"objectfilter"}}],[11,"deserialize","","",78,{"inputs":[{"name":"creativesettings"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",78,{"inputs":[{"name":"creativesettings"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",78,{"inputs":[{"name":"creativesettings"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"creativesettings"}],"output":{"name":"creativesettings"}}],[11,"default","","",78,{"inputs":[{"name":"creativesettings"}],"output":{"name":"creativesettings"}}],[11,"deserialize","","",79,{"inputs":[{"name":"dimension"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",79,{"inputs":[{"name":"dimension"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"dimension"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"dimension"}],"output":{"name":"dimension"}}],[11,"default","","",79,{"inputs":[{"name":"dimension"}],"output":{"name":"dimension"}}],[11,"deserialize","","",80,{"inputs":[{"name":"ordercontact"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",80,{"inputs":[{"name":"ordercontact"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",80,{"inputs":[{"name":"ordercontact"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"ordercontact"}],"output":{"name":"ordercontact"}}],[11,"default","","",80,{"inputs":[{"name":"ordercontact"}],"output":{"name":"ordercontact"}}],[11,"deserialize","","",81,{"inputs":[{"name":"directorysite"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",81,{"inputs":[{"name":"directorysite"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",81,{"inputs":[{"name":"directorysite"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"directorysite"}],"output":{"name":"directorysite"}}],[11,"default","","",81,{"inputs":[{"name":"directorysite"}],"output":{"name":"directorysite"}}],[11,"deserialize","","",82,{"inputs":[{"name":"citieslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",82,{"inputs":[{"name":"citieslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",82,{"inputs":[{"name":"citieslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"citieslistresponse"}],"output":{"name":"citieslistresponse"}}],[11,"default","","",82,{"inputs":[{"name":"citieslistresponse"}],"output":{"name":"citieslistresponse"}}],[11,"deserialize","","",83,{"inputs":[{"name":"creativegroup"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",83,{"inputs":[{"name":"creativegroup"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",83,{"inputs":[{"name":"creativegroup"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"creativegroup"}],"output":{"name":"creativegroup"}}],[11,"default","","",83,{"inputs":[{"name":"creativegroup"}],"output":{"name":"creativegroup"}}],[11,"deserialize","","",84,{"inputs":[{"name":"metric"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",84,{"inputs":[{"name":"metric"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"metric"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"metric"}],"output":{"name":"metric"}}],[11,"default","","",84,{"inputs":[{"name":"metric"}],"output":{"name":"metric"}}],[11,"deserialize","","",85,{"inputs":[{"name":"richmediaexitoverride"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",85,{"inputs":[{"name":"richmediaexitoverride"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"richmediaexitoverride"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"richmediaexitoverride"}],"output":{"name":"richmediaexitoverride"}}],[11,"default","","",85,{"inputs":[{"name":"richmediaexitoverride"}],"output":{"name":"richmediaexitoverride"}}],[11,"deserialize","","",86,{"inputs":[{"name":"accountpermissionslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",86,{"inputs":[{"name":"accountpermissionslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"accountpermissionslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"accountpermissionslistresponse"}],"output":{"name":"accountpermissionslistresponse"}}],[11,"default","","",86,{"inputs":[{"name":"accountpermissionslistresponse"}],"output":{"name":"accountpermissionslistresponse"}}],[11,"deserialize","","",87,{"inputs":[{"name":"placementsgeneratetagsresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",87,{"inputs":[{"name":"placementsgeneratetagsresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"placementsgeneratetagsresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"placementsgeneratetagsresponse"}],"output":{"name":"placementsgeneratetagsresponse"}}],[11,"default","","",87,{"inputs":[{"name":"placementsgeneratetagsresponse"}],"output":{"name":"placementsgeneratetagsresponse"}}],[11,"deserialize","","",88,{"inputs":[{"name":"creativefieldvalue"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",88,{"inputs":[{"name":"creativefieldvalue"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"creativefieldvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"creativefieldvalue"}],"output":{"name":"creativefieldvalue"}}],[11,"default","","",88,{"inputs":[{"name":"creativefieldvalue"}],"output":{"name":"creativefieldvalue"}}],[11,"deserialize","","",89,{"inputs":[{"name":"floodlightactivitygroupslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",89,{"inputs":[{"name":"floodlightactivitygroupslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",89,{"inputs":[{"name":"floodlightactivitygroupslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"floodlightactivitygroupslistresponse"}],"output":{"name":"floodlightactivitygroupslistresponse"}}],[11,"default","","",89,{"inputs":[{"name":"floodlightactivitygroupslistresponse"}],"output":{"name":"floodlightactivitygroupslistresponse"}}],[11,"deserialize","","",90,{"inputs":[{"name":"directorysitecontactslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",90,{"inputs":[{"name":"directorysitecontactslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",90,{"inputs":[{"name":"directorysitecontactslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"directorysitecontactslistresponse"}],"output":{"name":"directorysitecontactslistresponse"}}],[11,"default","","",90,{"inputs":[{"name":"directorysitecontactslistresponse"}],"output":{"name":"directorysitecontactslistresponse"}}],[11,"deserialize","","",91,{"inputs":[{"name":"creativecustomevent"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",91,{"inputs":[{"name":"creativecustomevent"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"creativecustomevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",91,{"inputs":[{"name":"creativecustomevent"}],"output":{"name":"creativecustomevent"}}],[11,"default","","",91,{"inputs":[{"name":"creativecustomevent"}],"output":{"name":"creativecustomevent"}}],[11,"deserialize","","",92,{"inputs":[{"name":"creativeslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",92,{"inputs":[{"name":"creativeslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",92,{"inputs":[{"name":"creativeslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",92,{"inputs":[{"name":"creativeslistresponse"}],"output":{"name":"creativeslistresponse"}}],[11,"default","","",92,{"inputs":[{"name":"creativeslistresponse"}],"output":{"name":"creativeslistresponse"}}],[11,"deserialize","","",93,{"inputs":[{"name":"omnituresettings"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",93,{"inputs":[{"name":"omnituresettings"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",93,{"inputs":[{"name":"omnituresettings"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",93,{"inputs":[{"name":"omnituresettings"}],"output":{"name":"omnituresettings"}}],[11,"default","","",93,{"inputs":[{"name":"omnituresettings"}],"output":{"name":"omnituresettings"}}],[11,"deserialize","","",94,{"inputs":[{"name":"pathtoconversionreportcompatiblefields"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",94,{"inputs":[{"name":"pathtoconversionreportcompatiblefields"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",94,{"inputs":[{"name":"pathtoconversionreportcompatiblefields"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",94,{"inputs":[{"name":"pathtoconversionreportcompatiblefields"}],"output":{"name":"pathtoconversionreportcompatiblefields"}}],[11,"default","","",94,{"inputs":[{"name":"pathtoconversionreportcompatiblefields"}],"output":{"name":"pathtoconversionreportcompatiblefields"}}],[11,"deserialize","","",95,{"inputs":[{"name":"mobilecarrierslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",95,{"inputs":[{"name":"mobilecarrierslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",95,{"inputs":[{"name":"mobilecarrierslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",95,{"inputs":[{"name":"mobilecarrierslistresponse"}],"output":{"name":"mobilecarrierslistresponse"}}],[11,"default","","",95,{"inputs":[{"name":"mobilecarrierslistresponse"}],"output":{"name":"mobilecarrierslistresponse"}}],[11,"deserialize","","",96,{"inputs":[{"name":"floodlightactivitydynamictag"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",96,{"inputs":[{"name":"floodlightactivitydynamictag"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"floodlightactivitydynamictag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",96,{"inputs":[{"name":"floodlightactivitydynamictag"}],"output":{"name":"floodlightactivitydynamictag"}}],[11,"default","","",96,{"inputs":[{"name":"floodlightactivitydynamictag"}],"output":{"name":"floodlightactivitydynamictag"}}],[11,"deserialize","","",97,{"inputs":[{"name":"creative"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",97,{"inputs":[{"name":"creative"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"creative"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",97,{"inputs":[{"name":"creative"}],"output":{"name":"creative"}}],[11,"default","","",97,{"inputs":[{"name":"creative"}],"output":{"name":"creative"}}],[11,"deserialize","","",98,{"inputs":[{"name":"reportsconfiguration"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",98,{"inputs":[{"name":"reportsconfiguration"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"reportsconfiguration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",98,{"inputs":[{"name":"reportsconfiguration"}],"output":{"name":"reportsconfiguration"}}],[11,"default","","",98,{"inputs":[{"name":"reportsconfiguration"}],"output":{"name":"reportsconfiguration"}}],[11,"deserialize","","",99,{"inputs":[{"name":"campaignslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",99,{"inputs":[{"name":"campaignslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"campaignslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",99,{"inputs":[{"name":"campaignslistresponse"}],"output":{"name":"campaignslistresponse"}}],[11,"default","","",99,{"inputs":[{"name":"campaignslistresponse"}],"output":{"name":"campaignslistresponse"}}],[11,"deserialize","","",100,{"inputs":[{"name":"userrolepermissionslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",100,{"inputs":[{"name":"userrolepermissionslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"userrolepermissionslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",100,{"inputs":[{"name":"userrolepermissionslistresponse"}],"output":{"name":"userrolepermissionslistresponse"}}],[11,"default","","",100,{"inputs":[{"name":"userrolepermissionslistresponse"}],"output":{"name":"userrolepermissionslistresponse"}}],[11,"deserialize","","",101,{"inputs":[{"name":"userprofile"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",101,{"inputs":[{"name":"userprofile"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"userprofile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",101,{"inputs":[{"name":"userprofile"}],"output":{"name":"userprofile"}}],[11,"default","","",101,{"inputs":[{"name":"userprofile"}],"output":{"name":"userprofile"}}],[11,"deserialize","","",102,{"inputs":[{"name":"creativegroupassignment"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",102,{"inputs":[{"name":"creativegroupassignment"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"creativegroupassignment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",102,{"inputs":[{"name":"creativegroupassignment"}],"output":{"name":"creativegroupassignment"}}],[11,"default","","",102,{"inputs":[{"name":"creativegroupassignment"}],"output":{"name":"creativegroupassignment"}}],[11,"deserialize","","",103,{"inputs":[{"name":"reportpathtoconversioncriteria"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",103,{"inputs":[{"name":"reportpathtoconversioncriteria"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"reportpathtoconversioncriteria"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",103,{"inputs":[{"name":"reportpathtoconversioncriteria"}],"output":{"name":"reportpathtoconversioncriteria"}}],[11,"default","","",103,{"inputs":[{"name":"reportpathtoconversioncriteria"}],"output":{"name":"reportpathtoconversioncriteria"}}],[11,"deserialize","","",104,{"inputs":[{"name":"creativefieldslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",104,{"inputs":[{"name":"creativefieldslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",104,{"inputs":[{"name":"creativefieldslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",104,{"inputs":[{"name":"creativefieldslistresponse"}],"output":{"name":"creativefieldslistresponse"}}],[11,"default","","",104,{"inputs":[{"name":"creativefieldslistresponse"}],"output":{"name":"creativefieldslistresponse"}}],[11,"deserialize","","",105,{"inputs":[{"name":"reportdelivery"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",105,{"inputs":[{"name":"reportdelivery"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",105,{"inputs":[{"name":"reportdelivery"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",105,{"inputs":[{"name":"reportdelivery"}],"output":{"name":"reportdelivery"}}],[11,"default","","",105,{"inputs":[{"name":"reportdelivery"}],"output":{"name":"reportdelivery"}}],[11,"deserialize","","",106,{"inputs":[{"name":"projectslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",106,{"inputs":[{"name":"projectslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",106,{"inputs":[{"name":"projectslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",106,{"inputs":[{"name":"projectslistresponse"}],"output":{"name":"projectslistresponse"}}],[11,"default","","",106,{"inputs":[{"name":"projectslistresponse"}],"output":{"name":"projectslistresponse"}}],[11,"deserialize","","",107,{"inputs":[{"name":"geotargeting"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",107,{"inputs":[{"name":"geotargeting"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"geotargeting"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",107,{"inputs":[{"name":"geotargeting"}],"output":{"name":"geotargeting"}}],[11,"default","","",107,{"inputs":[{"name":"geotargeting"}],"output":{"name":"geotargeting"}}],[11,"deserialize","","",108,{"inputs":[{"name":"deliveryschedule"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",108,{"inputs":[{"name":"deliveryschedule"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",108,{"inputs":[{"name":"deliveryschedule"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"deliveryschedule"}],"output":{"name":"deliveryschedule"}}],[11,"default","","",108,{"inputs":[{"name":"deliveryschedule"}],"output":{"name":"deliveryschedule"}}],[11,"deserialize","","",109,{"inputs":[{"name":"reportschedule"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",109,{"inputs":[{"name":"reportschedule"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"reportschedule"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",109,{"inputs":[{"name":"reportschedule"}],"output":{"name":"reportschedule"}}],[11,"default","","",109,{"inputs":[{"name":"reportschedule"}],"output":{"name":"reportschedule"}}],[11,"deserialize","","",110,{"inputs":[{"name":"recipient"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",110,{"inputs":[{"name":"recipient"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"recipient"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",110,{"inputs":[{"name":"recipient"}],"output":{"name":"recipient"}}],[11,"default","","",110,{"inputs":[{"name":"recipient"}],"output":{"name":"recipient"}}],[11,"deserialize","","",111,{"inputs":[{"name":"reportcompatiblefields"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",111,{"inputs":[{"name":"reportcompatiblefields"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"reportcompatiblefields"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",111,{"inputs":[{"name":"reportcompatiblefields"}],"output":{"name":"reportcompatiblefields"}}],[11,"default","","",111,{"inputs":[{"name":"reportcompatiblefields"}],"output":{"name":"reportcompatiblefields"}}],[11,"deserialize","","",112,{"inputs":[{"name":"advertisergroupslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",112,{"inputs":[{"name":"advertisergroupslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"advertisergroupslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",112,{"inputs":[{"name":"advertisergroupslistresponse"}],"output":{"name":"advertisergroupslistresponse"}}],[11,"default","","",112,{"inputs":[{"name":"advertisergroupslistresponse"}],"output":{"name":"advertisergroupslistresponse"}}],[11,"deserialize","","",113,{"inputs":[{"name":"placementgroupslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",113,{"inputs":[{"name":"placementgroupslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"placementgroupslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",113,{"inputs":[{"name":"placementgroupslistresponse"}],"output":{"name":"placementgroupslistresponse"}}],[11,"default","","",113,{"inputs":[{"name":"placementgroupslistresponse"}],"output":{"name":"placementgroupslistresponse"}}],[11,"deserialize","","",114,{"inputs":[{"name":"reportpathtoconversioncriteriareportproperties"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",114,{"inputs":[{"name":"reportpathtoconversioncriteriareportproperties"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",114,{"inputs":[{"name":"reportpathtoconversioncriteriareportproperties"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"reportpathtoconversioncriteriareportproperties"}],"output":{"name":"reportpathtoconversioncriteriareportproperties"}}],[11,"default","","",114,{"inputs":[{"name":"reportpathtoconversioncriteriareportproperties"}],"output":{"name":"reportpathtoconversioncriteriareportproperties"}}],[11,"deserialize","","",115,{"inputs":[{"name":"technologytargeting"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",115,{"inputs":[{"name":"technologytargeting"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"technologytargeting"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"technologytargeting"}],"output":{"name":"technologytargeting"}}],[11,"default","","",115,{"inputs":[{"name":"technologytargeting"}],"output":{"name":"technologytargeting"}}],[11,"deserialize","","",116,{"inputs":[{"name":"optimizationactivity"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",116,{"inputs":[{"name":"optimizationactivity"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",116,{"inputs":[{"name":"optimizationactivity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",116,{"inputs":[{"name":"optimizationactivity"}],"output":{"name":"optimizationactivity"}}],[11,"default","","",116,{"inputs":[{"name":"optimizationactivity"}],"output":{"name":"optimizationactivity"}}],[11,"deserialize","","",117,{"inputs":[{"name":"listtargetingexpression"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",117,{"inputs":[{"name":"listtargetingexpression"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"listtargetingexpression"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",117,{"inputs":[{"name":"listtargetingexpression"}],"output":{"name":"listtargetingexpression"}}],[11,"default","","",117,{"inputs":[{"name":"listtargetingexpression"}],"output":{"name":"listtargetingexpression"}}],[11,"deserialize","","",118,{"inputs":[{"name":"creativeassetmetadata"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",118,{"inputs":[{"name":"creativeassetmetadata"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"creativeassetmetadata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"creativeassetmetadata"}],"output":{"name":"creativeassetmetadata"}}],[11,"default","","",118,{"inputs":[{"name":"creativeassetmetadata"}],"output":{"name":"creativeassetmetadata"}}],[11,"deserialize","","",119,{"inputs":[{"name":"tagdata"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",119,{"inputs":[{"name":"tagdata"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"tagdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"tagdata"}],"output":{"name":"tagdata"}}],[11,"default","","",119,{"inputs":[{"name":"tagdata"}],"output":{"name":"tagdata"}}],[11,"deserialize","","",120,{"inputs":[{"name":"reportfloodlightcriteria"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",120,{"inputs":[{"name":"reportfloodlightcriteria"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",120,{"inputs":[{"name":"reportfloodlightcriteria"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"reportfloodlightcriteria"}],"output":{"name":"reportfloodlightcriteria"}}],[11,"default","","",120,{"inputs":[{"name":"reportfloodlightcriteria"}],"output":{"name":"reportfloodlightcriteria"}}],[11,"deserialize","","",121,{"inputs":[{"name":"landingpageslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",121,{"inputs":[{"name":"landingpageslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"landingpageslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",121,{"inputs":[{"name":"landingpageslistresponse"}],"output":{"name":"landingpageslistresponse"}}],[11,"default","","",121,{"inputs":[{"name":"landingpageslistresponse"}],"output":{"name":"landingpageslistresponse"}}],[11,"deserialize","","",122,{"inputs":[{"name":"siteslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",122,{"inputs":[{"name":"siteslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",122,{"inputs":[{"name":"siteslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",122,{"inputs":[{"name":"siteslistresponse"}],"output":{"name":"siteslistresponse"}}],[11,"default","","",122,{"inputs":[{"name":"siteslistresponse"}],"output":{"name":"siteslistresponse"}}],[11,"serialize","","",123,{"inputs":[{"name":"dimensionfilter"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",123,{"inputs":[{"name":"dimensionfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",123,{"inputs":[{"name":"dimensionfilter"}],"output":{"name":"dimensionfilter"}}],[11,"default","","",123,{"inputs":[{"name":"dimensionfilter"}],"output":{"name":"dimensionfilter"}}],[11,"deserialize","","",124,{"inputs":[{"name":"postalcode"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",124,{"inputs":[{"name":"postalcode"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",124,{"inputs":[{"name":"postalcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",124,{"inputs":[{"name":"postalcode"}],"output":{"name":"postalcode"}}],[11,"default","","",124,{"inputs":[{"name":"postalcode"}],"output":{"name":"postalcode"}}],[11,"deserialize","","",125,{"inputs":[{"name":"remarketinglist"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",125,{"inputs":[{"name":"remarketinglist"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",125,{"inputs":[{"name":"remarketinglist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"remarketinglist"}],"output":{"name":"remarketinglist"}}],[11,"default","","",125,{"inputs":[{"name":"remarketinglist"}],"output":{"name":"remarketinglist"}}],[11,"deserialize","","",126,{"inputs":[{"name":"floodlightactivity"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",126,{"inputs":[{"name":"floodlightactivity"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"floodlightactivity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",126,{"inputs":[{"name":"floodlightactivity"}],"output":{"name":"floodlightactivity"}}],[11,"default","","",126,{"inputs":[{"name":"floodlightactivity"}],"output":{"name":"floodlightactivity"}}],[11,"deserialize","","",127,{"inputs":[{"name":"browser"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",127,{"inputs":[{"name":"browser"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"browser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",127,{"inputs":[{"name":"browser"}],"output":{"name":"browser"}}],[11,"default","","",127,{"inputs":[{"name":"browser"}],"output":{"name":"browser"}}],[11,"deserialize","","",128,{"inputs":[{"name":"accountuserprofileslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",128,{"inputs":[{"name":"accountuserprofileslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",128,{"inputs":[{"name":"accountuserprofileslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",128,{"inputs":[{"name":"accountuserprofileslistresponse"}],"output":{"name":"accountuserprofileslistresponse"}}],[11,"default","","",128,{"inputs":[{"name":"accountuserprofileslistresponse"}],"output":{"name":"accountuserprofileslistresponse"}}],[11,"deserialize","","",129,{"inputs":[{"name":"advertiser"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",129,{"inputs":[{"name":"advertiser"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",129,{"inputs":[{"name":"advertiser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",129,{"inputs":[{"name":"advertiser"}],"output":{"name":"advertiser"}}],[11,"default","","",129,{"inputs":[{"name":"advertiser"}],"output":{"name":"advertiser"}}],[11,"deserialize","","",130,{"inputs":[{"name":"platformtypeslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",130,{"inputs":[{"name":"platformtypeslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"platformtypeslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",130,{"inputs":[{"name":"platformtypeslistresponse"}],"output":{"name":"platformtypeslistresponse"}}],[11,"default","","",130,{"inputs":[{"name":"platformtypeslistresponse"}],"output":{"name":"platformtypeslistresponse"}}],[11,"deserialize","","",131,{"inputs":[{"name":"changelogslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",131,{"inputs":[{"name":"changelogslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"changelogslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"changelogslistresponse"}],"output":{"name":"changelogslistresponse"}}],[11,"default","","",131,{"inputs":[{"name":"changelogslistresponse"}],"output":{"name":"changelogslistresponse"}}],[11,"deserialize","","",132,{"inputs":[{"name":"placementslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",132,{"inputs":[{"name":"placementslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"placementslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"placementslistresponse"}],"output":{"name":"placementslistresponse"}}],[11,"default","","",132,{"inputs":[{"name":"placementslistresponse"}],"output":{"name":"placementslistresponse"}}],[11,"deserialize","","",133,{"inputs":[{"name":"adslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",133,{"inputs":[{"name":"adslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"adslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"adslistresponse"}],"output":{"name":"adslistresponse"}}],[11,"default","","",133,{"inputs":[{"name":"adslistresponse"}],"output":{"name":"adslistresponse"}}],[11,"deserialize","","",134,{"inputs":[{"name":"reportreachcriteria"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",134,{"inputs":[{"name":"reportreachcriteria"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"reportreachcriteria"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"reportreachcriteria"}],"output":{"name":"reportreachcriteria"}}],[11,"default","","",134,{"inputs":[{"name":"reportreachcriteria"}],"output":{"name":"reportreachcriteria"}}],[11,"deserialize","","",135,{"inputs":[{"name":"fileurls"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",135,{"inputs":[{"name":"fileurls"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"fileurls"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",135,{"inputs":[{"name":"fileurls"}],"output":{"name":"fileurls"}}],[11,"default","","",135,{"inputs":[{"name":"fileurls"}],"output":{"name":"fileurls"}}],[11,"deserialize","","",136,{"inputs":[{"name":"orderdocumentslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",136,{"inputs":[{"name":"orderdocumentslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"orderdocumentslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",136,{"inputs":[{"name":"orderdocumentslistresponse"}],"output":{"name":"orderdocumentslistresponse"}}],[11,"default","","",136,{"inputs":[{"name":"orderdocumentslistresponse"}],"output":{"name":"orderdocumentslistresponse"}}],[11,"deserialize","","",137,{"inputs":[{"name":"userdefinedvariableconfiguration"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",137,{"inputs":[{"name":"userdefinedvariableconfiguration"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"userdefinedvariableconfiguration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",137,{"inputs":[{"name":"userdefinedvariableconfiguration"}],"output":{"name":"userdefinedvariableconfiguration"}}],[11,"default","","",137,{"inputs":[{"name":"userdefinedvariableconfiguration"}],"output":{"name":"userdefinedvariableconfiguration"}}],[11,"deserialize","","",138,{"inputs":[{"name":"pricing"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",138,{"inputs":[{"name":"pricing"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",138,{"inputs":[{"name":"pricing"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",138,{"inputs":[{"name":"pricing"}],"output":{"name":"pricing"}}],[11,"default","","",138,{"inputs":[{"name":"pricing"}],"output":{"name":"pricing"}}],[11,"deserialize","","",139,{"inputs":[{"name":"floodlightactivitypublisherdynamictag"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",139,{"inputs":[{"name":"floodlightactivitypublisherdynamictag"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",139,{"inputs":[{"name":"floodlightactivitypublisherdynamictag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",139,{"inputs":[{"name":"floodlightactivitypublisherdynamictag"}],"output":{"name":"floodlightactivitypublisherdynamictag"}}],[11,"default","","",139,{"inputs":[{"name":"floodlightactivitypublisherdynamictag"}],"output":{"name":"floodlightactivitypublisherdynamictag"}}],[11,"deserialize","","",140,{"inputs":[{"name":"landingpage"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",140,{"inputs":[{"name":"landingpage"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"landingpage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",140,{"inputs":[{"name":"landingpage"}],"output":{"name":"landingpage"}}],[11,"default","","",140,{"inputs":[{"name":"landingpage"}],"output":{"name":"landingpage"}}],[11,"deserialize","","",141,{"inputs":[{"name":"size"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",141,{"inputs":[{"name":"size"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",141,{"inputs":[{"name":"size"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",141,{"inputs":[{"name":"size"}],"output":{"name":"size"}}],[11,"default","","",141,{"inputs":[{"name":"size"}],"output":{"name":"size"}}],[11,"deserialize","","",142,{"inputs":[{"name":"city"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",142,{"inputs":[{"name":"city"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",142,{"inputs":[{"name":"city"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",142,{"inputs":[{"name":"city"}],"output":{"name":"city"}}],[11,"default","","",142,{"inputs":[{"name":"city"}],"output":{"name":"city"}}],[11,"deserialize","","",143,{"inputs":[{"name":"clickthroughurlsuffixproperties"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",143,{"inputs":[{"name":"clickthroughurlsuffixproperties"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"clickthroughurlsuffixproperties"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",143,{"inputs":[{"name":"clickthroughurlsuffixproperties"}],"output":{"name":"clickthroughurlsuffixproperties"}}],[11,"default","","",143,{"inputs":[{"name":"clickthroughurlsuffixproperties"}],"output":{"name":"clickthroughurlsuffixproperties"}}],[11,"deserialize","","",144,{"inputs":[{"name":"placementgroup"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",144,{"inputs":[{"name":"placementgroup"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"placementgroup"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",144,{"inputs":[{"name":"placementgroup"}],"output":{"name":"placementgroup"}}],[11,"default","","",144,{"inputs":[{"name":"placementgroup"}],"output":{"name":"placementgroup"}}],[11,"deserialize","","",145,{"inputs":[{"name":"thirdpartytrackingurl"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",145,{"inputs":[{"name":"thirdpartytrackingurl"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"thirdpartytrackingurl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",145,{"inputs":[{"name":"thirdpartytrackingurl"}],"output":{"name":"thirdpartytrackingurl"}}],[11,"default","","",145,{"inputs":[{"name":"thirdpartytrackingurl"}],"output":{"name":"thirdpartytrackingurl"}}],[11,"deserialize","","",146,{"inputs":[{"name":"userrolepermission"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",146,{"inputs":[{"name":"userrolepermission"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"userrolepermission"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",146,{"inputs":[{"name":"userrolepermission"}],"output":{"name":"userrolepermission"}}],[11,"default","","",146,{"inputs":[{"name":"userrolepermission"}],"output":{"name":"userrolepermission"}}],[11,"deserialize","","",147,{"inputs":[{"name":"metroslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",147,{"inputs":[{"name":"metroslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",147,{"inputs":[{"name":"metroslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",147,{"inputs":[{"name":"metroslistresponse"}],"output":{"name":"metroslistresponse"}}],[11,"default","","",147,{"inputs":[{"name":"metroslistresponse"}],"output":{"name":"metroslistresponse"}}],[11,"deserialize","","",148,{"inputs":[{"name":"pricingschedule"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",148,{"inputs":[{"name":"pricingschedule"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"pricingschedule"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",148,{"inputs":[{"name":"pricingschedule"}],"output":{"name":"pricingschedule"}}],[11,"default","","",148,{"inputs":[{"name":"pricingschedule"}],"output":{"name":"pricingschedule"}}],[11,"deserialize","","",149,{"inputs":[{"name":"accountslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",149,{"inputs":[{"name":"accountslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",149,{"inputs":[{"name":"accountslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",149,{"inputs":[{"name":"accountslistresponse"}],"output":{"name":"accountslistresponse"}}],[11,"default","","",149,{"inputs":[{"name":"accountslistresponse"}],"output":{"name":"accountslistresponse"}}],[11,"deserialize","","",150,{"inputs":[{"name":"operatingsystem"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",150,{"inputs":[{"name":"operatingsystem"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"operatingsystem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",150,{"inputs":[{"name":"operatingsystem"}],"output":{"name":"operatingsystem"}}],[11,"default","","",150,{"inputs":[{"name":"operatingsystem"}],"output":{"name":"operatingsystem"}}],[11,"deserialize","","",151,{"inputs":[{"name":"activities"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",151,{"inputs":[{"name":"activities"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",151,{"inputs":[{"name":"activities"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",151,{"inputs":[{"name":"activities"}],"output":{"name":"activities"}}],[11,"default","","",151,{"inputs":[{"name":"activities"}],"output":{"name":"activities"}}],[11,"deserialize","","",152,{"inputs":[{"name":"listpopulationclause"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",152,{"inputs":[{"name":"listpopulationclause"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"listpopulationclause"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",152,{"inputs":[{"name":"listpopulationclause"}],"output":{"name":"listpopulationclause"}}],[11,"default","","",152,{"inputs":[{"name":"listpopulationclause"}],"output":{"name":"listpopulationclause"}}],[11,"deserialize","","",153,{"inputs":[{"name":"flight"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",153,{"inputs":[{"name":"flight"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",153,{"inputs":[{"name":"flight"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",153,{"inputs":[{"name":"flight"}],"output":{"name":"flight"}}],[11,"default","","",153,{"inputs":[{"name":"flight"}],"output":{"name":"flight"}}],[11,"deserialize","","",154,{"inputs":[{"name":"sorteddimension"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",154,{"inputs":[{"name":"sorteddimension"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"sorteddimension"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",154,{"inputs":[{"name":"sorteddimension"}],"output":{"name":"sorteddimension"}}],[11,"default","","",154,{"inputs":[{"name":"sorteddimension"}],"output":{"name":"sorteddimension"}}],[11,"deserialize","","",155,{"inputs":[{"name":"placementstrategieslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",155,{"inputs":[{"name":"placementstrategieslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",155,{"inputs":[{"name":"placementstrategieslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",155,{"inputs":[{"name":"placementstrategieslistresponse"}],"output":{"name":"placementstrategieslistresponse"}}],[11,"default","","",155,{"inputs":[{"name":"placementstrategieslistresponse"}],"output":{"name":"placementstrategieslistresponse"}}],[11,"deserialize","","",156,{"inputs":[{"name":"reportlist"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",156,{"inputs":[{"name":"reportlist"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",156,{"inputs":[{"name":"reportlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",156,{"inputs":[{"name":"reportlist"}],"output":{"name":"reportlist"}}],[11,"default","","",156,{"inputs":[{"name":"reportlist"}],"output":{"name":"reportlist"}}],[11,"deserialize","","",157,{"inputs":[{"name":"advertisergroup"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",157,{"inputs":[{"name":"advertisergroup"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"advertisergroup"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",157,{"inputs":[{"name":"advertisergroup"}],"output":{"name":"advertisergroup"}}],[11,"default","","",157,{"inputs":[{"name":"advertisergroup"}],"output":{"name":"advertisergroup"}}],[11,"deserialize","","",158,{"inputs":[{"name":"fscommand"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",158,{"inputs":[{"name":"fscommand"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"fscommand"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",158,{"inputs":[{"name":"fscommand"}],"output":{"name":"fscommand"}}],[11,"default","","",158,{"inputs":[{"name":"fscommand"}],"output":{"name":"fscommand"}}],[11,"deserialize","","",159,{"inputs":[{"name":"creativeoptimizationconfiguration"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",159,{"inputs":[{"name":"creativeoptimizationconfiguration"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",159,{"inputs":[{"name":"creativeoptimizationconfiguration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"creativeoptimizationconfiguration"}],"output":{"name":"creativeoptimizationconfiguration"}}],[11,"default","","",159,{"inputs":[{"name":"creativeoptimizationconfiguration"}],"output":{"name":"creativeoptimizationconfiguration"}}],[11,"deserialize","","",160,{"inputs":[{"name":"creativegroupslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",160,{"inputs":[{"name":"creativegroupslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",160,{"inputs":[{"name":"creativegroupslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",160,{"inputs":[{"name":"creativegroupslistresponse"}],"output":{"name":"creativegroupslistresponse"}}],[11,"default","","",160,{"inputs":[{"name":"creativegroupslistresponse"}],"output":{"name":"creativegroupslistresponse"}}],[11,"deserialize","","",161,{"inputs":[{"name":"offsetposition"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",161,{"inputs":[{"name":"offsetposition"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"offsetposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",161,{"inputs":[{"name":"offsetposition"}],"output":{"name":"offsetposition"}}],[11,"default","","",161,{"inputs":[{"name":"offsetposition"}],"output":{"name":"offsetposition"}}],[11,"deserialize","","",162,{"inputs":[{"name":"targetwindow"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",162,{"inputs":[{"name":"targetwindow"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"targetwindow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",162,{"inputs":[{"name":"targetwindow"}],"output":{"name":"targetwindow"}}],[11,"default","","",162,{"inputs":[{"name":"targetwindow"}],"output":{"name":"targetwindow"}}],[11,"deserialize","","",163,{"inputs":[{"name":"programmaticsetting"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",163,{"inputs":[{"name":"programmaticsetting"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",163,{"inputs":[{"name":"programmaticsetting"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",163,{"inputs":[{"name":"programmaticsetting"}],"output":{"name":"programmaticsetting"}}],[11,"default","","",163,{"inputs":[{"name":"programmaticsetting"}],"output":{"name":"programmaticsetting"}}],[11,"deserialize","","",164,{"inputs":[{"name":"sitecontact"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",164,{"inputs":[{"name":"sitecontact"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",164,{"inputs":[{"name":"sitecontact"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",164,{"inputs":[{"name":"sitecontact"}],"output":{"name":"sitecontact"}}],[11,"default","","",164,{"inputs":[{"name":"sitecontact"}],"output":{"name":"sitecontact"}}],[11,"deserialize","","",165,{"inputs":[{"name":"creativerotation"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",165,{"inputs":[{"name":"creativerotation"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",165,{"inputs":[{"name":"creativerotation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",165,{"inputs":[{"name":"creativerotation"}],"output":{"name":"creativerotation"}}],[11,"default","","",165,{"inputs":[{"name":"creativerotation"}],"output":{"name":"creativerotation"}}],[11,"deserialize","","",166,{"inputs":[{"name":"metro"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",166,{"inputs":[{"name":"metro"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",166,{"inputs":[{"name":"metro"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",166,{"inputs":[{"name":"metro"}],"output":{"name":"metro"}}],[11,"default","","",166,{"inputs":[{"name":"metro"}],"output":{"name":"metro"}}],[11,"deserialize","","",167,{"inputs":[{"name":"country"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",167,{"inputs":[{"name":"country"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",167,{"inputs":[{"name":"country"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",167,{"inputs":[{"name":"country"}],"output":{"name":"country"}}],[11,"default","","",167,{"inputs":[{"name":"country"}],"output":{"name":"country"}}],[11,"deserialize","","",168,{"inputs":[{"name":"postalcodeslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",168,{"inputs":[{"name":"postalcodeslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",168,{"inputs":[{"name":"postalcodeslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",168,{"inputs":[{"name":"postalcodeslistresponse"}],"output":{"name":"postalcodeslistresponse"}}],[11,"default","","",168,{"inputs":[{"name":"postalcodeslistresponse"}],"output":{"name":"postalcodeslistresponse"}}],[11,"deserialize","","",169,{"inputs":[{"name":"tagsetting"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",169,{"inputs":[{"name":"tagsetting"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",169,{"inputs":[{"name":"tagsetting"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",169,{"inputs":[{"name":"tagsetting"}],"output":{"name":"tagsetting"}}],[11,"default","","",169,{"inputs":[{"name":"tagsetting"}],"output":{"name":"tagsetting"}}],[11,"deserialize","","",170,{"inputs":[{"name":"creativefield"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",170,{"inputs":[{"name":"creativefield"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",170,{"inputs":[{"name":"creativefield"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",170,{"inputs":[{"name":"creativefield"}],"output":{"name":"creativefield"}}],[11,"default","","",170,{"inputs":[{"name":"creativefield"}],"output":{"name":"creativefield"}}],[11,"deserialize","","",171,{"inputs":[{"name":"creativefieldvalueslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",171,{"inputs":[{"name":"creativefieldvalueslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"creativefieldvalueslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",171,{"inputs":[{"name":"creativefieldvalueslistresponse"}],"output":{"name":"creativefieldvalueslistresponse"}}],[11,"default","","",171,{"inputs":[{"name":"creativefieldvalueslistresponse"}],"output":{"name":"creativefieldvalueslistresponse"}}],[11,"deserialize","","",172,{"inputs":[{"name":"reportfloodlightcriteriareportproperties"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",172,{"inputs":[{"name":"reportfloodlightcriteriareportproperties"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",172,{"inputs":[{"name":"reportfloodlightcriteriareportproperties"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",172,{"inputs":[{"name":"reportfloodlightcriteriareportproperties"}],"output":{"name":"reportfloodlightcriteriareportproperties"}}],[11,"default","","",172,{"inputs":[{"name":"reportfloodlightcriteriareportproperties"}],"output":{"name":"reportfloodlightcriteriareportproperties"}}],[11,"deserialize","","",173,{"inputs":[{"name":"directorysitecontact"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",173,{"inputs":[{"name":"directorysitecontact"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"directorysitecontact"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",173,{"inputs":[{"name":"directorysitecontact"}],"output":{"name":"directorysitecontact"}}],[11,"default","","",173,{"inputs":[{"name":"directorysitecontact"}],"output":{"name":"directorysitecontact"}}],[11,"deserialize","","",174,{"inputs":[{"name":"dimensionvalue"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",174,{"inputs":[{"name":"dimensionvalue"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",174,{"inputs":[{"name":"dimensionvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",174,{"inputs":[{"name":"dimensionvalue"}],"output":{"name":"dimensionvalue"}}],[11,"default","","",174,{"inputs":[{"name":"dimensionvalue"}],"output":{"name":"dimensionvalue"}}],[11,"deserialize","","",175,{"inputs":[{"name":"contentcategorieslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",175,{"inputs":[{"name":"contentcategorieslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"contentcategorieslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",175,{"inputs":[{"name":"contentcategorieslistresponse"}],"output":{"name":"contentcategorieslistresponse"}}],[11,"default","","",175,{"inputs":[{"name":"contentcategorieslistresponse"}],"output":{"name":"contentcategorieslistresponse"}}],[11,"deserialize","","",176,{"inputs":[{"name":"floodlightconfigurationslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",176,{"inputs":[{"name":"floodlightconfigurationslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"floodlightconfigurationslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",176,{"inputs":[{"name":"floodlightconfigurationslistresponse"}],"output":{"name":"floodlightconfigurationslistresponse"}}],[11,"default","","",176,{"inputs":[{"name":"floodlightconfigurationslistresponse"}],"output":{"name":"floodlightconfigurationslistresponse"}}],[11,"deserialize","","",177,{"inputs":[{"name":"order"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",177,{"inputs":[{"name":"order"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"order"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",177,{"inputs":[{"name":"order"}],"output":{"name":"order"}}],[11,"default","","",177,{"inputs":[{"name":"order"}],"output":{"name":"order"}}],[11,"deserialize","","",178,{"inputs":[{"name":"popupwindowproperties"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",178,{"inputs":[{"name":"popupwindowproperties"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",178,{"inputs":[{"name":"popupwindowproperties"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",178,{"inputs":[{"name":"popupwindowproperties"}],"output":{"name":"popupwindowproperties"}}],[11,"default","","",178,{"inputs":[{"name":"popupwindowproperties"}],"output":{"name":"popupwindowproperties"}}],[11,"deserialize","","",179,{"inputs":[{"name":"accountpermission"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",179,{"inputs":[{"name":"accountpermission"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",179,{"inputs":[{"name":"accountpermission"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",179,{"inputs":[{"name":"accountpermission"}],"output":{"name":"accountpermission"}}],[11,"default","","",179,{"inputs":[{"name":"accountpermission"}],"output":{"name":"accountpermission"}}],[11,"deserialize","","",180,{"inputs":[{"name":"project"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",180,{"inputs":[{"name":"project"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",180,{"inputs":[{"name":"project"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",180,{"inputs":[{"name":"project"}],"output":{"name":"project"}}],[11,"default","","",180,{"inputs":[{"name":"project"}],"output":{"name":"project"}}],[11,"deserialize","","",181,{"inputs":[{"name":"ad"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",181,{"inputs":[{"name":"ad"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",181,{"inputs":[{"name":"ad"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",181,{"inputs":[{"name":"ad"}],"output":{"name":"ad"}}],[11,"default","","",181,{"inputs":[{"name":"ad"}],"output":{"name":"ad"}}],[11,"deserialize","","",182,{"inputs":[{"name":"pricingschedulepricingperiod"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",182,{"inputs":[{"name":"pricingschedulepricingperiod"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"pricingschedulepricingperiod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",182,{"inputs":[{"name":"pricingschedulepricingperiod"}],"output":{"name":"pricingschedulepricingperiod"}}],[11,"default","","",182,{"inputs":[{"name":"pricingschedulepricingperiod"}],"output":{"name":"pricingschedulepricingperiod"}}],[11,"deserialize","","",183,{"inputs":[{"name":"eventtag"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",183,{"inputs":[{"name":"eventtag"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",183,{"inputs":[{"name":"eventtag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",183,{"inputs":[{"name":"eventtag"}],"output":{"name":"eventtag"}}],[11,"default","","",183,{"inputs":[{"name":"eventtag"}],"output":{"name":"eventtag"}}],[11,"deserialize","","",184,{"inputs":[{"name":"placementassignment"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",184,{"inputs":[{"name":"placementassignment"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"placementassignment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",184,{"inputs":[{"name":"placementassignment"}],"output":{"name":"placementassignment"}}],[11,"default","","",184,{"inputs":[{"name":"placementassignment"}],"output":{"name":"placementassignment"}}],[11,"deserialize","","",185,{"inputs":[{"name":"reachreportcompatiblefields"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",185,{"inputs":[{"name":"reachreportcompatiblefields"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",185,{"inputs":[{"name":"reachreportcompatiblefields"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",185,{"inputs":[{"name":"reachreportcompatiblefields"}],"output":{"name":"reachreportcompatiblefields"}}],[11,"default","","",185,{"inputs":[{"name":"reachreportcompatiblefields"}],"output":{"name":"reachreportcompatiblefields"}}],[11,"deserialize","","",186,{"inputs":[{"name":"site"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",186,{"inputs":[{"name":"site"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",186,{"inputs":[{"name":"site"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",186,{"inputs":[{"name":"site"}],"output":{"name":"site"}}],[11,"default","","",186,{"inputs":[{"name":"site"}],"output":{"name":"site"}}],[11,"deserialize","","",187,{"inputs":[{"name":"dfpsettings"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",187,{"inputs":[{"name":"dfpsettings"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",187,{"inputs":[{"name":"dfpsettings"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",187,{"inputs":[{"name":"dfpsettings"}],"output":{"name":"dfpsettings"}}],[11,"default","","",187,{"inputs":[{"name":"dfpsettings"}],"output":{"name":"dfpsettings"}}],[11,"deserialize","","",188,{"inputs":[{"name":"connectiontypeslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",188,{"inputs":[{"name":"connectiontypeslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"connectiontypeslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",188,{"inputs":[{"name":"connectiontypeslistresponse"}],"output":{"name":"connectiontypeslistresponse"}}],[11,"default","","",188,{"inputs":[{"name":"connectiontypeslistresponse"}],"output":{"name":"connectiontypeslistresponse"}}],[11,"deserialize","","",189,{"inputs":[{"name":"floodlightconfiguration"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",189,{"inputs":[{"name":"floodlightconfiguration"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",189,{"inputs":[{"name":"floodlightconfiguration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",189,{"inputs":[{"name":"floodlightconfiguration"}],"output":{"name":"floodlightconfiguration"}}],[11,"default","","",189,{"inputs":[{"name":"floodlightconfiguration"}],"output":{"name":"floodlightconfiguration"}}],[11,"deserialize","","",190,{"inputs":[{"name":"daterange"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",190,{"inputs":[{"name":"daterange"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",190,{"inputs":[{"name":"daterange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",190,{"inputs":[{"name":"daterange"}],"output":{"name":"daterange"}}],[11,"default","","",190,{"inputs":[{"name":"daterange"}],"output":{"name":"daterange"}}],[11,"deserialize","","",191,{"inputs":[{"name":"accountpermissiongroupslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",191,{"inputs":[{"name":"accountpermissiongroupslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",191,{"inputs":[{"name":"accountpermissiongroupslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",191,{"inputs":[{"name":"accountpermissiongroupslistresponse"}],"output":{"name":"accountpermissiongroupslistresponse"}}],[11,"default","","",191,{"inputs":[{"name":"accountpermissiongroupslistresponse"}],"output":{"name":"accountpermissiongroupslistresponse"}}],[11,"deserialize","","",192,{"inputs":[{"name":"sizeslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",192,{"inputs":[{"name":"sizeslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"sizeslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",192,{"inputs":[{"name":"sizeslistresponse"}],"output":{"name":"sizeslistresponse"}}],[11,"default","","",192,{"inputs":[{"name":"sizeslistresponse"}],"output":{"name":"sizeslistresponse"}}],[11,"deserialize","","",193,{"inputs":[{"name":"userroleslistresponse"},{"name":"__d"}],"output":{"name":"result"}}],[11,"serialize","","",193,{"inputs":[{"name":"userroleslistresponse"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"userroleslistresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",193,{"inputs":[{"name":"userroleslistresponse"}],"output":{"name":"userroleslistresponse"}}],[11,"default","","",193,{"inputs":[{"name":"userroleslistresponse"}],"output":{"name":"userroleslistresponse"}}],[11,"get","","Create a builder to help you perform the following task:",207,{"inputs":[{"name":"userrolepermissiongroupmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"userrolepermissiongroupgetcall"}}],[11,"list","","Create a builder to help you perform the following task:",207,{"inputs":[{"name":"userrolepermissiongroupmethods"},{"name":"str"}],"output":{"name":"userrolepermissiongrouplistcall"}}],[11,"get","","Create a builder to help you perform the following task:",208,{"inputs":[{"name":"platformtypemethods"},{"name":"str"},{"name":"str"}],"output":{"name":"platformtypegetcall"}}],[11,"list","","Create a builder to help you perform the following task:",208,{"inputs":[{"name":"platformtypemethods"},{"name":"str"}],"output":{"name":"platformtypelistcall"}}],[11,"patch","","Create a builder to help you perform the following task:",209,{"inputs":[{"name":"creativefieldvaluemethods"},{"name":"creativefieldvalue"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"creativefieldvaluepatchcall"}}],[11,"get","","Create a builder to help you perform the following task:",209,{"inputs":[{"name":"creativefieldvaluemethods"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"creativefieldvaluegetcall"}}],[11,"delete","","Create a builder to help you perform the following task:",209,{"inputs":[{"name":"creativefieldvaluemethods"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"creativefieldvaluedeletecall"}}],[11,"insert","","Create a builder to help you perform the following task:",209,{"inputs":[{"name":"creativefieldvaluemethods"},{"name":"creativefieldvalue"},{"name":"str"},{"name":"str"}],"output":{"name":"creativefieldvalueinsertcall"}}],[11,"update","","Create a builder to help you perform the following task:",209,{"inputs":[{"name":"creativefieldvaluemethods"},{"name":"creativefieldvalue"},{"name":"str"},{"name":"str"}],"output":{"name":"creativefieldvalueupdatecall"}}],[11,"list","","Create a builder to help you perform the following task:",209,{"inputs":[{"name":"creativefieldvaluemethods"},{"name":"str"},{"name":"str"}],"output":{"name":"creativefieldvaluelistcall"}}],[11,"update","","Create a builder to help you perform the following task:",210,{"inputs":[{"name":"creativefieldmethods"},{"name":"creativefield"},{"name":"str"}],"output":{"name":"creativefieldupdatecall"}}],[11,"list","","Create a builder to help you perform the following task:",210,{"inputs":[{"name":"creativefieldmethods"},{"name":"str"}],"output":{"name":"creativefieldlistcall"}}],[11,"delete","","Create a builder to help you perform the following task:",210,{"inputs":[{"name":"creativefieldmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"creativefielddeletecall"}}],[11,"get","","Create a builder to help you perform the following task:",210,{"inputs":[{"name":"creativefieldmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"creativefieldgetcall"}}],[11,"insert","","Create a builder to help you perform the following task:",210,{"inputs":[{"name":"creativefieldmethods"},{"name":"creativefield"},{"name":"str"}],"output":{"name":"creativefieldinsertcall"}}],[11,"patch","","Create a builder to help you perform the following task:",210,{"inputs":[{"name":"creativefieldmethods"},{"name":"creativefield"},{"name":"str"},{"name":"str"}],"output":{"name":"creativefieldpatchcall"}}],[11,"insert","","Create a builder to help you perform the following task:",211,{"inputs":[{"name":"userrolemethods"},{"name":"userrole"},{"name":"str"}],"output":{"name":"userroleinsertcall"}}],[11,"get","","Create a builder to help you perform the following task:",211,{"inputs":[{"name":"userrolemethods"},{"name":"str"},{"name":"str"}],"output":{"name":"userrolegetcall"}}],[11,"update","","Create a builder to help you perform the following task:",211,{"inputs":[{"name":"userrolemethods"},{"name":"userrole"},{"name":"str"}],"output":{"name":"userroleupdatecall"}}],[11,"delete","","Create a builder to help you perform the following task:",211,{"inputs":[{"name":"userrolemethods"},{"name":"str"},{"name":"str"}],"output":{"name":"userroledeletecall"}}],[11,"patch","","Create a builder to help you perform the following task:",211,{"inputs":[{"name":"userrolemethods"},{"name":"userrole"},{"name":"str"},{"name":"str"}],"output":{"name":"userrolepatchcall"}}],[11,"list","","Create a builder to help you perform the following task:",211,{"inputs":[{"name":"userrolemethods"},{"name":"str"}],"output":{"name":"userrolelistcall"}}],[11,"get","","Create a builder to help you perform the following task:",212,{"inputs":[{"name":"operatingsystemversionmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"operatingsystemversiongetcall"}}],[11,"list","","Create a builder to help you perform the following task:",212,{"inputs":[{"name":"operatingsystemversionmethods"},{"name":"str"}],"output":{"name":"operatingsystemversionlistcall"}}],[11,"get","","Create a builder to help you perform the following task:",213,{"inputs":[{"name":"landingpagemethods"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"landingpagegetcall"}}],[11,"update","","Create a builder to help you perform the following task:",213,{"inputs":[{"name":"landingpagemethods"},{"name":"landingpage"},{"name":"str"},{"name":"str"}],"output":{"name":"landingpageupdatecall"}}],[11,"list","","Create a builder to help you perform the following task:",213,{"inputs":[{"name":"landingpagemethods"},{"name":"str"},{"name":"str"}],"output":{"name":"landingpagelistcall"}}],[11,"insert","","Create a builder to help you perform the following task:",213,{"inputs":[{"name":"landingpagemethods"},{"name":"landingpage"},{"name":"str"},{"name":"str"}],"output":{"name":"landingpageinsertcall"}}],[11,"patch","","Create a builder to help you perform the following task:",213,{"inputs":[{"name":"landingpagemethods"},{"name":"landingpage"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"landingpagepatchcall"}}],[11,"delete","","Create a builder to help you perform the following task:",213,{"inputs":[{"name":"landingpagemethods"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"landingpagedeletecall"}}],[11,"insert","","Create a builder to help you perform the following task:",214,{"inputs":[{"name":"creativeassetmethods"},{"name":"creativeassetmetadata"},{"name":"str"},{"name":"str"}],"output":{"name":"creativeassetinsertcall"}}],[11,"insert","","Create a builder to help you perform the following task:",215,{"inputs":[{"name":"campaigncreativeassociationmethods"},{"name":"campaigncreativeassociation"},{"name":"str"},{"name":"str"}],"output":{"name":"campaigncreativeassociationinsertcall"}}],[11,"list","","Create a builder to help you perform the following task:",215,{"inputs":[{"name":"campaigncreativeassociationmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"campaigncreativeassociationlistcall"}}],[11,"list","","Create a builder to help you perform the following task:",216,{"inputs":[{"name":"changelogmethods"},{"name":"str"}],"output":{"name":"changeloglistcall"}}],[11,"get","","Create a builder to help you perform the following task:",216,{"inputs":[{"name":"changelogmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"changeloggetcall"}}],[11,"get","","Create a builder to help you perform the following task:",217,{"inputs":[{"name":"remarketinglistsharemethods"},{"name":"str"},{"name":"str"}],"output":{"name":"remarketinglistsharegetcall"}}],[11,"patch","","Create a builder to help you perform the following task:",217,{"inputs":[{"name":"remarketinglistsharemethods"},{"name":"remarketinglistshare"},{"name":"str"},{"name":"str"}],"output":{"name":"remarketinglistsharepatchcall"}}],[11,"update","","Create a builder to help you perform the following task:",217,{"inputs":[{"name":"remarketinglistsharemethods"},{"name":"remarketinglistshare"},{"name":"str"}],"output":{"name":"remarketinglistshareupdatecall"}}],[11,"run","","Create a builder to help you perform the following task:",218,{"inputs":[{"name":"reportmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"reportruncall"}}],[11,"patch","","Create a builder to help you perform the following task:",218,{"inputs":[{"name":"reportmethods"},{"name":"report"},{"name":"str"},{"name":"str"}],"output":{"name":"reportpatchcall"}}],[11,"files_list","","Create a builder to help you perform the following task:",218,{"inputs":[{"name":"reportmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"reportfilelistcall"}}],[11,"insert","","Create a builder to help you perform the following task:",218,{"inputs":[{"name":"reportmethods"},{"name":"report"},{"name":"str"}],"output":{"name":"reportinsertcall"}}],[11,"update","","Create a builder to help you perform the following task:",218,{"inputs":[{"name":"reportmethods"},{"name":"report"},{"name":"str"},{"name":"str"}],"output":{"name":"reportupdatecall"}}],[11,"compatible_fields_query","","Create a builder to help you perform the following task:",218,{"inputs":[{"name":"reportmethods"},{"name":"report"},{"name":"str"}],"output":{"name":"reportcompatiblefieldquerycall"}}],[11,"get","","Create a builder to help you perform the following task:",218,{"inputs":[{"name":"reportmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"reportgetcall"}}],[11,"files_get","","Create a builder to help you perform the following task:",218,{"inputs":[{"name":"reportmethods"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"reportfilegetcall"}}],[11,"delete","","Create a builder to help you perform the following task:",218,{"inputs":[{"name":"reportmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"reportdeletecall"}}],[11,"list","","Create a builder to help you perform the following task:",218,{"inputs":[{"name":"reportmethods"},{"name":"str"}],"output":{"name":"reportlistcall"}}],[11,"insert","","Create a builder to help you perform the following task:",219,{"inputs":[{"name":"advertisermethods"},{"name":"advertiser"},{"name":"str"}],"output":{"name":"advertiserinsertcall"}}],[11,"patch","","Create a builder to help you perform the following task:",219,{"inputs":[{"name":"advertisermethods"},{"name":"advertiser"},{"name":"str"},{"name":"str"}],"output":{"name":"advertiserpatchcall"}}],[11,"list","","Create a builder to help you perform the following task:",219,{"inputs":[{"name":"advertisermethods"},{"name":"str"}],"output":{"name":"advertiserlistcall"}}],[11,"update","","Create a builder to help you perform the following task:",219,{"inputs":[{"name":"advertisermethods"},{"name":"advertiser"},{"name":"str"}],"output":{"name":"advertiserupdatecall"}}],[11,"get","","Create a builder to help you perform the following task:",219,{"inputs":[{"name":"advertisermethods"},{"name":"str"},{"name":"str"}],"output":{"name":"advertisergetcall"}}],[11,"query","","Create a builder to help you perform the following task:",220,{"inputs":[{"name":"dimensionvaluemethods"},{"name":"dimensionvaluerequest"},{"name":"str"}],"output":{"name":"dimensionvaluequerycall"}}],[11,"delete","","Create a builder to help you perform the following task:",221,{"inputs":[{"name":"floodlightactivitygroupmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"floodlightactivitygroupdeletecall"}}],[11,"get","","Create a builder to help you perform the following task:",221,{"inputs":[{"name":"floodlightactivitygroupmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"floodlightactivitygroupgetcall"}}],[11,"patch","","Create a builder to help you perform the following task:",221,{"inputs":[{"name":"floodlightactivitygroupmethods"},{"name":"floodlightactivitygroup"},{"name":"str"},{"name":"str"}],"output":{"name":"floodlightactivitygrouppatchcall"}}],[11,"list","","Create a builder to help you perform the following task:",221,{"inputs":[{"name":"floodlightactivitygroupmethods"},{"name":"str"}],"output":{"name":"floodlightactivitygrouplistcall"}}],[11,"insert","","Create a builder to help you perform the following task:",221,{"inputs":[{"name":"floodlightactivitygroupmethods"},{"name":"floodlightactivitygroup"},{"name":"str"}],"output":{"name":"floodlightactivitygroupinsertcall"}}],[11,"update","","Create a builder to help you perform the following task:",221,{"inputs":[{"name":"floodlightactivitygroupmethods"},{"name":"floodlightactivitygroup"},{"name":"str"}],"output":{"name":"floodlightactivitygroupupdatecall"}}],[11,"list","","Create a builder to help you perform the following task:",222,{"inputs":[{"name":"metromethods"},{"name":"str"}],"output":{"name":"metrolistcall"}}],[11,"list","","Create a builder to help you perform the following task:",223,{"inputs":[{"name":"ordermethods"},{"name":"str"},{"name":"str"}],"output":{"name":"orderlistcall"}}],[11,"get","","Create a builder to help you perform the following task:",223,{"inputs":[{"name":"ordermethods"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"ordergetcall"}}],[11,"get","","Create a builder to help you perform the following task:",224,{"inputs":[{"name":"directorysitecontactmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"directorysitecontactgetcall"}}],[11,"list","","Create a builder to help you perform the following task:",224,{"inputs":[{"name":"directorysitecontactmethods"},{"name":"str"}],"output":{"name":"directorysitecontactlistcall"}}],[11,"list","","Create a builder to help you perform the following task:",225,{"inputs":[{"name":"userprofilemethods"}],"output":{"name":"userprofilelistcall"}}],[11,"get","","Create a builder to help you perform the following task:",225,{"inputs":[{"name":"userprofilemethods"},{"name":"str"}],"output":{"name":"userprofilegetcall"}}],[11,"patch","","Create a builder to help you perform the following task:",226,{"inputs":[{"name":"admethods"},{"name":"ad"},{"name":"str"},{"name":"str"}],"output":{"name":"adpatchcall"}}],[11,"insert","","Create a builder to help you perform the following task:",226,{"inputs":[{"name":"admethods"},{"name":"ad"},{"name":"str"}],"output":{"name":"adinsertcall"}}],[11,"list","","Create a builder to help you perform the following task:",226,{"inputs":[{"name":"admethods"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"get","","Create a builder to help you perform the following task:",226,{"inputs":[{"name":"admethods"},{"name":"str"},{"name":"str"}],"output":{"name":"adgetcall"}}],[11,"update","","Create a builder to help you perform the following task:",226,{"inputs":[{"name":"admethods"},{"name":"ad"},{"name":"str"}],"output":{"name":"adupdatecall"}}],[11,"get","","Create a builder to help you perform the following task:",227,{"inputs":[{"name":"accountpermissionmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"accountpermissiongetcall"}}],[11,"list","","Create a builder to help you perform the following task:",227,{"inputs":[{"name":"accountpermissionmethods"},{"name":"str"}],"output":{"name":"accountpermissionlistcall"}}],[11,"list","","Create a builder to help you perform the following task:",228,{"inputs":[{"name":"connectiontypemethods"},{"name":"str"}],"output":{"name":"connectiontypelistcall"}}],[11,"get","","Create a builder to help you perform the following task:",228,{"inputs":[{"name":"connectiontypemethods"},{"name":"str"},{"name":"str"}],"output":{"name":"connectiontypegetcall"}}],[11,"get","","Create a builder to help you perform the following task:",229,{"inputs":[{"name":"advertisergroupmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"advertisergroupgetcall"}}],[11,"list","","Create a builder to help you perform the following task:",229,{"inputs":[{"name":"advertisergroupmethods"},{"name":"str"}],"output":{"name":"advertisergrouplistcall"}}],[11,"insert","","Create a builder to help you perform the following task:",229,{"inputs":[{"name":"advertisergroupmethods"},{"name":"advertisergroup"},{"name":"str"}],"output":{"name":"advertisergroupinsertcall"}}],[11,"update","","Create a builder to help you perform the following task:",229,{"inputs":[{"name":"advertisergroupmethods"},{"name":"advertisergroup"},{"name":"str"}],"output":{"name":"advertisergroupupdatecall"}}],[11,"patch","","Create a builder to help you perform the following task:",229,{"inputs":[{"name":"advertisergroupmethods"},{"name":"advertisergroup"},{"name":"str"},{"name":"str"}],"output":{"name":"advertisergrouppatchcall"}}],[11,"delete","","Create a builder to help you perform the following task:",229,{"inputs":[{"name":"advertisergroupmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"advertisergroupdeletecall"}}],[11,"insert","","Create a builder to help you perform the following task:",230,{"inputs":[{"name":"sitemethods"},{"name":"site"},{"name":"str"}],"output":{"name":"siteinsertcall"}}],[11,"get","","Create a builder to help you perform the following task:",230,{"inputs":[{"name":"sitemethods"},{"name":"str"},{"name":"str"}],"output":{"name":"sitegetcall"}}],[11,"list","","Create a builder to help you perform the following task:",230,{"inputs":[{"name":"sitemethods"},{"name":"str"}],"output":{"name":"sitelistcall"}}],[11,"update","","Create a builder to help you perform the following task:",230,{"inputs":[{"name":"sitemethods"},{"name":"site"},{"name":"str"}],"output":{"name":"siteupdatecall"}}],[11,"patch","","Create a builder to help you perform the following task:",230,{"inputs":[{"name":"sitemethods"},{"name":"site"},{"name":"str"},{"name":"str"}],"output":{"name":"sitepatchcall"}}],[11,"get","","Create a builder to help you perform the following task:",231,{"inputs":[{"name":"floodlightactivitymethods"},{"name":"str"},{"name":"str"}],"output":{"name":"floodlightactivitygetcall"}}],[11,"list","","Create a builder to help you perform the following task:",231,{"inputs":[{"name":"floodlightactivitymethods"},{"name":"str"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"insert","","Create a builder to help you perform the following task:",231,{"inputs":[{"name":"floodlightactivitymethods"},{"name":"floodlightactivity"},{"name":"str"}],"output":{"name":"floodlightactivityinsertcall"}}],[11,"delete","","Create a builder to help you perform the following task:",231,{"inputs":[{"name":"floodlightactivitymethods"},{"name":"str"},{"name":"str"}],"output":{"name":"floodlightactivitydeletecall"}}],[11,"patch","","Create a builder to help you perform the following task:",231,{"inputs":[{"name":"floodlightactivitymethods"},{"name":"floodlightactivity"},{"name":"str"},{"name":"str"}],"output":{"name":"floodlightactivitypatchcall"}}],[11,"generatetag","","Create a builder to help you perform the following task:",231,{"inputs":[{"name":"floodlightactivitymethods"},{"name":"str"}],"output":{"name":"floodlightactivitygeneratetagcall"}}],[11,"update","","Create a builder to help you perform the following task:",231,{"inputs":[{"name":"floodlightactivitymethods"},{"name":"floodlightactivity"},{"name":"str"}],"output":{"name":"floodlightactivityupdatecall"}}],[11,"list","","Create a builder to help you perform the following task:",232,{"inputs":[{"name":"regionmethods"},{"name":"str"}],"output":{"name":"regionlistcall"}}],[11,"insert","","Create a builder to help you perform the following task:",233,{"inputs":[{"name":"creativegroupmethods"},{"name":"creativegroup"},{"name":"str"}],"output":{"name":"creativegroupinsertcall"}}],[11,"get","","Create a builder to help you perform the following task:",233,{"inputs":[{"name":"creativegroupmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"creativegroupgetcall"}}],[11,"update","","Create a builder to help you perform the following task:",233,{"inputs":[{"name":"creativegroupmethods"},{"name":"creativegroup"},{"name":"str"}],"output":{"name":"creativegroupupdatecall"}}],[11,"list","","Create a builder to help you perform the following task:",233,{"inputs":[{"name":"creativegroupmethods"},{"name":"str"}],"output":{"name":"creativegrouplistcall"}}],[11,"patch","","Create a builder to help you perform the following task:",233,{"inputs":[{"name":"creativegroupmethods"},{"name":"creativegroup"},{"name":"str"},{"name":"str"}],"output":{"name":"creativegrouppatchcall"}}],[11,"list","","Create a builder to help you perform the following task:",234,{"inputs":[{"name":"targetableremarketinglistmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"targetableremarketinglistlistcall"}}],[11,"get","","Create a builder to help you perform the following task:",234,{"inputs":[{"name":"targetableremarketinglistmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"targetableremarketinglistgetcall"}}],[11,"patch","","Create a builder to help you perform the following task:",235,{"inputs":[{"name":"subaccountmethods"},{"name":"subaccount"},{"name":"str"},{"name":"str"}],"output":{"name":"subaccountpatchcall"}}],[11,"insert","","Create a builder to help you perform the following task:",235,{"inputs":[{"name":"subaccountmethods"},{"name":"subaccount"},{"name":"str"}],"output":{"name":"subaccountinsertcall"}}],[11,"list","","Create a builder to help you perform the following task:",235,{"inputs":[{"name":"subaccountmethods"},{"name":"str"}],"output":{"name":"subaccountlistcall"}}],[11,"update","","Create a builder to help you perform the following task:",235,{"inputs":[{"name":"subaccountmethods"},{"name":"subaccount"},{"name":"str"}],"output":{"name":"subaccountupdatecall"}}],[11,"get","","Create a builder to help you perform the following task:",235,{"inputs":[{"name":"subaccountmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"subaccountgetcall"}}],[11,"get","","Create a builder to help you perform the following task:",236,{"inputs":[{"name":"mobilecarriermethods"},{"name":"str"},{"name":"str"}],"output":{"name":"mobilecarriergetcall"}}],[11,"list","","Create a builder to help you perform the following task:",236,{"inputs":[{"name":"mobilecarriermethods"},{"name":"str"}],"output":{"name":"mobilecarrierlistcall"}}],[11,"get","","Create a builder to help you perform the following task:",237,{"inputs":[{"name":"floodlightconfigurationmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"floodlightconfigurationgetcall"}}],[11,"update","","Create a builder to help you perform the following task:",237,{"inputs":[{"name":"floodlightconfigurationmethods"},{"name":"floodlightconfiguration"},{"name":"str"}],"output":{"name":"floodlightconfigurationupdatecall"}}],[11,"patch","","Create a builder to help you perform the following task:",237,{"inputs":[{"name":"floodlightconfigurationmethods"},{"name":"floodlightconfiguration"},{"name":"str"},{"name":"str"}],"output":{"name":"floodlightconfigurationpatchcall"}}],[11,"list","","Create a builder to help you perform the following task:",237,{"inputs":[{"name":"floodlightconfigurationmethods"},{"name":"str"}],"output":{"name":"floodlightconfigurationlistcall"}}],[11,"list","","Create a builder to help you perform the following task:",238,{"inputs":[{"name":"operatingsystemmethods"},{"name":"str"}],"output":{"name":"operatingsystemlistcall"}}],[11,"get","","Create a builder to help you perform the following task:",238,{"inputs":[{"name":"operatingsystemmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"operatingsystemgetcall"}}],[11,"list","","Create a builder to help you perform the following task:",239,{"inputs":[{"name":"filemethods"},{"name":"str"}],"output":{"name":"filelistcall"}}],[11,"get","","Create a builder to help you perform the following task:",239,{"inputs":[{"name":"filemethods"},{"name":"str"},{"name":"str"}],"output":{"name":"filegetcall"}}],[11,"list","","Create a builder to help you perform the following task:",240,{"inputs":[{"name":"placementgroupmethods"},{"name":"str"}],"output":{"name":"placementgrouplistcall"}}],[11,"update","","Create a builder to help you perform the following task:",240,{"inputs":[{"name":"placementgroupmethods"},{"name":"placementgroup"},{"name":"str"}],"output":{"name":"placementgroupupdatecall"}}],[11,"insert","","Create a builder to help you perform the following task:",240,{"inputs":[{"name":"placementgroupmethods"},{"name":"placementgroup"},{"name":"str"}],"output":{"name":"placementgroupinsertcall"}}],[11,"get","","Create a builder to help you perform the following task:",240,{"inputs":[{"name":"placementgroupmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"placementgroupgetcall"}}],[11,"patch","","Create a builder to help you perform the following task:",240,{"inputs":[{"name":"placementgroupmethods"},{"name":"placementgroup"},{"name":"str"},{"name":"str"}],"output":{"name":"placementgrouppatchcall"}}],[11,"list","","Create a builder to help you perform the following task:",241,{"inputs":[{"name":"inventoryitemmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"inventoryitemlistcall"}}],[11,"get","","Create a builder to help you perform the following task:",241,{"inputs":[{"name":"inventoryitemmethods"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"inventoryitemgetcall"}}],[11,"get","","Create a builder to help you perform the following task:",242,{"inputs":[{"name":"userrolepermissionmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"userrolepermissiongetcall"}}],[11,"list","","Create a builder to help you perform the following task:",242,{"inputs":[{"name":"userrolepermissionmethods"},{"name":"str"}],"output":{"name":"userrolepermissionlistcall"}}],[11,"list","","Create a builder to help you perform the following task:",243,{"inputs":[{"name":"accountpermissiongroupmethods"},{"name":"str"}],"output":{"name":"accountpermissiongrouplistcall"}}],[11,"get","","Create a builder to help you perform the following task:",243,{"inputs":[{"name":"accountpermissiongroupmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"accountpermissiongroupgetcall"}}],[11,"list","","Create a builder to help you perform the following task:",244,{"inputs":[{"name":"contentcategorymethods"},{"name":"str"}],"output":{"name":"contentcategorylistcall"}}],[11,"update","","Create a builder to help you perform the following task:",244,{"inputs":[{"name":"contentcategorymethods"},{"name":"contentcategory"},{"name":"str"}],"output":{"name":"contentcategoryupdatecall"}}],[11,"insert","","Create a builder to help you perform the following task:",244,{"inputs":[{"name":"contentcategorymethods"},{"name":"contentcategory"},{"name":"str"}],"output":{"name":"contentcategoryinsertcall"}}],[11,"delete","","Create a builder to help you perform the following task:",244,{"inputs":[{"name":"contentcategorymethods"},{"name":"str"},{"name":"str"}],"output":{"name":"contentcategorydeletecall"}}],[11,"get","","Create a builder to help you perform the following task:",244,{"inputs":[{"name":"contentcategorymethods"},{"name":"str"},{"name":"str"}],"output":{"name":"contentcategorygetcall"}}],[11,"patch","","Create a builder to help you perform the following task:",244,{"inputs":[{"name":"contentcategorymethods"},{"name":"contentcategory"},{"name":"str"},{"name":"str"}],"output":{"name":"contentcategorypatchcall"}}],[11,"update","","Create a builder to help you perform the following task:",245,{"inputs":[{"name":"creativemethods"},{"name":"creative"},{"name":"str"}],"output":{"name":"creativeupdatecall"}}],[11,"insert","","Create a builder to help you perform the following task:",245,{"inputs":[{"name":"creativemethods"},{"name":"creative"},{"name":"str"}],"output":{"name":"creativeinsertcall"}}],[11,"get","","Create a builder to help you perform the following task:",245,{"inputs":[{"name":"creativemethods"},{"name":"str"},{"name":"str"}],"output":{"name":"creativegetcall"}}],[11,"list","","Create a builder to help you perform the following task:",245,{"inputs":[{"name":"creativemethods"},{"name":"str"}],"output":{"name":"creativelistcall"}}],[11,"patch","","Create a builder to help you perform the following task:",245,{"inputs":[{"name":"creativemethods"},{"name":"creative"},{"name":"str"},{"name":"str"}],"output":{"name":"creativepatchcall"}}],[11,"get","","Create a builder to help you perform the following task:",246,{"inputs":[{"name":"campaignmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"campaigngetcall"}}],[11,"insert","","Create a builder to help you perform the following task:",246,{"inputs":[{"name":"campaignmethods"},{"name":"campaign"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"campaigninsertcall"}}],[11,"patch","","Create a builder to help you perform the following task:",246,{"inputs":[{"name":"campaignmethods"},{"name":"campaign"},{"name":"str"},{"name":"str"}],"output":{"name":"campaignpatchcall"}}],[11,"update","","Create a builder to help you perform the following task:",246,{"inputs":[{"name":"campaignmethods"},{"name":"campaign"},{"name":"str"}],"output":{"name":"campaignupdatecall"}}],[11,"list","","Create a builder to help you perform the following task:",246,{"inputs":[{"name":"campaignmethods"},{"name":"str"}],"output":{"name":"campaignlistcall"}}],[11,"delete","","Create a builder to help you perform the following task:",247,{"inputs":[{"name":"eventtagmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"eventtagdeletecall"}}],[11,"list","","Create a builder to help you perform the following task:",247,{"inputs":[{"name":"eventtagmethods"},{"name":"str"}],"output":{"name":"eventtaglistcall"}}],[11,"insert","","Create a builder to help you perform the following task:",247,{"inputs":[{"name":"eventtagmethods"},{"name":"eventtag"},{"name":"str"}],"output":{"name":"eventtaginsertcall"}}],[11,"patch","","Create a builder to help you perform the following task:",247,{"inputs":[{"name":"eventtagmethods"},{"name":"eventtag"},{"name":"str"},{"name":"str"}],"output":{"name":"eventtagpatchcall"}}],[11,"update","","Create a builder to help you perform the following task:",247,{"inputs":[{"name":"eventtagmethods"},{"name":"eventtag"},{"name":"str"}],"output":{"name":"eventtagupdatecall"}}],[11,"get","","Create a builder to help you perform the following task:",247,{"inputs":[{"name":"eventtagmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"eventtaggetcall"}}],[11,"get","","Create a builder to help you perform the following task:",248,{"inputs":[{"name":"remarketinglistmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"remarketinglistgetcall"}}],[11,"update","","Create a builder to help you perform the following task:",248,{"inputs":[{"name":"remarketinglistmethods"},{"name":"remarketinglist"},{"name":"str"}],"output":{"name":"remarketinglistupdatecall"}}],[11,"list","","Create a builder to help you perform the following task:",248,{"inputs":[{"name":"remarketinglistmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"remarketinglistlistcall"}}],[11,"patch","","Create a builder to help you perform the following task:",248,{"inputs":[{"name":"remarketinglistmethods"},{"name":"remarketinglist"},{"name":"str"},{"name":"str"}],"output":{"name":"remarketinglistpatchcall"}}],[11,"insert","","Create a builder to help you perform the following task:",248,{"inputs":[{"name":"remarketinglistmethods"},{"name":"remarketinglist"},{"name":"str"}],"output":{"name":"remarketinglistinsertcall"}}],[11,"list","","Create a builder to help you perform the following task:",249,{"inputs":[{"name":"citymethods"},{"name":"str"}],"output":{"name":"citylistcall"}}],[11,"update","","Create a builder to help you perform the following task:",250,{"inputs":[{"name":"placementstrategymethods"},{"name":"placementstrategy"},{"name":"str"}],"output":{"name":"placementstrategyupdatecall"}}],[11,"get","","Create a builder to help you perform the following task:",250,{"inputs":[{"name":"placementstrategymethods"},{"name":"str"},{"name":"str"}],"output":{"name":"placementstrategygetcall"}}],[11,"list","","Create a builder to help you perform the following task:",250,{"inputs":[{"name":"placementstrategymethods"},{"name":"str"}],"output":{"name":"placementstrategylistcall"}}],[11,"delete","","Create a builder to help you perform the following task:",250,{"inputs":[{"name":"placementstrategymethods"},{"name":"str"},{"name":"str"}],"output":{"name":"placementstrategydeletecall"}}],[11,"insert","","Create a builder to help you perform the following task:",250,{"inputs":[{"name":"placementstrategymethods"},{"name":"placementstrategy"},{"name":"str"}],"output":{"name":"placementstrategyinsertcall"}}],[11,"patch","","Create a builder to help you perform the following task:",250,{"inputs":[{"name":"placementstrategymethods"},{"name":"placementstrategy"},{"name":"str"},{"name":"str"}],"output":{"name":"placementstrategypatchcall"}}],[11,"list","","Create a builder to help you perform the following task:",251,{"inputs":[{"name":"projectmethods"},{"name":"str"}],"output":{"name":"projectlistcall"}}],[11,"get","","Create a builder to help you perform the following task:",251,{"inputs":[{"name":"projectmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"projectgetcall"}}],[11,"insert","","Create a builder to help you perform the following task:",252,{"inputs":[{"name":"directorysitemethods"},{"name":"directorysite"},{"name":"str"}],"output":{"name":"directorysiteinsertcall"}}],[11,"list","","Create a builder to help you perform the following task:",252,{"inputs":[{"name":"directorysitemethods"},{"name":"str"}],"output":{"name":"directorysitelistcall"}}],[11,"get","","Create a builder to help you perform the following task:",252,{"inputs":[{"name":"directorysitemethods"},{"name":"str"},{"name":"str"}],"output":{"name":"directorysitegetcall"}}],[11,"insert","","Create a builder to help you perform the following task:",253,{"inputs":[{"name":"sizemethods"},{"name":"size"},{"name":"str"}],"output":{"name":"sizeinsertcall"}}],[11,"list","","Create a builder to help you perform the following task:",253,{"inputs":[{"name":"sizemethods"},{"name":"str"}],"output":{"name":"sizelistcall"}}],[11,"get","","Create a builder to help you perform the following task:",253,{"inputs":[{"name":"sizemethods"},{"name":"str"},{"name":"str"}],"output":{"name":"sizegetcall"}}],[11,"get","","Create a builder to help you perform the following task:",254,{"inputs":[{"name":"accountactiveadsummarymethods"},{"name":"str"},{"name":"str"}],"output":{"name":"accountactiveadsummarygetcall"}}],[11,"update","","Create a builder to help you perform the following task:",255,{"inputs":[{"name":"accountuserprofilemethods"},{"name":"accountuserprofile"},{"name":"str"}],"output":{"name":"accountuserprofileupdatecall"}}],[11,"list","","Create a builder to help you perform the following task:",255,{"inputs":[{"name":"accountuserprofilemethods"},{"name":"str"}],"output":{"name":"accountuserprofilelistcall"}}],[11,"insert","","Create a builder to help you perform the following task:",255,{"inputs":[{"name":"accountuserprofilemethods"},{"name":"accountuserprofile"},{"name":"str"}],"output":{"name":"accountuserprofileinsertcall"}}],[11,"patch","","Create a builder to help you perform the following task:",255,{"inputs":[{"name":"accountuserprofilemethods"},{"name":"accountuserprofile"},{"name":"str"},{"name":"str"}],"output":{"name":"accountuserprofilepatchcall"}}],[11,"get","","Create a builder to help you perform the following task:",255,{"inputs":[{"name":"accountuserprofilemethods"},{"name":"str"},{"name":"str"}],"output":{"name":"accountuserprofilegetcall"}}],[11,"list","","Create a builder to help you perform the following task:",256,{"inputs":[{"name":"countrymethods"},{"name":"str"}],"output":{"name":"countrylistcall"}}],[11,"get","","Create a builder to help you perform the following task:",256,{"inputs":[{"name":"countrymethods"},{"name":"str"},{"name":"str"}],"output":{"name":"countrygetcall"}}],[11,"get","","Create a builder to help you perform the following task:",257,{"inputs":[{"name":"orderdocumentmethods"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"orderdocumentgetcall"}}],[11,"list","","Create a builder to help you perform the following task:",257,{"inputs":[{"name":"orderdocumentmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"orderdocumentlistcall"}}],[11,"get","","Create a builder to help you perform the following task:",258,{"inputs":[{"name":"postalcodemethods"},{"name":"str"},{"name":"str"}],"output":{"name":"postalcodegetcall"}}],[11,"list","","Create a builder to help you perform the following task:",258,{"inputs":[{"name":"postalcodemethods"},{"name":"str"}],"output":{"name":"postalcodelistcall"}}],[11,"list","","Create a builder to help you perform the following task:",259,{"inputs":[{"name":"browsermethods"},{"name":"str"}],"output":{"name":"browserlistcall"}}],[11,"get","","Create a builder to help you perform the following task:",260,{"inputs":[{"name":"accountmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"accountgetcall"}}],[11,"list","","Create a builder to help you perform the following task:",260,{"inputs":[{"name":"accountmethods"},{"name":"str"}],"output":{"name":"accountlistcall"}}],[11,"update","","Create a builder to help you perform the following task:",260,{"inputs":[{"name":"accountmethods"},{"name":"account"},{"name":"str"}],"output":{"name":"accountupdatecall"}}],[11,"patch","","Create a builder to help you perform the following task:",260,{"inputs":[{"name":"accountmethods"},{"name":"account"},{"name":"str"},{"name":"str"}],"output":{"name":"accountpatchcall"}}],[11,"patch","","Create a builder to help you perform the following task:",261,{"inputs":[{"name":"placementmethods"},{"name":"placement"},{"name":"str"},{"name":"str"}],"output":{"name":"placementpatchcall"}}],[11,"list","","Create a builder to help you perform the following task:",261,{"inputs":[{"name":"placementmethods"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"insert","","Create a builder to help you perform the following task:",261,{"inputs":[{"name":"placementmethods"},{"name":"placement"},{"name":"str"}],"output":{"name":"placementinsertcall"}}],[11,"update","","Create a builder to help you perform the following task:",261,{"inputs":[{"name":"placementmethods"},{"name":"placement"},{"name":"str"}],"output":{"name":"placementupdatecall"}}],[11,"generatetags","","Create a builder to help you perform the following task:",261,{"inputs":[{"name":"placementmethods"},{"name":"str"}],"output":{"name":"placementgeneratetagcall"}}],[11,"get","","Create a builder to help you perform the following task:",261,{"inputs":[{"name":"placementmethods"},{"name":"str"},{"name":"str"}],"output":{"name":"placementgetcall"}}],[11,"doit","","Perform the operation you have build so far.",262,{"inputs":[{"name":"userrolepermissiongroupgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",262,{"inputs":[{"name":"userrolepermissiongroupgetcall"},{"name":"str"}],"output":{"name":"userrolepermissiongroupgetcall"}}],[11,"id","","User role permission group ID.",262,{"inputs":[{"name":"userrolepermissiongroupgetcall"},{"name":"str"}],"output":{"name":"userrolepermissiongroupgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",262,{"inputs":[{"name":"userrolepermissiongroupgetcall"},{"name":"delegate"}],"output":{"name":"userrolepermissiongroupgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",262,{"inputs":[{"name":"userrolepermissiongroupgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"userrolepermissiongroupgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",262,{"inputs":[{"name":"userrolepermissiongroupgetcall"},{"name":"t"}],"output":{"name":"userrolepermissiongroupgetcall"}}],[11,"doit","","Perform the operation you have build so far.",263,{"inputs":[{"name":"userrolepermissiongrouplistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",263,{"inputs":[{"name":"userrolepermissiongrouplistcall"},{"name":"str"}],"output":{"name":"userrolepermissiongrouplistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",263,{"inputs":[{"name":"userrolepermissiongrouplistcall"},{"name":"delegate"}],"output":{"name":"userrolepermissiongrouplistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",263,{"inputs":[{"name":"userrolepermissiongrouplistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"userrolepermissiongrouplistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",263,{"inputs":[{"name":"userrolepermissiongrouplistcall"},{"name":"t"}],"output":{"name":"userrolepermissiongrouplistcall"}}],[11,"doit","","Perform the operation you have build so far.",264,{"inputs":[{"name":"platformtypegetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",264,{"inputs":[{"name":"platformtypegetcall"},{"name":"str"}],"output":{"name":"platformtypegetcall"}}],[11,"id","","Platform type ID.",264,{"inputs":[{"name":"platformtypegetcall"},{"name":"str"}],"output":{"name":"platformtypegetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",264,{"inputs":[{"name":"platformtypegetcall"},{"name":"delegate"}],"output":{"name":"platformtypegetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",264,{"inputs":[{"name":"platformtypegetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"platformtypegetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",264,{"inputs":[{"name":"platformtypegetcall"},{"name":"t"}],"output":{"name":"platformtypegetcall"}}],[11,"doit","","Perform the operation you have build so far.",265,{"inputs":[{"name":"platformtypelistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",265,{"inputs":[{"name":"platformtypelistcall"},{"name":"str"}],"output":{"name":"platformtypelistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",265,{"inputs":[{"name":"platformtypelistcall"},{"name":"delegate"}],"output":{"name":"platformtypelistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",265,{"inputs":[{"name":"platformtypelistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"platformtypelistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",265,{"inputs":[{"name":"platformtypelistcall"},{"name":"t"}],"output":{"name":"platformtypelistcall"}}],[11,"doit","","Perform the operation you have build so far.",266,{"inputs":[{"name":"creativefieldvaluepatchcall"}],"output":{"name":"result"}}],[11,"request","","",266,{"inputs":[{"name":"creativefieldvaluepatchcall"},{"name":"creativefieldvalue"}],"output":{"name":"creativefieldvaluepatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",266,{"inputs":[{"name":"creativefieldvaluepatchcall"},{"name":"str"}],"output":{"name":"creativefieldvaluepatchcall"}}],[11,"creative_field_id","","Creative field ID for this creative field value.",266,{"inputs":[{"name":"creativefieldvaluepatchcall"},{"name":"str"}],"output":{"name":"creativefieldvaluepatchcall"}}],[11,"id","","Creative Field Value ID",266,{"inputs":[{"name":"creativefieldvaluepatchcall"},{"name":"str"}],"output":{"name":"creativefieldvaluepatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",266,{"inputs":[{"name":"creativefieldvaluepatchcall"},{"name":"delegate"}],"output":{"name":"creativefieldvaluepatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",266,{"inputs":[{"name":"creativefieldvaluepatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativefieldvaluepatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",266,{"inputs":[{"name":"creativefieldvaluepatchcall"},{"name":"t"}],"output":{"name":"creativefieldvaluepatchcall"}}],[11,"doit","","Perform the operation you have build so far.",267,{"inputs":[{"name":"creativefieldvaluegetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",267,{"inputs":[{"name":"creativefieldvaluegetcall"},{"name":"str"}],"output":{"name":"creativefieldvaluegetcall"}}],[11,"creative_field_id","","Creative field ID for this creative field value.",267,{"inputs":[{"name":"creativefieldvaluegetcall"},{"name":"str"}],"output":{"name":"creativefieldvaluegetcall"}}],[11,"id","","Creative Field Value ID",267,{"inputs":[{"name":"creativefieldvaluegetcall"},{"name":"str"}],"output":{"name":"creativefieldvaluegetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",267,{"inputs":[{"name":"creativefieldvaluegetcall"},{"name":"delegate"}],"output":{"name":"creativefieldvaluegetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",267,{"inputs":[{"name":"creativefieldvaluegetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativefieldvaluegetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",267,{"inputs":[{"name":"creativefieldvaluegetcall"},{"name":"t"}],"output":{"name":"creativefieldvaluegetcall"}}],[11,"doit","","Perform the operation you have build so far.",268,{"inputs":[{"name":"creativefieldvaluedeletecall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",268,{"inputs":[{"name":"creativefieldvaluedeletecall"},{"name":"str"}],"output":{"name":"creativefieldvaluedeletecall"}}],[11,"creative_field_id","","Creative field ID for this creative field value.",268,{"inputs":[{"name":"creativefieldvaluedeletecall"},{"name":"str"}],"output":{"name":"creativefieldvaluedeletecall"}}],[11,"id","","Creative Field Value ID",268,{"inputs":[{"name":"creativefieldvaluedeletecall"},{"name":"str"}],"output":{"name":"creativefieldvaluedeletecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",268,{"inputs":[{"name":"creativefieldvaluedeletecall"},{"name":"delegate"}],"output":{"name":"creativefieldvaluedeletecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",268,{"inputs":[{"name":"creativefieldvaluedeletecall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativefieldvaluedeletecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",268,{"inputs":[{"name":"creativefieldvaluedeletecall"},{"name":"t"}],"output":{"name":"creativefieldvaluedeletecall"}}],[11,"doit","","Perform the operation you have build so far.",269,{"inputs":[{"name":"creativefieldvalueinsertcall"}],"output":{"name":"result"}}],[11,"request","","",269,{"inputs":[{"name":"creativefieldvalueinsertcall"},{"name":"creativefieldvalue"}],"output":{"name":"creativefieldvalueinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",269,{"inputs":[{"name":"creativefieldvalueinsertcall"},{"name":"str"}],"output":{"name":"creativefieldvalueinsertcall"}}],[11,"creative_field_id","","Creative field ID for this creative field value.",269,{"inputs":[{"name":"creativefieldvalueinsertcall"},{"name":"str"}],"output":{"name":"creativefieldvalueinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",269,{"inputs":[{"name":"creativefieldvalueinsertcall"},{"name":"delegate"}],"output":{"name":"creativefieldvalueinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",269,{"inputs":[{"name":"creativefieldvalueinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativefieldvalueinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",269,{"inputs":[{"name":"creativefieldvalueinsertcall"},{"name":"t"}],"output":{"name":"creativefieldvalueinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",270,{"inputs":[{"name":"creativefieldvalueupdatecall"}],"output":{"name":"result"}}],[11,"request","","",270,{"inputs":[{"name":"creativefieldvalueupdatecall"},{"name":"creativefieldvalue"}],"output":{"name":"creativefieldvalueupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",270,{"inputs":[{"name":"creativefieldvalueupdatecall"},{"name":"str"}],"output":{"name":"creativefieldvalueupdatecall"}}],[11,"creative_field_id","","Creative field ID for this creative field value.",270,{"inputs":[{"name":"creativefieldvalueupdatecall"},{"name":"str"}],"output":{"name":"creativefieldvalueupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",270,{"inputs":[{"name":"creativefieldvalueupdatecall"},{"name":"delegate"}],"output":{"name":"creativefieldvalueupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",270,{"inputs":[{"name":"creativefieldvalueupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativefieldvalueupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",270,{"inputs":[{"name":"creativefieldvalueupdatecall"},{"name":"t"}],"output":{"name":"creativefieldvalueupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",271,{"inputs":[{"name":"creativefieldvaluelistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",271,{"inputs":[{"name":"creativefieldvaluelistcall"},{"name":"str"}],"output":{"name":"creativefieldvaluelistcall"}}],[11,"creative_field_id","","Creative field ID for this creative field value.",271,{"inputs":[{"name":"creativefieldvaluelistcall"},{"name":"str"}],"output":{"name":"creativefieldvaluelistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",271,{"inputs":[{"name":"creativefieldvaluelistcall"},{"name":"str"}],"output":{"name":"creativefieldvaluelistcall"}}],[11,"sort_field","","Field by which to sort the list.",271,{"inputs":[{"name":"creativefieldvaluelistcall"},{"name":"str"}],"output":{"name":"creativefieldvaluelistcall"}}],[11,"search_string","","Allows searching for creative field values by their values. Wildcards (e.g. *) are not allowed.",271,{"inputs":[{"name":"creativefieldvaluelistcall"},{"name":"str"}],"output":{"name":"creativefieldvaluelistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",271,{"inputs":[{"name":"creativefieldvaluelistcall"},{"name":"str"}],"output":{"name":"creativefieldvaluelistcall"}}],[11,"max_results","","Maximum number of results to return.",271,{"inputs":[{"name":"creativefieldvaluelistcall"},{"name":"i32"}],"output":{"name":"creativefieldvaluelistcall"}}],[11,"add_ids","","Select only creative field values with these IDs.",271,{"inputs":[{"name":"creativefieldvaluelistcall"},{"name":"str"}],"output":{"name":"creativefieldvaluelistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",271,{"inputs":[{"name":"creativefieldvaluelistcall"},{"name":"delegate"}],"output":{"name":"creativefieldvaluelistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",271,{"inputs":[{"name":"creativefieldvaluelistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativefieldvaluelistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",271,{"inputs":[{"name":"creativefieldvaluelistcall"},{"name":"t"}],"output":{"name":"creativefieldvaluelistcall"}}],[11,"doit","","Perform the operation you have build so far.",272,{"inputs":[{"name":"creativefieldupdatecall"}],"output":{"name":"result"}}],[11,"request","","",272,{"inputs":[{"name":"creativefieldupdatecall"},{"name":"creativefield"}],"output":{"name":"creativefieldupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",272,{"inputs":[{"name":"creativefieldupdatecall"},{"name":"str"}],"output":{"name":"creativefieldupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",272,{"inputs":[{"name":"creativefieldupdatecall"},{"name":"delegate"}],"output":{"name":"creativefieldupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",272,{"inputs":[{"name":"creativefieldupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativefieldupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",272,{"inputs":[{"name":"creativefieldupdatecall"},{"name":"t"}],"output":{"name":"creativefieldupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",273,{"inputs":[{"name":"creativefieldlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",273,{"inputs":[{"name":"creativefieldlistcall"},{"name":"str"}],"output":{"name":"creativefieldlistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",273,{"inputs":[{"name":"creativefieldlistcall"},{"name":"str"}],"output":{"name":"creativefieldlistcall"}}],[11,"sort_field","","Field by which to sort the list.",273,{"inputs":[{"name":"creativefieldlistcall"},{"name":"str"}],"output":{"name":"creativefieldlistcall"}}],[11,"search_string","","Allows searching for creative fields by name or ID. Wildcards (*) are allowed. For example, \"creativefield*2015\" will return creative fields with names like \"creativefield June 2015\", \"creativefield April 2015\", or simply \"creativefield 2015\". Most of the searches also add wild-cards implicitly at the start and the end of the search string. For example, a search string of \"creativefield\" will match creative fields with the name \"my creativefield\", \"creativefield 2015\", or simply \"creativefield\".",273,{"inputs":[{"name":"creativefieldlistcall"},{"name":"str"}],"output":{"name":"creativefieldlistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",273,{"inputs":[{"name":"creativefieldlistcall"},{"name":"str"}],"output":{"name":"creativefieldlistcall"}}],[11,"max_results","","Maximum number of results to return.",273,{"inputs":[{"name":"creativefieldlistcall"},{"name":"i32"}],"output":{"name":"creativefieldlistcall"}}],[11,"add_ids","","Select only creative fields with these IDs.",273,{"inputs":[{"name":"creativefieldlistcall"},{"name":"str"}],"output":{"name":"creativefieldlistcall"}}],[11,"add_advertiser_ids","","Select only creative fields that belong to these advertisers.",273,{"inputs":[{"name":"creativefieldlistcall"},{"name":"str"}],"output":{"name":"creativefieldlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",273,{"inputs":[{"name":"creativefieldlistcall"},{"name":"delegate"}],"output":{"name":"creativefieldlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",273,{"inputs":[{"name":"creativefieldlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativefieldlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",273,{"inputs":[{"name":"creativefieldlistcall"},{"name":"t"}],"output":{"name":"creativefieldlistcall"}}],[11,"doit","","Perform the operation you have build so far.",274,{"inputs":[{"name":"creativefielddeletecall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",274,{"inputs":[{"name":"creativefielddeletecall"},{"name":"str"}],"output":{"name":"creativefielddeletecall"}}],[11,"id","","Creative Field ID",274,{"inputs":[{"name":"creativefielddeletecall"},{"name":"str"}],"output":{"name":"creativefielddeletecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",274,{"inputs":[{"name":"creativefielddeletecall"},{"name":"delegate"}],"output":{"name":"creativefielddeletecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",274,{"inputs":[{"name":"creativefielddeletecall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativefielddeletecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",274,{"inputs":[{"name":"creativefielddeletecall"},{"name":"t"}],"output":{"name":"creativefielddeletecall"}}],[11,"doit","","Perform the operation you have build so far.",275,{"inputs":[{"name":"creativefieldgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",275,{"inputs":[{"name":"creativefieldgetcall"},{"name":"str"}],"output":{"name":"creativefieldgetcall"}}],[11,"id","","Creative Field ID",275,{"inputs":[{"name":"creativefieldgetcall"},{"name":"str"}],"output":{"name":"creativefieldgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",275,{"inputs":[{"name":"creativefieldgetcall"},{"name":"delegate"}],"output":{"name":"creativefieldgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",275,{"inputs":[{"name":"creativefieldgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativefieldgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",275,{"inputs":[{"name":"creativefieldgetcall"},{"name":"t"}],"output":{"name":"creativefieldgetcall"}}],[11,"doit","","Perform the operation you have build so far.",276,{"inputs":[{"name":"creativefieldinsertcall"}],"output":{"name":"result"}}],[11,"request","","",276,{"inputs":[{"name":"creativefieldinsertcall"},{"name":"creativefield"}],"output":{"name":"creativefieldinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",276,{"inputs":[{"name":"creativefieldinsertcall"},{"name":"str"}],"output":{"name":"creativefieldinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",276,{"inputs":[{"name":"creativefieldinsertcall"},{"name":"delegate"}],"output":{"name":"creativefieldinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",276,{"inputs":[{"name":"creativefieldinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativefieldinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",276,{"inputs":[{"name":"creativefieldinsertcall"},{"name":"t"}],"output":{"name":"creativefieldinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",277,{"inputs":[{"name":"creativefieldpatchcall"}],"output":{"name":"result"}}],[11,"request","","",277,{"inputs":[{"name":"creativefieldpatchcall"},{"name":"creativefield"}],"output":{"name":"creativefieldpatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",277,{"inputs":[{"name":"creativefieldpatchcall"},{"name":"str"}],"output":{"name":"creativefieldpatchcall"}}],[11,"id","","Creative Field ID",277,{"inputs":[{"name":"creativefieldpatchcall"},{"name":"str"}],"output":{"name":"creativefieldpatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",277,{"inputs":[{"name":"creativefieldpatchcall"},{"name":"delegate"}],"output":{"name":"creativefieldpatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",277,{"inputs":[{"name":"creativefieldpatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativefieldpatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",277,{"inputs":[{"name":"creativefieldpatchcall"},{"name":"t"}],"output":{"name":"creativefieldpatchcall"}}],[11,"doit","","Perform the operation you have build so far.",278,{"inputs":[{"name":"userroleinsertcall"}],"output":{"name":"result"}}],[11,"request","","",278,{"inputs":[{"name":"userroleinsertcall"},{"name":"userrole"}],"output":{"name":"userroleinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",278,{"inputs":[{"name":"userroleinsertcall"},{"name":"str"}],"output":{"name":"userroleinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",278,{"inputs":[{"name":"userroleinsertcall"},{"name":"delegate"}],"output":{"name":"userroleinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",278,{"inputs":[{"name":"userroleinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"userroleinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",278,{"inputs":[{"name":"userroleinsertcall"},{"name":"t"}],"output":{"name":"userroleinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",279,{"inputs":[{"name":"userrolegetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",279,{"inputs":[{"name":"userrolegetcall"},{"name":"str"}],"output":{"name":"userrolegetcall"}}],[11,"id","","User role ID.",279,{"inputs":[{"name":"userrolegetcall"},{"name":"str"}],"output":{"name":"userrolegetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",279,{"inputs":[{"name":"userrolegetcall"},{"name":"delegate"}],"output":{"name":"userrolegetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",279,{"inputs":[{"name":"userrolegetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"userrolegetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",279,{"inputs":[{"name":"userrolegetcall"},{"name":"t"}],"output":{"name":"userrolegetcall"}}],[11,"doit","","Perform the operation you have build so far.",280,{"inputs":[{"name":"userroleupdatecall"}],"output":{"name":"result"}}],[11,"request","","",280,{"inputs":[{"name":"userroleupdatecall"},{"name":"userrole"}],"output":{"name":"userroleupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",280,{"inputs":[{"name":"userroleupdatecall"},{"name":"str"}],"output":{"name":"userroleupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",280,{"inputs":[{"name":"userroleupdatecall"},{"name":"delegate"}],"output":{"name":"userroleupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",280,{"inputs":[{"name":"userroleupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"userroleupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",280,{"inputs":[{"name":"userroleupdatecall"},{"name":"t"}],"output":{"name":"userroleupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",281,{"inputs":[{"name":"userroledeletecall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",281,{"inputs":[{"name":"userroledeletecall"},{"name":"str"}],"output":{"name":"userroledeletecall"}}],[11,"id","","User role ID.",281,{"inputs":[{"name":"userroledeletecall"},{"name":"str"}],"output":{"name":"userroledeletecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",281,{"inputs":[{"name":"userroledeletecall"},{"name":"delegate"}],"output":{"name":"userroledeletecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",281,{"inputs":[{"name":"userroledeletecall"},{"name":"t"},{"name":"t"}],"output":{"name":"userroledeletecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",281,{"inputs":[{"name":"userroledeletecall"},{"name":"t"}],"output":{"name":"userroledeletecall"}}],[11,"doit","","Perform the operation you have build so far.",282,{"inputs":[{"name":"userrolepatchcall"}],"output":{"name":"result"}}],[11,"request","","",282,{"inputs":[{"name":"userrolepatchcall"},{"name":"userrole"}],"output":{"name":"userrolepatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",282,{"inputs":[{"name":"userrolepatchcall"},{"name":"str"}],"output":{"name":"userrolepatchcall"}}],[11,"id","","User role ID.",282,{"inputs":[{"name":"userrolepatchcall"},{"name":"str"}],"output":{"name":"userrolepatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",282,{"inputs":[{"name":"userrolepatchcall"},{"name":"delegate"}],"output":{"name":"userrolepatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",282,{"inputs":[{"name":"userrolepatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"userrolepatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",282,{"inputs":[{"name":"userrolepatchcall"},{"name":"t"}],"output":{"name":"userrolepatchcall"}}],[11,"doit","","Perform the operation you have build so far.",283,{"inputs":[{"name":"userrolelistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",283,{"inputs":[{"name":"userrolelistcall"},{"name":"str"}],"output":{"name":"userrolelistcall"}}],[11,"subaccount_id","","Select only user roles that belong to this subaccount.",283,{"inputs":[{"name":"userrolelistcall"},{"name":"str"}],"output":{"name":"userrolelistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",283,{"inputs":[{"name":"userrolelistcall"},{"name":"str"}],"output":{"name":"userrolelistcall"}}],[11,"sort_field","","Field by which to sort the list.",283,{"inputs":[{"name":"userrolelistcall"},{"name":"str"}],"output":{"name":"userrolelistcall"}}],[11,"search_string","","Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"userrole*2015\" will return objects with names like \"userrole June 2015\", \"userrole April 2015\", or simply \"userrole 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"userrole\" will match objects with name \"my userrole\", \"userrole 2015\", or simply \"userrole\".",283,{"inputs":[{"name":"userrolelistcall"},{"name":"str"}],"output":{"name":"userrolelistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",283,{"inputs":[{"name":"userrolelistcall"},{"name":"str"}],"output":{"name":"userrolelistcall"}}],[11,"max_results","","Maximum number of results to return.",283,{"inputs":[{"name":"userrolelistcall"},{"name":"i32"}],"output":{"name":"userrolelistcall"}}],[11,"add_ids","","Select only user roles with the specified IDs.",283,{"inputs":[{"name":"userrolelistcall"},{"name":"str"}],"output":{"name":"userrolelistcall"}}],[11,"account_user_role_only","","Select only account level user roles not associated with any specific subaccount.",283,{"inputs":[{"name":"userrolelistcall"},{"name":"bool"}],"output":{"name":"userrolelistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",283,{"inputs":[{"name":"userrolelistcall"},{"name":"delegate"}],"output":{"name":"userrolelistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",283,{"inputs":[{"name":"userrolelistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"userrolelistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",283,{"inputs":[{"name":"userrolelistcall"},{"name":"t"}],"output":{"name":"userrolelistcall"}}],[11,"doit","","Perform the operation you have build so far.",284,{"inputs":[{"name":"operatingsystemversiongetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",284,{"inputs":[{"name":"operatingsystemversiongetcall"},{"name":"str"}],"output":{"name":"operatingsystemversiongetcall"}}],[11,"id","","Operating system version ID.",284,{"inputs":[{"name":"operatingsystemversiongetcall"},{"name":"str"}],"output":{"name":"operatingsystemversiongetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",284,{"inputs":[{"name":"operatingsystemversiongetcall"},{"name":"delegate"}],"output":{"name":"operatingsystemversiongetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",284,{"inputs":[{"name":"operatingsystemversiongetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"operatingsystemversiongetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",284,{"inputs":[{"name":"operatingsystemversiongetcall"},{"name":"t"}],"output":{"name":"operatingsystemversiongetcall"}}],[11,"doit","","Perform the operation you have build so far.",285,{"inputs":[{"name":"operatingsystemversionlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",285,{"inputs":[{"name":"operatingsystemversionlistcall"},{"name":"str"}],"output":{"name":"operatingsystemversionlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",285,{"inputs":[{"name":"operatingsystemversionlistcall"},{"name":"delegate"}],"output":{"name":"operatingsystemversionlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",285,{"inputs":[{"name":"operatingsystemversionlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"operatingsystemversionlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",285,{"inputs":[{"name":"operatingsystemversionlistcall"},{"name":"t"}],"output":{"name":"operatingsystemversionlistcall"}}],[11,"doit","","Perform the operation you have build so far.",286,{"inputs":[{"name":"landingpagegetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",286,{"inputs":[{"name":"landingpagegetcall"},{"name":"str"}],"output":{"name":"landingpagegetcall"}}],[11,"campaign_id","","Landing page campaign ID.",286,{"inputs":[{"name":"landingpagegetcall"},{"name":"str"}],"output":{"name":"landingpagegetcall"}}],[11,"id","","Landing page ID.",286,{"inputs":[{"name":"landingpagegetcall"},{"name":"str"}],"output":{"name":"landingpagegetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",286,{"inputs":[{"name":"landingpagegetcall"},{"name":"delegate"}],"output":{"name":"landingpagegetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",286,{"inputs":[{"name":"landingpagegetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"landingpagegetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",286,{"inputs":[{"name":"landingpagegetcall"},{"name":"t"}],"output":{"name":"landingpagegetcall"}}],[11,"doit","","Perform the operation you have build so far.",287,{"inputs":[{"name":"landingpageupdatecall"}],"output":{"name":"result"}}],[11,"request","","",287,{"inputs":[{"name":"landingpageupdatecall"},{"name":"landingpage"}],"output":{"name":"landingpageupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",287,{"inputs":[{"name":"landingpageupdatecall"},{"name":"str"}],"output":{"name":"landingpageupdatecall"}}],[11,"campaign_id","","Landing page campaign ID.",287,{"inputs":[{"name":"landingpageupdatecall"},{"name":"str"}],"output":{"name":"landingpageupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",287,{"inputs":[{"name":"landingpageupdatecall"},{"name":"delegate"}],"output":{"name":"landingpageupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",287,{"inputs":[{"name":"landingpageupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"landingpageupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",287,{"inputs":[{"name":"landingpageupdatecall"},{"name":"t"}],"output":{"name":"landingpageupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",288,{"inputs":[{"name":"landingpagelistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",288,{"inputs":[{"name":"landingpagelistcall"},{"name":"str"}],"output":{"name":"landingpagelistcall"}}],[11,"campaign_id","","Landing page campaign ID.",288,{"inputs":[{"name":"landingpagelistcall"},{"name":"str"}],"output":{"name":"landingpagelistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",288,{"inputs":[{"name":"landingpagelistcall"},{"name":"delegate"}],"output":{"name":"landingpagelistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",288,{"inputs":[{"name":"landingpagelistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"landingpagelistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",288,{"inputs":[{"name":"landingpagelistcall"},{"name":"t"}],"output":{"name":"landingpagelistcall"}}],[11,"doit","","Perform the operation you have build so far.",289,{"inputs":[{"name":"landingpageinsertcall"}],"output":{"name":"result"}}],[11,"request","","",289,{"inputs":[{"name":"landingpageinsertcall"},{"name":"landingpage"}],"output":{"name":"landingpageinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",289,{"inputs":[{"name":"landingpageinsertcall"},{"name":"str"}],"output":{"name":"landingpageinsertcall"}}],[11,"campaign_id","","Landing page campaign ID.",289,{"inputs":[{"name":"landingpageinsertcall"},{"name":"str"}],"output":{"name":"landingpageinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",289,{"inputs":[{"name":"landingpageinsertcall"},{"name":"delegate"}],"output":{"name":"landingpageinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",289,{"inputs":[{"name":"landingpageinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"landingpageinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",289,{"inputs":[{"name":"landingpageinsertcall"},{"name":"t"}],"output":{"name":"landingpageinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",290,{"inputs":[{"name":"landingpagepatchcall"}],"output":{"name":"result"}}],[11,"request","","",290,{"inputs":[{"name":"landingpagepatchcall"},{"name":"landingpage"}],"output":{"name":"landingpagepatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",290,{"inputs":[{"name":"landingpagepatchcall"},{"name":"str"}],"output":{"name":"landingpagepatchcall"}}],[11,"campaign_id","","Landing page campaign ID.",290,{"inputs":[{"name":"landingpagepatchcall"},{"name":"str"}],"output":{"name":"landingpagepatchcall"}}],[11,"id","","Landing page ID.",290,{"inputs":[{"name":"landingpagepatchcall"},{"name":"str"}],"output":{"name":"landingpagepatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",290,{"inputs":[{"name":"landingpagepatchcall"},{"name":"delegate"}],"output":{"name":"landingpagepatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",290,{"inputs":[{"name":"landingpagepatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"landingpagepatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",290,{"inputs":[{"name":"landingpagepatchcall"},{"name":"t"}],"output":{"name":"landingpagepatchcall"}}],[11,"doit","","Perform the operation you have build so far.",291,{"inputs":[{"name":"landingpagedeletecall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",291,{"inputs":[{"name":"landingpagedeletecall"},{"name":"str"}],"output":{"name":"landingpagedeletecall"}}],[11,"campaign_id","","Landing page campaign ID.",291,{"inputs":[{"name":"landingpagedeletecall"},{"name":"str"}],"output":{"name":"landingpagedeletecall"}}],[11,"id","","Landing page ID.",291,{"inputs":[{"name":"landingpagedeletecall"},{"name":"str"}],"output":{"name":"landingpagedeletecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",291,{"inputs":[{"name":"landingpagedeletecall"},{"name":"delegate"}],"output":{"name":"landingpagedeletecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",291,{"inputs":[{"name":"landingpagedeletecall"},{"name":"t"},{"name":"t"}],"output":{"name":"landingpagedeletecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",291,{"inputs":[{"name":"landingpagedeletecall"},{"name":"t"}],"output":{"name":"landingpagedeletecall"}}],[11,"upload","","Upload media all at once.\nIf the upload fails for whichever reason, all progress is lost.",292,{"inputs":[{"name":"creativeassetinsertcall"},{"name":"rs"},{"name":"mime"}],"output":{"name":"result"}}],[11,"upload_resumable","","Upload media in a resumable fashion.\nEven if the upload fails or is interrupted, it can be resumed for a \ncertain amount of time as the server maintains state temporarily.",292,{"inputs":[{"name":"creativeassetinsertcall"},{"name":"rs"},{"name":"mime"}],"output":{"name":"result"}}],[11,"request","","",292,{"inputs":[{"name":"creativeassetinsertcall"},{"name":"creativeassetmetadata"}],"output":{"name":"creativeassetinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",292,{"inputs":[{"name":"creativeassetinsertcall"},{"name":"str"}],"output":{"name":"creativeassetinsertcall"}}],[11,"advertiser_id","","Advertiser ID of this creative. This is a required field.",292,{"inputs":[{"name":"creativeassetinsertcall"},{"name":"str"}],"output":{"name":"creativeassetinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",292,{"inputs":[{"name":"creativeassetinsertcall"},{"name":"delegate"}],"output":{"name":"creativeassetinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",292,{"inputs":[{"name":"creativeassetinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativeassetinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",292,{"inputs":[{"name":"creativeassetinsertcall"},{"name":"t"}],"output":{"name":"creativeassetinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",293,{"inputs":[{"name":"campaigncreativeassociationinsertcall"}],"output":{"name":"result"}}],[11,"request","","",293,{"inputs":[{"name":"campaigncreativeassociationinsertcall"},{"name":"campaigncreativeassociation"}],"output":{"name":"campaigncreativeassociationinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",293,{"inputs":[{"name":"campaigncreativeassociationinsertcall"},{"name":"str"}],"output":{"name":"campaigncreativeassociationinsertcall"}}],[11,"campaign_id","","Campaign ID in this association.",293,{"inputs":[{"name":"campaigncreativeassociationinsertcall"},{"name":"str"}],"output":{"name":"campaigncreativeassociationinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",293,{"inputs":[{"name":"campaigncreativeassociationinsertcall"},{"name":"delegate"}],"output":{"name":"campaigncreativeassociationinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",293,{"inputs":[{"name":"campaigncreativeassociationinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"campaigncreativeassociationinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",293,{"inputs":[{"name":"campaigncreativeassociationinsertcall"},{"name":"t"}],"output":{"name":"campaigncreativeassociationinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",294,{"inputs":[{"name":"campaigncreativeassociationlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",294,{"inputs":[{"name":"campaigncreativeassociationlistcall"},{"name":"str"}],"output":{"name":"campaigncreativeassociationlistcall"}}],[11,"campaign_id","","Campaign ID in this association.",294,{"inputs":[{"name":"campaigncreativeassociationlistcall"},{"name":"str"}],"output":{"name":"campaigncreativeassociationlistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",294,{"inputs":[{"name":"campaigncreativeassociationlistcall"},{"name":"str"}],"output":{"name":"campaigncreativeassociationlistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",294,{"inputs":[{"name":"campaigncreativeassociationlistcall"},{"name":"str"}],"output":{"name":"campaigncreativeassociationlistcall"}}],[11,"max_results","","Maximum number of results to return.",294,{"inputs":[{"name":"campaigncreativeassociationlistcall"},{"name":"i32"}],"output":{"name":"campaigncreativeassociationlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",294,{"inputs":[{"name":"campaigncreativeassociationlistcall"},{"name":"delegate"}],"output":{"name":"campaigncreativeassociationlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",294,{"inputs":[{"name":"campaigncreativeassociationlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"campaigncreativeassociationlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",294,{"inputs":[{"name":"campaigncreativeassociationlistcall"},{"name":"t"}],"output":{"name":"campaigncreativeassociationlistcall"}}],[11,"doit","","Perform the operation you have build so far.",295,{"inputs":[{"name":"changeloglistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",295,{"inputs":[{"name":"changeloglistcall"},{"name":"str"}],"output":{"name":"changeloglistcall"}}],[11,"add_user_profile_ids","","Select only change logs with these user profile IDs.",295,{"inputs":[{"name":"changeloglistcall"},{"name":"str"}],"output":{"name":"changeloglistcall"}}],[11,"search_string","","Select only change logs whose object ID, user name, old or new values match the search string.",295,{"inputs":[{"name":"changeloglistcall"},{"name":"str"}],"output":{"name":"changeloglistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",295,{"inputs":[{"name":"changeloglistcall"},{"name":"str"}],"output":{"name":"changeloglistcall"}}],[11,"object_type","","Select only change logs with the specified object type.",295,{"inputs":[{"name":"changeloglistcall"},{"name":"str"}],"output":{"name":"changeloglistcall"}}],[11,"add_object_ids","","Select only change logs with these object IDs.",295,{"inputs":[{"name":"changeloglistcall"},{"name":"str"}],"output":{"name":"changeloglistcall"}}],[11,"min_change_time","","Select only change logs whose change time is before the specified minChangeTime.The time should be formatted as an RFC3339 date/time string. For example, for 10:54 PM on July 18th, 2015, in the America/New York time zone, the format is \"2015-07-18T22:54:00-04:00\". In other words, the year, month, day, the letter T, the hour (24-hour clock system), minute, second, and then the time zone offset.",295,{"inputs":[{"name":"changeloglistcall"},{"name":"str"}],"output":{"name":"changeloglistcall"}}],[11,"max_results","","Maximum number of results to return.",295,{"inputs":[{"name":"changeloglistcall"},{"name":"i32"}],"output":{"name":"changeloglistcall"}}],[11,"max_change_time","","Select only change logs whose change time is before the specified maxChangeTime.The time should be formatted as an RFC3339 date/time string. For example, for 10:54 PM on July 18th, 2015, in the America/New York time zone, the format is \"2015-07-18T22:54:00-04:00\". In other words, the year, month, day, the letter T, the hour (24-hour clock system), minute, second, and then the time zone offset.",295,{"inputs":[{"name":"changeloglistcall"},{"name":"str"}],"output":{"name":"changeloglistcall"}}],[11,"add_ids","","Select only change logs with these IDs.",295,{"inputs":[{"name":"changeloglistcall"},{"name":"str"}],"output":{"name":"changeloglistcall"}}],[11,"action","","Select only change logs with the specified action.",295,{"inputs":[{"name":"changeloglistcall"},{"name":"str"}],"output":{"name":"changeloglistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",295,{"inputs":[{"name":"changeloglistcall"},{"name":"delegate"}],"output":{"name":"changeloglistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",295,{"inputs":[{"name":"changeloglistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"changeloglistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",295,{"inputs":[{"name":"changeloglistcall"},{"name":"t"}],"output":{"name":"changeloglistcall"}}],[11,"doit","","Perform the operation you have build so far.",296,{"inputs":[{"name":"changeloggetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",296,{"inputs":[{"name":"changeloggetcall"},{"name":"str"}],"output":{"name":"changeloggetcall"}}],[11,"id","","Change log ID.",296,{"inputs":[{"name":"changeloggetcall"},{"name":"str"}],"output":{"name":"changeloggetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",296,{"inputs":[{"name":"changeloggetcall"},{"name":"delegate"}],"output":{"name":"changeloggetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",296,{"inputs":[{"name":"changeloggetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"changeloggetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",296,{"inputs":[{"name":"changeloggetcall"},{"name":"t"}],"output":{"name":"changeloggetcall"}}],[11,"doit","","Perform the operation you have build so far.",297,{"inputs":[{"name":"remarketinglistsharegetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",297,{"inputs":[{"name":"remarketinglistsharegetcall"},{"name":"str"}],"output":{"name":"remarketinglistsharegetcall"}}],[11,"remarketing_list_id","","Remarketing list ID.",297,{"inputs":[{"name":"remarketinglistsharegetcall"},{"name":"str"}],"output":{"name":"remarketinglistsharegetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",297,{"inputs":[{"name":"remarketinglistsharegetcall"},{"name":"delegate"}],"output":{"name":"remarketinglistsharegetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",297,{"inputs":[{"name":"remarketinglistsharegetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"remarketinglistsharegetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",297,{"inputs":[{"name":"remarketinglistsharegetcall"},{"name":"t"}],"output":{"name":"remarketinglistsharegetcall"}}],[11,"doit","","Perform the operation you have build so far.",298,{"inputs":[{"name":"remarketinglistsharepatchcall"}],"output":{"name":"result"}}],[11,"request","","",298,{"inputs":[{"name":"remarketinglistsharepatchcall"},{"name":"remarketinglistshare"}],"output":{"name":"remarketinglistsharepatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",298,{"inputs":[{"name":"remarketinglistsharepatchcall"},{"name":"str"}],"output":{"name":"remarketinglistsharepatchcall"}}],[11,"remarketing_list_id","","Remarketing list ID.",298,{"inputs":[{"name":"remarketinglistsharepatchcall"},{"name":"str"}],"output":{"name":"remarketinglistsharepatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",298,{"inputs":[{"name":"remarketinglistsharepatchcall"},{"name":"delegate"}],"output":{"name":"remarketinglistsharepatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",298,{"inputs":[{"name":"remarketinglistsharepatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"remarketinglistsharepatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",298,{"inputs":[{"name":"remarketinglistsharepatchcall"},{"name":"t"}],"output":{"name":"remarketinglistsharepatchcall"}}],[11,"doit","","Perform the operation you have build so far.",299,{"inputs":[{"name":"remarketinglistshareupdatecall"}],"output":{"name":"result"}}],[11,"request","","",299,{"inputs":[{"name":"remarketinglistshareupdatecall"},{"name":"remarketinglistshare"}],"output":{"name":"remarketinglistshareupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",299,{"inputs":[{"name":"remarketinglistshareupdatecall"},{"name":"str"}],"output":{"name":"remarketinglistshareupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",299,{"inputs":[{"name":"remarketinglistshareupdatecall"},{"name":"delegate"}],"output":{"name":"remarketinglistshareupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",299,{"inputs":[{"name":"remarketinglistshareupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"remarketinglistshareupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",299,{"inputs":[{"name":"remarketinglistshareupdatecall"},{"name":"t"}],"output":{"name":"remarketinglistshareupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",300,{"inputs":[{"name":"reportruncall"}],"output":{"name":"result"}}],[11,"profile_id","","The DFA profile ID.",300,{"inputs":[{"name":"reportruncall"},{"name":"str"}],"output":{"name":"reportruncall"}}],[11,"report_id","","The ID of the report.",300,{"inputs":[{"name":"reportruncall"},{"name":"str"}],"output":{"name":"reportruncall"}}],[11,"synchronous","","If set and true, tries to run the report synchronously.",300,{"inputs":[{"name":"reportruncall"},{"name":"bool"}],"output":{"name":"reportruncall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",300,{"inputs":[{"name":"reportruncall"},{"name":"delegate"}],"output":{"name":"reportruncall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",300,{"inputs":[{"name":"reportruncall"},{"name":"t"},{"name":"t"}],"output":{"name":"reportruncall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",300,{"inputs":[{"name":"reportruncall"},{"name":"t"}],"output":{"name":"reportruncall"}}],[11,"doit","","Perform the operation you have build so far.",301,{"inputs":[{"name":"reportpatchcall"}],"output":{"name":"result"}}],[11,"request","","",301,{"inputs":[{"name":"reportpatchcall"},{"name":"report"}],"output":{"name":"reportpatchcall"}}],[11,"profile_id","","The DFA user profile ID.",301,{"inputs":[{"name":"reportpatchcall"},{"name":"str"}],"output":{"name":"reportpatchcall"}}],[11,"report_id","","The ID of the report.",301,{"inputs":[{"name":"reportpatchcall"},{"name":"str"}],"output":{"name":"reportpatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",301,{"inputs":[{"name":"reportpatchcall"},{"name":"delegate"}],"output":{"name":"reportpatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",301,{"inputs":[{"name":"reportpatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"reportpatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",301,{"inputs":[{"name":"reportpatchcall"},{"name":"t"}],"output":{"name":"reportpatchcall"}}],[11,"doit","","Perform the operation you have build so far.",302,{"inputs":[{"name":"reportfilelistcall"}],"output":{"name":"result"}}],[11,"profile_id","","The DFA profile ID.",302,{"inputs":[{"name":"reportfilelistcall"},{"name":"str"}],"output":{"name":"reportfilelistcall"}}],[11,"report_id","","The ID of the parent report.",302,{"inputs":[{"name":"reportfilelistcall"},{"name":"str"}],"output":{"name":"reportfilelistcall"}}],[11,"sort_order","","Order of sorted results, default is 'DESCENDING'.",302,{"inputs":[{"name":"reportfilelistcall"},{"name":"str"}],"output":{"name":"reportfilelistcall"}}],[11,"sort_field","","The field by which to sort the list.",302,{"inputs":[{"name":"reportfilelistcall"},{"name":"str"}],"output":{"name":"reportfilelistcall"}}],[11,"page_token","","The value of the nextToken from the previous result page.",302,{"inputs":[{"name":"reportfilelistcall"},{"name":"str"}],"output":{"name":"reportfilelistcall"}}],[11,"max_results","","Maximum number of results to return.",302,{"inputs":[{"name":"reportfilelistcall"},{"name":"i32"}],"output":{"name":"reportfilelistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",302,{"inputs":[{"name":"reportfilelistcall"},{"name":"delegate"}],"output":{"name":"reportfilelistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",302,{"inputs":[{"name":"reportfilelistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"reportfilelistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",302,{"inputs":[{"name":"reportfilelistcall"},{"name":"t"}],"output":{"name":"reportfilelistcall"}}],[11,"doit","","Perform the operation you have build so far.",303,{"inputs":[{"name":"reportinsertcall"}],"output":{"name":"result"}}],[11,"request","","",303,{"inputs":[{"name":"reportinsertcall"},{"name":"report"}],"output":{"name":"reportinsertcall"}}],[11,"profile_id","","The DFA user profile ID.",303,{"inputs":[{"name":"reportinsertcall"},{"name":"str"}],"output":{"name":"reportinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",303,{"inputs":[{"name":"reportinsertcall"},{"name":"delegate"}],"output":{"name":"reportinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",303,{"inputs":[{"name":"reportinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"reportinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",303,{"inputs":[{"name":"reportinsertcall"},{"name":"t"}],"output":{"name":"reportinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",304,{"inputs":[{"name":"reportupdatecall"}],"output":{"name":"result"}}],[11,"request","","",304,{"inputs":[{"name":"reportupdatecall"},{"name":"report"}],"output":{"name":"reportupdatecall"}}],[11,"profile_id","","The DFA user profile ID.",304,{"inputs":[{"name":"reportupdatecall"},{"name":"str"}],"output":{"name":"reportupdatecall"}}],[11,"report_id","","The ID of the report.",304,{"inputs":[{"name":"reportupdatecall"},{"name":"str"}],"output":{"name":"reportupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",304,{"inputs":[{"name":"reportupdatecall"},{"name":"delegate"}],"output":{"name":"reportupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",304,{"inputs":[{"name":"reportupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"reportupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",304,{"inputs":[{"name":"reportupdatecall"},{"name":"t"}],"output":{"name":"reportupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",305,{"inputs":[{"name":"reportcompatiblefieldquerycall"}],"output":{"name":"result"}}],[11,"request","","",305,{"inputs":[{"name":"reportcompatiblefieldquerycall"},{"name":"report"}],"output":{"name":"reportcompatiblefieldquerycall"}}],[11,"profile_id","","The DFA user profile ID.",305,{"inputs":[{"name":"reportcompatiblefieldquerycall"},{"name":"str"}],"output":{"name":"reportcompatiblefieldquerycall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",305,{"inputs":[{"name":"reportcompatiblefieldquerycall"},{"name":"delegate"}],"output":{"name":"reportcompatiblefieldquerycall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",305,{"inputs":[{"name":"reportcompatiblefieldquerycall"},{"name":"t"},{"name":"t"}],"output":{"name":"reportcompatiblefieldquerycall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",305,{"inputs":[{"name":"reportcompatiblefieldquerycall"},{"name":"t"}],"output":{"name":"reportcompatiblefieldquerycall"}}],[11,"doit","","Perform the operation you have build so far.",306,{"inputs":[{"name":"reportgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","The DFA user profile ID.",306,{"inputs":[{"name":"reportgetcall"},{"name":"str"}],"output":{"name":"reportgetcall"}}],[11,"report_id","","The ID of the report.",306,{"inputs":[{"name":"reportgetcall"},{"name":"str"}],"output":{"name":"reportgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",306,{"inputs":[{"name":"reportgetcall"},{"name":"delegate"}],"output":{"name":"reportgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",306,{"inputs":[{"name":"reportgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"reportgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",306,{"inputs":[{"name":"reportgetcall"},{"name":"t"}],"output":{"name":"reportgetcall"}}],[11,"doit","","Perform the operation you have build so far.",307,{"inputs":[{"name":"reportfilegetcall"}],"output":{"name":"result"}}],[11,"profile_id","","The DFA profile ID.",307,{"inputs":[{"name":"reportfilegetcall"},{"name":"str"}],"output":{"name":"reportfilegetcall"}}],[11,"report_id","","The ID of the report.",307,{"inputs":[{"name":"reportfilegetcall"},{"name":"str"}],"output":{"name":"reportfilegetcall"}}],[11,"file_id","","The ID of the report file.",307,{"inputs":[{"name":"reportfilegetcall"},{"name":"str"}],"output":{"name":"reportfilegetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",307,{"inputs":[{"name":"reportfilegetcall"},{"name":"delegate"}],"output":{"name":"reportfilegetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",307,{"inputs":[{"name":"reportfilegetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"reportfilegetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",307,{"inputs":[{"name":"reportfilegetcall"},{"name":"t"}],"output":{"name":"reportfilegetcall"}}],[11,"doit","","Perform the operation you have build so far.",308,{"inputs":[{"name":"reportdeletecall"}],"output":{"name":"result"}}],[11,"profile_id","","The DFA user profile ID.",308,{"inputs":[{"name":"reportdeletecall"},{"name":"str"}],"output":{"name":"reportdeletecall"}}],[11,"report_id","","The ID of the report.",308,{"inputs":[{"name":"reportdeletecall"},{"name":"str"}],"output":{"name":"reportdeletecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",308,{"inputs":[{"name":"reportdeletecall"},{"name":"delegate"}],"output":{"name":"reportdeletecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",308,{"inputs":[{"name":"reportdeletecall"},{"name":"t"},{"name":"t"}],"output":{"name":"reportdeletecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",308,{"inputs":[{"name":"reportdeletecall"},{"name":"t"}],"output":{"name":"reportdeletecall"}}],[11,"doit","","Perform the operation you have build so far.",309,{"inputs":[{"name":"reportlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","The DFA user profile ID.",309,{"inputs":[{"name":"reportlistcall"},{"name":"str"}],"output":{"name":"reportlistcall"}}],[11,"sort_order","","Order of sorted results, default is 'DESCENDING'.",309,{"inputs":[{"name":"reportlistcall"},{"name":"str"}],"output":{"name":"reportlistcall"}}],[11,"sort_field","","The field by which to sort the list.",309,{"inputs":[{"name":"reportlistcall"},{"name":"str"}],"output":{"name":"reportlistcall"}}],[11,"scope","","The scope that defines which results are returned, default is 'MINE'.",309,{"inputs":[{"name":"reportlistcall"},{"name":"str"}],"output":{"name":"reportlistcall"}}],[11,"page_token","","The value of the nextToken from the previous result page.",309,{"inputs":[{"name":"reportlistcall"},{"name":"str"}],"output":{"name":"reportlistcall"}}],[11,"max_results","","Maximum number of results to return.",309,{"inputs":[{"name":"reportlistcall"},{"name":"i32"}],"output":{"name":"reportlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",309,{"inputs":[{"name":"reportlistcall"},{"name":"delegate"}],"output":{"name":"reportlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",309,{"inputs":[{"name":"reportlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"reportlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",309,{"inputs":[{"name":"reportlistcall"},{"name":"t"}],"output":{"name":"reportlistcall"}}],[11,"doit","","Perform the operation you have build so far.",310,{"inputs":[{"name":"advertiserinsertcall"}],"output":{"name":"result"}}],[11,"request","","",310,{"inputs":[{"name":"advertiserinsertcall"},{"name":"advertiser"}],"output":{"name":"advertiserinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",310,{"inputs":[{"name":"advertiserinsertcall"},{"name":"str"}],"output":{"name":"advertiserinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",310,{"inputs":[{"name":"advertiserinsertcall"},{"name":"delegate"}],"output":{"name":"advertiserinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",310,{"inputs":[{"name":"advertiserinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"advertiserinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",310,{"inputs":[{"name":"advertiserinsertcall"},{"name":"t"}],"output":{"name":"advertiserinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",311,{"inputs":[{"name":"advertiserpatchcall"}],"output":{"name":"result"}}],[11,"request","","",311,{"inputs":[{"name":"advertiserpatchcall"},{"name":"advertiser"}],"output":{"name":"advertiserpatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",311,{"inputs":[{"name":"advertiserpatchcall"},{"name":"str"}],"output":{"name":"advertiserpatchcall"}}],[11,"id","","Advertiser ID.",311,{"inputs":[{"name":"advertiserpatchcall"},{"name":"str"}],"output":{"name":"advertiserpatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",311,{"inputs":[{"name":"advertiserpatchcall"},{"name":"delegate"}],"output":{"name":"advertiserpatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",311,{"inputs":[{"name":"advertiserpatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"advertiserpatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",311,{"inputs":[{"name":"advertiserpatchcall"},{"name":"t"}],"output":{"name":"advertiserpatchcall"}}],[11,"doit","","Perform the operation you have build so far.",312,{"inputs":[{"name":"advertiserlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"str"}],"output":{"name":"advertiserlistcall"}}],[11,"subaccount_id","","Select only advertisers with these subaccount IDs.",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"str"}],"output":{"name":"advertiserlistcall"}}],[11,"status","","Select only advertisers with the specified status.",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"str"}],"output":{"name":"advertiserlistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"str"}],"output":{"name":"advertiserlistcall"}}],[11,"sort_field","","Field by which to sort the list.",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"str"}],"output":{"name":"advertiserlistcall"}}],[11,"search_string","","Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"advertiser*2015\" will return objects with names like \"advertiser June 2015\", \"advertiser April 2015\", or simply \"advertiser 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"advertiser\" will match objects with name \"my advertiser\", \"advertiser 2015\", or simply \"advertiser\".",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"str"}],"output":{"name":"advertiserlistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"str"}],"output":{"name":"advertiserlistcall"}}],[11,"only_parent","","Select only advertisers which use another advertiser's floodlight configuration.",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"bool"}],"output":{"name":"advertiserlistcall"}}],[11,"max_results","","Maximum number of results to return.",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"i32"}],"output":{"name":"advertiserlistcall"}}],[11,"include_advertisers_without_groups_only","","Select only advertisers which do not belong to any advertiser group.",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"bool"}],"output":{"name":"advertiserlistcall"}}],[11,"add_ids","","Select only advertisers with these IDs.",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"str"}],"output":{"name":"advertiserlistcall"}}],[11,"add_floodlight_configuration_ids","","Select only advertisers with these floodlight configuration IDs.",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"str"}],"output":{"name":"advertiserlistcall"}}],[11,"add_advertiser_group_ids","","Select only advertisers with these advertiser group IDs.",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"str"}],"output":{"name":"advertiserlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"delegate"}],"output":{"name":"advertiserlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"advertiserlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",312,{"inputs":[{"name":"advertiserlistcall"},{"name":"t"}],"output":{"name":"advertiserlistcall"}}],[11,"doit","","Perform the operation you have build so far.",313,{"inputs":[{"name":"advertiserupdatecall"}],"output":{"name":"result"}}],[11,"request","","",313,{"inputs":[{"name":"advertiserupdatecall"},{"name":"advertiser"}],"output":{"name":"advertiserupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",313,{"inputs":[{"name":"advertiserupdatecall"},{"name":"str"}],"output":{"name":"advertiserupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",313,{"inputs":[{"name":"advertiserupdatecall"},{"name":"delegate"}],"output":{"name":"advertiserupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",313,{"inputs":[{"name":"advertiserupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"advertiserupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",313,{"inputs":[{"name":"advertiserupdatecall"},{"name":"t"}],"output":{"name":"advertiserupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",314,{"inputs":[{"name":"advertisergetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",314,{"inputs":[{"name":"advertisergetcall"},{"name":"str"}],"output":{"name":"advertisergetcall"}}],[11,"id","","Advertiser ID.",314,{"inputs":[{"name":"advertisergetcall"},{"name":"str"}],"output":{"name":"advertisergetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",314,{"inputs":[{"name":"advertisergetcall"},{"name":"delegate"}],"output":{"name":"advertisergetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",314,{"inputs":[{"name":"advertisergetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"advertisergetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",314,{"inputs":[{"name":"advertisergetcall"},{"name":"t"}],"output":{"name":"advertisergetcall"}}],[11,"doit","","Perform the operation you have build so far.",315,{"inputs":[{"name":"dimensionvaluequerycall"}],"output":{"name":"result"}}],[11,"request","","",315,{"inputs":[{"name":"dimensionvaluequerycall"},{"name":"dimensionvaluerequest"}],"output":{"name":"dimensionvaluequerycall"}}],[11,"profile_id","","The DFA user profile ID.",315,{"inputs":[{"name":"dimensionvaluequerycall"},{"name":"str"}],"output":{"name":"dimensionvaluequerycall"}}],[11,"page_token","","The value of the nextToken from the previous result page.",315,{"inputs":[{"name":"dimensionvaluequerycall"},{"name":"str"}],"output":{"name":"dimensionvaluequerycall"}}],[11,"max_results","","Maximum number of results to return.",315,{"inputs":[{"name":"dimensionvaluequerycall"},{"name":"i32"}],"output":{"name":"dimensionvaluequerycall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",315,{"inputs":[{"name":"dimensionvaluequerycall"},{"name":"delegate"}],"output":{"name":"dimensionvaluequerycall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",315,{"inputs":[{"name":"dimensionvaluequerycall"},{"name":"t"},{"name":"t"}],"output":{"name":"dimensionvaluequerycall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",315,{"inputs":[{"name":"dimensionvaluequerycall"},{"name":"t"}],"output":{"name":"dimensionvaluequerycall"}}],[11,"doit","","Perform the operation you have build so far.",316,{"inputs":[{"name":"floodlightactivitygroupdeletecall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",316,{"inputs":[{"name":"floodlightactivitygroupdeletecall"},{"name":"str"}],"output":{"name":"floodlightactivitygroupdeletecall"}}],[11,"id","","Floodlight activity Group ID.",316,{"inputs":[{"name":"floodlightactivitygroupdeletecall"},{"name":"str"}],"output":{"name":"floodlightactivitygroupdeletecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",316,{"inputs":[{"name":"floodlightactivitygroupdeletecall"},{"name":"delegate"}],"output":{"name":"floodlightactivitygroupdeletecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",316,{"inputs":[{"name":"floodlightactivitygroupdeletecall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightactivitygroupdeletecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",316,{"inputs":[{"name":"floodlightactivitygroupdeletecall"},{"name":"t"}],"output":{"name":"floodlightactivitygroupdeletecall"}}],[11,"doit","","Perform the operation you have build so far.",317,{"inputs":[{"name":"floodlightactivitygroupgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",317,{"inputs":[{"name":"floodlightactivitygroupgetcall"},{"name":"str"}],"output":{"name":"floodlightactivitygroupgetcall"}}],[11,"id","","Floodlight activity Group ID.",317,{"inputs":[{"name":"floodlightactivitygroupgetcall"},{"name":"str"}],"output":{"name":"floodlightactivitygroupgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",317,{"inputs":[{"name":"floodlightactivitygroupgetcall"},{"name":"delegate"}],"output":{"name":"floodlightactivitygroupgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",317,{"inputs":[{"name":"floodlightactivitygroupgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightactivitygroupgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",317,{"inputs":[{"name":"floodlightactivitygroupgetcall"},{"name":"t"}],"output":{"name":"floodlightactivitygroupgetcall"}}],[11,"doit","","Perform the operation you have build so far.",318,{"inputs":[{"name":"floodlightactivitygrouppatchcall"}],"output":{"name":"result"}}],[11,"request","","",318,{"inputs":[{"name":"floodlightactivitygrouppatchcall"},{"name":"floodlightactivitygroup"}],"output":{"name":"floodlightactivitygrouppatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",318,{"inputs":[{"name":"floodlightactivitygrouppatchcall"},{"name":"str"}],"output":{"name":"floodlightactivitygrouppatchcall"}}],[11,"id","","Floodlight activity Group ID.",318,{"inputs":[{"name":"floodlightactivitygrouppatchcall"},{"name":"str"}],"output":{"name":"floodlightactivitygrouppatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",318,{"inputs":[{"name":"floodlightactivitygrouppatchcall"},{"name":"delegate"}],"output":{"name":"floodlightactivitygrouppatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",318,{"inputs":[{"name":"floodlightactivitygrouppatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightactivitygrouppatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",318,{"inputs":[{"name":"floodlightactivitygrouppatchcall"},{"name":"t"}],"output":{"name":"floodlightactivitygrouppatchcall"}}],[11,"doit","","Perform the operation you have build so far.",319,{"inputs":[{"name":"floodlightactivitygrouplistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",319,{"inputs":[{"name":"floodlightactivitygrouplistcall"},{"name":"str"}],"output":{"name":"floodlightactivitygrouplistcall"}}],[11,"type_","","Select only floodlight activity groups with the specified floodlight activity group type.",319,{"inputs":[{"name":"floodlightactivitygrouplistcall"},{"name":"str"}],"output":{"name":"floodlightactivitygrouplistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",319,{"inputs":[{"name":"floodlightactivitygrouplistcall"},{"name":"str"}],"output":{"name":"floodlightactivitygrouplistcall"}}],[11,"sort_field","","Field by which to sort the list.",319,{"inputs":[{"name":"floodlightactivitygrouplistcall"},{"name":"str"}],"output":{"name":"floodlightactivitygrouplistcall"}}],[11,"search_string","","Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"floodlightactivitygroup*2015\" will return objects with names like \"floodlightactivitygroup June 2015\", \"floodlightactivitygroup April 2015\", or simply \"floodlightactivitygroup 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"floodlightactivitygroup\" will match objects with name \"my floodlightactivitygroup activity\", \"floodlightactivitygroup 2015\", or simply \"floodlightactivitygroup\".",319,{"inputs":[{"name":"floodlightactivitygrouplistcall"},{"name":"str"}],"output":{"name":"floodlightactivitygrouplistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",319,{"inputs":[{"name":"floodlightactivitygrouplistcall"},{"name":"str"}],"output":{"name":"floodlightactivitygrouplistcall"}}],[11,"max_results","","Maximum number of results to return.",319,{"inputs":[{"name":"floodlightactivitygrouplistcall"},{"name":"i32"}],"output":{"name":"floodlightactivitygrouplistcall"}}],[11,"add_ids","","Select only floodlight activity groups with the specified IDs. Must specify either advertiserId or floodlightConfigurationId for a non-empty result.",319,{"inputs":[{"name":"floodlightactivitygrouplistcall"},{"name":"str"}],"output":{"name":"floodlightactivitygrouplistcall"}}],[11,"floodlight_configuration_id","","Select only floodlight activity groups with the specified floodlight configuration ID. Must specify either advertiserId, or floodlightConfigurationId for a non-empty result.",319,{"inputs":[{"name":"floodlightactivitygrouplistcall"},{"name":"str"}],"output":{"name":"floodlightactivitygrouplistcall"}}],[11,"advertiser_id","","Select only floodlight activity groups with the specified advertiser ID. Must specify either advertiserId or floodlightConfigurationId for a non-empty result.",319,{"inputs":[{"name":"floodlightactivitygrouplistcall"},{"name":"str"}],"output":{"name":"floodlightactivitygrouplistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",319,{"inputs":[{"name":"floodlightactivitygrouplistcall"},{"name":"delegate"}],"output":{"name":"floodlightactivitygrouplistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",319,{"inputs":[{"name":"floodlightactivitygrouplistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightactivitygrouplistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",319,{"inputs":[{"name":"floodlightactivitygrouplistcall"},{"name":"t"}],"output":{"name":"floodlightactivitygrouplistcall"}}],[11,"doit","","Perform the operation you have build so far.",320,{"inputs":[{"name":"floodlightactivitygroupinsertcall"}],"output":{"name":"result"}}],[11,"request","","",320,{"inputs":[{"name":"floodlightactivitygroupinsertcall"},{"name":"floodlightactivitygroup"}],"output":{"name":"floodlightactivitygroupinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",320,{"inputs":[{"name":"floodlightactivitygroupinsertcall"},{"name":"str"}],"output":{"name":"floodlightactivitygroupinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",320,{"inputs":[{"name":"floodlightactivitygroupinsertcall"},{"name":"delegate"}],"output":{"name":"floodlightactivitygroupinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",320,{"inputs":[{"name":"floodlightactivitygroupinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightactivitygroupinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",320,{"inputs":[{"name":"floodlightactivitygroupinsertcall"},{"name":"t"}],"output":{"name":"floodlightactivitygroupinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",321,{"inputs":[{"name":"floodlightactivitygroupupdatecall"}],"output":{"name":"result"}}],[11,"request","","",321,{"inputs":[{"name":"floodlightactivitygroupupdatecall"},{"name":"floodlightactivitygroup"}],"output":{"name":"floodlightactivitygroupupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",321,{"inputs":[{"name":"floodlightactivitygroupupdatecall"},{"name":"str"}],"output":{"name":"floodlightactivitygroupupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",321,{"inputs":[{"name":"floodlightactivitygroupupdatecall"},{"name":"delegate"}],"output":{"name":"floodlightactivitygroupupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",321,{"inputs":[{"name":"floodlightactivitygroupupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightactivitygroupupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",321,{"inputs":[{"name":"floodlightactivitygroupupdatecall"},{"name":"t"}],"output":{"name":"floodlightactivitygroupupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",322,{"inputs":[{"name":"metrolistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",322,{"inputs":[{"name":"metrolistcall"},{"name":"str"}],"output":{"name":"metrolistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",322,{"inputs":[{"name":"metrolistcall"},{"name":"delegate"}],"output":{"name":"metrolistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",322,{"inputs":[{"name":"metrolistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"metrolistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",322,{"inputs":[{"name":"metrolistcall"},{"name":"t"}],"output":{"name":"metrolistcall"}}],[11,"doit","","Perform the operation you have build so far.",323,{"inputs":[{"name":"orderlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",323,{"inputs":[{"name":"orderlistcall"},{"name":"str"}],"output":{"name":"orderlistcall"}}],[11,"project_id","","Project ID for orders.",323,{"inputs":[{"name":"orderlistcall"},{"name":"str"}],"output":{"name":"orderlistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",323,{"inputs":[{"name":"orderlistcall"},{"name":"str"}],"output":{"name":"orderlistcall"}}],[11,"sort_field","","Field by which to sort the list.",323,{"inputs":[{"name":"orderlistcall"},{"name":"str"}],"output":{"name":"orderlistcall"}}],[11,"add_site_id","","Select only orders that are associated with these site IDs.",323,{"inputs":[{"name":"orderlistcall"},{"name":"str"}],"output":{"name":"orderlistcall"}}],[11,"search_string","","Allows searching for orders by name or ID. Wildcards (*) are allowed. For example, \"order*2015\" will return orders with names like \"order June 2015\", \"order April 2015\", or simply \"order 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"order\" will match orders with name \"my order\", \"order 2015\", or simply \"order\".",323,{"inputs":[{"name":"orderlistcall"},{"name":"str"}],"output":{"name":"orderlistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",323,{"inputs":[{"name":"orderlistcall"},{"name":"str"}],"output":{"name":"orderlistcall"}}],[11,"max_results","","Maximum number of results to return.",323,{"inputs":[{"name":"orderlistcall"},{"name":"i32"}],"output":{"name":"orderlistcall"}}],[11,"add_ids","","Select only orders with these IDs.",323,{"inputs":[{"name":"orderlistcall"},{"name":"str"}],"output":{"name":"orderlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",323,{"inputs":[{"name":"orderlistcall"},{"name":"delegate"}],"output":{"name":"orderlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",323,{"inputs":[{"name":"orderlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"orderlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",323,{"inputs":[{"name":"orderlistcall"},{"name":"t"}],"output":{"name":"orderlistcall"}}],[11,"doit","","Perform the operation you have build so far.",324,{"inputs":[{"name":"ordergetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",324,{"inputs":[{"name":"ordergetcall"},{"name":"str"}],"output":{"name":"ordergetcall"}}],[11,"project_id","","Project ID for orders.",324,{"inputs":[{"name":"ordergetcall"},{"name":"str"}],"output":{"name":"ordergetcall"}}],[11,"id","","Order ID.",324,{"inputs":[{"name":"ordergetcall"},{"name":"str"}],"output":{"name":"ordergetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",324,{"inputs":[{"name":"ordergetcall"},{"name":"delegate"}],"output":{"name":"ordergetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",324,{"inputs":[{"name":"ordergetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"ordergetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",324,{"inputs":[{"name":"ordergetcall"},{"name":"t"}],"output":{"name":"ordergetcall"}}],[11,"doit","","Perform the operation you have build so far.",325,{"inputs":[{"name":"directorysitecontactgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",325,{"inputs":[{"name":"directorysitecontactgetcall"},{"name":"str"}],"output":{"name":"directorysitecontactgetcall"}}],[11,"id","","Directory site contact ID.",325,{"inputs":[{"name":"directorysitecontactgetcall"},{"name":"str"}],"output":{"name":"directorysitecontactgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",325,{"inputs":[{"name":"directorysitecontactgetcall"},{"name":"delegate"}],"output":{"name":"directorysitecontactgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",325,{"inputs":[{"name":"directorysitecontactgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"directorysitecontactgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",325,{"inputs":[{"name":"directorysitecontactgetcall"},{"name":"t"}],"output":{"name":"directorysitecontactgetcall"}}],[11,"doit","","Perform the operation you have build so far.",326,{"inputs":[{"name":"directorysitecontactlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",326,{"inputs":[{"name":"directorysitecontactlistcall"},{"name":"str"}],"output":{"name":"directorysitecontactlistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",326,{"inputs":[{"name":"directorysitecontactlistcall"},{"name":"str"}],"output":{"name":"directorysitecontactlistcall"}}],[11,"sort_field","","Field by which to sort the list.",326,{"inputs":[{"name":"directorysitecontactlistcall"},{"name":"str"}],"output":{"name":"directorysitecontactlistcall"}}],[11,"search_string","","Allows searching for objects by name, ID or email. Wildcards (*) are allowed. For example, \"directory site contact*2015\" will return objects with names like \"directory site contact June 2015\", \"directory site contact April 2015\", or simply \"directory site contact 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"directory site contact\" will match objects with name \"my directory site contact\", \"directory site contact 2015\", or simply \"directory site contact\".",326,{"inputs":[{"name":"directorysitecontactlistcall"},{"name":"str"}],"output":{"name":"directorysitecontactlistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",326,{"inputs":[{"name":"directorysitecontactlistcall"},{"name":"str"}],"output":{"name":"directorysitecontactlistcall"}}],[11,"max_results","","Maximum number of results to return.",326,{"inputs":[{"name":"directorysitecontactlistcall"},{"name":"i32"}],"output":{"name":"directorysitecontactlistcall"}}],[11,"add_ids","","Select only directory site contacts with these IDs.",326,{"inputs":[{"name":"directorysitecontactlistcall"},{"name":"str"}],"output":{"name":"directorysitecontactlistcall"}}],[11,"add_directory_site_ids","","Select only directory site contacts with these directory site IDs. This is a required field.",326,{"inputs":[{"name":"directorysitecontactlistcall"},{"name":"str"}],"output":{"name":"directorysitecontactlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",326,{"inputs":[{"name":"directorysitecontactlistcall"},{"name":"delegate"}],"output":{"name":"directorysitecontactlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",326,{"inputs":[{"name":"directorysitecontactlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"directorysitecontactlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",326,{"inputs":[{"name":"directorysitecontactlistcall"},{"name":"t"}],"output":{"name":"directorysitecontactlistcall"}}],[11,"doit","","Perform the operation you have build so far.",327,{"inputs":[{"name":"userprofilelistcall"}],"output":{"name":"result"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",327,{"inputs":[{"name":"userprofilelistcall"},{"name":"delegate"}],"output":{"name":"userprofilelistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",327,{"inputs":[{"name":"userprofilelistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"userprofilelistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",327,{"inputs":[{"name":"userprofilelistcall"},{"name":"t"}],"output":{"name":"userprofilelistcall"}}],[11,"doit","","Perform the operation you have build so far.",328,{"inputs":[{"name":"userprofilegetcall"}],"output":{"name":"result"}}],[11,"profile_id","","The user profile ID.",328,{"inputs":[{"name":"userprofilegetcall"},{"name":"str"}],"output":{"name":"userprofilegetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",328,{"inputs":[{"name":"userprofilegetcall"},{"name":"delegate"}],"output":{"name":"userprofilegetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",328,{"inputs":[{"name":"userprofilegetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"userprofilegetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",328,{"inputs":[{"name":"userprofilegetcall"},{"name":"t"}],"output":{"name":"userprofilegetcall"}}],[11,"doit","","Perform the operation you have build so far.",329,{"inputs":[{"name":"adpatchcall"}],"output":{"name":"result"}}],[11,"request","","",329,{"inputs":[{"name":"adpatchcall"},{"name":"ad"}],"output":{"name":"adpatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",329,{"inputs":[{"name":"adpatchcall"},{"name":"str"}],"output":{"name":"adpatchcall"}}],[11,"id","","Ad ID.",329,{"inputs":[{"name":"adpatchcall"},{"name":"str"}],"output":{"name":"adpatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",329,{"inputs":[{"name":"adpatchcall"},{"name":"delegate"}],"output":{"name":"adpatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",329,{"inputs":[{"name":"adpatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"adpatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",329,{"inputs":[{"name":"adpatchcall"},{"name":"t"}],"output":{"name":"adpatchcall"}}],[11,"doit","","Perform the operation you have build so far.",330,{"inputs":[{"name":"adinsertcall"}],"output":{"name":"result"}}],[11,"request","","",330,{"inputs":[{"name":"adinsertcall"},{"name":"ad"}],"output":{"name":"adinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",330,{"inputs":[{"name":"adinsertcall"},{"name":"str"}],"output":{"name":"adinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",330,{"inputs":[{"name":"adinsertcall"},{"name":"delegate"}],"output":{"name":"adinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",330,{"inputs":[{"name":"adinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"adinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",330,{"inputs":[{"name":"adinsertcall"},{"name":"t"}],"output":{"name":"adinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",331,{"inputs":[{"name":"adlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"add_type","","Select only ads with these types.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"ssl_required","","Select only ads that require SSL.",331,{"inputs":[{"name":"adlistcall"},{"name":"bool"}],"output":{"name":"adlistcall"}}],[11,"ssl_compliant","","Select only ads that are SSL-compliant.",331,{"inputs":[{"name":"adlistcall"},{"name":"bool"}],"output":{"name":"adlistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"sort_field","","Field by which to sort the list.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"add_size_ids","","Select only ads with these size IDs.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"search_string","","Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"ad*2015\" will return objects with names like \"ad June 2015\", \"ad April 2015\", or simply \"ad 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"ad\" will match objects with name \"my ad\", \"ad 2015\", or simply \"ad\".",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"add_remarketing_list_ids","","Select only ads whose list targeting expression use these remarketing list IDs.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"add_placement_ids","","Select only ads with these placement IDs assigned.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"overridden_event_tag_id","","Select only ads with this event tag override ID.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"max_results","","Maximum number of results to return.",331,{"inputs":[{"name":"adlistcall"},{"name":"i32"}],"output":{"name":"adlistcall"}}],[11,"add_landing_page_ids","","Select only ads with these landing page IDs.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"add_ids","","Select only ads with these IDs.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"dynamic_click_tracker","","Select only dynamic click trackers. Applicable when type is AD_SERVING_CLICK_TRACKER. If true, select dynamic click trackers. If false, select static click trackers. Leave unset to select both.",331,{"inputs":[{"name":"adlistcall"},{"name":"bool"}],"output":{"name":"adlistcall"}}],[11,"creative_type","","Select only ads with the specified creativeType.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"add_creative_optimization_configuration_ids","","Select only ads with these creative optimization configuration IDs.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"add_creative_ids","","Select only ads with these creative IDs assigned.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"compatibility","","Select default ads with the specified compatibility. Applicable when type is AD_SERVING_DEFAULT_AD. WEB and WEB_INTERSTITIAL refer to rendering either on desktop or on mobile devices for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering an in-stream video ads developed with the VAST standard.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"add_campaign_ids","","Select only ads with these campaign IDs.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"add_audience_segment_ids","","Select only ads with these audience segment IDs.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"archived","","Select only archived ads.",331,{"inputs":[{"name":"adlistcall"},{"name":"bool"}],"output":{"name":"adlistcall"}}],[11,"advertiser_id","","Select only ads with this advertiser ID.",331,{"inputs":[{"name":"adlistcall"},{"name":"str"}],"output":{"name":"adlistcall"}}],[11,"active","","Select only active ads.",331,{"inputs":[{"name":"adlistcall"},{"name":"bool"}],"output":{"name":"adlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",331,{"inputs":[{"name":"adlistcall"},{"name":"delegate"}],"output":{"name":"adlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",331,{"inputs":[{"name":"adlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"adlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",331,{"inputs":[{"name":"adlistcall"},{"name":"t"}],"output":{"name":"adlistcall"}}],[11,"doit","","Perform the operation you have build so far.",332,{"inputs":[{"name":"adgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",332,{"inputs":[{"name":"adgetcall"},{"name":"str"}],"output":{"name":"adgetcall"}}],[11,"id","","Ad ID.",332,{"inputs":[{"name":"adgetcall"},{"name":"str"}],"output":{"name":"adgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",332,{"inputs":[{"name":"adgetcall"},{"name":"delegate"}],"output":{"name":"adgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",332,{"inputs":[{"name":"adgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"adgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",332,{"inputs":[{"name":"adgetcall"},{"name":"t"}],"output":{"name":"adgetcall"}}],[11,"doit","","Perform the operation you have build so far.",333,{"inputs":[{"name":"adupdatecall"}],"output":{"name":"result"}}],[11,"request","","",333,{"inputs":[{"name":"adupdatecall"},{"name":"ad"}],"output":{"name":"adupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",333,{"inputs":[{"name":"adupdatecall"},{"name":"str"}],"output":{"name":"adupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",333,{"inputs":[{"name":"adupdatecall"},{"name":"delegate"}],"output":{"name":"adupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",333,{"inputs":[{"name":"adupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"adupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",333,{"inputs":[{"name":"adupdatecall"},{"name":"t"}],"output":{"name":"adupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",334,{"inputs":[{"name":"accountpermissiongetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",334,{"inputs":[{"name":"accountpermissiongetcall"},{"name":"str"}],"output":{"name":"accountpermissiongetcall"}}],[11,"id","","Account permission ID.",334,{"inputs":[{"name":"accountpermissiongetcall"},{"name":"str"}],"output":{"name":"accountpermissiongetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",334,{"inputs":[{"name":"accountpermissiongetcall"},{"name":"delegate"}],"output":{"name":"accountpermissiongetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",334,{"inputs":[{"name":"accountpermissiongetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"accountpermissiongetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",334,{"inputs":[{"name":"accountpermissiongetcall"},{"name":"t"}],"output":{"name":"accountpermissiongetcall"}}],[11,"doit","","Perform the operation you have build so far.",335,{"inputs":[{"name":"accountpermissionlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",335,{"inputs":[{"name":"accountpermissionlistcall"},{"name":"str"}],"output":{"name":"accountpermissionlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",335,{"inputs":[{"name":"accountpermissionlistcall"},{"name":"delegate"}],"output":{"name":"accountpermissionlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",335,{"inputs":[{"name":"accountpermissionlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"accountpermissionlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",335,{"inputs":[{"name":"accountpermissionlistcall"},{"name":"t"}],"output":{"name":"accountpermissionlistcall"}}],[11,"doit","","Perform the operation you have build so far.",336,{"inputs":[{"name":"connectiontypelistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",336,{"inputs":[{"name":"connectiontypelistcall"},{"name":"str"}],"output":{"name":"connectiontypelistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",336,{"inputs":[{"name":"connectiontypelistcall"},{"name":"delegate"}],"output":{"name":"connectiontypelistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",336,{"inputs":[{"name":"connectiontypelistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"connectiontypelistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",336,{"inputs":[{"name":"connectiontypelistcall"},{"name":"t"}],"output":{"name":"connectiontypelistcall"}}],[11,"doit","","Perform the operation you have build so far.",337,{"inputs":[{"name":"connectiontypegetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",337,{"inputs":[{"name":"connectiontypegetcall"},{"name":"str"}],"output":{"name":"connectiontypegetcall"}}],[11,"id","","Connection type ID.",337,{"inputs":[{"name":"connectiontypegetcall"},{"name":"str"}],"output":{"name":"connectiontypegetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",337,{"inputs":[{"name":"connectiontypegetcall"},{"name":"delegate"}],"output":{"name":"connectiontypegetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",337,{"inputs":[{"name":"connectiontypegetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"connectiontypegetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",337,{"inputs":[{"name":"connectiontypegetcall"},{"name":"t"}],"output":{"name":"connectiontypegetcall"}}],[11,"doit","","Perform the operation you have build so far.",338,{"inputs":[{"name":"advertisergroupgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",338,{"inputs":[{"name":"advertisergroupgetcall"},{"name":"str"}],"output":{"name":"advertisergroupgetcall"}}],[11,"id","","Advertiser group ID.",338,{"inputs":[{"name":"advertisergroupgetcall"},{"name":"str"}],"output":{"name":"advertisergroupgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",338,{"inputs":[{"name":"advertisergroupgetcall"},{"name":"delegate"}],"output":{"name":"advertisergroupgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",338,{"inputs":[{"name":"advertisergroupgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"advertisergroupgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",338,{"inputs":[{"name":"advertisergroupgetcall"},{"name":"t"}],"output":{"name":"advertisergroupgetcall"}}],[11,"doit","","Perform the operation you have build so far.",339,{"inputs":[{"name":"advertisergrouplistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",339,{"inputs":[{"name":"advertisergrouplistcall"},{"name":"str"}],"output":{"name":"advertisergrouplistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",339,{"inputs":[{"name":"advertisergrouplistcall"},{"name":"str"}],"output":{"name":"advertisergrouplistcall"}}],[11,"sort_field","","Field by which to sort the list.",339,{"inputs":[{"name":"advertisergrouplistcall"},{"name":"str"}],"output":{"name":"advertisergrouplistcall"}}],[11,"search_string","","Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"advertiser*2015\" will return objects with names like \"advertiser group June 2015\", \"advertiser group April 2015\", or simply \"advertiser group 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"advertisergroup\" will match objects with name \"my advertisergroup\", \"advertisergroup 2015\", or simply \"advertisergroup\".",339,{"inputs":[{"name":"advertisergrouplistcall"},{"name":"str"}],"output":{"name":"advertisergrouplistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",339,{"inputs":[{"name":"advertisergrouplistcall"},{"name":"str"}],"output":{"name":"advertisergrouplistcall"}}],[11,"max_results","","Maximum number of results to return.",339,{"inputs":[{"name":"advertisergrouplistcall"},{"name":"i32"}],"output":{"name":"advertisergrouplistcall"}}],[11,"add_ids","","Select only advertiser groups with these IDs.",339,{"inputs":[{"name":"advertisergrouplistcall"},{"name":"str"}],"output":{"name":"advertisergrouplistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",339,{"inputs":[{"name":"advertisergrouplistcall"},{"name":"delegate"}],"output":{"name":"advertisergrouplistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",339,{"inputs":[{"name":"advertisergrouplistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"advertisergrouplistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",339,{"inputs":[{"name":"advertisergrouplistcall"},{"name":"t"}],"output":{"name":"advertisergrouplistcall"}}],[11,"doit","","Perform the operation you have build so far.",340,{"inputs":[{"name":"advertisergroupinsertcall"}],"output":{"name":"result"}}],[11,"request","","",340,{"inputs":[{"name":"advertisergroupinsertcall"},{"name":"advertisergroup"}],"output":{"name":"advertisergroupinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",340,{"inputs":[{"name":"advertisergroupinsertcall"},{"name":"str"}],"output":{"name":"advertisergroupinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",340,{"inputs":[{"name":"advertisergroupinsertcall"},{"name":"delegate"}],"output":{"name":"advertisergroupinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",340,{"inputs":[{"name":"advertisergroupinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"advertisergroupinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",340,{"inputs":[{"name":"advertisergroupinsertcall"},{"name":"t"}],"output":{"name":"advertisergroupinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",341,{"inputs":[{"name":"advertisergroupupdatecall"}],"output":{"name":"result"}}],[11,"request","","",341,{"inputs":[{"name":"advertisergroupupdatecall"},{"name":"advertisergroup"}],"output":{"name":"advertisergroupupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",341,{"inputs":[{"name":"advertisergroupupdatecall"},{"name":"str"}],"output":{"name":"advertisergroupupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",341,{"inputs":[{"name":"advertisergroupupdatecall"},{"name":"delegate"}],"output":{"name":"advertisergroupupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",341,{"inputs":[{"name":"advertisergroupupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"advertisergroupupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",341,{"inputs":[{"name":"advertisergroupupdatecall"},{"name":"t"}],"output":{"name":"advertisergroupupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",342,{"inputs":[{"name":"advertisergrouppatchcall"}],"output":{"name":"result"}}],[11,"request","","",342,{"inputs":[{"name":"advertisergrouppatchcall"},{"name":"advertisergroup"}],"output":{"name":"advertisergrouppatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",342,{"inputs":[{"name":"advertisergrouppatchcall"},{"name":"str"}],"output":{"name":"advertisergrouppatchcall"}}],[11,"id","","Advertiser group ID.",342,{"inputs":[{"name":"advertisergrouppatchcall"},{"name":"str"}],"output":{"name":"advertisergrouppatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",342,{"inputs":[{"name":"advertisergrouppatchcall"},{"name":"delegate"}],"output":{"name":"advertisergrouppatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",342,{"inputs":[{"name":"advertisergrouppatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"advertisergrouppatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",342,{"inputs":[{"name":"advertisergrouppatchcall"},{"name":"t"}],"output":{"name":"advertisergrouppatchcall"}}],[11,"doit","","Perform the operation you have build so far.",343,{"inputs":[{"name":"advertisergroupdeletecall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",343,{"inputs":[{"name":"advertisergroupdeletecall"},{"name":"str"}],"output":{"name":"advertisergroupdeletecall"}}],[11,"id","","Advertiser group ID.",343,{"inputs":[{"name":"advertisergroupdeletecall"},{"name":"str"}],"output":{"name":"advertisergroupdeletecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",343,{"inputs":[{"name":"advertisergroupdeletecall"},{"name":"delegate"}],"output":{"name":"advertisergroupdeletecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",343,{"inputs":[{"name":"advertisergroupdeletecall"},{"name":"t"},{"name":"t"}],"output":{"name":"advertisergroupdeletecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",343,{"inputs":[{"name":"advertisergroupdeletecall"},{"name":"t"}],"output":{"name":"advertisergroupdeletecall"}}],[11,"doit","","Perform the operation you have build so far.",344,{"inputs":[{"name":"siteinsertcall"}],"output":{"name":"result"}}],[11,"request","","",344,{"inputs":[{"name":"siteinsertcall"},{"name":"site"}],"output":{"name":"siteinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",344,{"inputs":[{"name":"siteinsertcall"},{"name":"str"}],"output":{"name":"siteinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",344,{"inputs":[{"name":"siteinsertcall"},{"name":"delegate"}],"output":{"name":"siteinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",344,{"inputs":[{"name":"siteinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"siteinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",344,{"inputs":[{"name":"siteinsertcall"},{"name":"t"}],"output":{"name":"siteinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",345,{"inputs":[{"name":"sitegetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",345,{"inputs":[{"name":"sitegetcall"},{"name":"str"}],"output":{"name":"sitegetcall"}}],[11,"id","","Site ID.",345,{"inputs":[{"name":"sitegetcall"},{"name":"str"}],"output":{"name":"sitegetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",345,{"inputs":[{"name":"sitegetcall"},{"name":"delegate"}],"output":{"name":"sitegetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",345,{"inputs":[{"name":"sitegetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"sitegetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",345,{"inputs":[{"name":"sitegetcall"},{"name":"t"}],"output":{"name":"sitegetcall"}}],[11,"doit","","Perform the operation you have build so far.",346,{"inputs":[{"name":"sitelistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",346,{"inputs":[{"name":"sitelistcall"},{"name":"str"}],"output":{"name":"sitelistcall"}}],[11,"unmapped_site","","Select only sites that have not been mapped to a directory site.",346,{"inputs":[{"name":"sitelistcall"},{"name":"bool"}],"output":{"name":"sitelistcall"}}],[11,"subaccount_id","","Select only sites with this subaccount ID.",346,{"inputs":[{"name":"sitelistcall"},{"name":"str"}],"output":{"name":"sitelistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",346,{"inputs":[{"name":"sitelistcall"},{"name":"str"}],"output":{"name":"sitelistcall"}}],[11,"sort_field","","Field by which to sort the list.",346,{"inputs":[{"name":"sitelistcall"},{"name":"str"}],"output":{"name":"sitelistcall"}}],[11,"search_string","","Allows searching for objects by name, ID or keyName. Wildcards (*) are allowed. For example, \"site*2015\" will return objects with names like \"site June 2015\", \"site April 2015\", or simply \"site 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"site\" will match objects with name \"my site\", \"site 2015\", or simply \"site\".",346,{"inputs":[{"name":"sitelistcall"},{"name":"str"}],"output":{"name":"sitelistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",346,{"inputs":[{"name":"sitelistcall"},{"name":"str"}],"output":{"name":"sitelistcall"}}],[11,"max_results","","Maximum number of results to return.",346,{"inputs":[{"name":"sitelistcall"},{"name":"i32"}],"output":{"name":"sitelistcall"}}],[11,"add_ids","","Select only sites with these IDs.",346,{"inputs":[{"name":"sitelistcall"},{"name":"str"}],"output":{"name":"sitelistcall"}}],[11,"add_directory_site_ids","","Select only sites with these directory site IDs.",346,{"inputs":[{"name":"sitelistcall"},{"name":"str"}],"output":{"name":"sitelistcall"}}],[11,"add_campaign_ids","","Select only sites with these campaign IDs.",346,{"inputs":[{"name":"sitelistcall"},{"name":"str"}],"output":{"name":"sitelistcall"}}],[11,"approved","","Select only approved sites.",346,{"inputs":[{"name":"sitelistcall"},{"name":"bool"}],"output":{"name":"sitelistcall"}}],[11,"ad_words_site","","Select only AdWords sites.",346,{"inputs":[{"name":"sitelistcall"},{"name":"bool"}],"output":{"name":"sitelistcall"}}],[11,"accepts_publisher_paid_placements","","Select only sites that accept publisher paid placements.",346,{"inputs":[{"name":"sitelistcall"},{"name":"bool"}],"output":{"name":"sitelistcall"}}],[11,"accepts_interstitial_placements","","This search filter is no longer supported and will have no effect on the results returned.",346,{"inputs":[{"name":"sitelistcall"},{"name":"bool"}],"output":{"name":"sitelistcall"}}],[11,"accepts_in_stream_video_placements","","This search filter is no longer supported and will have no effect on the results returned.",346,{"inputs":[{"name":"sitelistcall"},{"name":"bool"}],"output":{"name":"sitelistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",346,{"inputs":[{"name":"sitelistcall"},{"name":"delegate"}],"output":{"name":"sitelistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",346,{"inputs":[{"name":"sitelistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"sitelistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",346,{"inputs":[{"name":"sitelistcall"},{"name":"t"}],"output":{"name":"sitelistcall"}}],[11,"doit","","Perform the operation you have build so far.",347,{"inputs":[{"name":"siteupdatecall"}],"output":{"name":"result"}}],[11,"request","","",347,{"inputs":[{"name":"siteupdatecall"},{"name":"site"}],"output":{"name":"siteupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",347,{"inputs":[{"name":"siteupdatecall"},{"name":"str"}],"output":{"name":"siteupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",347,{"inputs":[{"name":"siteupdatecall"},{"name":"delegate"}],"output":{"name":"siteupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",347,{"inputs":[{"name":"siteupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"siteupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",347,{"inputs":[{"name":"siteupdatecall"},{"name":"t"}],"output":{"name":"siteupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",348,{"inputs":[{"name":"sitepatchcall"}],"output":{"name":"result"}}],[11,"request","","",348,{"inputs":[{"name":"sitepatchcall"},{"name":"site"}],"output":{"name":"sitepatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",348,{"inputs":[{"name":"sitepatchcall"},{"name":"str"}],"output":{"name":"sitepatchcall"}}],[11,"id","","Site ID.",348,{"inputs":[{"name":"sitepatchcall"},{"name":"str"}],"output":{"name":"sitepatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",348,{"inputs":[{"name":"sitepatchcall"},{"name":"delegate"}],"output":{"name":"sitepatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",348,{"inputs":[{"name":"sitepatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"sitepatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",348,{"inputs":[{"name":"sitepatchcall"},{"name":"t"}],"output":{"name":"sitepatchcall"}}],[11,"doit","","Perform the operation you have build so far.",349,{"inputs":[{"name":"floodlightactivitygetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",349,{"inputs":[{"name":"floodlightactivitygetcall"},{"name":"str"}],"output":{"name":"floodlightactivitygetcall"}}],[11,"id","","Floodlight activity ID.",349,{"inputs":[{"name":"floodlightactivitygetcall"},{"name":"str"}],"output":{"name":"floodlightactivitygetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",349,{"inputs":[{"name":"floodlightactivitygetcall"},{"name":"delegate"}],"output":{"name":"floodlightactivitygetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",349,{"inputs":[{"name":"floodlightactivitygetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightactivitygetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",349,{"inputs":[{"name":"floodlightactivitygetcall"},{"name":"t"}],"output":{"name":"floodlightactivitygetcall"}}],[11,"doit","","Perform the operation you have build so far.",350,{"inputs":[{"name":"floodlightactivitylistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"str"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"tag_string","","Select only floodlight activities with the specified tag string.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"str"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"str"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"sort_field","","Field by which to sort the list.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"str"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"search_string","","Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"floodlightactivity*2015\" will return objects with names like \"floodlightactivity June 2015\", \"floodlightactivity April 2015\", or simply \"floodlightactivity 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"floodlightactivity\" will match objects with name \"my floodlightactivity activity\", \"floodlightactivity 2015\", or simply \"floodlightactivity\".",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"str"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"str"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"max_results","","Maximum number of results to return.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"i32"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"add_ids","","Select only floodlight activities with the specified IDs. Must specify either ids, advertiserId, or floodlightConfigurationId for a non-empty result.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"str"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"floodlight_configuration_id","","Select only floodlight activities for the specified floodlight configuration ID. Must specify either ids, advertiserId, or floodlightConfigurationId for a non-empty result.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"str"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"floodlight_activity_group_type","","Select only floodlight activities with the specified floodlight activity group type.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"str"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"floodlight_activity_group_tag_string","","Select only floodlight activities with the specified floodlight activity group tag string.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"str"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"floodlight_activity_group_name","","Select only floodlight activities with the specified floodlight activity group name.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"str"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"add_floodlight_activity_group_ids","","Select only floodlight activities with the specified floodlight activity group IDs.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"str"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"advertiser_id","","Select only floodlight activities for the specified advertiser ID. Must specify either ids, advertiserId, or floodlightConfigurationId for a non-empty result.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"str"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"delegate"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",350,{"inputs":[{"name":"floodlightactivitylistcall"},{"name":"t"}],"output":{"name":"floodlightactivitylistcall"}}],[11,"doit","","Perform the operation you have build so far.",351,{"inputs":[{"name":"floodlightactivityinsertcall"}],"output":{"name":"result"}}],[11,"request","","",351,{"inputs":[{"name":"floodlightactivityinsertcall"},{"name":"floodlightactivity"}],"output":{"name":"floodlightactivityinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",351,{"inputs":[{"name":"floodlightactivityinsertcall"},{"name":"str"}],"output":{"name":"floodlightactivityinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",351,{"inputs":[{"name":"floodlightactivityinsertcall"},{"name":"delegate"}],"output":{"name":"floodlightactivityinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",351,{"inputs":[{"name":"floodlightactivityinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightactivityinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",351,{"inputs":[{"name":"floodlightactivityinsertcall"},{"name":"t"}],"output":{"name":"floodlightactivityinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",352,{"inputs":[{"name":"floodlightactivitydeletecall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",352,{"inputs":[{"name":"floodlightactivitydeletecall"},{"name":"str"}],"output":{"name":"floodlightactivitydeletecall"}}],[11,"id","","Floodlight activity ID.",352,{"inputs":[{"name":"floodlightactivitydeletecall"},{"name":"str"}],"output":{"name":"floodlightactivitydeletecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",352,{"inputs":[{"name":"floodlightactivitydeletecall"},{"name":"delegate"}],"output":{"name":"floodlightactivitydeletecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",352,{"inputs":[{"name":"floodlightactivitydeletecall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightactivitydeletecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",352,{"inputs":[{"name":"floodlightactivitydeletecall"},{"name":"t"}],"output":{"name":"floodlightactivitydeletecall"}}],[11,"doit","","Perform the operation you have build so far.",353,{"inputs":[{"name":"floodlightactivitypatchcall"}],"output":{"name":"result"}}],[11,"request","","",353,{"inputs":[{"name":"floodlightactivitypatchcall"},{"name":"floodlightactivity"}],"output":{"name":"floodlightactivitypatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",353,{"inputs":[{"name":"floodlightactivitypatchcall"},{"name":"str"}],"output":{"name":"floodlightactivitypatchcall"}}],[11,"id","","Floodlight activity ID.",353,{"inputs":[{"name":"floodlightactivitypatchcall"},{"name":"str"}],"output":{"name":"floodlightactivitypatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",353,{"inputs":[{"name":"floodlightactivitypatchcall"},{"name":"delegate"}],"output":{"name":"floodlightactivitypatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",353,{"inputs":[{"name":"floodlightactivitypatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightactivitypatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",353,{"inputs":[{"name":"floodlightactivitypatchcall"},{"name":"t"}],"output":{"name":"floodlightactivitypatchcall"}}],[11,"doit","","Perform the operation you have build so far.",354,{"inputs":[{"name":"floodlightactivitygeneratetagcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",354,{"inputs":[{"name":"floodlightactivitygeneratetagcall"},{"name":"str"}],"output":{"name":"floodlightactivitygeneratetagcall"}}],[11,"floodlight_activity_id","","Floodlight activity ID for which we want to generate a tag.",354,{"inputs":[{"name":"floodlightactivitygeneratetagcall"},{"name":"str"}],"output":{"name":"floodlightactivitygeneratetagcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",354,{"inputs":[{"name":"floodlightactivitygeneratetagcall"},{"name":"delegate"}],"output":{"name":"floodlightactivitygeneratetagcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",354,{"inputs":[{"name":"floodlightactivitygeneratetagcall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightactivitygeneratetagcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",354,{"inputs":[{"name":"floodlightactivitygeneratetagcall"},{"name":"t"}],"output":{"name":"floodlightactivitygeneratetagcall"}}],[11,"doit","","Perform the operation you have build so far.",355,{"inputs":[{"name":"floodlightactivityupdatecall"}],"output":{"name":"result"}}],[11,"request","","",355,{"inputs":[{"name":"floodlightactivityupdatecall"},{"name":"floodlightactivity"}],"output":{"name":"floodlightactivityupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",355,{"inputs":[{"name":"floodlightactivityupdatecall"},{"name":"str"}],"output":{"name":"floodlightactivityupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",355,{"inputs":[{"name":"floodlightactivityupdatecall"},{"name":"delegate"}],"output":{"name":"floodlightactivityupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",355,{"inputs":[{"name":"floodlightactivityupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightactivityupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",355,{"inputs":[{"name":"floodlightactivityupdatecall"},{"name":"t"}],"output":{"name":"floodlightactivityupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",356,{"inputs":[{"name":"regionlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",356,{"inputs":[{"name":"regionlistcall"},{"name":"str"}],"output":{"name":"regionlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",356,{"inputs":[{"name":"regionlistcall"},{"name":"delegate"}],"output":{"name":"regionlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",356,{"inputs":[{"name":"regionlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"regionlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",356,{"inputs":[{"name":"regionlistcall"},{"name":"t"}],"output":{"name":"regionlistcall"}}],[11,"doit","","Perform the operation you have build so far.",357,{"inputs":[{"name":"creativegroupinsertcall"}],"output":{"name":"result"}}],[11,"request","","",357,{"inputs":[{"name":"creativegroupinsertcall"},{"name":"creativegroup"}],"output":{"name":"creativegroupinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",357,{"inputs":[{"name":"creativegroupinsertcall"},{"name":"str"}],"output":{"name":"creativegroupinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",357,{"inputs":[{"name":"creativegroupinsertcall"},{"name":"delegate"}],"output":{"name":"creativegroupinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",357,{"inputs":[{"name":"creativegroupinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativegroupinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",357,{"inputs":[{"name":"creativegroupinsertcall"},{"name":"t"}],"output":{"name":"creativegroupinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",358,{"inputs":[{"name":"creativegroupgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",358,{"inputs":[{"name":"creativegroupgetcall"},{"name":"str"}],"output":{"name":"creativegroupgetcall"}}],[11,"id","","Creative group ID.",358,{"inputs":[{"name":"creativegroupgetcall"},{"name":"str"}],"output":{"name":"creativegroupgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",358,{"inputs":[{"name":"creativegroupgetcall"},{"name":"delegate"}],"output":{"name":"creativegroupgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",358,{"inputs":[{"name":"creativegroupgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativegroupgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",358,{"inputs":[{"name":"creativegroupgetcall"},{"name":"t"}],"output":{"name":"creativegroupgetcall"}}],[11,"doit","","Perform the operation you have build so far.",359,{"inputs":[{"name":"creativegroupupdatecall"}],"output":{"name":"result"}}],[11,"request","","",359,{"inputs":[{"name":"creativegroupupdatecall"},{"name":"creativegroup"}],"output":{"name":"creativegroupupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",359,{"inputs":[{"name":"creativegroupupdatecall"},{"name":"str"}],"output":{"name":"creativegroupupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",359,{"inputs":[{"name":"creativegroupupdatecall"},{"name":"delegate"}],"output":{"name":"creativegroupupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",359,{"inputs":[{"name":"creativegroupupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativegroupupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",359,{"inputs":[{"name":"creativegroupupdatecall"},{"name":"t"}],"output":{"name":"creativegroupupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",360,{"inputs":[{"name":"creativegrouplistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",360,{"inputs":[{"name":"creativegrouplistcall"},{"name":"str"}],"output":{"name":"creativegrouplistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",360,{"inputs":[{"name":"creativegrouplistcall"},{"name":"str"}],"output":{"name":"creativegrouplistcall"}}],[11,"sort_field","","Field by which to sort the list.",360,{"inputs":[{"name":"creativegrouplistcall"},{"name":"str"}],"output":{"name":"creativegrouplistcall"}}],[11,"search_string","","Allows searching for creative groups by name or ID. Wildcards (*) are allowed. For example, \"creativegroup*2015\" will return creative groups with names like \"creativegroup June 2015\", \"creativegroup April 2015\", or simply \"creativegroup 2015\". Most of the searches also add wild-cards implicitly at the start and the end of the search string. For example, a search string of \"creativegroup\" will match creative groups with the name \"my creativegroup\", \"creativegroup 2015\", or simply \"creativegroup\".",360,{"inputs":[{"name":"creativegrouplistcall"},{"name":"str"}],"output":{"name":"creativegrouplistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",360,{"inputs":[{"name":"creativegrouplistcall"},{"name":"str"}],"output":{"name":"creativegrouplistcall"}}],[11,"max_results","","Maximum number of results to return.",360,{"inputs":[{"name":"creativegrouplistcall"},{"name":"i32"}],"output":{"name":"creativegrouplistcall"}}],[11,"add_ids","","Select only creative groups with these IDs.",360,{"inputs":[{"name":"creativegrouplistcall"},{"name":"str"}],"output":{"name":"creativegrouplistcall"}}],[11,"group_number","","Select only creative groups that belong to this subgroup.",360,{"inputs":[{"name":"creativegrouplistcall"},{"name":"i32"}],"output":{"name":"creativegrouplistcall"}}],[11,"add_advertiser_ids","","Select only creative groups that belong to these advertisers.",360,{"inputs":[{"name":"creativegrouplistcall"},{"name":"str"}],"output":{"name":"creativegrouplistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",360,{"inputs":[{"name":"creativegrouplistcall"},{"name":"delegate"}],"output":{"name":"creativegrouplistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",360,{"inputs":[{"name":"creativegrouplistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativegrouplistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",360,{"inputs":[{"name":"creativegrouplistcall"},{"name":"t"}],"output":{"name":"creativegrouplistcall"}}],[11,"doit","","Perform the operation you have build so far.",361,{"inputs":[{"name":"creativegrouppatchcall"}],"output":{"name":"result"}}],[11,"request","","",361,{"inputs":[{"name":"creativegrouppatchcall"},{"name":"creativegroup"}],"output":{"name":"creativegrouppatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",361,{"inputs":[{"name":"creativegrouppatchcall"},{"name":"str"}],"output":{"name":"creativegrouppatchcall"}}],[11,"id","","Creative group ID.",361,{"inputs":[{"name":"creativegrouppatchcall"},{"name":"str"}],"output":{"name":"creativegrouppatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",361,{"inputs":[{"name":"creativegrouppatchcall"},{"name":"delegate"}],"output":{"name":"creativegrouppatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",361,{"inputs":[{"name":"creativegrouppatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativegrouppatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",361,{"inputs":[{"name":"creativegrouppatchcall"},{"name":"t"}],"output":{"name":"creativegrouppatchcall"}}],[11,"doit","","Perform the operation you have build so far.",362,{"inputs":[{"name":"targetableremarketinglistlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",362,{"inputs":[{"name":"targetableremarketinglistlistcall"},{"name":"str"}],"output":{"name":"targetableremarketinglistlistcall"}}],[11,"advertiser_id","","Select only targetable remarketing lists targetable by these advertisers.",362,{"inputs":[{"name":"targetableremarketinglistlistcall"},{"name":"str"}],"output":{"name":"targetableremarketinglistlistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",362,{"inputs":[{"name":"targetableremarketinglistlistcall"},{"name":"str"}],"output":{"name":"targetableremarketinglistlistcall"}}],[11,"sort_field","","Field by which to sort the list.",362,{"inputs":[{"name":"targetableremarketinglistlistcall"},{"name":"str"}],"output":{"name":"targetableremarketinglistlistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",362,{"inputs":[{"name":"targetableremarketinglistlistcall"},{"name":"str"}],"output":{"name":"targetableremarketinglistlistcall"}}],[11,"name","","Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"remarketing list*2015\" will return objects with names like \"remarketing list June 2015\", \"remarketing list April 2015\", or simply \"remarketing list 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"remarketing list\" will match objects with name \"my remarketing list\", \"remarketing list 2015\", or simply \"remarketing list\".",362,{"inputs":[{"name":"targetableremarketinglistlistcall"},{"name":"str"}],"output":{"name":"targetableremarketinglistlistcall"}}],[11,"max_results","","Maximum number of results to return.",362,{"inputs":[{"name":"targetableremarketinglistlistcall"},{"name":"i32"}],"output":{"name":"targetableremarketinglistlistcall"}}],[11,"active","","Select only active or only inactive targetable remarketing lists.",362,{"inputs":[{"name":"targetableremarketinglistlistcall"},{"name":"bool"}],"output":{"name":"targetableremarketinglistlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",362,{"inputs":[{"name":"targetableremarketinglistlistcall"},{"name":"delegate"}],"output":{"name":"targetableremarketinglistlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",362,{"inputs":[{"name":"targetableremarketinglistlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"targetableremarketinglistlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",362,{"inputs":[{"name":"targetableremarketinglistlistcall"},{"name":"t"}],"output":{"name":"targetableremarketinglistlistcall"}}],[11,"doit","","Perform the operation you have build so far.",363,{"inputs":[{"name":"targetableremarketinglistgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",363,{"inputs":[{"name":"targetableremarketinglistgetcall"},{"name":"str"}],"output":{"name":"targetableremarketinglistgetcall"}}],[11,"id","","Remarketing list ID.",363,{"inputs":[{"name":"targetableremarketinglistgetcall"},{"name":"str"}],"output":{"name":"targetableremarketinglistgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",363,{"inputs":[{"name":"targetableremarketinglistgetcall"},{"name":"delegate"}],"output":{"name":"targetableremarketinglistgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",363,{"inputs":[{"name":"targetableremarketinglistgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"targetableremarketinglistgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",363,{"inputs":[{"name":"targetableremarketinglistgetcall"},{"name":"t"}],"output":{"name":"targetableremarketinglistgetcall"}}],[11,"doit","","Perform the operation you have build so far.",364,{"inputs":[{"name":"subaccountpatchcall"}],"output":{"name":"result"}}],[11,"request","","",364,{"inputs":[{"name":"subaccountpatchcall"},{"name":"subaccount"}],"output":{"name":"subaccountpatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",364,{"inputs":[{"name":"subaccountpatchcall"},{"name":"str"}],"output":{"name":"subaccountpatchcall"}}],[11,"id","","Subaccount ID.",364,{"inputs":[{"name":"subaccountpatchcall"},{"name":"str"}],"output":{"name":"subaccountpatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",364,{"inputs":[{"name":"subaccountpatchcall"},{"name":"delegate"}],"output":{"name":"subaccountpatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",364,{"inputs":[{"name":"subaccountpatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"subaccountpatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",364,{"inputs":[{"name":"subaccountpatchcall"},{"name":"t"}],"output":{"name":"subaccountpatchcall"}}],[11,"doit","","Perform the operation you have build so far.",365,{"inputs":[{"name":"subaccountinsertcall"}],"output":{"name":"result"}}],[11,"request","","",365,{"inputs":[{"name":"subaccountinsertcall"},{"name":"subaccount"}],"output":{"name":"subaccountinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",365,{"inputs":[{"name":"subaccountinsertcall"},{"name":"str"}],"output":{"name":"subaccountinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",365,{"inputs":[{"name":"subaccountinsertcall"},{"name":"delegate"}],"output":{"name":"subaccountinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",365,{"inputs":[{"name":"subaccountinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"subaccountinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",365,{"inputs":[{"name":"subaccountinsertcall"},{"name":"t"}],"output":{"name":"subaccountinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",366,{"inputs":[{"name":"subaccountlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",366,{"inputs":[{"name":"subaccountlistcall"},{"name":"str"}],"output":{"name":"subaccountlistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",366,{"inputs":[{"name":"subaccountlistcall"},{"name":"str"}],"output":{"name":"subaccountlistcall"}}],[11,"sort_field","","Field by which to sort the list.",366,{"inputs":[{"name":"subaccountlistcall"},{"name":"str"}],"output":{"name":"subaccountlistcall"}}],[11,"search_string","","Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"subaccount*2015\" will return objects with names like \"subaccount June 2015\", \"subaccount April 2015\", or simply \"subaccount 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"subaccount\" will match objects with name \"my subaccount\", \"subaccount 2015\", or simply \"subaccount\".",366,{"inputs":[{"name":"subaccountlistcall"},{"name":"str"}],"output":{"name":"subaccountlistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",366,{"inputs":[{"name":"subaccountlistcall"},{"name":"str"}],"output":{"name":"subaccountlistcall"}}],[11,"max_results","","Maximum number of results to return.",366,{"inputs":[{"name":"subaccountlistcall"},{"name":"i32"}],"output":{"name":"subaccountlistcall"}}],[11,"add_ids","","Select only subaccounts with these IDs.",366,{"inputs":[{"name":"subaccountlistcall"},{"name":"str"}],"output":{"name":"subaccountlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",366,{"inputs":[{"name":"subaccountlistcall"},{"name":"delegate"}],"output":{"name":"subaccountlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",366,{"inputs":[{"name":"subaccountlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"subaccountlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",366,{"inputs":[{"name":"subaccountlistcall"},{"name":"t"}],"output":{"name":"subaccountlistcall"}}],[11,"doit","","Perform the operation you have build so far.",367,{"inputs":[{"name":"subaccountupdatecall"}],"output":{"name":"result"}}],[11,"request","","",367,{"inputs":[{"name":"subaccountupdatecall"},{"name":"subaccount"}],"output":{"name":"subaccountupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",367,{"inputs":[{"name":"subaccountupdatecall"},{"name":"str"}],"output":{"name":"subaccountupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",367,{"inputs":[{"name":"subaccountupdatecall"},{"name":"delegate"}],"output":{"name":"subaccountupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",367,{"inputs":[{"name":"subaccountupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"subaccountupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",367,{"inputs":[{"name":"subaccountupdatecall"},{"name":"t"}],"output":{"name":"subaccountupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",368,{"inputs":[{"name":"subaccountgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",368,{"inputs":[{"name":"subaccountgetcall"},{"name":"str"}],"output":{"name":"subaccountgetcall"}}],[11,"id","","Subaccount ID.",368,{"inputs":[{"name":"subaccountgetcall"},{"name":"str"}],"output":{"name":"subaccountgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",368,{"inputs":[{"name":"subaccountgetcall"},{"name":"delegate"}],"output":{"name":"subaccountgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",368,{"inputs":[{"name":"subaccountgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"subaccountgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",368,{"inputs":[{"name":"subaccountgetcall"},{"name":"t"}],"output":{"name":"subaccountgetcall"}}],[11,"doit","","Perform the operation you have build so far.",369,{"inputs":[{"name":"mobilecarriergetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",369,{"inputs":[{"name":"mobilecarriergetcall"},{"name":"str"}],"output":{"name":"mobilecarriergetcall"}}],[11,"id","","Mobile carrier ID.",369,{"inputs":[{"name":"mobilecarriergetcall"},{"name":"str"}],"output":{"name":"mobilecarriergetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",369,{"inputs":[{"name":"mobilecarriergetcall"},{"name":"delegate"}],"output":{"name":"mobilecarriergetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",369,{"inputs":[{"name":"mobilecarriergetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"mobilecarriergetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",369,{"inputs":[{"name":"mobilecarriergetcall"},{"name":"t"}],"output":{"name":"mobilecarriergetcall"}}],[11,"doit","","Perform the operation you have build so far.",370,{"inputs":[{"name":"mobilecarrierlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",370,{"inputs":[{"name":"mobilecarrierlistcall"},{"name":"str"}],"output":{"name":"mobilecarrierlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",370,{"inputs":[{"name":"mobilecarrierlistcall"},{"name":"delegate"}],"output":{"name":"mobilecarrierlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",370,{"inputs":[{"name":"mobilecarrierlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"mobilecarrierlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",370,{"inputs":[{"name":"mobilecarrierlistcall"},{"name":"t"}],"output":{"name":"mobilecarrierlistcall"}}],[11,"doit","","Perform the operation you have build so far.",371,{"inputs":[{"name":"floodlightconfigurationgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",371,{"inputs":[{"name":"floodlightconfigurationgetcall"},{"name":"str"}],"output":{"name":"floodlightconfigurationgetcall"}}],[11,"id","","Floodlight configuration ID.",371,{"inputs":[{"name":"floodlightconfigurationgetcall"},{"name":"str"}],"output":{"name":"floodlightconfigurationgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",371,{"inputs":[{"name":"floodlightconfigurationgetcall"},{"name":"delegate"}],"output":{"name":"floodlightconfigurationgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",371,{"inputs":[{"name":"floodlightconfigurationgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightconfigurationgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",371,{"inputs":[{"name":"floodlightconfigurationgetcall"},{"name":"t"}],"output":{"name":"floodlightconfigurationgetcall"}}],[11,"doit","","Perform the operation you have build so far.",372,{"inputs":[{"name":"floodlightconfigurationupdatecall"}],"output":{"name":"result"}}],[11,"request","","",372,{"inputs":[{"name":"floodlightconfigurationupdatecall"},{"name":"floodlightconfiguration"}],"output":{"name":"floodlightconfigurationupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",372,{"inputs":[{"name":"floodlightconfigurationupdatecall"},{"name":"str"}],"output":{"name":"floodlightconfigurationupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",372,{"inputs":[{"name":"floodlightconfigurationupdatecall"},{"name":"delegate"}],"output":{"name":"floodlightconfigurationupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",372,{"inputs":[{"name":"floodlightconfigurationupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightconfigurationupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",372,{"inputs":[{"name":"floodlightconfigurationupdatecall"},{"name":"t"}],"output":{"name":"floodlightconfigurationupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",373,{"inputs":[{"name":"floodlightconfigurationpatchcall"}],"output":{"name":"result"}}],[11,"request","","",373,{"inputs":[{"name":"floodlightconfigurationpatchcall"},{"name":"floodlightconfiguration"}],"output":{"name":"floodlightconfigurationpatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",373,{"inputs":[{"name":"floodlightconfigurationpatchcall"},{"name":"str"}],"output":{"name":"floodlightconfigurationpatchcall"}}],[11,"id","","Floodlight configuration ID.",373,{"inputs":[{"name":"floodlightconfigurationpatchcall"},{"name":"str"}],"output":{"name":"floodlightconfigurationpatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",373,{"inputs":[{"name":"floodlightconfigurationpatchcall"},{"name":"delegate"}],"output":{"name":"floodlightconfigurationpatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",373,{"inputs":[{"name":"floodlightconfigurationpatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightconfigurationpatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",373,{"inputs":[{"name":"floodlightconfigurationpatchcall"},{"name":"t"}],"output":{"name":"floodlightconfigurationpatchcall"}}],[11,"doit","","Perform the operation you have build so far.",374,{"inputs":[{"name":"floodlightconfigurationlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",374,{"inputs":[{"name":"floodlightconfigurationlistcall"},{"name":"str"}],"output":{"name":"floodlightconfigurationlistcall"}}],[11,"add_ids","","Set of IDs of floodlight configurations to retrieve. Required field; otherwise an empty list will be returned.",374,{"inputs":[{"name":"floodlightconfigurationlistcall"},{"name":"str"}],"output":{"name":"floodlightconfigurationlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",374,{"inputs":[{"name":"floodlightconfigurationlistcall"},{"name":"delegate"}],"output":{"name":"floodlightconfigurationlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",374,{"inputs":[{"name":"floodlightconfigurationlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"floodlightconfigurationlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",374,{"inputs":[{"name":"floodlightconfigurationlistcall"},{"name":"t"}],"output":{"name":"floodlightconfigurationlistcall"}}],[11,"doit","","Perform the operation you have build so far.",375,{"inputs":[{"name":"operatingsystemlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",375,{"inputs":[{"name":"operatingsystemlistcall"},{"name":"str"}],"output":{"name":"operatingsystemlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",375,{"inputs":[{"name":"operatingsystemlistcall"},{"name":"delegate"}],"output":{"name":"operatingsystemlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",375,{"inputs":[{"name":"operatingsystemlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"operatingsystemlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",375,{"inputs":[{"name":"operatingsystemlistcall"},{"name":"t"}],"output":{"name":"operatingsystemlistcall"}}],[11,"doit","","Perform the operation you have build so far.",376,{"inputs":[{"name":"operatingsystemgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",376,{"inputs":[{"name":"operatingsystemgetcall"},{"name":"str"}],"output":{"name":"operatingsystemgetcall"}}],[11,"dart_id","","Operating system DART ID.",376,{"inputs":[{"name":"operatingsystemgetcall"},{"name":"str"}],"output":{"name":"operatingsystemgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",376,{"inputs":[{"name":"operatingsystemgetcall"},{"name":"delegate"}],"output":{"name":"operatingsystemgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",376,{"inputs":[{"name":"operatingsystemgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"operatingsystemgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",376,{"inputs":[{"name":"operatingsystemgetcall"},{"name":"t"}],"output":{"name":"operatingsystemgetcall"}}],[11,"doit","","Perform the operation you have build so far.",377,{"inputs":[{"name":"filelistcall"}],"output":{"name":"result"}}],[11,"profile_id","","The DFA profile ID.",377,{"inputs":[{"name":"filelistcall"},{"name":"str"}],"output":{"name":"filelistcall"}}],[11,"sort_order","","Order of sorted results, default is 'DESCENDING'.",377,{"inputs":[{"name":"filelistcall"},{"name":"str"}],"output":{"name":"filelistcall"}}],[11,"sort_field","","The field by which to sort the list.",377,{"inputs":[{"name":"filelistcall"},{"name":"str"}],"output":{"name":"filelistcall"}}],[11,"scope","","The scope that defines which results are returned, default is 'MINE'.",377,{"inputs":[{"name":"filelistcall"},{"name":"str"}],"output":{"name":"filelistcall"}}],[11,"page_token","","The value of the nextToken from the previous result page.",377,{"inputs":[{"name":"filelistcall"},{"name":"str"}],"output":{"name":"filelistcall"}}],[11,"max_results","","Maximum number of results to return.",377,{"inputs":[{"name":"filelistcall"},{"name":"i32"}],"output":{"name":"filelistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",377,{"inputs":[{"name":"filelistcall"},{"name":"delegate"}],"output":{"name":"filelistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",377,{"inputs":[{"name":"filelistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"filelistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",377,{"inputs":[{"name":"filelistcall"},{"name":"t"}],"output":{"name":"filelistcall"}}],[11,"doit","","Perform the operation you have build so far.",378,{"inputs":[{"name":"filegetcall"}],"output":{"name":"result"}}],[11,"report_id","","The ID of the report.",378,{"inputs":[{"name":"filegetcall"},{"name":"str"}],"output":{"name":"filegetcall"}}],[11,"file_id","","The ID of the report file.",378,{"inputs":[{"name":"filegetcall"},{"name":"str"}],"output":{"name":"filegetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",378,{"inputs":[{"name":"filegetcall"},{"name":"delegate"}],"output":{"name":"filegetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",378,{"inputs":[{"name":"filegetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"filegetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",378,{"inputs":[{"name":"filegetcall"},{"name":"t"}],"output":{"name":"filegetcall"}}],[11,"doit","","Perform the operation you have build so far.",379,{"inputs":[{"name":"placementgrouplistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"str"}],"output":{"name":"placementgrouplistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"str"}],"output":{"name":"placementgrouplistcall"}}],[11,"sort_field","","Field by which to sort the list.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"str"}],"output":{"name":"placementgrouplistcall"}}],[11,"add_site_ids","","Select only placement groups that are associated with these sites.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"str"}],"output":{"name":"placementgrouplistcall"}}],[11,"search_string","","Allows searching for placement groups by name or ID. Wildcards (*) are allowed. For example, \"placement*2015\" will return placement groups with names like \"placement group June 2015\", \"placement group May 2015\", or simply \"placements 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"placementgroup\" will match placement groups with name \"my placementgroup\", \"placementgroup 2015\", or simply \"placementgroup\".",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"str"}],"output":{"name":"placementgrouplistcall"}}],[11,"add_pricing_types","","Select only placement groups with these pricing types.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"str"}],"output":{"name":"placementgrouplistcall"}}],[11,"add_placement_strategy_ids","","Select only placement groups that are associated with these placement strategies.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"str"}],"output":{"name":"placementgrouplistcall"}}],[11,"placement_group_type","","Select only placement groups belonging with this group type. A package is a simple group of placements that acts as a single pricing point for a group of tags. A roadblock is a group of placements that not only acts as a single pricing point but also assumes that all the tags in it will be served at the same time. A roadblock requires one of its assigned placements to be marked as primary for reporting.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"str"}],"output":{"name":"placementgrouplistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"str"}],"output":{"name":"placementgrouplistcall"}}],[11,"max_results","","Maximum number of results to return.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"i32"}],"output":{"name":"placementgrouplistcall"}}],[11,"add_ids","","Select only placement groups with these IDs.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"str"}],"output":{"name":"placementgrouplistcall"}}],[11,"add_directory_site_ids","","Select only placement groups that are associated with these directory sites.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"str"}],"output":{"name":"placementgrouplistcall"}}],[11,"add_content_category_ids","","Select only placement groups that are associated with these content categories.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"str"}],"output":{"name":"placementgrouplistcall"}}],[11,"add_campaign_ids","","Select only placement groups that belong to these campaigns.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"str"}],"output":{"name":"placementgrouplistcall"}}],[11,"archived","","Select only archived placements. Don't set this field to select both archived and non-archived placements.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"bool"}],"output":{"name":"placementgrouplistcall"}}],[11,"add_advertiser_ids","","Select only placement groups that belong to these advertisers.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"str"}],"output":{"name":"placementgrouplistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"delegate"}],"output":{"name":"placementgrouplistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementgrouplistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",379,{"inputs":[{"name":"placementgrouplistcall"},{"name":"t"}],"output":{"name":"placementgrouplistcall"}}],[11,"doit","","Perform the operation you have build so far.",380,{"inputs":[{"name":"placementgroupupdatecall"}],"output":{"name":"result"}}],[11,"request","","",380,{"inputs":[{"name":"placementgroupupdatecall"},{"name":"placementgroup"}],"output":{"name":"placementgroupupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",380,{"inputs":[{"name":"placementgroupupdatecall"},{"name":"str"}],"output":{"name":"placementgroupupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",380,{"inputs":[{"name":"placementgroupupdatecall"},{"name":"delegate"}],"output":{"name":"placementgroupupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",380,{"inputs":[{"name":"placementgroupupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementgroupupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",380,{"inputs":[{"name":"placementgroupupdatecall"},{"name":"t"}],"output":{"name":"placementgroupupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",381,{"inputs":[{"name":"placementgroupinsertcall"}],"output":{"name":"result"}}],[11,"request","","",381,{"inputs":[{"name":"placementgroupinsertcall"},{"name":"placementgroup"}],"output":{"name":"placementgroupinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",381,{"inputs":[{"name":"placementgroupinsertcall"},{"name":"str"}],"output":{"name":"placementgroupinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",381,{"inputs":[{"name":"placementgroupinsertcall"},{"name":"delegate"}],"output":{"name":"placementgroupinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",381,{"inputs":[{"name":"placementgroupinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementgroupinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",381,{"inputs":[{"name":"placementgroupinsertcall"},{"name":"t"}],"output":{"name":"placementgroupinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",382,{"inputs":[{"name":"placementgroupgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",382,{"inputs":[{"name":"placementgroupgetcall"},{"name":"str"}],"output":{"name":"placementgroupgetcall"}}],[11,"id","","Placement group ID.",382,{"inputs":[{"name":"placementgroupgetcall"},{"name":"str"}],"output":{"name":"placementgroupgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",382,{"inputs":[{"name":"placementgroupgetcall"},{"name":"delegate"}],"output":{"name":"placementgroupgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",382,{"inputs":[{"name":"placementgroupgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementgroupgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",382,{"inputs":[{"name":"placementgroupgetcall"},{"name":"t"}],"output":{"name":"placementgroupgetcall"}}],[11,"doit","","Perform the operation you have build so far.",383,{"inputs":[{"name":"placementgrouppatchcall"}],"output":{"name":"result"}}],[11,"request","","",383,{"inputs":[{"name":"placementgrouppatchcall"},{"name":"placementgroup"}],"output":{"name":"placementgrouppatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",383,{"inputs":[{"name":"placementgrouppatchcall"},{"name":"str"}],"output":{"name":"placementgrouppatchcall"}}],[11,"id","","Placement group ID.",383,{"inputs":[{"name":"placementgrouppatchcall"},{"name":"str"}],"output":{"name":"placementgrouppatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",383,{"inputs":[{"name":"placementgrouppatchcall"},{"name":"delegate"}],"output":{"name":"placementgrouppatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",383,{"inputs":[{"name":"placementgrouppatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementgrouppatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",383,{"inputs":[{"name":"placementgrouppatchcall"},{"name":"t"}],"output":{"name":"placementgrouppatchcall"}}],[11,"doit","","Perform the operation you have build so far.",384,{"inputs":[{"name":"inventoryitemlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",384,{"inputs":[{"name":"inventoryitemlistcall"},{"name":"str"}],"output":{"name":"inventoryitemlistcall"}}],[11,"project_id","","Project ID for order documents.",384,{"inputs":[{"name":"inventoryitemlistcall"},{"name":"str"}],"output":{"name":"inventoryitemlistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",384,{"inputs":[{"name":"inventoryitemlistcall"},{"name":"str"}],"output":{"name":"inventoryitemlistcall"}}],[11,"sort_field","","Field by which to sort the list.",384,{"inputs":[{"name":"inventoryitemlistcall"},{"name":"str"}],"output":{"name":"inventoryitemlistcall"}}],[11,"add_site_id","","Select only inventory items that are associated with these sites.",384,{"inputs":[{"name":"inventoryitemlistcall"},{"name":"str"}],"output":{"name":"inventoryitemlistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",384,{"inputs":[{"name":"inventoryitemlistcall"},{"name":"str"}],"output":{"name":"inventoryitemlistcall"}}],[11,"add_order_id","","Select only inventory items that belong to specified orders.",384,{"inputs":[{"name":"inventoryitemlistcall"},{"name":"str"}],"output":{"name":"inventoryitemlistcall"}}],[11,"max_results","","Maximum number of results to return.",384,{"inputs":[{"name":"inventoryitemlistcall"},{"name":"i32"}],"output":{"name":"inventoryitemlistcall"}}],[11,"in_plan","","Select only inventory items that are in plan.",384,{"inputs":[{"name":"inventoryitemlistcall"},{"name":"bool"}],"output":{"name":"inventoryitemlistcall"}}],[11,"add_ids","","Select only inventory items with these IDs.",384,{"inputs":[{"name":"inventoryitemlistcall"},{"name":"str"}],"output":{"name":"inventoryitemlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",384,{"inputs":[{"name":"inventoryitemlistcall"},{"name":"delegate"}],"output":{"name":"inventoryitemlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",384,{"inputs":[{"name":"inventoryitemlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"inventoryitemlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",384,{"inputs":[{"name":"inventoryitemlistcall"},{"name":"t"}],"output":{"name":"inventoryitemlistcall"}}],[11,"doit","","Perform the operation you have build so far.",385,{"inputs":[{"name":"inventoryitemgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",385,{"inputs":[{"name":"inventoryitemgetcall"},{"name":"str"}],"output":{"name":"inventoryitemgetcall"}}],[11,"project_id","","Project ID for order documents.",385,{"inputs":[{"name":"inventoryitemgetcall"},{"name":"str"}],"output":{"name":"inventoryitemgetcall"}}],[11,"id","","Inventory item ID.",385,{"inputs":[{"name":"inventoryitemgetcall"},{"name":"str"}],"output":{"name":"inventoryitemgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",385,{"inputs":[{"name":"inventoryitemgetcall"},{"name":"delegate"}],"output":{"name":"inventoryitemgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",385,{"inputs":[{"name":"inventoryitemgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"inventoryitemgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",385,{"inputs":[{"name":"inventoryitemgetcall"},{"name":"t"}],"output":{"name":"inventoryitemgetcall"}}],[11,"doit","","Perform the operation you have build so far.",386,{"inputs":[{"name":"userrolepermissiongetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",386,{"inputs":[{"name":"userrolepermissiongetcall"},{"name":"str"}],"output":{"name":"userrolepermissiongetcall"}}],[11,"id","","User role permission ID.",386,{"inputs":[{"name":"userrolepermissiongetcall"},{"name":"str"}],"output":{"name":"userrolepermissiongetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",386,{"inputs":[{"name":"userrolepermissiongetcall"},{"name":"delegate"}],"output":{"name":"userrolepermissiongetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",386,{"inputs":[{"name":"userrolepermissiongetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"userrolepermissiongetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",386,{"inputs":[{"name":"userrolepermissiongetcall"},{"name":"t"}],"output":{"name":"userrolepermissiongetcall"}}],[11,"doit","","Perform the operation you have build so far.",387,{"inputs":[{"name":"userrolepermissionlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",387,{"inputs":[{"name":"userrolepermissionlistcall"},{"name":"str"}],"output":{"name":"userrolepermissionlistcall"}}],[11,"add_ids","","Select only user role permissions with these IDs.",387,{"inputs":[{"name":"userrolepermissionlistcall"},{"name":"str"}],"output":{"name":"userrolepermissionlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",387,{"inputs":[{"name":"userrolepermissionlistcall"},{"name":"delegate"}],"output":{"name":"userrolepermissionlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",387,{"inputs":[{"name":"userrolepermissionlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"userrolepermissionlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",387,{"inputs":[{"name":"userrolepermissionlistcall"},{"name":"t"}],"output":{"name":"userrolepermissionlistcall"}}],[11,"doit","","Perform the operation you have build so far.",388,{"inputs":[{"name":"accountpermissiongrouplistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",388,{"inputs":[{"name":"accountpermissiongrouplistcall"},{"name":"str"}],"output":{"name":"accountpermissiongrouplistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",388,{"inputs":[{"name":"accountpermissiongrouplistcall"},{"name":"delegate"}],"output":{"name":"accountpermissiongrouplistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",388,{"inputs":[{"name":"accountpermissiongrouplistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"accountpermissiongrouplistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",388,{"inputs":[{"name":"accountpermissiongrouplistcall"},{"name":"t"}],"output":{"name":"accountpermissiongrouplistcall"}}],[11,"doit","","Perform the operation you have build so far.",389,{"inputs":[{"name":"accountpermissiongroupgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",389,{"inputs":[{"name":"accountpermissiongroupgetcall"},{"name":"str"}],"output":{"name":"accountpermissiongroupgetcall"}}],[11,"id","","Account permission group ID.",389,{"inputs":[{"name":"accountpermissiongroupgetcall"},{"name":"str"}],"output":{"name":"accountpermissiongroupgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",389,{"inputs":[{"name":"accountpermissiongroupgetcall"},{"name":"delegate"}],"output":{"name":"accountpermissiongroupgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",389,{"inputs":[{"name":"accountpermissiongroupgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"accountpermissiongroupgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",389,{"inputs":[{"name":"accountpermissiongroupgetcall"},{"name":"t"}],"output":{"name":"accountpermissiongroupgetcall"}}],[11,"doit","","Perform the operation you have build so far.",390,{"inputs":[{"name":"contentcategorylistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",390,{"inputs":[{"name":"contentcategorylistcall"},{"name":"str"}],"output":{"name":"contentcategorylistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",390,{"inputs":[{"name":"contentcategorylistcall"},{"name":"str"}],"output":{"name":"contentcategorylistcall"}}],[11,"sort_field","","Field by which to sort the list.",390,{"inputs":[{"name":"contentcategorylistcall"},{"name":"str"}],"output":{"name":"contentcategorylistcall"}}],[11,"search_string","","Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"contentcategory*2015\" will return objects with names like \"contentcategory June 2015\", \"contentcategory April 2015\", or simply \"contentcategory 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"contentcategory\" will match objects with name \"my contentcategory\", \"contentcategory 2015\", or simply \"contentcategory\".",390,{"inputs":[{"name":"contentcategorylistcall"},{"name":"str"}],"output":{"name":"contentcategorylistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",390,{"inputs":[{"name":"contentcategorylistcall"},{"name":"str"}],"output":{"name":"contentcategorylistcall"}}],[11,"max_results","","Maximum number of results to return.",390,{"inputs":[{"name":"contentcategorylistcall"},{"name":"i32"}],"output":{"name":"contentcategorylistcall"}}],[11,"add_ids","","Select only content categories with these IDs.",390,{"inputs":[{"name":"contentcategorylistcall"},{"name":"str"}],"output":{"name":"contentcategorylistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",390,{"inputs":[{"name":"contentcategorylistcall"},{"name":"delegate"}],"output":{"name":"contentcategorylistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",390,{"inputs":[{"name":"contentcategorylistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"contentcategorylistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",390,{"inputs":[{"name":"contentcategorylistcall"},{"name":"t"}],"output":{"name":"contentcategorylistcall"}}],[11,"doit","","Perform the operation you have build so far.",391,{"inputs":[{"name":"contentcategoryupdatecall"}],"output":{"name":"result"}}],[11,"request","","",391,{"inputs":[{"name":"contentcategoryupdatecall"},{"name":"contentcategory"}],"output":{"name":"contentcategoryupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",391,{"inputs":[{"name":"contentcategoryupdatecall"},{"name":"str"}],"output":{"name":"contentcategoryupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",391,{"inputs":[{"name":"contentcategoryupdatecall"},{"name":"delegate"}],"output":{"name":"contentcategoryupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",391,{"inputs":[{"name":"contentcategoryupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"contentcategoryupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",391,{"inputs":[{"name":"contentcategoryupdatecall"},{"name":"t"}],"output":{"name":"contentcategoryupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",392,{"inputs":[{"name":"contentcategoryinsertcall"}],"output":{"name":"result"}}],[11,"request","","",392,{"inputs":[{"name":"contentcategoryinsertcall"},{"name":"contentcategory"}],"output":{"name":"contentcategoryinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",392,{"inputs":[{"name":"contentcategoryinsertcall"},{"name":"str"}],"output":{"name":"contentcategoryinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",392,{"inputs":[{"name":"contentcategoryinsertcall"},{"name":"delegate"}],"output":{"name":"contentcategoryinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",392,{"inputs":[{"name":"contentcategoryinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"contentcategoryinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",392,{"inputs":[{"name":"contentcategoryinsertcall"},{"name":"t"}],"output":{"name":"contentcategoryinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",393,{"inputs":[{"name":"contentcategorydeletecall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",393,{"inputs":[{"name":"contentcategorydeletecall"},{"name":"str"}],"output":{"name":"contentcategorydeletecall"}}],[11,"id","","Content category ID.",393,{"inputs":[{"name":"contentcategorydeletecall"},{"name":"str"}],"output":{"name":"contentcategorydeletecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",393,{"inputs":[{"name":"contentcategorydeletecall"},{"name":"delegate"}],"output":{"name":"contentcategorydeletecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",393,{"inputs":[{"name":"contentcategorydeletecall"},{"name":"t"},{"name":"t"}],"output":{"name":"contentcategorydeletecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",393,{"inputs":[{"name":"contentcategorydeletecall"},{"name":"t"}],"output":{"name":"contentcategorydeletecall"}}],[11,"doit","","Perform the operation you have build so far.",394,{"inputs":[{"name":"contentcategorygetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",394,{"inputs":[{"name":"contentcategorygetcall"},{"name":"str"}],"output":{"name":"contentcategorygetcall"}}],[11,"id","","Content category ID.",394,{"inputs":[{"name":"contentcategorygetcall"},{"name":"str"}],"output":{"name":"contentcategorygetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",394,{"inputs":[{"name":"contentcategorygetcall"},{"name":"delegate"}],"output":{"name":"contentcategorygetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",394,{"inputs":[{"name":"contentcategorygetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"contentcategorygetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",394,{"inputs":[{"name":"contentcategorygetcall"},{"name":"t"}],"output":{"name":"contentcategorygetcall"}}],[11,"doit","","Perform the operation you have build so far.",395,{"inputs":[{"name":"contentcategorypatchcall"}],"output":{"name":"result"}}],[11,"request","","",395,{"inputs":[{"name":"contentcategorypatchcall"},{"name":"contentcategory"}],"output":{"name":"contentcategorypatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",395,{"inputs":[{"name":"contentcategorypatchcall"},{"name":"str"}],"output":{"name":"contentcategorypatchcall"}}],[11,"id","","Content category ID.",395,{"inputs":[{"name":"contentcategorypatchcall"},{"name":"str"}],"output":{"name":"contentcategorypatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",395,{"inputs":[{"name":"contentcategorypatchcall"},{"name":"delegate"}],"output":{"name":"contentcategorypatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",395,{"inputs":[{"name":"contentcategorypatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"contentcategorypatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",395,{"inputs":[{"name":"contentcategorypatchcall"},{"name":"t"}],"output":{"name":"contentcategorypatchcall"}}],[11,"doit","","Perform the operation you have build so far.",396,{"inputs":[{"name":"creativeupdatecall"}],"output":{"name":"result"}}],[11,"request","","",396,{"inputs":[{"name":"creativeupdatecall"},{"name":"creative"}],"output":{"name":"creativeupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",396,{"inputs":[{"name":"creativeupdatecall"},{"name":"str"}],"output":{"name":"creativeupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",396,{"inputs":[{"name":"creativeupdatecall"},{"name":"delegate"}],"output":{"name":"creativeupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",396,{"inputs":[{"name":"creativeupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativeupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",396,{"inputs":[{"name":"creativeupdatecall"},{"name":"t"}],"output":{"name":"creativeupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",397,{"inputs":[{"name":"creativeinsertcall"}],"output":{"name":"result"}}],[11,"request","","",397,{"inputs":[{"name":"creativeinsertcall"},{"name":"creative"}],"output":{"name":"creativeinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",397,{"inputs":[{"name":"creativeinsertcall"},{"name":"str"}],"output":{"name":"creativeinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",397,{"inputs":[{"name":"creativeinsertcall"},{"name":"delegate"}],"output":{"name":"creativeinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",397,{"inputs":[{"name":"creativeinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativeinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",397,{"inputs":[{"name":"creativeinsertcall"},{"name":"t"}],"output":{"name":"creativeinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",398,{"inputs":[{"name":"creativegetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",398,{"inputs":[{"name":"creativegetcall"},{"name":"str"}],"output":{"name":"creativegetcall"}}],[11,"id","","Creative ID.",398,{"inputs":[{"name":"creativegetcall"},{"name":"str"}],"output":{"name":"creativegetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",398,{"inputs":[{"name":"creativegetcall"},{"name":"delegate"}],"output":{"name":"creativegetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",398,{"inputs":[{"name":"creativegetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativegetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",398,{"inputs":[{"name":"creativegetcall"},{"name":"t"}],"output":{"name":"creativegetcall"}}],[11,"doit","","Perform the operation you have build so far.",399,{"inputs":[{"name":"creativelistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",399,{"inputs":[{"name":"creativelistcall"},{"name":"str"}],"output":{"name":"creativelistcall"}}],[11,"add_types","","Select only creatives with these creative types.",399,{"inputs":[{"name":"creativelistcall"},{"name":"str"}],"output":{"name":"creativelistcall"}}],[11,"studio_creative_id","","Select only creatives corresponding to this Studio creative ID.",399,{"inputs":[{"name":"creativelistcall"},{"name":"str"}],"output":{"name":"creativelistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",399,{"inputs":[{"name":"creativelistcall"},{"name":"str"}],"output":{"name":"creativelistcall"}}],[11,"sort_field","","Field by which to sort the list.",399,{"inputs":[{"name":"creativelistcall"},{"name":"str"}],"output":{"name":"creativelistcall"}}],[11,"add_size_ids","","Select only creatives with these size IDs.",399,{"inputs":[{"name":"creativelistcall"},{"name":"str"}],"output":{"name":"creativelistcall"}}],[11,"search_string","","Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"creative*2015\" will return objects with names like \"creative June 2015\", \"creative April 2015\", or simply \"creative 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"creative\" will match objects with name \"my creative\", \"creative 2015\", or simply \"creative\".",399,{"inputs":[{"name":"creativelistcall"},{"name":"str"}],"output":{"name":"creativelistcall"}}],[11,"add_rendering_ids","","Select only creatives with these rendering IDs.",399,{"inputs":[{"name":"creativelistcall"},{"name":"str"}],"output":{"name":"creativelistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",399,{"inputs":[{"name":"creativelistcall"},{"name":"str"}],"output":{"name":"creativelistcall"}}],[11,"max_results","","Maximum number of results to return.",399,{"inputs":[{"name":"creativelistcall"},{"name":"i32"}],"output":{"name":"creativelistcall"}}],[11,"add_ids","","Select only creatives with these IDs.",399,{"inputs":[{"name":"creativelistcall"},{"name":"str"}],"output":{"name":"creativelistcall"}}],[11,"add_creative_field_ids","","Select only creatives with these creative field IDs.",399,{"inputs":[{"name":"creativelistcall"},{"name":"str"}],"output":{"name":"creativelistcall"}}],[11,"add_companion_creative_ids","","Select only in-stream video creatives with these companion IDs.",399,{"inputs":[{"name":"creativelistcall"},{"name":"str"}],"output":{"name":"creativelistcall"}}],[11,"campaign_id","","Select only creatives with this campaign ID.",399,{"inputs":[{"name":"creativelistcall"},{"name":"str"}],"output":{"name":"creativelistcall"}}],[11,"archived","","Select only archived creatives. Leave blank to select archived and unarchived creatives.",399,{"inputs":[{"name":"creativelistcall"},{"name":"bool"}],"output":{"name":"creativelistcall"}}],[11,"advertiser_id","","Select only creatives with this advertiser ID.",399,{"inputs":[{"name":"creativelistcall"},{"name":"str"}],"output":{"name":"creativelistcall"}}],[11,"active","","Select only active creatives. Leave blank to select active and inactive creatives.",399,{"inputs":[{"name":"creativelistcall"},{"name":"bool"}],"output":{"name":"creativelistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",399,{"inputs":[{"name":"creativelistcall"},{"name":"delegate"}],"output":{"name":"creativelistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",399,{"inputs":[{"name":"creativelistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativelistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",399,{"inputs":[{"name":"creativelistcall"},{"name":"t"}],"output":{"name":"creativelistcall"}}],[11,"doit","","Perform the operation you have build so far.",400,{"inputs":[{"name":"creativepatchcall"}],"output":{"name":"result"}}],[11,"request","","",400,{"inputs":[{"name":"creativepatchcall"},{"name":"creative"}],"output":{"name":"creativepatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",400,{"inputs":[{"name":"creativepatchcall"},{"name":"str"}],"output":{"name":"creativepatchcall"}}],[11,"id","","Creative ID.",400,{"inputs":[{"name":"creativepatchcall"},{"name":"str"}],"output":{"name":"creativepatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",400,{"inputs":[{"name":"creativepatchcall"},{"name":"delegate"}],"output":{"name":"creativepatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",400,{"inputs":[{"name":"creativepatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"creativepatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",400,{"inputs":[{"name":"creativepatchcall"},{"name":"t"}],"output":{"name":"creativepatchcall"}}],[11,"doit","","Perform the operation you have build so far.",401,{"inputs":[{"name":"campaigngetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",401,{"inputs":[{"name":"campaigngetcall"},{"name":"str"}],"output":{"name":"campaigngetcall"}}],[11,"id","","Campaign ID.",401,{"inputs":[{"name":"campaigngetcall"},{"name":"str"}],"output":{"name":"campaigngetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",401,{"inputs":[{"name":"campaigngetcall"},{"name":"delegate"}],"output":{"name":"campaigngetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",401,{"inputs":[{"name":"campaigngetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"campaigngetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",401,{"inputs":[{"name":"campaigngetcall"},{"name":"t"}],"output":{"name":"campaigngetcall"}}],[11,"doit","","Perform the operation you have build so far.",402,{"inputs":[{"name":"campaigninsertcall"}],"output":{"name":"result"}}],[11,"request","","",402,{"inputs":[{"name":"campaigninsertcall"},{"name":"campaign"}],"output":{"name":"campaigninsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",402,{"inputs":[{"name":"campaigninsertcall"},{"name":"str"}],"output":{"name":"campaigninsertcall"}}],[11,"default_landing_page_name","","Default landing page name for this new campaign. Must be less than 256 characters long.",402,{"inputs":[{"name":"campaigninsertcall"},{"name":"str"}],"output":{"name":"campaigninsertcall"}}],[11,"default_landing_page_url","","Default landing page URL for this new campaign.",402,{"inputs":[{"name":"campaigninsertcall"},{"name":"str"}],"output":{"name":"campaigninsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",402,{"inputs":[{"name":"campaigninsertcall"},{"name":"delegate"}],"output":{"name":"campaigninsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",402,{"inputs":[{"name":"campaigninsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"campaigninsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",402,{"inputs":[{"name":"campaigninsertcall"},{"name":"t"}],"output":{"name":"campaigninsertcall"}}],[11,"doit","","Perform the operation you have build so far.",403,{"inputs":[{"name":"campaignpatchcall"}],"output":{"name":"result"}}],[11,"request","","",403,{"inputs":[{"name":"campaignpatchcall"},{"name":"campaign"}],"output":{"name":"campaignpatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",403,{"inputs":[{"name":"campaignpatchcall"},{"name":"str"}],"output":{"name":"campaignpatchcall"}}],[11,"id","","Campaign ID.",403,{"inputs":[{"name":"campaignpatchcall"},{"name":"str"}],"output":{"name":"campaignpatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",403,{"inputs":[{"name":"campaignpatchcall"},{"name":"delegate"}],"output":{"name":"campaignpatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",403,{"inputs":[{"name":"campaignpatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"campaignpatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",403,{"inputs":[{"name":"campaignpatchcall"},{"name":"t"}],"output":{"name":"campaignpatchcall"}}],[11,"doit","","Perform the operation you have build so far.",404,{"inputs":[{"name":"campaignupdatecall"}],"output":{"name":"result"}}],[11,"request","","",404,{"inputs":[{"name":"campaignupdatecall"},{"name":"campaign"}],"output":{"name":"campaignupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",404,{"inputs":[{"name":"campaignupdatecall"},{"name":"str"}],"output":{"name":"campaignupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",404,{"inputs":[{"name":"campaignupdatecall"},{"name":"delegate"}],"output":{"name":"campaignupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",404,{"inputs":[{"name":"campaignupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"campaignupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",404,{"inputs":[{"name":"campaignupdatecall"},{"name":"t"}],"output":{"name":"campaignupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",405,{"inputs":[{"name":"campaignlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"str"}],"output":{"name":"campaignlistcall"}}],[11,"subaccount_id","","Select only campaigns that belong to this subaccount.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"str"}],"output":{"name":"campaignlistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"str"}],"output":{"name":"campaignlistcall"}}],[11,"sort_field","","Field by which to sort the list.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"str"}],"output":{"name":"campaignlistcall"}}],[11,"search_string","","Allows searching for campaigns by name or ID. Wildcards (*) are allowed. For example, \"campaign*2015\" will return campaigns with names like \"campaign June 2015\", \"campaign April 2015\", or simply \"campaign 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"campaign\" will match campaigns with name \"my campaign\", \"campaign 2015\", or simply \"campaign\".",405,{"inputs":[{"name":"campaignlistcall"},{"name":"str"}],"output":{"name":"campaignlistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"str"}],"output":{"name":"campaignlistcall"}}],[11,"overridden_event_tag_id","","Select only campaigns that have overridden this event tag ID.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"str"}],"output":{"name":"campaignlistcall"}}],[11,"max_results","","Maximum number of results to return.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"i32"}],"output":{"name":"campaignlistcall"}}],[11,"add_ids","","Select only campaigns with these IDs.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"str"}],"output":{"name":"campaignlistcall"}}],[11,"add_excluded_ids","","Exclude campaigns with these IDs.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"str"}],"output":{"name":"campaignlistcall"}}],[11,"at_least_one_optimization_activity","","Select only campaigns that have at least one optimization activity.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"bool"}],"output":{"name":"campaignlistcall"}}],[11,"archived","","Select only archived campaigns. Don't set this field to select both archived and non-archived campaigns.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"bool"}],"output":{"name":"campaignlistcall"}}],[11,"add_advertiser_ids","","Select only campaigns that belong to these advertisers.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"str"}],"output":{"name":"campaignlistcall"}}],[11,"add_advertiser_group_ids","","Select only campaigns whose advertisers belong to these advertiser groups.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"str"}],"output":{"name":"campaignlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"delegate"}],"output":{"name":"campaignlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"campaignlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",405,{"inputs":[{"name":"campaignlistcall"},{"name":"t"}],"output":{"name":"campaignlistcall"}}],[11,"doit","","Perform the operation you have build so far.",406,{"inputs":[{"name":"eventtagdeletecall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",406,{"inputs":[{"name":"eventtagdeletecall"},{"name":"str"}],"output":{"name":"eventtagdeletecall"}}],[11,"id","","Event tag ID.",406,{"inputs":[{"name":"eventtagdeletecall"},{"name":"str"}],"output":{"name":"eventtagdeletecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",406,{"inputs":[{"name":"eventtagdeletecall"},{"name":"delegate"}],"output":{"name":"eventtagdeletecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",406,{"inputs":[{"name":"eventtagdeletecall"},{"name":"t"},{"name":"t"}],"output":{"name":"eventtagdeletecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",406,{"inputs":[{"name":"eventtagdeletecall"},{"name":"t"}],"output":{"name":"eventtagdeletecall"}}],[11,"doit","","Perform the operation you have build so far.",407,{"inputs":[{"name":"eventtaglistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",407,{"inputs":[{"name":"eventtaglistcall"},{"name":"str"}],"output":{"name":"eventtaglistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",407,{"inputs":[{"name":"eventtaglistcall"},{"name":"str"}],"output":{"name":"eventtaglistcall"}}],[11,"sort_field","","Field by which to sort the list.",407,{"inputs":[{"name":"eventtaglistcall"},{"name":"str"}],"output":{"name":"eventtaglistcall"}}],[11,"search_string","","Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"eventtag*2015\" will return objects with names like \"eventtag June 2015\", \"eventtag April 2015\", or simply \"eventtag 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"eventtag\" will match objects with name \"my eventtag\", \"eventtag 2015\", or simply \"eventtag\".",407,{"inputs":[{"name":"eventtaglistcall"},{"name":"str"}],"output":{"name":"eventtaglistcall"}}],[11,"add_ids","","Select only event tags with these IDs.",407,{"inputs":[{"name":"eventtaglistcall"},{"name":"str"}],"output":{"name":"eventtaglistcall"}}],[11,"add_event_tag_types","","Select only event tags with the specified event tag types. Event tag types can be used to specify whether to use a third-party pixel, a third-party JavaScript URL, or a third-party click-through URL for either impression or click tracking.",407,{"inputs":[{"name":"eventtaglistcall"},{"name":"str"}],"output":{"name":"eventtaglistcall"}}],[11,"enabled","","Select only enabled event tags. When definitionsOnly is set to true, only the specified advertiser or campaign's event tags' enabledByDefault field is examined. When definitionsOnly is set to false, the specified ad or specified campaign's parent advertiser's or parent campaign's event tags' enabledByDefault and status fields are examined as well.",407,{"inputs":[{"name":"eventtaglistcall"},{"name":"bool"}],"output":{"name":"eventtaglistcall"}}],[11,"definitions_only","","Examine only the specified ad or campaign or advertiser's event tags for matching selector criteria. When set to false, the parent advertiser and parent campaign is examined as well. In addition, when set to false, the status field is examined as well along with the enabledByDefault field.",407,{"inputs":[{"name":"eventtaglistcall"},{"name":"bool"}],"output":{"name":"eventtaglistcall"}}],[11,"campaign_id","","Select only event tags that belong to this campaign.",407,{"inputs":[{"name":"eventtaglistcall"},{"name":"str"}],"output":{"name":"eventtaglistcall"}}],[11,"advertiser_id","","Select only event tags that belong to this advertiser.",407,{"inputs":[{"name":"eventtaglistcall"},{"name":"str"}],"output":{"name":"eventtaglistcall"}}],[11,"ad_id","","Select only event tags that belong to this ad.",407,{"inputs":[{"name":"eventtaglistcall"},{"name":"str"}],"output":{"name":"eventtaglistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",407,{"inputs":[{"name":"eventtaglistcall"},{"name":"delegate"}],"output":{"name":"eventtaglistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",407,{"inputs":[{"name":"eventtaglistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"eventtaglistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",407,{"inputs":[{"name":"eventtaglistcall"},{"name":"t"}],"output":{"name":"eventtaglistcall"}}],[11,"doit","","Perform the operation you have build so far.",408,{"inputs":[{"name":"eventtaginsertcall"}],"output":{"name":"result"}}],[11,"request","","",408,{"inputs":[{"name":"eventtaginsertcall"},{"name":"eventtag"}],"output":{"name":"eventtaginsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",408,{"inputs":[{"name":"eventtaginsertcall"},{"name":"str"}],"output":{"name":"eventtaginsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",408,{"inputs":[{"name":"eventtaginsertcall"},{"name":"delegate"}],"output":{"name":"eventtaginsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",408,{"inputs":[{"name":"eventtaginsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"eventtaginsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",408,{"inputs":[{"name":"eventtaginsertcall"},{"name":"t"}],"output":{"name":"eventtaginsertcall"}}],[11,"doit","","Perform the operation you have build so far.",409,{"inputs":[{"name":"eventtagpatchcall"}],"output":{"name":"result"}}],[11,"request","","",409,{"inputs":[{"name":"eventtagpatchcall"},{"name":"eventtag"}],"output":{"name":"eventtagpatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",409,{"inputs":[{"name":"eventtagpatchcall"},{"name":"str"}],"output":{"name":"eventtagpatchcall"}}],[11,"id","","Event tag ID.",409,{"inputs":[{"name":"eventtagpatchcall"},{"name":"str"}],"output":{"name":"eventtagpatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",409,{"inputs":[{"name":"eventtagpatchcall"},{"name":"delegate"}],"output":{"name":"eventtagpatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",409,{"inputs":[{"name":"eventtagpatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"eventtagpatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",409,{"inputs":[{"name":"eventtagpatchcall"},{"name":"t"}],"output":{"name":"eventtagpatchcall"}}],[11,"doit","","Perform the operation you have build so far.",410,{"inputs":[{"name":"eventtagupdatecall"}],"output":{"name":"result"}}],[11,"request","","",410,{"inputs":[{"name":"eventtagupdatecall"},{"name":"eventtag"}],"output":{"name":"eventtagupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",410,{"inputs":[{"name":"eventtagupdatecall"},{"name":"str"}],"output":{"name":"eventtagupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",410,{"inputs":[{"name":"eventtagupdatecall"},{"name":"delegate"}],"output":{"name":"eventtagupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",410,{"inputs":[{"name":"eventtagupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"eventtagupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",410,{"inputs":[{"name":"eventtagupdatecall"},{"name":"t"}],"output":{"name":"eventtagupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",411,{"inputs":[{"name":"eventtaggetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",411,{"inputs":[{"name":"eventtaggetcall"},{"name":"str"}],"output":{"name":"eventtaggetcall"}}],[11,"id","","Event tag ID.",411,{"inputs":[{"name":"eventtaggetcall"},{"name":"str"}],"output":{"name":"eventtaggetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",411,{"inputs":[{"name":"eventtaggetcall"},{"name":"delegate"}],"output":{"name":"eventtaggetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",411,{"inputs":[{"name":"eventtaggetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"eventtaggetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",411,{"inputs":[{"name":"eventtaggetcall"},{"name":"t"}],"output":{"name":"eventtaggetcall"}}],[11,"doit","","Perform the operation you have build so far.",412,{"inputs":[{"name":"remarketinglistgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",412,{"inputs":[{"name":"remarketinglistgetcall"},{"name":"str"}],"output":{"name":"remarketinglistgetcall"}}],[11,"id","","Remarketing list ID.",412,{"inputs":[{"name":"remarketinglistgetcall"},{"name":"str"}],"output":{"name":"remarketinglistgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",412,{"inputs":[{"name":"remarketinglistgetcall"},{"name":"delegate"}],"output":{"name":"remarketinglistgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",412,{"inputs":[{"name":"remarketinglistgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"remarketinglistgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",412,{"inputs":[{"name":"remarketinglistgetcall"},{"name":"t"}],"output":{"name":"remarketinglistgetcall"}}],[11,"doit","","Perform the operation you have build so far.",413,{"inputs":[{"name":"remarketinglistupdatecall"}],"output":{"name":"result"}}],[11,"request","","",413,{"inputs":[{"name":"remarketinglistupdatecall"},{"name":"remarketinglist"}],"output":{"name":"remarketinglistupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",413,{"inputs":[{"name":"remarketinglistupdatecall"},{"name":"str"}],"output":{"name":"remarketinglistupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",413,{"inputs":[{"name":"remarketinglistupdatecall"},{"name":"delegate"}],"output":{"name":"remarketinglistupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",413,{"inputs":[{"name":"remarketinglistupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"remarketinglistupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",413,{"inputs":[{"name":"remarketinglistupdatecall"},{"name":"t"}],"output":{"name":"remarketinglistupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",414,{"inputs":[{"name":"remarketinglistlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",414,{"inputs":[{"name":"remarketinglistlistcall"},{"name":"str"}],"output":{"name":"remarketinglistlistcall"}}],[11,"advertiser_id","","Select only remarketing lists owned by this advertiser.",414,{"inputs":[{"name":"remarketinglistlistcall"},{"name":"str"}],"output":{"name":"remarketinglistlistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",414,{"inputs":[{"name":"remarketinglistlistcall"},{"name":"str"}],"output":{"name":"remarketinglistlistcall"}}],[11,"sort_field","","Field by which to sort the list.",414,{"inputs":[{"name":"remarketinglistlistcall"},{"name":"str"}],"output":{"name":"remarketinglistlistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",414,{"inputs":[{"name":"remarketinglistlistcall"},{"name":"str"}],"output":{"name":"remarketinglistlistcall"}}],[11,"name","","Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"remarketing list*2015\" will return objects with names like \"remarketing list June 2015\", \"remarketing list April 2015\", or simply \"remarketing list 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"remarketing list\" will match objects with name \"my remarketing list\", \"remarketing list 2015\", or simply \"remarketing list\".",414,{"inputs":[{"name":"remarketinglistlistcall"},{"name":"str"}],"output":{"name":"remarketinglistlistcall"}}],[11,"max_results","","Maximum number of results to return.",414,{"inputs":[{"name":"remarketinglistlistcall"},{"name":"i32"}],"output":{"name":"remarketinglistlistcall"}}],[11,"floodlight_activity_id","","Select only remarketing lists that have this floodlight activity ID.",414,{"inputs":[{"name":"remarketinglistlistcall"},{"name":"str"}],"output":{"name":"remarketinglistlistcall"}}],[11,"active","","Select only active or only inactive remarketing lists.",414,{"inputs":[{"name":"remarketinglistlistcall"},{"name":"bool"}],"output":{"name":"remarketinglistlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",414,{"inputs":[{"name":"remarketinglistlistcall"},{"name":"delegate"}],"output":{"name":"remarketinglistlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",414,{"inputs":[{"name":"remarketinglistlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"remarketinglistlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",414,{"inputs":[{"name":"remarketinglistlistcall"},{"name":"t"}],"output":{"name":"remarketinglistlistcall"}}],[11,"doit","","Perform the operation you have build so far.",415,{"inputs":[{"name":"remarketinglistpatchcall"}],"output":{"name":"result"}}],[11,"request","","",415,{"inputs":[{"name":"remarketinglistpatchcall"},{"name":"remarketinglist"}],"output":{"name":"remarketinglistpatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",415,{"inputs":[{"name":"remarketinglistpatchcall"},{"name":"str"}],"output":{"name":"remarketinglistpatchcall"}}],[11,"id","","Remarketing list ID.",415,{"inputs":[{"name":"remarketinglistpatchcall"},{"name":"str"}],"output":{"name":"remarketinglistpatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",415,{"inputs":[{"name":"remarketinglistpatchcall"},{"name":"delegate"}],"output":{"name":"remarketinglistpatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",415,{"inputs":[{"name":"remarketinglistpatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"remarketinglistpatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",415,{"inputs":[{"name":"remarketinglistpatchcall"},{"name":"t"}],"output":{"name":"remarketinglistpatchcall"}}],[11,"doit","","Perform the operation you have build so far.",416,{"inputs":[{"name":"remarketinglistinsertcall"}],"output":{"name":"result"}}],[11,"request","","",416,{"inputs":[{"name":"remarketinglistinsertcall"},{"name":"remarketinglist"}],"output":{"name":"remarketinglistinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",416,{"inputs":[{"name":"remarketinglistinsertcall"},{"name":"str"}],"output":{"name":"remarketinglistinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",416,{"inputs":[{"name":"remarketinglistinsertcall"},{"name":"delegate"}],"output":{"name":"remarketinglistinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",416,{"inputs":[{"name":"remarketinglistinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"remarketinglistinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",416,{"inputs":[{"name":"remarketinglistinsertcall"},{"name":"t"}],"output":{"name":"remarketinglistinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",417,{"inputs":[{"name":"citylistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",417,{"inputs":[{"name":"citylistcall"},{"name":"str"}],"output":{"name":"citylistcall"}}],[11,"add_region_dart_ids","","Select only cities from these regions.",417,{"inputs":[{"name":"citylistcall"},{"name":"str"}],"output":{"name":"citylistcall"}}],[11,"name_prefix","","Select only cities with names starting with this prefix.",417,{"inputs":[{"name":"citylistcall"},{"name":"str"}],"output":{"name":"citylistcall"}}],[11,"add_dart_ids","","Select only cities with these DART IDs.",417,{"inputs":[{"name":"citylistcall"},{"name":"str"}],"output":{"name":"citylistcall"}}],[11,"add_country_dart_ids","","Select only cities from these countries.",417,{"inputs":[{"name":"citylistcall"},{"name":"str"}],"output":{"name":"citylistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",417,{"inputs":[{"name":"citylistcall"},{"name":"delegate"}],"output":{"name":"citylistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",417,{"inputs":[{"name":"citylistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"citylistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",417,{"inputs":[{"name":"citylistcall"},{"name":"t"}],"output":{"name":"citylistcall"}}],[11,"doit","","Perform the operation you have build so far.",418,{"inputs":[{"name":"placementstrategyupdatecall"}],"output":{"name":"result"}}],[11,"request","","",418,{"inputs":[{"name":"placementstrategyupdatecall"},{"name":"placementstrategy"}],"output":{"name":"placementstrategyupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",418,{"inputs":[{"name":"placementstrategyupdatecall"},{"name":"str"}],"output":{"name":"placementstrategyupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",418,{"inputs":[{"name":"placementstrategyupdatecall"},{"name":"delegate"}],"output":{"name":"placementstrategyupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",418,{"inputs":[{"name":"placementstrategyupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementstrategyupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",418,{"inputs":[{"name":"placementstrategyupdatecall"},{"name":"t"}],"output":{"name":"placementstrategyupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",419,{"inputs":[{"name":"placementstrategygetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",419,{"inputs":[{"name":"placementstrategygetcall"},{"name":"str"}],"output":{"name":"placementstrategygetcall"}}],[11,"id","","Placement strategy ID.",419,{"inputs":[{"name":"placementstrategygetcall"},{"name":"str"}],"output":{"name":"placementstrategygetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",419,{"inputs":[{"name":"placementstrategygetcall"},{"name":"delegate"}],"output":{"name":"placementstrategygetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",419,{"inputs":[{"name":"placementstrategygetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementstrategygetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",419,{"inputs":[{"name":"placementstrategygetcall"},{"name":"t"}],"output":{"name":"placementstrategygetcall"}}],[11,"doit","","Perform the operation you have build so far.",420,{"inputs":[{"name":"placementstrategylistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",420,{"inputs":[{"name":"placementstrategylistcall"},{"name":"str"}],"output":{"name":"placementstrategylistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",420,{"inputs":[{"name":"placementstrategylistcall"},{"name":"str"}],"output":{"name":"placementstrategylistcall"}}],[11,"sort_field","","Field by which to sort the list.",420,{"inputs":[{"name":"placementstrategylistcall"},{"name":"str"}],"output":{"name":"placementstrategylistcall"}}],[11,"search_string","","Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"placementstrategy*2015\" will return objects with names like \"placementstrategy June 2015\", \"placementstrategy April 2015\", or simply \"placementstrategy 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"placementstrategy\" will match objects with name \"my placementstrategy\", \"placementstrategy 2015\", or simply \"placementstrategy\".",420,{"inputs":[{"name":"placementstrategylistcall"},{"name":"str"}],"output":{"name":"placementstrategylistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",420,{"inputs":[{"name":"placementstrategylistcall"},{"name":"str"}],"output":{"name":"placementstrategylistcall"}}],[11,"max_results","","Maximum number of results to return.",420,{"inputs":[{"name":"placementstrategylistcall"},{"name":"i32"}],"output":{"name":"placementstrategylistcall"}}],[11,"add_ids","","Select only placement strategies with these IDs.",420,{"inputs":[{"name":"placementstrategylistcall"},{"name":"str"}],"output":{"name":"placementstrategylistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",420,{"inputs":[{"name":"placementstrategylistcall"},{"name":"delegate"}],"output":{"name":"placementstrategylistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",420,{"inputs":[{"name":"placementstrategylistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementstrategylistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",420,{"inputs":[{"name":"placementstrategylistcall"},{"name":"t"}],"output":{"name":"placementstrategylistcall"}}],[11,"doit","","Perform the operation you have build so far.",421,{"inputs":[{"name":"placementstrategydeletecall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",421,{"inputs":[{"name":"placementstrategydeletecall"},{"name":"str"}],"output":{"name":"placementstrategydeletecall"}}],[11,"id","","Placement strategy ID.",421,{"inputs":[{"name":"placementstrategydeletecall"},{"name":"str"}],"output":{"name":"placementstrategydeletecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",421,{"inputs":[{"name":"placementstrategydeletecall"},{"name":"delegate"}],"output":{"name":"placementstrategydeletecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",421,{"inputs":[{"name":"placementstrategydeletecall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementstrategydeletecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",421,{"inputs":[{"name":"placementstrategydeletecall"},{"name":"t"}],"output":{"name":"placementstrategydeletecall"}}],[11,"doit","","Perform the operation you have build so far.",422,{"inputs":[{"name":"placementstrategyinsertcall"}],"output":{"name":"result"}}],[11,"request","","",422,{"inputs":[{"name":"placementstrategyinsertcall"},{"name":"placementstrategy"}],"output":{"name":"placementstrategyinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",422,{"inputs":[{"name":"placementstrategyinsertcall"},{"name":"str"}],"output":{"name":"placementstrategyinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",422,{"inputs":[{"name":"placementstrategyinsertcall"},{"name":"delegate"}],"output":{"name":"placementstrategyinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",422,{"inputs":[{"name":"placementstrategyinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementstrategyinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",422,{"inputs":[{"name":"placementstrategyinsertcall"},{"name":"t"}],"output":{"name":"placementstrategyinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",423,{"inputs":[{"name":"placementstrategypatchcall"}],"output":{"name":"result"}}],[11,"request","","",423,{"inputs":[{"name":"placementstrategypatchcall"},{"name":"placementstrategy"}],"output":{"name":"placementstrategypatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",423,{"inputs":[{"name":"placementstrategypatchcall"},{"name":"str"}],"output":{"name":"placementstrategypatchcall"}}],[11,"id","","Placement strategy ID.",423,{"inputs":[{"name":"placementstrategypatchcall"},{"name":"str"}],"output":{"name":"placementstrategypatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",423,{"inputs":[{"name":"placementstrategypatchcall"},{"name":"delegate"}],"output":{"name":"placementstrategypatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",423,{"inputs":[{"name":"placementstrategypatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementstrategypatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",423,{"inputs":[{"name":"placementstrategypatchcall"},{"name":"t"}],"output":{"name":"placementstrategypatchcall"}}],[11,"doit","","Perform the operation you have build so far.",424,{"inputs":[{"name":"projectlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",424,{"inputs":[{"name":"projectlistcall"},{"name":"str"}],"output":{"name":"projectlistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",424,{"inputs":[{"name":"projectlistcall"},{"name":"str"}],"output":{"name":"projectlistcall"}}],[11,"sort_field","","Field by which to sort the list.",424,{"inputs":[{"name":"projectlistcall"},{"name":"str"}],"output":{"name":"projectlistcall"}}],[11,"search_string","","Allows searching for projects by name or ID. Wildcards (*) are allowed. For example, \"project*2015\" will return projects with names like \"project June 2015\", \"project April 2015\", or simply \"project 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"project\" will match projects with name \"my project\", \"project 2015\", or simply \"project\".",424,{"inputs":[{"name":"projectlistcall"},{"name":"str"}],"output":{"name":"projectlistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",424,{"inputs":[{"name":"projectlistcall"},{"name":"str"}],"output":{"name":"projectlistcall"}}],[11,"max_results","","Maximum number of results to return.",424,{"inputs":[{"name":"projectlistcall"},{"name":"i32"}],"output":{"name":"projectlistcall"}}],[11,"add_ids","","Select only projects with these IDs.",424,{"inputs":[{"name":"projectlistcall"},{"name":"str"}],"output":{"name":"projectlistcall"}}],[11,"add_advertiser_ids","","Select only projects with these advertiser IDs.",424,{"inputs":[{"name":"projectlistcall"},{"name":"str"}],"output":{"name":"projectlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",424,{"inputs":[{"name":"projectlistcall"},{"name":"delegate"}],"output":{"name":"projectlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",424,{"inputs":[{"name":"projectlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"projectlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",424,{"inputs":[{"name":"projectlistcall"},{"name":"t"}],"output":{"name":"projectlistcall"}}],[11,"doit","","Perform the operation you have build so far.",425,{"inputs":[{"name":"projectgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",425,{"inputs":[{"name":"projectgetcall"},{"name":"str"}],"output":{"name":"projectgetcall"}}],[11,"id","","Project ID.",425,{"inputs":[{"name":"projectgetcall"},{"name":"str"}],"output":{"name":"projectgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",425,{"inputs":[{"name":"projectgetcall"},{"name":"delegate"}],"output":{"name":"projectgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",425,{"inputs":[{"name":"projectgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"projectgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",425,{"inputs":[{"name":"projectgetcall"},{"name":"t"}],"output":{"name":"projectgetcall"}}],[11,"doit","","Perform the operation you have build so far.",426,{"inputs":[{"name":"directorysiteinsertcall"}],"output":{"name":"result"}}],[11,"request","","",426,{"inputs":[{"name":"directorysiteinsertcall"},{"name":"directorysite"}],"output":{"name":"directorysiteinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",426,{"inputs":[{"name":"directorysiteinsertcall"},{"name":"str"}],"output":{"name":"directorysiteinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",426,{"inputs":[{"name":"directorysiteinsertcall"},{"name":"delegate"}],"output":{"name":"directorysiteinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",426,{"inputs":[{"name":"directorysiteinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"directorysiteinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",426,{"inputs":[{"name":"directorysiteinsertcall"},{"name":"t"}],"output":{"name":"directorysiteinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",427,{"inputs":[{"name":"directorysitelistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"str"}],"output":{"name":"directorysitelistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"str"}],"output":{"name":"directorysitelistcall"}}],[11,"sort_field","","Field by which to sort the list.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"str"}],"output":{"name":"directorysitelistcall"}}],[11,"search_string","","Allows searching for objects by name, ID or URL. Wildcards (*) are allowed. For example, \"directory site*2015\" will return objects with names like \"directory site June 2015\", \"directory site April 2015\", or simply \"directory site 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"directory site\" will match objects with name \"my directory site\", \"directory site 2015\" or simply, \"directory site\".",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"str"}],"output":{"name":"directorysitelistcall"}}],[11,"parent_id","","Select only directory sites with this parent ID.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"str"}],"output":{"name":"directorysitelistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"str"}],"output":{"name":"directorysitelistcall"}}],[11,"max_results","","Maximum number of results to return.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"i32"}],"output":{"name":"directorysitelistcall"}}],[11,"add_ids","","Select only directory sites with these IDs.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"str"}],"output":{"name":"directorysitelistcall"}}],[11,"dfp_network_code","","Select only directory sites with this DFP network code.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"str"}],"output":{"name":"directorysitelistcall"}}],[11,"country_id","","Select only directory sites with this country ID.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"str"}],"output":{"name":"directorysitelistcall"}}],[11,"active","","Select only active directory sites. Leave blank to retrieve both active and inactive directory sites.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"bool"}],"output":{"name":"directorysitelistcall"}}],[11,"accepts_publisher_paid_placements","","Select only directory sites that accept publisher paid placements. This field can be left blank.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"bool"}],"output":{"name":"directorysitelistcall"}}],[11,"accepts_interstitial_placements","","This search filter is no longer supported and will have no effect on the results returned.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"bool"}],"output":{"name":"directorysitelistcall"}}],[11,"accepts_in_stream_video_placements","","This search filter is no longer supported and will have no effect on the results returned.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"bool"}],"output":{"name":"directorysitelistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"delegate"}],"output":{"name":"directorysitelistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"directorysitelistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",427,{"inputs":[{"name":"directorysitelistcall"},{"name":"t"}],"output":{"name":"directorysitelistcall"}}],[11,"doit","","Perform the operation you have build so far.",428,{"inputs":[{"name":"directorysitegetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",428,{"inputs":[{"name":"directorysitegetcall"},{"name":"str"}],"output":{"name":"directorysitegetcall"}}],[11,"id","","Directory site ID.",428,{"inputs":[{"name":"directorysitegetcall"},{"name":"str"}],"output":{"name":"directorysitegetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",428,{"inputs":[{"name":"directorysitegetcall"},{"name":"delegate"}],"output":{"name":"directorysitegetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",428,{"inputs":[{"name":"directorysitegetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"directorysitegetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",428,{"inputs":[{"name":"directorysitegetcall"},{"name":"t"}],"output":{"name":"directorysitegetcall"}}],[11,"doit","","Perform the operation you have build so far.",429,{"inputs":[{"name":"sizeinsertcall"}],"output":{"name":"result"}}],[11,"request","","",429,{"inputs":[{"name":"sizeinsertcall"},{"name":"size"}],"output":{"name":"sizeinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",429,{"inputs":[{"name":"sizeinsertcall"},{"name":"str"}],"output":{"name":"sizeinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",429,{"inputs":[{"name":"sizeinsertcall"},{"name":"delegate"}],"output":{"name":"sizeinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",429,{"inputs":[{"name":"sizeinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"sizeinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",429,{"inputs":[{"name":"sizeinsertcall"},{"name":"t"}],"output":{"name":"sizeinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",430,{"inputs":[{"name":"sizelistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",430,{"inputs":[{"name":"sizelistcall"},{"name":"str"}],"output":{"name":"sizelistcall"}}],[11,"width","","Select only sizes with this width.",430,{"inputs":[{"name":"sizelistcall"},{"name":"i32"}],"output":{"name":"sizelistcall"}}],[11,"add_ids","","Select only sizes with these IDs.",430,{"inputs":[{"name":"sizelistcall"},{"name":"str"}],"output":{"name":"sizelistcall"}}],[11,"iab_standard","","Select only IAB standard sizes.",430,{"inputs":[{"name":"sizelistcall"},{"name":"bool"}],"output":{"name":"sizelistcall"}}],[11,"height","","Select only sizes with this height.",430,{"inputs":[{"name":"sizelistcall"},{"name":"i32"}],"output":{"name":"sizelistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",430,{"inputs":[{"name":"sizelistcall"},{"name":"delegate"}],"output":{"name":"sizelistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",430,{"inputs":[{"name":"sizelistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"sizelistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",430,{"inputs":[{"name":"sizelistcall"},{"name":"t"}],"output":{"name":"sizelistcall"}}],[11,"doit","","Perform the operation you have build so far.",431,{"inputs":[{"name":"sizegetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",431,{"inputs":[{"name":"sizegetcall"},{"name":"str"}],"output":{"name":"sizegetcall"}}],[11,"id","","Size ID.",431,{"inputs":[{"name":"sizegetcall"},{"name":"str"}],"output":{"name":"sizegetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",431,{"inputs":[{"name":"sizegetcall"},{"name":"delegate"}],"output":{"name":"sizegetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",431,{"inputs":[{"name":"sizegetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"sizegetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",431,{"inputs":[{"name":"sizegetcall"},{"name":"t"}],"output":{"name":"sizegetcall"}}],[11,"doit","","Perform the operation you have build so far.",432,{"inputs":[{"name":"accountactiveadsummarygetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",432,{"inputs":[{"name":"accountactiveadsummarygetcall"},{"name":"str"}],"output":{"name":"accountactiveadsummarygetcall"}}],[11,"summary_account_id","","Account ID.",432,{"inputs":[{"name":"accountactiveadsummarygetcall"},{"name":"str"}],"output":{"name":"accountactiveadsummarygetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",432,{"inputs":[{"name":"accountactiveadsummarygetcall"},{"name":"delegate"}],"output":{"name":"accountactiveadsummarygetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",432,{"inputs":[{"name":"accountactiveadsummarygetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"accountactiveadsummarygetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",432,{"inputs":[{"name":"accountactiveadsummarygetcall"},{"name":"t"}],"output":{"name":"accountactiveadsummarygetcall"}}],[11,"doit","","Perform the operation you have build so far.",433,{"inputs":[{"name":"accountuserprofileupdatecall"}],"output":{"name":"result"}}],[11,"request","","",433,{"inputs":[{"name":"accountuserprofileupdatecall"},{"name":"accountuserprofile"}],"output":{"name":"accountuserprofileupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",433,{"inputs":[{"name":"accountuserprofileupdatecall"},{"name":"str"}],"output":{"name":"accountuserprofileupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",433,{"inputs":[{"name":"accountuserprofileupdatecall"},{"name":"delegate"}],"output":{"name":"accountuserprofileupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",433,{"inputs":[{"name":"accountuserprofileupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"accountuserprofileupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",433,{"inputs":[{"name":"accountuserprofileupdatecall"},{"name":"t"}],"output":{"name":"accountuserprofileupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",434,{"inputs":[{"name":"accountuserprofilelistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",434,{"inputs":[{"name":"accountuserprofilelistcall"},{"name":"str"}],"output":{"name":"accountuserprofilelistcall"}}],[11,"user_role_id","","Select only user profiles with the specified user role ID.",434,{"inputs":[{"name":"accountuserprofilelistcall"},{"name":"str"}],"output":{"name":"accountuserprofilelistcall"}}],[11,"subaccount_id","","Select only user profiles with the specified subaccount ID.",434,{"inputs":[{"name":"accountuserprofilelistcall"},{"name":"str"}],"output":{"name":"accountuserprofilelistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",434,{"inputs":[{"name":"accountuserprofilelistcall"},{"name":"str"}],"output":{"name":"accountuserprofilelistcall"}}],[11,"sort_field","","Field by which to sort the list.",434,{"inputs":[{"name":"accountuserprofilelistcall"},{"name":"str"}],"output":{"name":"accountuserprofilelistcall"}}],[11,"search_string","","Allows searching for objects by name, ID or email. Wildcards (*) are allowed. For example, \"user profile*2015\" will return objects with names like \"user profile June 2015\", \"user profile April 2015\", or simply \"user profile 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"user profile\" will match objects with name \"my user profile\", \"user profile 2015\", or simply \"user profile\".",434,{"inputs":[{"name":"accountuserprofilelistcall"},{"name":"str"}],"output":{"name":"accountuserprofilelistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",434,{"inputs":[{"name":"accountuserprofilelistcall"},{"name":"str"}],"output":{"name":"accountuserprofilelistcall"}}],[11,"max_results","","Maximum number of results to return.",434,{"inputs":[{"name":"accountuserprofilelistcall"},{"name":"i32"}],"output":{"name":"accountuserprofilelistcall"}}],[11,"add_ids","","Select only user profiles with these IDs.",434,{"inputs":[{"name":"accountuserprofilelistcall"},{"name":"str"}],"output":{"name":"accountuserprofilelistcall"}}],[11,"active","","Select only active user profiles.",434,{"inputs":[{"name":"accountuserprofilelistcall"},{"name":"bool"}],"output":{"name":"accountuserprofilelistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",434,{"inputs":[{"name":"accountuserprofilelistcall"},{"name":"delegate"}],"output":{"name":"accountuserprofilelistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",434,{"inputs":[{"name":"accountuserprofilelistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"accountuserprofilelistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",434,{"inputs":[{"name":"accountuserprofilelistcall"},{"name":"t"}],"output":{"name":"accountuserprofilelistcall"}}],[11,"doit","","Perform the operation you have build so far.",435,{"inputs":[{"name":"accountuserprofileinsertcall"}],"output":{"name":"result"}}],[11,"request","","",435,{"inputs":[{"name":"accountuserprofileinsertcall"},{"name":"accountuserprofile"}],"output":{"name":"accountuserprofileinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",435,{"inputs":[{"name":"accountuserprofileinsertcall"},{"name":"str"}],"output":{"name":"accountuserprofileinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",435,{"inputs":[{"name":"accountuserprofileinsertcall"},{"name":"delegate"}],"output":{"name":"accountuserprofileinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",435,{"inputs":[{"name":"accountuserprofileinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"accountuserprofileinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",435,{"inputs":[{"name":"accountuserprofileinsertcall"},{"name":"t"}],"output":{"name":"accountuserprofileinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",436,{"inputs":[{"name":"accountuserprofilepatchcall"}],"output":{"name":"result"}}],[11,"request","","",436,{"inputs":[{"name":"accountuserprofilepatchcall"},{"name":"accountuserprofile"}],"output":{"name":"accountuserprofilepatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",436,{"inputs":[{"name":"accountuserprofilepatchcall"},{"name":"str"}],"output":{"name":"accountuserprofilepatchcall"}}],[11,"id","","User profile ID.",436,{"inputs":[{"name":"accountuserprofilepatchcall"},{"name":"str"}],"output":{"name":"accountuserprofilepatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",436,{"inputs":[{"name":"accountuserprofilepatchcall"},{"name":"delegate"}],"output":{"name":"accountuserprofilepatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",436,{"inputs":[{"name":"accountuserprofilepatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"accountuserprofilepatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",436,{"inputs":[{"name":"accountuserprofilepatchcall"},{"name":"t"}],"output":{"name":"accountuserprofilepatchcall"}}],[11,"doit","","Perform the operation you have build so far.",437,{"inputs":[{"name":"accountuserprofilegetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",437,{"inputs":[{"name":"accountuserprofilegetcall"},{"name":"str"}],"output":{"name":"accountuserprofilegetcall"}}],[11,"id","","User profile ID.",437,{"inputs":[{"name":"accountuserprofilegetcall"},{"name":"str"}],"output":{"name":"accountuserprofilegetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",437,{"inputs":[{"name":"accountuserprofilegetcall"},{"name":"delegate"}],"output":{"name":"accountuserprofilegetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",437,{"inputs":[{"name":"accountuserprofilegetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"accountuserprofilegetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",437,{"inputs":[{"name":"accountuserprofilegetcall"},{"name":"t"}],"output":{"name":"accountuserprofilegetcall"}}],[11,"doit","","Perform the operation you have build so far.",438,{"inputs":[{"name":"countrylistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",438,{"inputs":[{"name":"countrylistcall"},{"name":"str"}],"output":{"name":"countrylistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",438,{"inputs":[{"name":"countrylistcall"},{"name":"delegate"}],"output":{"name":"countrylistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",438,{"inputs":[{"name":"countrylistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"countrylistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",438,{"inputs":[{"name":"countrylistcall"},{"name":"t"}],"output":{"name":"countrylistcall"}}],[11,"doit","","Perform the operation you have build so far.",439,{"inputs":[{"name":"countrygetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",439,{"inputs":[{"name":"countrygetcall"},{"name":"str"}],"output":{"name":"countrygetcall"}}],[11,"dart_id","","Country DART ID.",439,{"inputs":[{"name":"countrygetcall"},{"name":"str"}],"output":{"name":"countrygetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",439,{"inputs":[{"name":"countrygetcall"},{"name":"delegate"}],"output":{"name":"countrygetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",439,{"inputs":[{"name":"countrygetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"countrygetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",439,{"inputs":[{"name":"countrygetcall"},{"name":"t"}],"output":{"name":"countrygetcall"}}],[11,"doit","","Perform the operation you have build so far.",440,{"inputs":[{"name":"orderdocumentgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",440,{"inputs":[{"name":"orderdocumentgetcall"},{"name":"str"}],"output":{"name":"orderdocumentgetcall"}}],[11,"project_id","","Project ID for order documents.",440,{"inputs":[{"name":"orderdocumentgetcall"},{"name":"str"}],"output":{"name":"orderdocumentgetcall"}}],[11,"id","","Order document ID.",440,{"inputs":[{"name":"orderdocumentgetcall"},{"name":"str"}],"output":{"name":"orderdocumentgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",440,{"inputs":[{"name":"orderdocumentgetcall"},{"name":"delegate"}],"output":{"name":"orderdocumentgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",440,{"inputs":[{"name":"orderdocumentgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"orderdocumentgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",440,{"inputs":[{"name":"orderdocumentgetcall"},{"name":"t"}],"output":{"name":"orderdocumentgetcall"}}],[11,"doit","","Perform the operation you have build so far.",441,{"inputs":[{"name":"orderdocumentlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",441,{"inputs":[{"name":"orderdocumentlistcall"},{"name":"str"}],"output":{"name":"orderdocumentlistcall"}}],[11,"project_id","","Project ID for order documents.",441,{"inputs":[{"name":"orderdocumentlistcall"},{"name":"str"}],"output":{"name":"orderdocumentlistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",441,{"inputs":[{"name":"orderdocumentlistcall"},{"name":"str"}],"output":{"name":"orderdocumentlistcall"}}],[11,"sort_field","","Field by which to sort the list.",441,{"inputs":[{"name":"orderdocumentlistcall"},{"name":"str"}],"output":{"name":"orderdocumentlistcall"}}],[11,"add_site_id","","Select only order documents that are associated with these sites.",441,{"inputs":[{"name":"orderdocumentlistcall"},{"name":"str"}],"output":{"name":"orderdocumentlistcall"}}],[11,"search_string","","Allows searching for order documents by name or ID. Wildcards (*) are allowed. For example, \"orderdocument*2015\" will return order documents with names like \"orderdocument June 2015\", \"orderdocument April 2015\", or simply \"orderdocument 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"orderdocument\" will match order documents with name \"my orderdocument\", \"orderdocument 2015\", or simply \"orderdocument\".",441,{"inputs":[{"name":"orderdocumentlistcall"},{"name":"str"}],"output":{"name":"orderdocumentlistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",441,{"inputs":[{"name":"orderdocumentlistcall"},{"name":"str"}],"output":{"name":"orderdocumentlistcall"}}],[11,"add_order_id","","Select only order documents for specified orders.",441,{"inputs":[{"name":"orderdocumentlistcall"},{"name":"str"}],"output":{"name":"orderdocumentlistcall"}}],[11,"max_results","","Maximum number of results to return.",441,{"inputs":[{"name":"orderdocumentlistcall"},{"name":"i32"}],"output":{"name":"orderdocumentlistcall"}}],[11,"add_ids","","Select only order documents with these IDs.",441,{"inputs":[{"name":"orderdocumentlistcall"},{"name":"str"}],"output":{"name":"orderdocumentlistcall"}}],[11,"approved","","Select only order documents that have been approved by at least one user.",441,{"inputs":[{"name":"orderdocumentlistcall"},{"name":"bool"}],"output":{"name":"orderdocumentlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",441,{"inputs":[{"name":"orderdocumentlistcall"},{"name":"delegate"}],"output":{"name":"orderdocumentlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",441,{"inputs":[{"name":"orderdocumentlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"orderdocumentlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",441,{"inputs":[{"name":"orderdocumentlistcall"},{"name":"t"}],"output":{"name":"orderdocumentlistcall"}}],[11,"doit","","Perform the operation you have build so far.",442,{"inputs":[{"name":"postalcodegetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",442,{"inputs":[{"name":"postalcodegetcall"},{"name":"str"}],"output":{"name":"postalcodegetcall"}}],[11,"code","","Postal code ID.",442,{"inputs":[{"name":"postalcodegetcall"},{"name":"str"}],"output":{"name":"postalcodegetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",442,{"inputs":[{"name":"postalcodegetcall"},{"name":"delegate"}],"output":{"name":"postalcodegetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",442,{"inputs":[{"name":"postalcodegetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"postalcodegetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",442,{"inputs":[{"name":"postalcodegetcall"},{"name":"t"}],"output":{"name":"postalcodegetcall"}}],[11,"doit","","Perform the operation you have build so far.",443,{"inputs":[{"name":"postalcodelistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",443,{"inputs":[{"name":"postalcodelistcall"},{"name":"str"}],"output":{"name":"postalcodelistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",443,{"inputs":[{"name":"postalcodelistcall"},{"name":"delegate"}],"output":{"name":"postalcodelistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",443,{"inputs":[{"name":"postalcodelistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"postalcodelistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",443,{"inputs":[{"name":"postalcodelistcall"},{"name":"t"}],"output":{"name":"postalcodelistcall"}}],[11,"doit","","Perform the operation you have build so far.",444,{"inputs":[{"name":"browserlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",444,{"inputs":[{"name":"browserlistcall"},{"name":"str"}],"output":{"name":"browserlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",444,{"inputs":[{"name":"browserlistcall"},{"name":"delegate"}],"output":{"name":"browserlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",444,{"inputs":[{"name":"browserlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"browserlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",444,{"inputs":[{"name":"browserlistcall"},{"name":"t"}],"output":{"name":"browserlistcall"}}],[11,"doit","","Perform the operation you have build so far.",445,{"inputs":[{"name":"accountgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",445,{"inputs":[{"name":"accountgetcall"},{"name":"str"}],"output":{"name":"accountgetcall"}}],[11,"id","","Account ID.",445,{"inputs":[{"name":"accountgetcall"},{"name":"str"}],"output":{"name":"accountgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",445,{"inputs":[{"name":"accountgetcall"},{"name":"delegate"}],"output":{"name":"accountgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",445,{"inputs":[{"name":"accountgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"accountgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",445,{"inputs":[{"name":"accountgetcall"},{"name":"t"}],"output":{"name":"accountgetcall"}}],[11,"doit","","Perform the operation you have build so far.",446,{"inputs":[{"name":"accountlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",446,{"inputs":[{"name":"accountlistcall"},{"name":"str"}],"output":{"name":"accountlistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",446,{"inputs":[{"name":"accountlistcall"},{"name":"str"}],"output":{"name":"accountlistcall"}}],[11,"sort_field","","Field by which to sort the list.",446,{"inputs":[{"name":"accountlistcall"},{"name":"str"}],"output":{"name":"accountlistcall"}}],[11,"search_string","","Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"account*2015\" will return objects with names like \"account June 2015\", \"account April 2015\", or simply \"account 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"account\" will match objects with name \"my account\", \"account 2015\", or simply \"account\".",446,{"inputs":[{"name":"accountlistcall"},{"name":"str"}],"output":{"name":"accountlistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",446,{"inputs":[{"name":"accountlistcall"},{"name":"str"}],"output":{"name":"accountlistcall"}}],[11,"max_results","","Maximum number of results to return.",446,{"inputs":[{"name":"accountlistcall"},{"name":"i32"}],"output":{"name":"accountlistcall"}}],[11,"add_ids","","Select only accounts with these IDs.",446,{"inputs":[{"name":"accountlistcall"},{"name":"str"}],"output":{"name":"accountlistcall"}}],[11,"active","","Select only active accounts. Don't set this field to select both active and non-active accounts.",446,{"inputs":[{"name":"accountlistcall"},{"name":"bool"}],"output":{"name":"accountlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",446,{"inputs":[{"name":"accountlistcall"},{"name":"delegate"}],"output":{"name":"accountlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",446,{"inputs":[{"name":"accountlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"accountlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",446,{"inputs":[{"name":"accountlistcall"},{"name":"t"}],"output":{"name":"accountlistcall"}}],[11,"doit","","Perform the operation you have build so far.",447,{"inputs":[{"name":"accountupdatecall"}],"output":{"name":"result"}}],[11,"request","","",447,{"inputs":[{"name":"accountupdatecall"},{"name":"account"}],"output":{"name":"accountupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",447,{"inputs":[{"name":"accountupdatecall"},{"name":"str"}],"output":{"name":"accountupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",447,{"inputs":[{"name":"accountupdatecall"},{"name":"delegate"}],"output":{"name":"accountupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",447,{"inputs":[{"name":"accountupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"accountupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",447,{"inputs":[{"name":"accountupdatecall"},{"name":"t"}],"output":{"name":"accountupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",448,{"inputs":[{"name":"accountpatchcall"}],"output":{"name":"result"}}],[11,"request","","",448,{"inputs":[{"name":"accountpatchcall"},{"name":"account"}],"output":{"name":"accountpatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",448,{"inputs":[{"name":"accountpatchcall"},{"name":"str"}],"output":{"name":"accountpatchcall"}}],[11,"id","","Account ID.",448,{"inputs":[{"name":"accountpatchcall"},{"name":"str"}],"output":{"name":"accountpatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",448,{"inputs":[{"name":"accountpatchcall"},{"name":"delegate"}],"output":{"name":"accountpatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",448,{"inputs":[{"name":"accountpatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"accountpatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",448,{"inputs":[{"name":"accountpatchcall"},{"name":"t"}],"output":{"name":"accountpatchcall"}}],[11,"doit","","Perform the operation you have build so far.",449,{"inputs":[{"name":"placementpatchcall"}],"output":{"name":"result"}}],[11,"request","","",449,{"inputs":[{"name":"placementpatchcall"},{"name":"placement"}],"output":{"name":"placementpatchcall"}}],[11,"profile_id","","User profile ID associated with this request.",449,{"inputs":[{"name":"placementpatchcall"},{"name":"str"}],"output":{"name":"placementpatchcall"}}],[11,"id","","Placement ID.",449,{"inputs":[{"name":"placementpatchcall"},{"name":"str"}],"output":{"name":"placementpatchcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",449,{"inputs":[{"name":"placementpatchcall"},{"name":"delegate"}],"output":{"name":"placementpatchcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",449,{"inputs":[{"name":"placementpatchcall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementpatchcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",449,{"inputs":[{"name":"placementpatchcall"},{"name":"t"}],"output":{"name":"placementpatchcall"}}],[11,"doit","","Perform the operation you have build so far.",450,{"inputs":[{"name":"placementlistcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"sort_order","","Order of sorted results, default is ASCENDING.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"sort_field","","Field by which to sort the list.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"add_size_ids","","Select only placements that are associated with these sizes.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"add_site_ids","","Select only placements that are associated with these sites.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"search_string","","Allows searching for placements by name or ID. Wildcards (*) are allowed. For example, \"placement*2015\" will return placements with names like \"placement June 2015\", \"placement May 2015\", or simply \"placements 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"placement\" will match placements with name \"my placement\", \"placement 2015\", or simply \"placement\".",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"add_pricing_types","","Select only placements with these pricing types.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"add_placement_strategy_ids","","Select only placements that are associated with these placement strategies.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"payment_source","","Select only placements with this payment source.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"page_token","","Value of the nextPageToken from the previous result page.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"max_results","","Maximum number of results to return.",450,{"inputs":[{"name":"placementlistcall"},{"name":"i32"}],"output":{"name":"placementlistcall"}}],[11,"add_ids","","Select only placements with these IDs.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"add_group_ids","","Select only placements that belong to these placement groups.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"add_directory_site_ids","","Select only placements that are associated with these directory sites.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"add_content_category_ids","","Select only placements that are associated with these content categories.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"add_compatibilities","","Select only placements that are associated with these compatibilities. WEB and WEB_INTERSTITIAL refer to rendering either on desktop or on mobile devices for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps.IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"add_campaign_ids","","Select only placements that belong to these campaigns.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"archived","","Select only archived placements. Don't set this field to select both archived and non-archived placements.",450,{"inputs":[{"name":"placementlistcall"},{"name":"bool"}],"output":{"name":"placementlistcall"}}],[11,"add_advertiser_ids","","Select only placements that belong to these advertisers.",450,{"inputs":[{"name":"placementlistcall"},{"name":"str"}],"output":{"name":"placementlistcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",450,{"inputs":[{"name":"placementlistcall"},{"name":"delegate"}],"output":{"name":"placementlistcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",450,{"inputs":[{"name":"placementlistcall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementlistcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",450,{"inputs":[{"name":"placementlistcall"},{"name":"t"}],"output":{"name":"placementlistcall"}}],[11,"doit","","Perform the operation you have build so far.",451,{"inputs":[{"name":"placementinsertcall"}],"output":{"name":"result"}}],[11,"request","","",451,{"inputs":[{"name":"placementinsertcall"},{"name":"placement"}],"output":{"name":"placementinsertcall"}}],[11,"profile_id","","User profile ID associated with this request.",451,{"inputs":[{"name":"placementinsertcall"},{"name":"str"}],"output":{"name":"placementinsertcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",451,{"inputs":[{"name":"placementinsertcall"},{"name":"delegate"}],"output":{"name":"placementinsertcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",451,{"inputs":[{"name":"placementinsertcall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementinsertcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",451,{"inputs":[{"name":"placementinsertcall"},{"name":"t"}],"output":{"name":"placementinsertcall"}}],[11,"doit","","Perform the operation you have build so far.",452,{"inputs":[{"name":"placementupdatecall"}],"output":{"name":"result"}}],[11,"request","","",452,{"inputs":[{"name":"placementupdatecall"},{"name":"placement"}],"output":{"name":"placementupdatecall"}}],[11,"profile_id","","User profile ID associated with this request.",452,{"inputs":[{"name":"placementupdatecall"},{"name":"str"}],"output":{"name":"placementupdatecall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",452,{"inputs":[{"name":"placementupdatecall"},{"name":"delegate"}],"output":{"name":"placementupdatecall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",452,{"inputs":[{"name":"placementupdatecall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementupdatecall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",452,{"inputs":[{"name":"placementupdatecall"},{"name":"t"}],"output":{"name":"placementupdatecall"}}],[11,"doit","","Perform the operation you have build so far.",453,{"inputs":[{"name":"placementgeneratetagcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",453,{"inputs":[{"name":"placementgeneratetagcall"},{"name":"str"}],"output":{"name":"placementgeneratetagcall"}}],[11,"add_tag_formats","","Tag formats to generate for these placements.",453,{"inputs":[{"name":"placementgeneratetagcall"},{"name":"str"}],"output":{"name":"placementgeneratetagcall"}}],[11,"add_placement_ids","","Generate tags for these placements.",453,{"inputs":[{"name":"placementgeneratetagcall"},{"name":"str"}],"output":{"name":"placementgeneratetagcall"}}],[11,"campaign_id","","Generate placements belonging to this campaign. This is a required field.",453,{"inputs":[{"name":"placementgeneratetagcall"},{"name":"str"}],"output":{"name":"placementgeneratetagcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",453,{"inputs":[{"name":"placementgeneratetagcall"},{"name":"delegate"}],"output":{"name":"placementgeneratetagcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",453,{"inputs":[{"name":"placementgeneratetagcall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementgeneratetagcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",453,{"inputs":[{"name":"placementgeneratetagcall"},{"name":"t"}],"output":{"name":"placementgeneratetagcall"}}],[11,"doit","","Perform the operation you have build so far.",454,{"inputs":[{"name":"placementgetcall"}],"output":{"name":"result"}}],[11,"profile_id","","User profile ID associated with this request.",454,{"inputs":[{"name":"placementgetcall"},{"name":"str"}],"output":{"name":"placementgetcall"}}],[11,"id","","Placement ID.",454,{"inputs":[{"name":"placementgetcall"},{"name":"str"}],"output":{"name":"placementgetcall"}}],[11,"delegate","","The delegate implementation is consulted whenever there is an intermediate result, or if something goes wrong\nwhile executing the actual API request.",454,{"inputs":[{"name":"placementgetcall"},{"name":"delegate"}],"output":{"name":"placementgetcall"}}],[11,"param","","Set any additional parameter of the query string used in the request.\nIt should be used to set parameters which are not yet available through their own \nsetters.",454,{"inputs":[{"name":"placementgetcall"},{"name":"t"},{"name":"t"}],"output":{"name":"placementgetcall"}}],[11,"add_scope","","Identifies the authorization scope for the method you are building.",454,{"inputs":[{"name":"placementgetcall"},{"name":"t"}],"output":{"name":"placementgetcall"}}],[11,"begin","","Called at the beginning of any API request. The delegate should store the method\ninformation if he is interesting in knowing more context when further calls to it\nare made.\nThe matching `finished()` call will always be made, no matter whether or not the API\nrequest was successful. That way, the delegate may easily maintain a clean state \nbetween various API calls.",205,null],[11,"http_error","","Called whenever there is an [HttpError](http://hyperium.github.io/hyper/hyper/error/enum.HttpError.html), usually if there are network problems.",205,null],[11,"api_key","","Called whenever there is the need for your applications API key after\nthe official authenticator implementation didn't provide one, for some reason.\nIf this method returns None as well, the underlying operation will fail",205,null],[11,"token","","Called whenever the Authenticator didn't yield a token. The delegate\nmay attempt to provide one, or just take it as a general information about the\nimpending failure.\nThe given Error provides information about why the token couldn't be acquired in the\nfirst place",205,null],[11,"upload_url","","Called during resumable uploads to provide a URL for the impending upload.\nIt was saved after a previous call to `store_upload_url(...)`, and if not None,\nwill be used instead of asking the server for a new upload URL.\nThis is useful in case a previous resumable upload was aborted/canceled, but should now\nbe resumed.\nThe returned URL will be used exactly once - if it fails again and the delegate allows\nto retry, we will ask the server for a new upload URL.",205,null],[11,"store_upload_url","","Called after we have retrieved a new upload URL for a resumable upload to store it\nin case we fail or cancel. That way, we can attempt to resume the upload later, \nsee `upload_url()`.\nIt will also be called with None after a successful upload, which allows the delegate\nto forget the URL. That way, we will not attempt to resume an upload that has already\nfinished.",205,null],[11,"response_json_decode_error","","Called whenever a server response could not be decoded from json.\nIt's for informational purposes only, the caller will return with an error\naccordingly.",205,null],[11,"http_failure","","Called whenever the http request returns with a non-success status code.\nThis can involve authentication issues, or anything else that very much \ndepends on the used API method.\nThe delegate should check the status, header and decoded json error to decide\nwhether to retry or not. In the latter case, the underlying call will fail.",205,null],[11,"pre_request","","Called prior to sending the main request of the given method. It can be used to time\nthe call or to print progress information.\nIt's also useful as you can be sure that a request will definitely be made.",205,null],[11,"chunk_size","","Return the size of each chunk of a resumable upload.\nMust be a power of two, with 1<<18 being the smallest allowed chunk size.\nWill be called once before starting any resumable upload.",205,null],[11,"cancel_chunk_upload","","Called before the given chunk is uploaded to the server.\nIf true is returned, the upload will be interrupted.\nHowever, it may be resumable if you stored the upload URL in a previous call\nto `store_upload_url()`",205,null],[11,"finished","","Called before the API request method returns, in every case. It can be used to clean up\ninternal state between calls to the API.\nThis call always has a matching call to `begin(...)`.",205,null]],"paths":[[3,"MethodInfo"],[3,"OperatingSystemsListResponse"],[3,"DirectorySiteSettings"],[3,"MobileCarrier"],[3,"Subaccount"],[3,"AccountPermissionGroup"],[3,"DimensionValueList"],[3,"CampaignCreativeAssociationsListResponse"],[3,"FloodlightActivitiesListResponse"],[3,"UserRolePermissionGroupsListResponse"],[3,"FileList"],[3,"CustomRichMediaEvents"],[3,"EventTagOverride"],[3,"AccountActiveAdSummary"],[3,"LookbackConfiguration"],[3,"FloodlightActivitiesGenerateTagResponse"],[3,"ListPopulationTerm"],[3,"SiteSettings"],[3,"AccountUserProfile"],[3,"TagSettings"],[3,"TargetableRemarketingList"],[3,"OperatingSystemVersion"],[3,"RemarketingListsListResponse"],[3,"CreativeFieldAssignment"],[3,"ListPopulationRule"],[3,"Account"],[3,"DayPartTargeting"],[3,"CompatibleFields"],[3,"Region"],[3,"ReportCriteria"],[3,"OrdersListResponse"],[3,"CrossDimensionReachReportCompatibleFields"],[3,"UserRole"],[3,"EventTagsListResponse"],[3,"FloodlightActivityGroup"],[3,"AudienceSegment"],[3,"Campaign"],[3,"ChangeLog"],[3,"File"],[3,"KeyValueTargetingExpression"],[3,"ReportCrossDimensionReachCriteria"],[3,"Placement"],[3,"InventoryItemsListResponse"],[3,"AudienceSegmentGroup"],[3,"PlacementStrategy"],[3,"PlacementTag"],[3,"CountriesListResponse"],[3,"ClickThroughUrl"],[3,"CompanionClickThroughOverride"],[3,"FrequencyCap"],[3,"CampaignCreativeAssociation"],[3,"RemarketingListShare"],[3,"OperatingSystemVersionsListResponse"],[3,"ContentCategory"],[3,"TargetableRemarketingListsListResponse"],[3,"InventoryItem"],[3,"FloodlightReportCompatibleFields"],[3,"CreativeAssetId"],[3,"DirectorySiteContactAssignment"],[3,"CreativeAssignment"],[3,"DimensionValueRequest"],[3,"AdSlot"],[3,"DefaultClickThroughEventTagProperties"],[3,"UserProfileList"],[3,"SubaccountsListResponse"],[3,"OrderDocument"],[3,"Report"],[3,"PlatformType"],[3,"AdvertisersListResponse"],[3,"CreativeAsset"],[3,"DirectorySitesListResponse"],[3,"LastModifiedInfo"],[3,"RegionsListResponse"],[3,"UserRolePermissionGroup"],[3,"ClickTag"],[3,"ConnectionType"],[3,"BrowsersListResponse"],[3,"ObjectFilter"],[3,"CreativeSettings"],[3,"Dimension"],[3,"OrderContact"],[3,"DirectorySite"],[3,"CitiesListResponse"],[3,"CreativeGroup"],[3,"Metric"],[3,"RichMediaExitOverride"],[3,"AccountPermissionsListResponse"],[3,"PlacementsGenerateTagsResponse"],[3,"CreativeFieldValue"],[3,"FloodlightActivityGroupsListResponse"],[3,"DirectorySiteContactsListResponse"],[3,"CreativeCustomEvent"],[3,"CreativesListResponse"],[3,"OmnitureSettings"],[3,"PathToConversionReportCompatibleFields"],[3,"MobileCarriersListResponse"],[3,"FloodlightActivityDynamicTag"],[3,"Creative"],[3,"ReportsConfiguration"],[3,"CampaignsListResponse"],[3,"UserRolePermissionsListResponse"],[3,"UserProfile"],[3,"CreativeGroupAssignment"],[3,"ReportPathToConversionCriteria"],[3,"CreativeFieldsListResponse"],[3,"ReportDelivery"],[3,"ProjectsListResponse"],[3,"GeoTargeting"],[3,"DeliverySchedule"],[3,"ReportSchedule"],[3,"Recipient"],[3,"ReportCompatibleFields"],[3,"AdvertiserGroupsListResponse"],[3,"PlacementGroupsListResponse"],[3,"ReportPathToConversionCriteriaReportProperties"],[3,"TechnologyTargeting"],[3,"OptimizationActivity"],[3,"ListTargetingExpression"],[3,"CreativeAssetMetadata"],[3,"TagData"],[3,"ReportFloodlightCriteria"],[3,"LandingPagesListResponse"],[3,"SitesListResponse"],[3,"DimensionFilter"],[3,"PostalCode"],[3,"RemarketingList"],[3,"FloodlightActivity"],[3,"Browser"],[3,"AccountUserProfilesListResponse"],[3,"Advertiser"],[3,"PlatformTypesListResponse"],[3,"ChangeLogsListResponse"],[3,"PlacementsListResponse"],[3,"AdsListResponse"],[3,"ReportReachCriteria"],[3,"FileUrls"],[3,"OrderDocumentsListResponse"],[3,"UserDefinedVariableConfiguration"],[3,"Pricing"],[3,"FloodlightActivityPublisherDynamicTag"],[3,"LandingPage"],[3,"Size"],[3,"City"],[3,"ClickThroughUrlSuffixProperties"],[3,"PlacementGroup"],[3,"ThirdPartyTrackingUrl"],[3,"UserRolePermission"],[3,"MetrosListResponse"],[3,"PricingSchedule"],[3,"AccountsListResponse"],[3,"OperatingSystem"],[3,"Activities"],[3,"ListPopulationClause"],[3,"Flight"],[3,"SortedDimension"],[3,"PlacementStrategiesListResponse"],[3,"ReportList"],[3,"AdvertiserGroup"],[3,"FsCommand"],[3,"CreativeOptimizationConfiguration"],[3,"CreativeGroupsListResponse"],[3,"OffsetPosition"],[3,"TargetWindow"],[3,"ProgrammaticSetting"],[3,"SiteContact"],[3,"CreativeRotation"],[3,"Metro"],[3,"Country"],[3,"PostalCodesListResponse"],[3,"TagSetting"],[3,"CreativeField"],[3,"CreativeFieldValuesListResponse"],[3,"ReportFloodlightCriteriaReportProperties"],[3,"DirectorySiteContact"],[3,"DimensionValue"],[3,"ContentCategoriesListResponse"],[3,"FloodlightConfigurationsListResponse"],[3,"Order"],[3,"PopupWindowProperties"],[3,"AccountPermission"],[3,"Project"],[3,"Ad"],[3,"PricingSchedulePricingPeriod"],[3,"EventTag"],[3,"PlacementAssignment"],[3,"ReachReportCompatibleFields"],[3,"Site"],[3,"DfpSettings"],[3,"ConnectionTypesListResponse"],[3,"FloodlightConfiguration"],[3,"DateRange"],[3,"AccountPermissionGroupsListResponse"],[3,"SizesListResponse"],[3,"UserRolesListResponse"],[4,"Error"],[4,"Scope"],[3,"ErrorResponse"],[3,"DefaultDelegate"],[3,"MultiPartReader"],[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[8,"ToParts"],[8,"Delegate"],[3,"Dfareporting"],[3,"UserRolePermissionGroupMethods"],[3,"PlatformTypeMethods"],[3,"CreativeFieldValueMethods"],[3,"CreativeFieldMethods"],[3,"UserRoleMethods"],[3,"OperatingSystemVersionMethods"],[3,"LandingPageMethods"],[3,"CreativeAssetMethods"],[3,"CampaignCreativeAssociationMethods"],[3,"ChangeLogMethods"],[3,"RemarketingListShareMethods"],[3,"ReportMethods"],[3,"AdvertiserMethods"],[3,"DimensionValueMethods"],[3,"FloodlightActivityGroupMethods"],[3,"MetroMethods"],[3,"OrderMethods"],[3,"DirectorySiteContactMethods"],[3,"UserProfileMethods"],[3,"AdMethods"],[3,"AccountPermissionMethods"],[3,"ConnectionTypeMethods"],[3,"AdvertiserGroupMethods"],[3,"SiteMethods"],[3,"FloodlightActivityMethods"],[3,"RegionMethods"],[3,"CreativeGroupMethods"],[3,"TargetableRemarketingListMethods"],[3,"SubaccountMethods"],[3,"MobileCarrierMethods"],[3,"FloodlightConfigurationMethods"],[3,"OperatingSystemMethods"],[3,"FileMethods"],[3,"PlacementGroupMethods"],[3,"InventoryItemMethods"],[3,"UserRolePermissionMethods"],[3,"AccountPermissionGroupMethods"],[3,"ContentCategoryMethods"],[3,"CreativeMethods"],[3,"CampaignMethods"],[3,"EventTagMethods"],[3,"RemarketingListMethods"],[3,"CityMethods"],[3,"PlacementStrategyMethods"],[3,"ProjectMethods"],[3,"DirectorySiteMethods"],[3,"SizeMethods"],[3,"AccountActiveAdSummaryMethods"],[3,"AccountUserProfileMethods"],[3,"CountryMethods"],[3,"OrderDocumentMethods"],[3,"PostalCodeMethods"],[3,"BrowserMethods"],[3,"AccountMethods"],[3,"PlacementMethods"],[3,"UserRolePermissionGroupGetCall"],[3,"UserRolePermissionGroupListCall"],[3,"PlatformTypeGetCall"],[3,"PlatformTypeListCall"],[3,"CreativeFieldValuePatchCall"],[3,"CreativeFieldValueGetCall"],[3,"CreativeFieldValueDeleteCall"],[3,"CreativeFieldValueInsertCall"],[3,"CreativeFieldValueUpdateCall"],[3,"CreativeFieldValueListCall"],[3,"CreativeFieldUpdateCall"],[3,"CreativeFieldListCall"],[3,"CreativeFieldDeleteCall"],[3,"CreativeFieldGetCall"],[3,"CreativeFieldInsertCall"],[3,"CreativeFieldPatchCall"],[3,"UserRoleInsertCall"],[3,"UserRoleGetCall"],[3,"UserRoleUpdateCall"],[3,"UserRoleDeleteCall"],[3,"UserRolePatchCall"],[3,"UserRoleListCall"],[3,"OperatingSystemVersionGetCall"],[3,"OperatingSystemVersionListCall"],[3,"LandingPageGetCall"],[3,"LandingPageUpdateCall"],[3,"LandingPageListCall"],[3,"LandingPageInsertCall"],[3,"LandingPagePatchCall"],[3,"LandingPageDeleteCall"],[3,"CreativeAssetInsertCall"],[3,"CampaignCreativeAssociationInsertCall"],[3,"CampaignCreativeAssociationListCall"],[3,"ChangeLogListCall"],[3,"ChangeLogGetCall"],[3,"RemarketingListShareGetCall"],[3,"RemarketingListSharePatchCall"],[3,"RemarketingListShareUpdateCall"],[3,"ReportRunCall"],[3,"ReportPatchCall"],[3,"ReportFileListCall"],[3,"ReportInsertCall"],[3,"ReportUpdateCall"],[3,"ReportCompatibleFieldQueryCall"],[3,"ReportGetCall"],[3,"ReportFileGetCall"],[3,"ReportDeleteCall"],[3,"ReportListCall"],[3,"AdvertiserInsertCall"],[3,"AdvertiserPatchCall"],[3,"AdvertiserListCall"],[3,"AdvertiserUpdateCall"],[3,"AdvertiserGetCall"],[3,"DimensionValueQueryCall"],[3,"FloodlightActivityGroupDeleteCall"],[3,"FloodlightActivityGroupGetCall"],[3,"FloodlightActivityGroupPatchCall"],[3,"FloodlightActivityGroupListCall"],[3,"FloodlightActivityGroupInsertCall"],[3,"FloodlightActivityGroupUpdateCall"],[3,"MetroListCall"],[3,"OrderListCall"],[3,"OrderGetCall"],[3,"DirectorySiteContactGetCall"],[3,"DirectorySiteContactListCall"],[3,"UserProfileListCall"],[3,"UserProfileGetCall"],[3,"AdPatchCall"],[3,"AdInsertCall"],[3,"AdListCall"],[3,"AdGetCall"],[3,"AdUpdateCall"],[3,"AccountPermissionGetCall"],[3,"AccountPermissionListCall"],[3,"ConnectionTypeListCall"],[3,"ConnectionTypeGetCall"],[3,"AdvertiserGroupGetCall"],[3,"AdvertiserGroupListCall"],[3,"AdvertiserGroupInsertCall"],[3,"AdvertiserGroupUpdateCall"],[3,"AdvertiserGroupPatchCall"],[3,"AdvertiserGroupDeleteCall"],[3,"SiteInsertCall"],[3,"SiteGetCall"],[3,"SiteListCall"],[3,"SiteUpdateCall"],[3,"SitePatchCall"],[3,"FloodlightActivityGetCall"],[3,"FloodlightActivityListCall"],[3,"FloodlightActivityInsertCall"],[3,"FloodlightActivityDeleteCall"],[3,"FloodlightActivityPatchCall"],[3,"FloodlightActivityGeneratetagCall"],[3,"FloodlightActivityUpdateCall"],[3,"RegionListCall"],[3,"CreativeGroupInsertCall"],[3,"CreativeGroupGetCall"],[3,"CreativeGroupUpdateCall"],[3,"CreativeGroupListCall"],[3,"CreativeGroupPatchCall"],[3,"TargetableRemarketingListListCall"],[3,"TargetableRemarketingListGetCall"],[3,"SubaccountPatchCall"],[3,"SubaccountInsertCall"],[3,"SubaccountListCall"],[3,"SubaccountUpdateCall"],[3,"SubaccountGetCall"],[3,"MobileCarrierGetCall"],[3,"MobileCarrierListCall"],[3,"FloodlightConfigurationGetCall"],[3,"FloodlightConfigurationUpdateCall"],[3,"FloodlightConfigurationPatchCall"],[3,"FloodlightConfigurationListCall"],[3,"OperatingSystemListCall"],[3,"OperatingSystemGetCall"],[3,"FileListCall"],[3,"FileGetCall"],[3,"PlacementGroupListCall"],[3,"PlacementGroupUpdateCall"],[3,"PlacementGroupInsertCall"],[3,"PlacementGroupGetCall"],[3,"PlacementGroupPatchCall"],[3,"InventoryItemListCall"],[3,"InventoryItemGetCall"],[3,"UserRolePermissionGetCall"],[3,"UserRolePermissionListCall"],[3,"AccountPermissionGroupListCall"],[3,"AccountPermissionGroupGetCall"],[3,"ContentCategoryListCall"],[3,"ContentCategoryUpdateCall"],[3,"ContentCategoryInsertCall"],[3,"ContentCategoryDeleteCall"],[3,"ContentCategoryGetCall"],[3,"ContentCategoryPatchCall"],[3,"CreativeUpdateCall"],[3,"CreativeInsertCall"],[3,"CreativeGetCall"],[3,"CreativeListCall"],[3,"CreativePatchCall"],[3,"CampaignGetCall"],[3,"CampaignInsertCall"],[3,"CampaignPatchCall"],[3,"CampaignUpdateCall"],[3,"CampaignListCall"],[3,"EventTagDeleteCall"],[3,"EventTagListCall"],[3,"EventTagInsertCall"],[3,"EventTagPatchCall"],[3,"EventTagUpdateCall"],[3,"EventTagGetCall"],[3,"RemarketingListGetCall"],[3,"RemarketingListUpdateCall"],[3,"RemarketingListListCall"],[3,"RemarketingListPatchCall"],[3,"RemarketingListInsertCall"],[3,"CityListCall"],[3,"PlacementStrategyUpdateCall"],[3,"PlacementStrategyGetCall"],[3,"PlacementStrategyListCall"],[3,"PlacementStrategyDeleteCall"],[3,"PlacementStrategyInsertCall"],[3,"PlacementStrategyPatchCall"],[3,"ProjectListCall"],[3,"ProjectGetCall"],[3,"DirectorySiteInsertCall"],[3,"DirectorySiteListCall"],[3,"DirectorySiteGetCall"],[3,"SizeInsertCall"],[3,"SizeListCall"],[3,"SizeGetCall"],[3,"AccountActiveAdSummaryGetCall"],[3,"AccountUserProfileUpdateCall"],[3,"AccountUserProfileListCall"],[3,"AccountUserProfileInsertCall"],[3,"AccountUserProfilePatchCall"],[3,"AccountUserProfileGetCall"],[3,"CountryListCall"],[3,"CountryGetCall"],[3,"OrderDocumentGetCall"],[3,"OrderDocumentListCall"],[3,"PostalCodeGetCall"],[3,"PostalCodeListCall"],[3,"BrowserListCall"],[3,"AccountGetCall"],[3,"AccountListCall"],[3,"AccountUpdateCall"],[3,"AccountPatchCall"],[3,"PlacementPatchCall"],[3,"PlacementListCall"],[3,"PlacementInsertCall"],[3,"PlacementUpdateCall"],[3,"PlacementGeneratetagCall"],[3,"PlacementGetCall"]]};
searchIndex['yup_oauth2'] = {"items":[[0,"","yup_oauth2","This library can be used to acquire oauth2.0 authentication for services.\nAt the time of writing, only one way of doing so is implemented, the [device flow](https://developers.google.com/youtube/v3/guides/authentication#devices), along with a flow \nfor [refreshing tokens](https://developers.google.com/youtube/v3/guides/authentication#devices)",null,null],[3,"DeviceFlow","","Implements the [Oauth2 Device Flow](https://developers.google.com/youtube/v3/guides/authentication#devices)\nIt operates in two steps:\n* obtain a code to show to the user\n* (repeatedly) poll for the user to authenticate your application",null,null],[3,"PollInformation","","Contains state of pending authentication requests",null,null],[12,"user_code","","Code the user must enter ...",0,null],[12,"verification_url","","... at the verification URL",0,null],[12,"expires_at","","The `user_code` expires at the given time\nIt's the time the user has left to authenticate your application",0,null],[12,"interval","","The interval in which we may poll for a status change\nThe server responds with errors of we poll too fast.",0,null],[3,"RefreshFlow","","Implements the [Outh2 Refresh Token Flow](https://developers.google.com/youtube/v3/guides/authentication#devices).",null,null],[3,"Token","","Represents a token as returned by OAuth2 servers.",null,null],[12,"access_token","","used when authenticating calls to oauth2 enabled services.",1,null],[12,"refresh_token","","used to refresh an expired access_token.",1,null],[12,"token_type","","The token type as string - usually 'Bearer'.",1,null],[12,"expires_in","","access_token will expire after this amount of time.\nPrefer using expiry_date()",1,null],[12,"expires_in_timestamp","","timestamp is seconds since epoch indicating when the token will expire in absolute terms.\nuse expiry_date() to convert to DateTime.",1,null],[3,"ApplicationSecret","","Represents either 'installed' or 'web' applications in a json secrets file.\nSee `ConsoleApplicationSecret` for more information",null,null],[12,"client_id","","The client ID.",2,null],[12,"client_secret","","The client secret.",2,null],[12,"token_uri","","The token server endpoint URI.",2,null],[12,"auth_uri","","The authorization server endpoint URI.",2,null],[12,"redirect_uris","","",2,null],[12,"client_email","","The service account email associated with the client.",2,null],[12,"auth_provider_x509_cert_url","","The URL of the public x509 certificate, used to verify the signature on JWTs, such\nas ID tokens, signed by the authentication provider.",2,null],[12,"client_x509_cert_url","","The URL of the public x509 certificate, used to verify JWTs signed by the client.",2,null],[3,"ConsoleApplicationSecret","","A type to facilitate reading and writing the json secret file\nas returned by the [google developer console](https://code.google.com/apis/console)",null,null],[12,"web","","",3,null],[12,"installed","","",3,null],[3,"Scheme","","A scheme for use in `hyper::header::Authorization`",null,null],[12,"token_type","","The type of our access token",4,null],[12,"access_token","","The token returned by one of the Authorization Flows",4,null],[3,"NullStorage","","A storage that remembers nothing.",null,null],[3,"MemoryStorage","","A storage that remembers values for one session only.",null,null],[12,"tokens","","",5,null],[3,"Authenticator","","A generalized authenticator which will keep tokens valid and store them.",null,null],[3,"DefaultAuthenticatorDelegate","","Uses all default implementations by AuthenticatorDelegate, and makes the trait's\nimplementation usable in the first place.",null,null],[4,"PollError","","Encapsulates all possible results of a `poll_token(...)` operation",null,null],[13,"HttpError","","Connection failure - retry if you think it's worth it",6,null],[13,"Expired","","indicates we are expired, including the expiration date",6,null],[13,"AccessDenied","","Indicates that the user declined access. String is server response",6,null],[4,"RefreshResult","","All possible outcomes of the refresh flow",null,null],[13,"Error","","Indicates connection failure",7,null],[13,"RefreshError","","The server did not answer with a new token, providing the server message",7,null],[13,"Success","","The refresh operation finished successfully, providing a new `Token`",7,null],[4,"FlowType","","All known authentication types, for suitable constants",null,null],[13,"Device","","[device authentication](https://developers.google.com/youtube/v3/guides/authentication#devices)",8,null],[4,"TokenType","","Represents all implemented token types",null,null],[13,"Bearer","","Means that whoever bears the access token will be granted access",9,null],[4,"Retry","","A utility type to indicate how operations DeviceFlowHelper operations should be retried",null,null],[13,"Abort","","Signal you don't want to retry",10,null],[13,"After","","Signals you want to retry after the given duration",10,null],[13,"Skip","","Instruct the caller to attempt to keep going, or choose an alternate path.\nIf this is not supported, it will have the same effect as `Abort`",10,null],[11,"type_id","","",11,{"inputs":[{"name":"deviceflow"}],"output":{"name":"flowtype"}}],[11,"eq","","",0,{"inputs":[{"name":"pollinformation"},{"name":"pollinformation"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"pollinformation"},{"name":"pollinformation"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"pollinformation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"pollinformation"}],"output":{"name":"pollinformation"}}],[11,"fmt","","",0,{"inputs":[{"name":"pollinformation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"pollerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"pollerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","# Examples\n```test_harness\nextern crate hyper;\nextern crate yup_oauth2 as oauth2;\nuse oauth2::DeviceFlow;",11,{"inputs":[{"name":"deviceflow"},{"name":"c"}],"output":{"name":"deviceflow"}}],[11,"request_code","","The first step involves asking the server for a code that the user\ncan type into a field at a specified URL. It is called only once, assuming\nthere was no connection error. Otherwise, it may be called again until \nyou receive an `Ok` result.\n# Arguments\n* `client_id` & `client_secret` - as obtained when [registering your application](https://developers.google.com/youtube/registering_an_application)\n* `scopes` - an iterator yielding String-like objects which are URLs defining what your \n             application is able to do. It is considered good behaviour to authenticate\n             only once, with all scopes you will ever require.\n             However, you can also manage multiple tokens for different scopes, if your \n             application is providing distinct read-only and write modes.\n# Panics\n* If called after a successful result was returned at least once.\n# Examples\nSee test-cases in source code for a more complete example.",11,{"inputs":[{"name":"deviceflow"},{"name":"str"},{"name":"str"},{"name":"i"}],"output":{"name":"result"}}],[11,"poll_token","","If the first call is successful, this method may be called.\nAs long as we are waiting for authentication, it will return `Ok(None)`.\nYou should call it within the interval given the previously returned \n`PollInformation.interval` field.",11,{"inputs":[{"name":"deviceflow"}],"output":{"name":"result"}}],[11,"new","","",12,{"inputs":[{"name":"refreshflow"},{"name":"c"}],"output":{"name":"refreshflow"}}],[11,"refresh_token","","Attempt to refresh the given token, and obtain a new, valid one.\nIf the `RefreshResult` is `RefreshResult::Error`, you may retry within an interval\nof your choice. If it is `RefreshResult:RefreshError`, your refresh token is invalid\nor your authorization was revoked. Therefore no further attempt shall be made, \nand you will have to re-authorize using the `DeviceFlow`",12,{"inputs":[{"name":"refreshflow"},{"name":"flowtype"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"refreshresult"}}],[11,"fmt","","",9,{"inputs":[{"name":"tokentype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"tokentype"},{"name":"tokentype"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"tokentype"},{"name":"tokentype"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"tokentype"}],"output":{"name":"tokentype"}}],[11,"as_ref","","",9,{"inputs":[{"name":"tokentype"}],"output":{"name":"str"}}],[11,"from_str","","",9,{"inputs":[{"name":"tokentype"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"scheme"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"scheme"},{"name":"scheme"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"scheme"},{"name":"scheme"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"scheme"}],"output":{"name":"scheme"}}],[11,"scheme","","",4,{"inputs":[{"name":"scheme"}],"output":{"name":"option"}}],[11,"fmt_scheme","","",4,{"inputs":[{"name":"scheme"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",4,{"inputs":[{"name":"scheme"},{"name":"str"}],"output":{"name":"result"}}],[11,"serialize","","",1,{"inputs":[{"name":"token"},{"name":"__s"}],"output":{"name":"result"}}],[11,"deserialize","","",1,{"inputs":[{"name":"token"},{"name":"__d"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"token"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"token"},{"name":"token"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"token"},{"name":"token"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"token"}],"output":{"name":"token"}}],[11,"expired","","Returns true if we are expired.",1,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"expiry_date","","Returns a DateTime object representing our expiry date.",1,{"inputs":[{"name":"token"}],"output":{"name":"datetime"}}],[11,"set_expiry_absolute","","Adjust our stored expiry format to be absolute, using the current time.",1,{"inputs":[{"name":"token"}],"output":{"name":"token"}}],[11,"clone","","",8,{"inputs":[{"name":"flowtype"}],"output":{"name":"flowtype"}}],[11,"as_ref","","Converts itself into a URL string",8,{"inputs":[{"name":"flowtype"}],"output":{"name":"str"}}],[11,"default","","",2,{"inputs":[{"name":"applicationsecret"}],"output":{"name":"applicationsecret"}}],[11,"clone","","",2,{"inputs":[{"name":"applicationsecret"}],"output":{"name":"applicationsecret"}}],[11,"serialize","","",2,{"inputs":[{"name":"applicationsecret"},{"name":"__s"}],"output":{"name":"result"}}],[11,"deserialize","","",2,{"inputs":[{"name":"applicationsecret"},{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",3,{"inputs":[{"name":"consoleapplicationsecret"}],"output":{"name":"consoleapplicationsecret"}}],[11,"serialize","","",3,{"inputs":[{"name":"consoleapplicationsecret"},{"name":"__s"}],"output":{"name":"result"}}],[11,"deserialize","","",3,{"inputs":[{"name":"consoleapplicationsecret"},{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",13,{"inputs":[{"name":"nullstorage"}],"output":{"name":"nullstorage"}}],[11,"set","","",13,{"inputs":[{"name":"nullstorage"},{"name":"u64"},{"name":"vec"},{"name":"option"}],"output":{"name":"result"}}],[11,"get","","",13,{"inputs":[{"name":"nullstorage"},{"name":"u64"},{"name":"vec"}],"output":{"name":"result"}}],[11,"default","","",5,{"inputs":[{"name":"memorystorage"}],"output":{"name":"memorystorage"}}],[11,"set","","",5,{"inputs":[{"name":"memorystorage"},{"name":"u64"},{"name":"vec"},{"name":"option"}],"output":{"name":"result"}}],[11,"get","","",5,{"inputs":[{"name":"memorystorage"},{"name":"u64"},{"name":"vec"}],"output":{"name":"result"}}],[11,"new","","Returns a new `Authenticator` instance",14,{"inputs":[{"name":"authenticator"},{"name":"applicationsecret"},{"name":"d"},{"name":"c"},{"name":"s"},{"name":"option"}],"output":{"name":"authenticator"}}],[11,"token","","Blocks until a token was retrieved from storage, from the server, or until the delegate\ndecided to abort the attempt, or the user decided not to authorize the application.\nIn any failure case, the delegate will be provided with additional information, and \nthe caller will be informed about storage related errors.\nOtherwise it is guaranteed to be valid for the given scopes.",14,{"inputs":[{"name":"authenticator"},{"name":"i"}],"output":{"name":"result"}}],[11,"api_key","","",14,{"inputs":[{"name":"authenticator"}],"output":{"name":"option"}}],[8,"TokenStorage","","Implements a specialized storage to set and retrieve `Token` instances.\nThe `scope_hash` represents the signature of the scopes for which the given token\nshould be stored or retrieved.\nFor completeness, the underlying, sorted scopes are provided as well. They might be\nuseful for presentation to the user.",null,null],[16,"Error","yup_oauth2::TokenStorage","",null,null],[10,"set","yup_oauth2","If `token` is None, it is invalid or revoked and should be removed from storage.\nOtherwise, it should be saved.",15,{"inputs":[{"name":"tokenstorage"},{"name":"u64"},{"name":"vec"},{"name":"option"}],"output":{"name":"result"}}],[10,"get","","A `None` result indicates that there is no token for the given scope_hash.",15,{"inputs":[{"name":"tokenstorage"},{"name":"u64"},{"name":"vec"}],"output":{"name":"result"}}],[8,"AuthenticatorDelegate","","A partially implemented trait to interact with the `Authenticator`",null,null],[11,"connection_error","","Called whenever there is an HttpError, usually if there are network problems.",16,{"inputs":[{"name":"authenticatordelegate"},{"name":"error"}],"output":{"name":"retry"}}],[11,"token_storage_failure","","Called whenever we failed to retrieve a token or set a token due to a storage error.\nYou may use it to either ignore the incident or retry.\nThis can be useful if the underlying `TokenStorage` may fail occasionally.\nif `is_set` is true, the failure resulted from `TokenStorage.set(...)`. Otherwise, \nit was `TokenStorage.get(...)`",16,{"inputs":[{"name":"authenticatordelegate"},{"name":"bool"},{"name":"error"}],"output":{"name":"retry"}}],[11,"request_failure","","The server denied the attempt to obtain a request code",16,{"inputs":[{"name":"authenticatordelegate"},{"name":"requesterror"}],"output":null}],[11,"expired","","Called if the request code is expired. You will have to start over in this case.\nThis will be the last call the delegate receives.\nGiven `DateTime` is the expiration date",16,{"inputs":[{"name":"authenticatordelegate"},{"name":"datetime"}],"output":null}],[11,"denied","","Called if the user denied access. You would have to start over.\nThis will be the last call the delegate receives.",16,{"inputs":[{"name":"authenticatordelegate"}],"output":null}],[11,"token_refresh_failed","","Called if we could not acquire a refresh token for a reason possibly specified\nby the server.\nThis call is made for the delegate's information only.",16,{"inputs":[{"name":"authenticatordelegate"},{"name":"string"},{"name":"option"}],"output":null}],[11,"pending","","Called as long as we are waiting for the user to authorize us.\nCan be used to print progress information, or decide to time-out.",16,{"inputs":[{"name":"authenticatordelegate"},{"name":"pollinformation"}],"output":{"name":"retry"}}],[11,"present_user_code","","The server has returned a `user_code` which must be shown to the user,\nalong with the `verification_url`.\n# Notes\n* Will be called exactly once, provided we didn't abort during `request_code` phase.\n* Will only be called if the Authenticator's flow_type is `FlowType::Device`.",16,{"inputs":[{"name":"authenticatordelegate"},{"name":"pollinformation"}],"output":null}],[8,"GetToken","","A provider for authorization tokens, yielding tokens valid for a given scope.\nThe `api_key()` method is an alternative in case there are no scopes or\nif no user is involved.",null,null],[10,"token","","",17,{"inputs":[{"name":"gettoken"},{"name":"i"}],"output":{"name":"result"}}],[10,"api_key","","",17,{"inputs":[{"name":"gettoken"}],"output":{"name":"option"}}],[11,"connection_error","","Called whenever there is an HttpError, usually if there are network problems.",16,null],[11,"token_storage_failure","","Called whenever we failed to retrieve a token or set a token due to a storage error.\nYou may use it to either ignore the incident or retry.\nThis can be useful if the underlying `TokenStorage` may fail occasionally.\nif `is_set` is true, the failure resulted from `TokenStorage.set(...)`. Otherwise, \nit was `TokenStorage.get(...)`",16,null],[11,"request_failure","","The server denied the attempt to obtain a request code",16,null],[11,"expired","","Called if the request code is expired. You will have to start over in this case.\nThis will be the last call the delegate receives.\nGiven `DateTime` is the expiration date",16,null],[11,"denied","","Called if the user denied access. You would have to start over.\nThis will be the last call the delegate receives.",16,null],[11,"token_refresh_failed","","Called if we could not acquire a refresh token for a reason possibly specified\nby the server.\nThis call is made for the delegate's information only.",16,null],[11,"pending","","Called as long as we are waiting for the user to authorize us.\nCan be used to print progress information, or decide to time-out.",16,null],[11,"present_user_code","","The server has returned a `user_code` which must be shown to the user,\nalong with the `verification_url`.\n# Notes\n* Will be called exactly once, provided we didn't abort during `request_code` phase.\n* Will only be called if the Authenticator's flow_type is `FlowType::Device`.",16,null]],"paths":[[3,"PollInformation"],[3,"Token"],[3,"ApplicationSecret"],[3,"ConsoleApplicationSecret"],[3,"Scheme"],[3,"MemoryStorage"],[4,"PollError"],[4,"RefreshResult"],[4,"FlowType"],[4,"TokenType"],[4,"Retry"],[3,"DeviceFlow"],[3,"RefreshFlow"],[3,"NullStorage"],[3,"Authenticator"],[8,"TokenStorage"],[8,"AuthenticatorDelegate"],[8,"GetToken"]]};
searchIndex['hyper'] = {"items":[[0,"","hyper","# Hyper",null,null],[0,"mime","","",null,null],[11,"fmt","mime","",0,{"inputs":[{"name":"mime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"mime"},{"name":"mime"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"mime"},{"name":"mime"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"mime"}],"output":{"name":"mime"}}],[11,"fmt","","",1,{"inputs":[{"name":"toplevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"toplevel"}],"output":{"name":"toplevel"}}],[11,"eq","","",1,{"inputs":[{"name":"toplevel"},{"name":"toplevel"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"toplevel"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","hyper::mime","",null,null],[11,"from_str","mime","",1,{"inputs":[{"name":"toplevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"sublevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"sublevel"}],"output":{"name":"sublevel"}}],[11,"eq","","",2,{"inputs":[{"name":"sublevel"},{"name":"sublevel"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"sublevel"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","hyper::mime","",null,null],[11,"from_str","mime","",2,{"inputs":[{"name":"sublevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"attr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"attr"}],"output":{"name":"attr"}}],[11,"eq","","",3,{"inputs":[{"name":"attr"},{"name":"attr"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"attr"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","hyper::mime","",null,null],[11,"from_str","mime","",3,{"inputs":[{"name":"attr"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"value"}],"output":{"name":"value"}}],[11,"eq","","",4,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","hyper::mime","",null,null],[11,"from_str","mime","",4,{"inputs":[{"name":"value"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"mime"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","hyper::mime","",null,null],[11,"from_str","mime","",0,{"inputs":[{"name":"mime"},{"name":"str"}],"output":{"name":"result"}}],[3,"Mime","hyper::mime","Mime, or Media Type. Encapsulates common registers types.",null,null],[4,"TopLevel","","",null,null],[13,"Star","","",1,null],[13,"Text","","",1,null],[13,"Image","","",1,null],[13,"Audio","","",1,null],[13,"Video","","",1,null],[13,"Application","","",1,null],[13,"Multipart","","",1,null],[13,"Message","","",1,null],[13,"Model","","",1,null],[13,"Ext","","",1,null],[4,"SubLevel","","",null,null],[13,"Star","","",2,null],[13,"Plain","","",2,null],[13,"Html","","",2,null],[13,"Xml","","",2,null],[13,"Javascript","","",2,null],[13,"Css","","",2,null],[13,"Json","","",2,null],[13,"WwwFormUrlEncoded","","",2,null],[13,"FormData","","",2,null],[13,"Png","","",2,null],[13,"Gif","","",2,null],[13,"Bmp","","",2,null],[13,"Jpeg","","",2,null],[13,"Ext","","",2,null],[4,"Attr","","",null,null],[13,"Charset","","",3,null],[13,"Q","","",3,null],[13,"Ext","","",3,null],[4,"Value","","",null,null],[13,"Utf8","","",4,null],[13,"Ext","","",4,null],[6,"Param","","",null,null],[11,"parse","url","Parse an URL with the default `UrlParser` parameters.",5,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",5,{"inputs":[{"name":"url"},{"name":"p"}],"output":{"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",5,{"inputs":[{"name":"url"},{"name":"p"}],"output":{"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",5,{"inputs":[{"name":"url"}],"output":{"name":"result"}}],[11,"serialize","","Return the serialization of this URL as a string.",5,{"inputs":[{"name":"url"}],"output":{"name":"string"}}],[11,"serialize_no_fragment","","Return the serialization of this URL, without the fragment identifier, as a string",5,{"inputs":[{"name":"url"}],"output":{"name":"string"}}],[11,"non_relative_scheme_data","","If the URL is *non-relative*, return the string scheme data.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"non_relative_scheme_data_mut","","If the URL is *non-relative*, return a mutable reference to the string scheme data.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"relative_scheme_data","","If the URL is in a *relative scheme*, return the structured scheme data.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"relative_scheme_data_mut","","If the URL is in a *relative scheme*,\nreturn a mutable reference to the structured scheme data.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"username","","If the URL is in a *relative scheme*, return its username.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"username_mut","","If the URL is in a *relative scheme*, return a mutable reference to its username.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"lossy_percent_decode_username","","Percent-decode the URL’s username, if any.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"password","","If the URL is in a *relative scheme*, return its password, if any.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"password_mut","","If the URL is in a *relative scheme*, return a mutable reference to its password, if any.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"serialize_userinfo","","Serialize the URL's username and password, if any.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"host","","If the URL is in a *relative scheme*, return its structured host.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"host_mut","","If the URL is in a *relative scheme*, return a mutable reference to its structured host.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"domain","","If the URL is in a *relative scheme* and its host is a domain,\nreturn the domain as a string.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"domain_mut","","If the URL is in a *relative scheme* and its host is a domain,\nreturn a mutable reference to the domain string.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"serialize_host","","If the URL is in a *relative scheme*, serialize its host as a string.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"port","","If the URL is in a *relative scheme* and has a port number, return it.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"port_mut","","If the URL is in a *relative scheme*, return a mutable reference to its port.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"port_or_default","","If the URL is in a *relative scheme* that is not a file-like,\nreturn its port number, even if it is the default.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"path","","If the URL is in a *relative scheme*, return its path components.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"path_mut","","If the URL is in a *relative scheme*, return a mutable reference to its path components.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"serialize_path","","If the URL is in a *relative scheme*, serialize its path as a string.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return a vector of (key, value) pairs.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"set_query_from_pairs","","Serialize an iterator of (key, value) pairs as `application/x-www-form-urlencoded`\nand set it as the URL’s query string.",5,null],[11,"lossy_percent_decode_query","","Percent-decode the URL’s query string, if any.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"lossy_percent_decode_fragment","","Percent-decode the URL’s fragment identifier, if any.",5,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"clone","url::encoding","",6,{"inputs":[{"name":"encodingoverride"}],"output":{"name":"encodingoverride"}}],[11,"utf8","","",6,{"inputs":[{"name":"encodingoverride"}],"output":{"name":"encodingoverride"}}],[11,"lookup","","",6,null],[11,"is_utf8","","",6,{"inputs":[{"name":"encodingoverride"}],"output":{"name":"bool"}}],[11,"decode","","",6,null],[11,"encode","","",6,{"inputs":[{"name":"encodingoverride"},{"name":"str"}],"output":{"name":"cow"}}],[11,"fmt","url::host","",7,{"inputs":[{"name":"host"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"host"}],"output":{"name":"host"}}],[11,"eq","","",7,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"ipv6address"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"ipv6address"},{"name":"ipv6address"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"ipv6address"},{"name":"ipv6address"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"ipv6address"}],"output":{"name":"ipv6address"}}],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",7,{"inputs":[{"name":"host"},{"name":"str"}],"output":{"name":"result"}}],[11,"serialize","","Serialize the host as a string.",7,{"inputs":[{"name":"host"}],"output":{"name":"string"}}],[11,"fmt","","",7,{"inputs":[{"name":"host"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"parse","","Parse an IPv6 address, without the [] square brackets.",8,{"inputs":[{"name":"ipv6address"},{"name":"str"}],"output":{"name":"result"}}],[11,"serialize","","Serialize the IPv6 address to a string.",8,{"inputs":[{"name":"ipv6address"}],"output":{"name":"string"}}],[11,"fmt","","",8,{"inputs":[{"name":"ipv6address"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","url::parser","",9,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"eq","","",9,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"description","","",9,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"fmt","","",9,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"context"},{"name":"context"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"context"},{"name":"context"}],"output":{"name":"bool"}}],[6,"Item","hyper","",null,null],[11,"next","url::parser","",11,{"inputs":[{"name":"charranges"}],"output":{"name":"option"}}],[11,"clone","url::percent_encoding","",12,{"inputs":[{"name":"encodeset"}],"output":{"name":"encodeset"}}],[11,"fmt","url::format","",13,{"inputs":[{"name":"pathformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"userinfoformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"urlnofragmentformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","url","",5,{"inputs":[{"name":"url"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"url"}],"output":{"name":"url"}}],[11,"eq","","",5,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"bool"}}],[11,"fmt","","",16,{"inputs":[{"name":"schemedata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"schemedata"}],"output":{"name":"schemedata"}}],[11,"eq","","",16,{"inputs":[{"name":"schemedata"},{"name":"schemedata"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"schemedata"},{"name":"schemedata"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"relativeschemedata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"relativeschemedata"}}],[11,"eq","","",17,{"inputs":[{"name":"relativeschemedata"},{"name":"relativeschemedata"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"relativeschemedata"},{"name":"relativeschemedata"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[6,"Err","hyper","",null,null],[11,"from_str","url","",5,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Return a new UrlParser with default parameters.",18,{"inputs":[{"name":"urlparser"}],"output":{"name":"urlparser"}}],[11,"base_url","","Set the base URL used for resolving relative URL references, and return the `UrlParser`.\nThe default is no base URL, so that relative URLs references fail to parse.",18,{"inputs":[{"name":"urlparser"},{"name":"url"}],"output":{"name":"urlparser"}}],[11,"error_handler","","Set an error handler for non-fatal parse errors, and return the `UrlParser`.",18,null],[11,"scheme_type_mapper","","Set a *scheme type mapper*, and return the `UrlParser`.",18,null],[11,"parse","","Parse `input` as an URL, with all the parameters previously set in the `UrlParser`.",18,{"inputs":[{"name":"urlparser"},{"name":"str"}],"output":{"name":"result"}}],[11,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier.",18,{"inputs":[{"name":"urlparser"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"schemetype"}],"output":{"name":"schemetype"}}],[11,"fmt","","",19,{"inputs":[{"name":"schemetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"schemetype"},{"name":"schemetype"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"schemetype"},{"name":"schemetype"}],"output":{"name":"bool"}}],[11,"default_port","","",19,{"inputs":[{"name":"schemetype"}],"output":{"name":"option"}}],[11,"same_as","","",19,{"inputs":[{"name":"schemetype"},{"name":"schemetype"}],"output":{"name":"bool"}}],[11,"encode","","",5,{"inputs":[{"name":"url"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"url"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"url"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"schemedata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"lossy_percent_decode_username","","Percent-decode the URL’s username.",17,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"string"}}],[11,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",17,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"option"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",17,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"result"}}],[11,"domain","","If the host is a domain, return the domain as a string.",17,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"option"}}],[11,"domain_mut","","If the host is a domain, return a mutable reference to the domain string.",17,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"option"}}],[11,"port_or_default","","Return the port number of the URL, even if it is the default.\nReturn `None` for file-like URLs.",17,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"option"}}],[11,"serialize_path","","Serialize the path as a string.",17,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"string"}}],[11,"serialize_userinfo","","Serialize the userinfo as a string.",17,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"string"}}],[11,"fmt","","",17,{"inputs":[{"name":"relativeschemedata"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Url","hyper","The parsed representation of an absolute URL.",null,null],[12,"scheme","","The scheme (a.k.a. protocol) of the URL, in ASCII lower case.",5,null],[12,"scheme_data","","The components of the URL whose representation depends on where the scheme is *relative*.",5,null],[12,"query","","The query string of the URL.",5,null],[12,"fragment","","The fragment identifier of the URL.",5,null],[0,"client","","HTTP Client",null,null],[3,"Client","hyper::client","A Client to use additional features with Requests.",null,null],[3,"RequestBuilder","","Options for an individual Request.",null,null],[4,"Body","","An enum of possible body types for a Request.",null,null],[13,"ChunkedBody","","A Reader does not necessarily know it's size, so it is chunked.",20,null],[13,"SizedBody","","For Readers that can know their size, like a `File`.",20,null],[13,"BufBody","","A String has a size, and uses Content-Length.",20,null],[4,"RedirectPolicy","","Behavior regarding how to handle redirects within a Client.",null,null],[13,"FollowNone","","Don't follow any redirects.",21,null],[13,"FollowAll","","Follow all redirects.",21,null],[13,"FollowIf","","Follow a redirect if the contained function returns true.",21,null],[0,"pool","","Client Connection Pooling",null,null],[3,"Pool","hyper::client::pool","The `NetworkConnector` that behaves as a connection pool used by hyper's `Client`.",null,null],[3,"Config","","Config options for the `Pool`.",null,null],[12,"max_idle","","The maximum idle connections *per host*.",22,null],[3,"PooledStream","","A Stream that will try to be returned to the Pool when dropped.",null,null],[11,"fmt","","",22,{"inputs":[{"name":"config"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",22,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"new","","Creates a `Pool` with an `HttpConnector`.",23,{"inputs":[{"name":"pool"},{"name":"config"}],"output":{"name":"pool"}}],[11,"with_connector","","Creates a `Pool` with a specified `NetworkConnector`.",23,{"inputs":[{"name":"pool"},{"name":"config"},{"name":"c"}],"output":{"name":"pool"}}],[11,"clear_idle","","Clear all idle connections from the Pool, closing them.",23,{"inputs":[{"name":"pool"}],"output":null}],[6,"Stream","","",null,null],[11,"connect","","",23,{"inputs":[{"name":"pool"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"read","","",24,null],[11,"write","","",24,null],[11,"flush","","",24,{"inputs":[{"name":"pooledstream"}],"output":{"name":"result"}}],[11,"peer_addr","","",24,{"inputs":[{"name":"pooledstream"}],"output":{"name":"result"}}],[11,"close","","",24,{"inputs":[{"name":"pooledstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"drop","","",24,{"inputs":[{"name":"pooledstream"}],"output":null}],[0,"request","hyper::client","Client Requests",null,null],[3,"Request","hyper::client::request","A client request to a remote server.",null,null],[12,"url","","The target URI for this request.",25,null],[12,"version","","The HTTP version of this request.",25,null],[11,"headers","","Read the Request headers.",25,{"inputs":[{"name":"request"}],"output":{"name":"headers"}}],[11,"method","","Read the Request method.",25,{"inputs":[{"name":"request"}],"output":{"name":"method"}}],[11,"new","","Create a new client request.",25,{"inputs":[{"name":"request"},{"name":"method"},{"name":"url"}],"output":{"name":"result"}}],[11,"with_connector","","Create a new client request with a specific underlying NetworkStream.",25,{"inputs":[{"name":"request"},{"name":"method"},{"name":"url"},{"name":"c"}],"output":{"name":"result"}}],[11,"start","","Consume a Fresh Request, writing the headers and method,\nreturning a Streaming Request.",25,{"inputs":[{"name":"request"}],"output":{"name":"result"}}],[11,"headers_mut","","Get a mutable reference to the Request headers.",25,{"inputs":[{"name":"request"}],"output":{"name":"headers"}}],[11,"send","","Completes writing the request, and returns a response to read from.",25,{"inputs":[{"name":"request"}],"output":{"name":"result"}}],[11,"write","","",25,null],[11,"flush","","",25,{"inputs":[{"name":"request"}],"output":{"name":"result"}}],[0,"response","hyper::client","Client Responses",null,null],[3,"Response","hyper::client::response","A response for a client request to a remote server.",null,null],[12,"status","","The status from the server.",26,null],[12,"headers","","The headers from the server.",26,null],[12,"version","","The HTTP version of this response from the server.",26,null],[11,"fmt","","",26,{"inputs":[{"name":"response"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new response from a server.",26,{"inputs":[{"name":"response"},{"name":"box"}],"output":{"name":"result"}}],[11,"status_raw","","Get the raw status code and reason.",26,{"inputs":[{"name":"response"}],"output":{"name":"rawstatus"}}],[11,"into_inner","","Consumes the Request to return the NetworkStream underneath.",26,{"inputs":[{"name":"response"}],"output":{"name":"box"}}],[11,"read","","",26,null],[8,"IntoUrl","hyper::client","A helper trait to convert common objects into a Url.",null,null],[10,"into_url","","Consumes the object, trying to return a Url.",27,{"inputs":[{"name":"intourl"}],"output":{"name":"result"}}],[11,"new","","Create a new Client.",28,{"inputs":[{"name":"client"}],"output":{"name":"client"}}],[11,"with_pool_config","","Create a new Client with a configured Pool Config.",28,{"inputs":[{"name":"client"},{"name":"config"}],"output":{"name":"client"}}],[11,"with_connector","","Create a new client with a specific connector.",28,{"inputs":[{"name":"client"},{"name":"c"}],"output":{"name":"client"}}],[11,"set_ssl_verifier","","Set the SSL verifier callback for use with OpenSSL.",28,{"inputs":[{"name":"client"},{"name":"contextverifier"}],"output":null}],[11,"set_redirect_policy","","Set the RedirectPolicy.",28,{"inputs":[{"name":"client"},{"name":"redirectpolicy"}],"output":null}],[11,"get","","Build a Get request.",28,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"head","","Build a Head request.",28,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"post","","Build a Post request.",28,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"put","","Build a Put request.",28,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"delete","","Build a Delete request.",28,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"request","","Build a new request using this Client.",28,{"inputs":[{"name":"client"},{"name":"method"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"body","","Set a request body to be sent.",29,{"inputs":[{"name":"requestbuilder"},{"name":"b"}],"output":{"name":"requestbuilder"}}],[11,"headers","","Add additional headers to the request.",29,{"inputs":[{"name":"requestbuilder"},{"name":"headers"}],"output":{"name":"requestbuilder"}}],[11,"header","","Add an individual new header to the request.",29,{"inputs":[{"name":"requestbuilder"},{"name":"h"}],"output":{"name":"requestbuilder"}}],[11,"send","","Execute this request and receive a Response back.",29,{"inputs":[{"name":"requestbuilder"}],"output":{"name":"result"}}],[11,"read","","",20,null],[11,"from","","",20,{"inputs":[{"name":"body"},{"name":"r"}],"output":{"name":"body"}}],[11,"into_url","hyper","",5,{"inputs":[{"name":"url"}],"output":{"name":"result"}}],[11,"clone","hyper::client","",21,{"inputs":[{"name":"redirectpolicy"}],"output":{"name":"redirectpolicy"}}],[11,"default","","",21,{"inputs":[{"name":"redirectpolicy"}],"output":{"name":"redirectpolicy"}}],[0,"error","hyper","Error and Result module.",null,null],[4,"Error","hyper::error","A set of errors that can occur parsing HTTP streams.",null,null],[13,"Method","","An invalid `Method`, such as `GE,T`.",30,null],[13,"Uri","","An invalid `RequestUri`, such as `exam ple.domain`.",30,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",30,null],[13,"Header","","An invalid `Header`.",30,null],[13,"TooLarge","","A message head is too large to be reasonable.",30,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",30,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",30,null],[13,"Ssl","","An error from the `openssl` library.",30,null],[6,"Result","","Result type often returned from methods that can have hyper `Error`s.",null,null],[11,"fmt","","",30,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"from","","",30,{"inputs":[{"name":"error"},{"name":"ioerror"}],"output":{"name":"error"}}],[11,"from","","",30,{"inputs":[{"name":"error"},{"name":"parseerror"}],"output":{"name":"error"}}],[11,"from","","",30,{"inputs":[{"name":"error"},{"name":"sslerror"}],"output":{"name":"error"}}],[11,"from","","",30,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[0,"method","hyper","The HTTP request method",null,null],[4,"Method","hyper::method","The Request Method (VERB)",null,null],[13,"Options","","OPTIONS",31,null],[13,"Get","","GET",31,null],[13,"Post","","POST",31,null],[13,"Put","","PUT",31,null],[13,"Delete","","DELETE",31,null],[13,"Head","","HEAD",31,null],[13,"Trace","","TRACE",31,null],[13,"Connect","","CONNECT",31,null],[13,"Patch","","PATCH",31,null],[13,"Extension","","Method extensions. An example would be `let m = Extension(\"FOO\".to_string())`.",31,null],[11,"fmt","","",31,{"inputs":[{"name":"method"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",31,null],[11,"eq","","",31,{"inputs":[{"name":"method"},{"name":"method"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"method"},{"name":"method"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"method"}],"output":{"name":"method"}}],[11,"as_ref","","",31,{"inputs":[{"name":"method"}],"output":{"name":"str"}}],[11,"safe","","Whether a method is considered \"safe\", meaning the request is\nessentially read-only.",31,{"inputs":[{"name":"method"}],"output":{"name":"bool"}}],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has\nthe same result is executed multiple times.",31,{"inputs":[{"name":"method"}],"output":{"name":"bool"}}],[6,"Err","","",null,null],[11,"from_str","","",31,{"inputs":[{"name":"method"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"method"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"header","hyper","Headers container, and common header fields.",null,null],[3,"EntityTag","hyper::header","An entity tag, defined in [RFC7232](https://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[12,"weak","","Weakness indicator for the tag",32,null],[3,"HttpDate","","A `time::Time` with HTTP formatting and parsing",null,null],[3,"Language","","A language tag.\nSee http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.10",null,null],[12,"primary","","The language tag",33,null],[12,"sub","","A language subtag or country code",33,null],[3,"Quality","","Represents a quality used in quality values.",null,null],[3,"QualityItem","","Represents an item with a quality value as defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-5.3.1).",null,null],[12,"item","","The actual contents of the field.",34,null],[12,"quality","","The quality (client or server preference) for the value.",34,null],[3,"Accept","","`Accept` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.2)",null,null],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-headers-response-header)",null,null],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-methods-response-header)",null,null],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-max-age-response-header)",null,null],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-headers-request-header)",null,null],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-method-request-header)",null,null],[3,"AcceptCharset","","`Accept-Charset` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.3)",null,null],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.4)",null,null],[3,"AcceptLanguage","","`Accept-Language` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.5)",null,null],[3,"AcceptRanges","","`Accept-Ranges` header, defined in\n[RFC7233](http://tools.ietf.org/html/rfc7233#section-2.3)",null,null],[3,"Allow","","`Allow` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.1)",null,null],[3,"Authorization","","`Authorization` header, defined in [RFC7235](https://tools.ietf.org/html/rfc7235#section-4.2)",null,null],[3,"Basic","","Credential holder for Basic Authentication",null,null],[12,"username","","The username as a possibly empty string",35,null],[12,"password","","The password. `None` if the `:` delimiter character was not\npart of the parsed input.",35,null],[3,"CacheControl","","`Cache-Control` header, defined in [RFC7234](https://tools.ietf.org/html/rfc7234#section-5.2)",null,null],[3,"Connection","","`Connection` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-6.1)",null,null],[3,"ContentLength","","`Content-Length` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.2)",null,null],[3,"ContentEncoding","","`Content-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.2.2)",null,null],[3,"ContentLanguage","","`Content-Language` header, defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-3.1.3.2)",null,null],[3,"ContentType","","`Content-Type` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.1.5)",null,null],[3,"Cookie","","`Cookie` header, defined in [RFC6265](http://tools.ietf.org/html/rfc6265#section-5.4)",null,null],[3,"Date","","`Date` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.1.2)",null,null],[3,"ETag","","`ETag` header, defined in [RFC7232](http://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[3,"Expires","","`Expires` header, defined in [RFC7234](http://tools.ietf.org/html/rfc7234#section-5.3)",null,null],[3,"From","","`From` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.1)",null,null],[3,"Host","","The `Host` header.",null,null],[12,"hostname","","The hostname, such a example.domain.",36,null],[12,"port","","An optional port number.",36,null],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.3)",null,null],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.4)",null,null],[3,"LastModified","","`Last-Modified` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-2.2)",null,null],[3,"Location","","`Location` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.2)",null,null],[3,"Referer","","`Referer` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.2)",null,null],[3,"Server","","`Server` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.2)",null,null],[3,"SetCookie","","`Set-Cookie` header, defined [RFC6265](http://tools.ietf.org/html/rfc6265#section-4.1)",null,null],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.1)",null,null],[3,"Upgrade","","`Upgrade` header, defined in [RFC7230](http://tools.ietf.org/html/rfc7230#section-6.7)",null,null],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",null,null],[12,"name","","The protocol identifier",37,null],[12,"version","","The optional version of the protocol, often in the format \"DIGIT.DIGIT\" (e.g.. \"1.2\")",37,null],[3,"UserAgent","","`User-Agent` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.3)",null,null],[3,"Headers","","A map of header fields on requests and responses.",null,null],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map.",null,null],[3,"HeaderView","","Returned with the `HeadersItems` iterator.",null,null],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls fmt_header.",null,null],[4,"Charset","","A Mime charset.",null,null],[13,"Us_Ascii","","US ASCII",38,null],[13,"Iso_8859_1","","ISO-8859-1",38,null],[13,"Iso_8859_2","","ISO-8859-2",38,null],[13,"Iso_8859_3","","ISO-8859-3",38,null],[13,"Iso_8859_4","","ISO-8859-4",38,null],[13,"Iso_8859_5","","ISO-8859-5",38,null],[13,"Iso_8859_6","","ISO-8859-6",38,null],[13,"Iso_8859_7","","ISO-8859-7",38,null],[13,"Iso_8859_8","","ISO-8859-8",38,null],[13,"Iso_8859_9","","ISO-8859-9",38,null],[13,"Iso_8859_10","","ISO-8859-10",38,null],[13,"Shift_Jis","","Shift_JIS",38,null],[13,"Euc_Jp","","EUC-JP",38,null],[13,"Iso_2022_Kr","","ISO-2022-KR",38,null],[13,"Euc_Kr","","EUC-KR",38,null],[13,"Iso_2022_Jp","","ISO-2022-JP",38,null],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",38,null],[13,"Iso_8859_6_E","","ISO-8859-6-E",38,null],[13,"Iso_8859_6_I","","ISO-8859-6-I",38,null],[13,"Iso_8859_8_E","","ISO-8859-8-E",38,null],[13,"Iso_8859_8_I","","ISO-8859-8-I",38,null],[13,"Gb2312","","GB2312",38,null],[13,"Big5","","Big5",38,null],[13,"Koi8_R","","KOI8-R",38,null],[13,"Ext","","An arbitrary charset specified as a string",38,null],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding`\nor `Accept-Encoding` header.",null,null],[13,"Chunked","","The `chunked` encoding.",39,null],[13,"Gzip","","The `gzip` encoding.",39,null],[13,"Deflate","","The `deflate` encoding.",39,null],[13,"Compress","","The `compress` encoding.",39,null],[13,"Identity","","The `identity` encoding.",39,null],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",39,null],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header,\npart of [CORS](http://www.w3.org/TR/cors/#access-control-allow-origin-response-header)",null,null],[13,"Any","","Allow all origins",40,null],[13,"Null","","A hidden origin",40,null],[13,"Value","","Allow one particular origin",40,null],[4,"CacheDirective","","CacheControl contains a list of these directives.",null,null],[13,"NoCache","","\"no-cache\"",41,null],[13,"NoStore","","\"no-store\"",41,null],[13,"NoTransform","","\"no-transform\"",41,null],[13,"OnlyIfCached","","\"only-if-cached\"",41,null],[13,"MaxAge","","\"max-age=delta\"",41,null],[13,"MaxStale","","\"max-stale=delta\"",41,null],[13,"MinFresh","","\"min-fresh=delta\"",41,null],[13,"MustRevalidate","","\"must-revalidate\"",41,null],[13,"Public","","\"public\"",41,null],[13,"Private","","\"private\"",41,null],[13,"ProxyRevalidate","","\"proxy-revalidate\"",41,null],[13,"SMaxAge","","\"s-maxage=delta\"",41,null],[13,"Extension","","Extension directives. Optionally include an argument.",41,null],[4,"ConnectionOption","","Values that can be in the `Connection` header.",null,null],[13,"KeepAlive","","The `keep-alive` connection value.",42,null],[13,"Close","","The `close` connection value.",42,null],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",42,null],[4,"Expect","","The `Expect` header.",null,null],[13,"Continue","","The value `100-continue`.",43,null],[4,"IfMatch","","`If-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.1)",null,null],[13,"Any","","Any value is a match",44,null],[13,"Items","","Only the listed items are a match",44,null],[4,"IfNoneMatch","","`If-None-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.2)",null,null],[13,"Any","","Any value is a match",45,null],[13,"Items","","Only the listed items are a match",45,null],[4,"IfRange","","`If-Range` header, defined in [RFC7233](http://tools.ietf.org/html/rfc7233#section-3.2)",null,null],[13,"EntityTag","","The entity-tag the client has of the resource",46,null],[13,"Date","","The date when the client retrieved the resource",46,null],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",null,null],[13,"NoCache","","Corresponds to the `no-cache` value.",47,null],[13,"Ext","","Every value other than `no-cache`.",47,null],[4,"ProtocolName","","A protocol name used to identify a spefic protocol. Names are case-sensitive\nexcept for the `WebSocket` value.",null,null],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",48,null],[13,"Tls","","`TLS` value, Transport Layer Security [RFC2817](http://tools.ietf.org/html/rfc2817)",48,null],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket Protocol\n[RFC6455](http://tools.ietf.org/html/rfc6455)",48,null],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",48,null],[13,"Unregistered","","Any other protocol name not known to hyper",48,null],[4,"Vary","","`Vary` header, defined in [RFC7231](https://tools.ietf.org/html/rfc7231#section-7.1.4)",null,null],[13,"Any","","Any value is a match",49,null],[13,"Items","","Only the listed items are a match",49,null],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`\nSets `q` to the default 1.0",null,{"inputs":[{"name":"t"}],"output":{"name":"qualityitem"}}],[5,"q","","Convenience function to create a `Quality` fromt a float.",null,{"inputs":[{"name":"f32"}],"output":{"name":"quality"}}],[11,"eq","","",50,{"inputs":[{"name":"accept"},{"name":"accept"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"accept"},{"name":"accept"}],"output":{"name":"bool"}}],[11,"fmt","","",50,{"inputs":[{"name":"accept"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"accept"}],"output":{"name":"accept"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",51,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",51,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",51,null],[11,"from_raw_buf","","Creates a vector by copying the elements from a raw pointer.",51,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",51,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",51,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",51,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",51,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",51,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",51,null],[11,"as_slice","","Extracts a slice containing the entire vector.",51,null],[11,"as_mut_slice","","Deprecated: use `&mut s[..]` instead.",51,null],[11,"set_len","","Sets the length of a vector.",51,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",51,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",51,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",51,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",51,null],[11,"push","","Appends an element to the back of a collection.",51,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it is empty.",51,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",51,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",51,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",51,null],[11,"len","","Returns the number of elements in the vector.",51,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",51,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"map_in_place","","Converts a `Vec<T>` to a `Vec<U>` where `T` and `U` have the same\nsize and in case they are not zero-sized the same minimal alignment.",51,{"inputs":[{"name":"vec"},{"name":"f"}],"output":{"name":"vec"}}],[11,"split_off","","Splits the collection into two at the given index.",51,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",51,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",51,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",51,null],[11,"clone","collections::binary_heap","",52,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",52,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"next_back","","",52,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",53,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"next_back","","",53,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",54,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"next_back","","",54,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"index","collections::bit","",55,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"new","","Creates an empty `BitVec`.",55,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"from_elem","","Creates a `BitVec` that holds `nbits` elements, setting each element\nto `bit`.",55,{"inputs":[{"name":"bitvec"},{"name":"usize"},{"name":"bool"}],"output":{"name":"bitvec"}}],[11,"with_capacity","","Constructs a new, empty `BitVec` with the specified capacity.",55,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bitvec"}}],[11,"from_bytes","","Transforms a byte-vector into a `BitVec`. Each byte becomes eight bits,\nwith the most significant bits of each byte coming first. Each\nbit becomes `true` if equal to 1 or `false` if equal to 0.",55,null],[11,"from_fn","","Creates a `BitVec` of the specified length where the value at each index\nis `f(index)`.",55,{"inputs":[{"name":"bitvec"},{"name":"usize"},{"name":"f"}],"output":{"name":"bitvec"}}],[11,"get","","Retrieves the value at index `i`, or `None` if the index is out of bounds.",55,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"option"}}],[11,"set","","Sets the value of a bit at an index `i`.",55,null],[11,"set_all","","Sets all bits to 1.",55,null],[11,"negate","","Flips all bits.",55,null],[11,"union","","Calculates the union of two bitvectors. This acts like the bitwise `or`\nfunction.",55,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"intersect","","Calculates the intersection of two bitvectors. This acts like the\nbitwise `and` function.",55,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"difference","","Calculates the difference between two bitvectors.",55,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"all","","Returns `true` if all bits are 1.",55,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over the elements of the vector in order.",55,{"inputs":[{"name":"bitvec"}],"output":{"name":"iter"}}],[11,"none","","Returns `true` if all bits are 0.",55,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"any","","Returns `true` if any bit is 1.",55,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"to_bytes","","Organises the bits into bytes, such that the first bit in the\n`BitVec` becomes the high-order bit of the first byte. If the\nsize of the `BitVec` is not a multiple of eight then trailing bits\nwill be filled-in with `false`.",55,{"inputs":[{"name":"bitvec"}],"output":{"name":"vec"}}],[11,"eq_vec","","Compares a `BitVec` to a slice of `bool`s.\nBoth the `BitVec` and slice must have the same length.",55,null],[11,"truncate","","Shortens a `BitVec`, dropping excess elements.",55,null],[11,"reserve","","Reserves capacity for at least `additional` more bits to be inserted in the given\n`BitVec`. The collection may reserve more space to avoid frequent reallocations.",55,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bits to be inserted in the\ngiven `BitVec`. Does nothing if the capacity is already sufficient.",55,null],[11,"capacity","","Returns the capacity in bits for this bit vector. Inserting any\nelement less than this amount will not trigger a resizing.",55,{"inputs":[{"name":"bitvec"}],"output":{"name":"usize"}}],[11,"grow","","Grows the `BitVec` in-place, adding `n` copies of `value` to the `BitVec`.",55,null],[11,"pop","","Removes the last bit from the BitVec, and returns it. Returns None if the BitVec is empty.",55,{"inputs":[{"name":"bitvec"}],"output":{"name":"option"}}],[11,"push","","Pushes a `bool` onto the end.",55,null],[11,"len","","Returns the total number of bits in this vector",55,{"inputs":[{"name":"bitvec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if there are no bits in this vector",55,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"clear","","Clears all bits in this vector.",55,null],[11,"default","","",55,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"from_iter","","",55,{"inputs":[{"name":"bitvec"},{"name":"i"}],"output":{"name":"bitvec"}}],[11,"extend","","",55,null],[11,"clone","","",55,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"clone_from","","",55,null],[11,"partial_cmp","","",55,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"option"}}],[11,"cmp","","",55,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"ordering"}}],[11,"fmt","","",55,{"inputs":[{"name":"bitvec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",55,null],[11,"eq","","",55,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"clone","","",56,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",56,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"next_back","","",56,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"indexable","","",56,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",56,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",57,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"default","","",57,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"from_iter","","",57,{"inputs":[{"name":"bitset"},{"name":"i"}],"output":{"name":"bitset"}}],[11,"extend","","",57,null],[11,"partial_cmp","","",57,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"option"}}],[11,"cmp","","",57,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"ordering"}}],[11,"eq","","",57,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"new","","Creates a new empty `BitSet`.",57,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"with_capacity","","Creates a new `BitSet` with initially no contents, able to\nhold `nbits` elements without resizing.",57,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bitset"}}],[11,"from_bit_vec","","Creates a new `BitSet` from the given bit vector.",57,{"inputs":[{"name":"bitset"},{"name":"bitvec"}],"output":{"name":"bitset"}}],[11,"capacity","","Returns the capacity in bits for this bit vector. Inserting any\nelement less than this amount will not trigger a resizing.",57,{"inputs":[{"name":"bitset"}],"output":{"name":"usize"}}],[11,"reserve_len","","Reserves capacity for the given `BitSet` to contain `len` distinct elements. In the case\nof `BitSet` this means reallocations will not occur as long as all inserted elements\nare less than `len`.",57,null],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `BitSet` to contain `len` distinct elements.\nIn the case of `BitSet` this means reallocations will not occur as long as all inserted\nelements are less than `len`.",57,null],[11,"into_bit_vec","","Consumes this set to return the underlying bit vector.",57,{"inputs":[{"name":"bitset"}],"output":{"name":"bitvec"}}],[11,"get_ref","","Returns a reference to the underlying bit vector.",57,{"inputs":[{"name":"bitset"}],"output":{"name":"bitvec"}}],[11,"shrink_to_fit","","Truncates the underlying vector to the least length required.",57,null],[11,"iter","","Iterator over each u32 stored in the `BitSet`.",57,{"inputs":[{"name":"bitset"}],"output":{"name":"setiter"}}],[11,"union","","Iterator over each u32 stored in `self` union `other`.\nSee [union_with](#method.union_with) for an efficient in-place version.",57,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"union"}}],[11,"intersection","","Iterator over each usize stored in `self` intersect `other`.\nSee [intersect_with](#method.intersect_with) for an efficient in-place version.",57,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"intersection"}}],[11,"difference","","Iterator over each usize stored in the `self` setminus `other`.\nSee [difference_with](#method.difference_with) for an efficient in-place version.",57,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Iterator over each u32 stored in the symmetric difference of `self` and `other`.\nSee [symmetric_difference_with](#method.symmetric_difference_with) for\nan efficient in-place version.",57,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"symmetricdifference"}}],[11,"union_with","","Unions in-place with the specified other bit vector.",57,null],[11,"intersect_with","","Intersects in-place with the specified other bit vector.",57,null],[11,"difference_with","","Makes this bit vector the difference with the specified other bit vector\nin-place.",57,null],[11,"symmetric_difference_with","","Makes this bit vector the symmetric difference with the specified other\nbit vector in-place.",57,null],[11,"len","","Returns the number of set bits in this set.",57,{"inputs":[{"name":"bitset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns whether there are no bits set in this set",57,{"inputs":[{"name":"bitset"}],"output":{"name":"bool"}}],[11,"clear","","Clears all bits in this set",57,null],[11,"contains","","Returns `true` if this set contains the specified integer.",57,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",57,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",57,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",57,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",57,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",57,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"fmt","","",57,{"inputs":[{"name":"bitset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",57,null],[11,"clone","","",58,{"inputs":[{"name":"setiter"}],"output":{"name":"setiter"}}],[11,"clone","","",59,{"inputs":[{"name":"twobitpositions"}],"output":{"name":"twobitpositions"}}],[11,"clone","","",60,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"clone","","",61,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"clone","","",62,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"clone","","",63,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",58,{"inputs":[{"name":"setiter"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"next","","",59,{"inputs":[{"name":"twobitpositions"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"next","","",60,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",60,null],[11,"next","","",61,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next","","",62,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"next","","",63,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next","collections::btree::node","",64,{"inputs":[{"name":"rawitems"}],"output":{"name":"option"}}],[11,"next_back","","",64,{"inputs":[{"name":"rawitems"}],"output":{"name":"option"}}],[11,"drop","","",64,null],[11,"drop","","",65,null],[11,"as_slices","","",65,null],[11,"as_slices_mut","","",65,null],[11,"as_slices_internal","","",65,{"inputs":[{"name":"node"}],"output":{"name":"nodeslice"}}],[11,"as_slices_internal_mut","","",65,{"inputs":[{"name":"node"}],"output":{"name":"mutnodeslice"}}],[11,"keys","","",65,null],[11,"keys_mut","","",65,null],[11,"vals","","",65,null],[11,"vals_mut","","",65,null],[11,"edges","","",65,null],[11,"edges_mut","","",65,null],[11,"clone","","",65,{"inputs":[{"name":"node"}],"output":{"name":"node"}}],[11,"clone","","",66,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"search","","Searches for the given key in the node. If it finds an exact match,\n`Found` will be yielded with the matching index. If it doesn't find an exact match,\n`GoDown` will be yielded with the index of the subtree the key must lie in.",65,{"inputs":[{"name":"node"},{"name":"noderef"},{"name":"q"}],"output":{"name":"searchresult"}}],[11,"make_leaf_root","","Make a leaf root from scratch",65,{"inputs":[{"name":"node"},{"name":"usize"}],"output":{"name":"node"}}],[11,"make_internal_root","","Make an internal root and swap it with an old root",65,null],[11,"len","","How many key-value pairs the node contains",65,{"inputs":[{"name":"node"}],"output":{"name":"usize"}}],[11,"is_empty","","Does the node not contain any key-value pairs",65,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"capacity","","How many key-value pairs the node can fit",65,{"inputs":[{"name":"node"}],"output":{"name":"usize"}}],[11,"is_leaf","","If the node has any children",65,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"is_underfull","","if the node has too few elements",65,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"is_full","","if the node cannot fit any more elements",65,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"node","","Returns a reference to the node that contains the pointed-to edge or key/value pair. This\nis very different from `edge` and `edge_mut` because those return children of the node\nreturned by `node`.",66,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"as_raw","","Converts a handle into one that stores the same information using a raw pointer. This can\nbe useful in conjunction with `from_raw` when the type system is insufficient for\ndetermining the lifetimes of the nodes.",66,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"from_raw","","Converts from a handle stored with a raw pointer, which isn't directly usable, to a handle\nstored with a reference. This is an unsafe inverse of `as_raw`, and together they allow\nunsafely extending the lifetime of the reference to the `Node`.",66,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"from_raw_mut","","Converts from a handle stored with a raw pointer, which isn't directly usable, to a handle\nstored with a mutable reference. This is an unsafe inverse of `as_raw`, and together they\nallow unsafely extending the lifetime of the reference to the `Node`.",66,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"into_edge","","Turns the handle into a reference to the edge it points at. This is necessary because the\nreturned pointer has a larger lifetime than what would be returned by `edge` or `edge_mut`,\nmaking it more suitable for moving down a chain of nodes.",66,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"into_edge_mut","","Turns the handle into a mutable reference to the edge it points at. This is necessary\nbecause the returned pointer has a larger lifetime than what would be returned by\n`edge_mut`, making it more suitable for moving down a chain of nodes.",66,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"force","","Figure out whether this handle is pointing to something in a leaf node or to something in\nan internal node, clarifying the type according to the result.",66,{"inputs":[{"name":"handle"}],"output":{"name":"forceresult"}}],[11,"insert_as_leaf","","Tries to insert this key-value pair at the given index in this leaf node\nIf the node is full, we have to split it.",66,null],[11,"edge_mut","","Returns a mutable reference to the edge pointed-to by this handle. This should not be\nconfused with `node`, which references the parent node of what is returned here.",66,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"insert_as_internal","","Tries to insert this key-value pair at the given index in this internal node\nIf the node is full, we have to split it.",66,{"inputs":[{"name":"handle"},{"name":"k"},{"name":"v"},{"name":"node"}],"output":{"name":"insertionresult"}}],[11,"handle_underflow","","Handle an underflow in this node's child. We favour handling \"to the left\" because we know\nwe're empty, but our neighbour can be full. Handling to the left means when we choose to\nsteal, we pop off the end of our neighbour (always fast) and \"unshift\" ourselves\n(always slow, but at least faster since we know we're half-empty).\nHandling \"to the right\" reverses these roles. Of course, we merge whenever possible\nbecause we want dense nodes, and merging is about equal work regardless of direction.",66,null],[11,"into_kv","","Turns the handle into references to the key and value it points at. This is necessary\nbecause the returned pointers have larger lifetimes than what would be returned by `key`\nor `val`.",66,null],[11,"into_kv_mut","","Turns the handle into mutable references to the key and value it points at. This is\nnecessary because the returned pointers have larger lifetimes than what would be returned\nby `key_mut` or `val_mut`.",66,null],[11,"into_left_edge","","Convert this handle into one pointing at the edge immediately to the left of the key/value\npair pointed-to by this handle. This is useful because it returns a reference with larger\nlifetime than `left_edge`.",66,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"key_mut","","Returns a mutable reference to the key pointed-to by this handle. This doesn't return a\nreference with a lifetime as large as `into_kv_mut`, but it also does not consume the\nhandle.",66,{"inputs":[{"name":"handle"}],"output":{"name":"k"}}],[11,"val_mut","","Returns a mutable reference to the value pointed-to by this handle. This doesn't return a\nreference with a lifetime as large as `into_kv_mut`, but it also does not consume the\nhandle.",66,{"inputs":[{"name":"handle"}],"output":{"name":"v"}}],[11,"left_edge","","Gets the handle pointing to the edge immediately to the left of the key/value pair pointed\nto by this handle.",66,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"right_edge","","Gets the handle pointing to the edge immediately to the right of the key/value pair pointed\nto by this handle.",66,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"remove_as_leaf","","Removes the key/value pair at the handle's location.",66,null],[11,"kv_handle","","Returns the mutable handle pointing to the key/value pair at a given index.",65,{"inputs":[{"name":"node"},{"name":"usize"}],"output":{"name":"handle"}}],[11,"iter","","",65,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"iter_mut","","",65,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"into_iter","","",65,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"hoist_lone_child","","When a node has no keys or values and only a single edge, extract that edge.",65,null],[11,"clone","","",67,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"elemsandedges"}}],[11,"next_kv","","",67,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_kv_back","","",67,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_edge","","",67,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_edge_back","","",67,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_kv","","",68,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_kv_back","","",68,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_edge","","",68,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_edge_back","","",68,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"drop","","",68,null],[11,"clone","","",69,{"inputs":[{"name":"abstraversal"}],"output":{"name":"abstraversal"}}],[11,"next","","",69,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_back","","",69,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_edge_item","","Advances the iterator and returns the item if it's an edge. Returns None\nand does nothing if the first item is not an edge.",69,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_edge_item_back","","Advances the iterator and returns the item if it's an edge. Returns None\nand does nothing if the last item is not an edge.",69,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_kv_item","","Advances the iterator and returns the item if it's a key-value pair. Returns None\nand does nothing if the first item is not a key-value pair.",69,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_kv_item_back","","Advances the iterator and returns the item if it's a key-value pair. Returns None\nand does nothing if the last item is not a key-value pair.",69,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"slice_from","","Returns a sub-slice with elements starting with `min_key`.",70,{"inputs":[{"name":"nodeslice"},{"name":"k"}],"output":{"name":"nodeslice"}}],[11,"slice_to","","Returns a sub-slice with elements up to and including `max_key`.",70,{"inputs":[{"name":"nodeslice"},{"name":"k"}],"output":{"name":"nodeslice"}}],[11,"iter","","Returns an iterator over key/value pairs and edges in a slice.",70,{"inputs":[{"name":"nodeslice"}],"output":{"name":"abstraversal"}}],[11,"slice_from","","Returns a sub-slice with elements starting with `min_key`.",71,{"inputs":[{"name":"mutnodeslice"},{"name":"k"}],"output":{"name":"mutnodeslice"}}],[11,"slice_to","","Returns a sub-slice with elements up to and including `max_key`.",71,{"inputs":[{"name":"mutnodeslice"},{"name":"k"}],"output":{"name":"mutnodeslice"}}],[11,"iter_mut","","Returns an iterator over key/value pairs and edges in a slice.",71,{"inputs":[{"name":"mutnodeslice"}],"output":{"name":"abstraversal"}}],[11,"clone","collections::btree::map","",72,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"clone","","",73,{"inputs":[{"name":"absiter"}],"output":{"name":"absiter"}}],[11,"new","","Makes a new empty BTreeMap with a reasonable choice for B.",72,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"with_b","","Makes a new empty BTreeMap with the given B.",72,{"inputs":[{"name":"btreemap"},{"name":"usize"}],"output":{"name":"btreemap"}}],[11,"clear","","Clears the map, removing all values.",72,null],[11,"get","","Returns a reference to the value corresponding to the key.",72,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",72,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",72,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",72,{"inputs":[{"name":"btreemap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",72,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"into_iter","","Gets an owning iterator over the entries of the map.",72,{"inputs":[{"name":"btreemap"}],"output":{"name":"intoiter"}}],[11,"deref","collections::btree::map::stack","",74,{"inputs":[{"name":"idref"}],"output":{"name":"t"}}],[11,"deref_mut","","",74,{"inputs":[{"name":"idref"}],"output":{"name":"t"}}],[11,"new","","Creates a new PartialSearchStack from a BTreeMap by initializing the stack with the\nroot of the tree.",75,{"inputs":[{"name":"partialsearchstack"},{"name":"btreemap"}],"output":{"name":"partialsearchstack"}}],[11,"with","","Breaks up the stack into a `Pusher` and the next `Node`, allowing the given closure\nto interact with, search, and finally push the `Node` onto the stack. The passed in\nclosure must be polymorphic on the `'id` lifetime parameter, as this statically\nensures that only `Handle`s from the correct `Node` can be pushed.",75,{"inputs":[{"name":"partialsearchstack"},{"name":"f"}],"output":{"name":"t"}}],[11,"push","","Pushes the requested child of the stack's current top on top of the stack. If the child\nexists, then a new PartialSearchStack is yielded. Otherwise, a VacantSearchStack is\nyielded.",76,{"inputs":[{"name":"pusher"},{"name":"handle"}],"output":{"name":"partialsearchstack"}}],[11,"seal","","Converts the PartialSearchStack into a SearchStack.",76,{"inputs":[{"name":"pusher"},{"name":"handle"}],"output":{"name":"searchstack"}}],[11,"peek","","Gets a reference to the value the stack points to.",77,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"peek_mut","","Gets a mutable reference to the value the stack points to.",77,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"into_top","","Converts the stack into a mutable reference to the value it points to, with a lifetime\ntied to the original tree.",77,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"remove","","Removes the key and value in the top element of the stack, then handles underflows as\ndescribed in BTree's pop function.",77,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"insert","","Inserts the key and value into the top element in the stack, and if that node has to\nsplit recursively inserts the split contents into the next element stack until\nsplits stop.",77,{"inputs":[{"name":"searchstack"},{"name":"k"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","collections::btree::map","",72,{"inputs":[{"name":"btreemap"},{"name":"t"}],"output":{"name":"btreemap"}}],[11,"extend","","",72,null],[11,"hash","","",72,null],[11,"default","","",72,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"eq","","",72,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",72,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"option"}}],[11,"cmp","","",72,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"ordering"}}],[11,"fmt","","",72,{"inputs":[{"name":"btreemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",72,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"v"}}],[11,"traverse","collections::btree::node","",69,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"traverse","","",69,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"traverse","","",69,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"next","collections::btree::map","",73,{"inputs":[{"name":"absiter"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"next_back","","",73,{"inputs":[{"name":"absiter"}],"output":{"name":"option"}}],[11,"clone","","",78,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",78,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"next_back","","",78,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",79,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",79,null],[11,"next_back","","",79,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",80,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"next_back","","",80,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",81,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"next","","",81,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",81,null],[11,"next_back","","",81,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"clone","","",82,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"next","","",82,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"next_back","","",82,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"clone","","",83,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",83,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",83,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",84,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"next_back","","",84,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",85,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",85,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",85,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.",86,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",87,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",87,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",87,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,\nand returns the entry's old value.",87,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",87,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"iter","","Gets an iterator over the entries of the map.",72,{"inputs":[{"name":"btreemap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",72,{"inputs":[{"name":"btreemap"}],"output":{"name":"itermut"}}],[11,"keys","","Gets an iterator over the keys of the map.",72,{"inputs":[{"name":"btreemap"}],"output":{"name":"keys"}}],[11,"values","","Gets an iterator over the values of the map.",72,{"inputs":[{"name":"btreemap"}],"output":{"name":"values"}}],[11,"len","","Returns the number of elements in the map.",72,{"inputs":[{"name":"btreemap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",72,{"inputs":[{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",72,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"range_mut","","Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",72,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"rangemut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",72,{"inputs":[{"name":"btreemap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"partial_cmp","collections::btree::set","",88,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"option"}}],[11,"lt","","",88,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"le","","",88,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"gt","","",88,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ge","","",88,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"cmp","","",88,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"ordering"}}],[11,"eq","","",88,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"hash","","",88,null],[11,"clone","","",88,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"new","","Makes a new BTreeSet with a reasonable choice of B.",88,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"with_b","","Makes a new BTreeSet with the given B.",88,{"inputs":[{"name":"btreeset"},{"name":"usize"}],"output":{"name":"btreeset"}}],[11,"iter","","Gets an iterator over the BTreeSet's contents.",88,{"inputs":[{"name":"btreeset"}],"output":{"name":"iter"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the set, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",88,{"inputs":[{"name":"btreeset"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"difference","","Visits the values representing the difference, in ascending order.",88,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visits the values representing the symmetric difference, in ascending order.",88,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visits the values representing the intersection, in ascending order.",88,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"intersection"}}],[11,"union","","Visits the values representing the union, in ascending order.",88,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",88,{"inputs":[{"name":"btreeset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",88,{"inputs":[{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"clear","","Clears the set, removing all values.",88,null],[11,"contains","","Returns `true` if the set contains a value.",88,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",88,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",88,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",88,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",88,{"inputs":[{"name":"btreeset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",88,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"from_iter","","",88,{"inputs":[{"name":"btreeset"},{"name":"i"}],"output":{"name":"btreeset"}}],[11,"into_iter","","Gets an iterator for moving out the BtreeSet's contents.",88,{"inputs":[{"name":"btreeset"}],"output":{"name":"intoiter"}}],[11,"extend","","",88,null],[11,"default","","",88,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"fmt","","",88,{"inputs":[{"name":"btreeset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",89,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"next_back","","",89,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",90,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"next_back","","",90,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",91,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",91,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",91,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",92,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",92,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"clone","","",93,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",93,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"clone","","",94,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",94,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"clone","","",95,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",95,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"borrow","alloc::rc","",96,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"borrow","alloc::arc","",97,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"borrow","collections::borrow","",98,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",98,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",98,null],[11,"into_owned","","Extracts the owned data.",98,null],[11,"deref","","",98,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",98,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",98,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",98,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",98,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",98,null],[11,"into_cow","","",98,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",98,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"hash","collections::enum_set","",99,null],[11,"cmp","","",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"option"}}],[11,"lt","","",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"le","","",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"gt","","",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ge","","",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"eq","","",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clone","","",99,{"inputs":[{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"fmt","","",99,{"inputs":[{"name":"enumset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns an empty `EnumSet`.",99,{"inputs":[{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"len","","Returns the number of elements in the given `EnumSet`.",99,{"inputs":[{"name":"enumset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the `EnumSet` is empty.",99,{"inputs":[{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clear","","",99,null],[11,"is_disjoint","","Returns `false` if the `EnumSet` contains any enum of the given `EnumSet`.",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if a given `EnumSet` is included in this `EnumSet`.",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if this `EnumSet` is included in the given `EnumSet`.",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"union","","Returns the union of both `EnumSets`.",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"intersection","","Returns the intersection of both `EnumSets`.",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"insert","","Adds an enum to the `EnumSet`, and returns `true` if it wasn't there before",99,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"remove","","Removes an enum from the EnumSet",99,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` if an `EnumSet` contains a given enum.",99,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over an `EnumSet`.",99,{"inputs":[{"name":"enumset"}],"output":{"name":"iter"}}],[11,"sub","","",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"bitor","","",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"bitand","","",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"bitxor","","",99,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"clone","","",100,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",100,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"from_iter","","",99,{"inputs":[{"name":"enumset"},{"name":"i"}],"output":{"name":"enumset"}}],[11,"extend","","",99,null],[11,"clone","core::fmt::rt::v1","",101,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",102,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",103,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",103,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",104,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",105,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"clone","collections::linked_list","",106,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",107,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"clone","","",108,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",109,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",109,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",109,null],[11,"iter","","Provides a forward iterator.",109,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",109,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",109,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",109,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",109,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",109,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",109,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",109,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",109,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",109,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",109,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",109,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",109,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",109,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",109,null],[11,"next","","",106,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"next_back","","",106,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",110,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"next_back","","",110,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",110,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",110,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",107,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"next_back","","",107,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",109,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",109,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",109,null],[11,"eq","","",109,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",109,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",109,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",109,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",109,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",109,null],[11,"start","core::ops","",111,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"end","","",112,{"inputs":[{"name":"rangeto"}],"output":{"name":"option"}}],[11,"start","","",113,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"end","","",113,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","collections::slice","",114,{"inputs":[{"name":"elementswaps"}],"output":{"name":"elementswaps"}}],[11,"new","","Creates an `ElementSwaps` iterator for a sequence of `length` elements.",114,{"inputs":[{"name":"elementswaps"},{"name":"usize"}],"output":{"name":"elementswaps"}}],[11,"borrow","collections::vec","",51,null],[11,"borrow_mut","","",51,null],[11,"clone","collections::slice","",115,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"clone","","",116,{"inputs":[{"name":"sizedirection"}],"output":{"name":"sizedirection"}}],[11,"next","","",114,{"inputs":[{"name":"elementswaps"}],"output":{"name":"option"}}],[11,"size_hint","","",114,null],[11,"next","","",117,{"inputs":[{"name":"permutations"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"clone","collections::str","",118,{"inputs":[{"name":"decompositiontype"}],"output":{"name":"decompositiontype"}}],[11,"clone","","",119,{"inputs":[{"name":"decompositions"}],"output":{"name":"decompositions"}}],[11,"next","","",119,{"inputs":[{"name":"decompositions"}],"output":{"name":"option"}}],[11,"size_hint","","",119,null],[11,"clone","","",120,{"inputs":[{"name":"recompositionstate"}],"output":{"name":"recompositionstate"}}],[11,"clone","","",121,{"inputs":[{"name":"recompositions"}],"output":{"name":"recompositions"}}],[11,"next","","",121,{"inputs":[{"name":"recompositions"}],"output":{"name":"option"}}],[11,"clone","","",122,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",122,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"borrow","collections::string","",123,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",124,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",124,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",125,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",126,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",125,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",125,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",125,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",127,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"eq","","",128,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",128,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"haystack","","",127,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",127,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",127,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",129,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",129,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",129,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",129,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",129,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",129,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",129,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",129,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",130,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",130,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",130,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",130,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",130,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",130,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",130,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",130,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",131,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",131,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",131,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",131,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",131,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",131,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",131,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",131,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"cmp","collections::string","",123,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",123,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",123,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",123,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",123,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",123,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"clone","","",123,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",132,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",123,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",123,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_str","","Creates a new string buffer from the given string.",123,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from_utf8","","Returns the vector as a string buffer, if possible, taking care not to\ncopy it.",123,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a vector of bytes to a new UTF-8 string.\nAny invalid UTF-8 sequences are replaced with U+FFFD REPLACEMENT CHARACTER.",123,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",123,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",123,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",123,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a new `String` without checking if\nit contains valid UTF-8. This is unsafe because it assumes that\nthe UTF-8-ness of the vector has already been validated.",123,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",123,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",123,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",123,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",123,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",123,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",123,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",123,null],[11,"push","","Adds the given character to the end of the string.",123,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",123,null],[11,"truncate","","Shortens a string to the specified length.",123,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",123,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",123,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",123,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",123,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",123,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",123,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",123,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",123,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",132,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",132,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",132,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",123,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",123,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",123,null],[11,"extend","","",123,null],[11,"eq","","",123,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",123,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",123,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",98,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",98,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",123,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",98,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",123,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",123,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",123,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",123,null],[11,"add","","",123,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",123,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",123,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",123,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",123,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",123,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref","","",134,{"inputs":[{"name":"derefstring"}],"output":{"name":"string"}}],[11,"eq","","",135,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",135,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",135,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"from_str","","",123,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"as_ref","","",123,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from","","",123,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",98,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",98,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",123,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",123,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",123,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",123,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",136,null],[11,"next","","",136,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",136,null],[11,"next_back","","",136,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"clone","collections::vec","",51,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",51,null],[11,"hash","","",51,null],[11,"index","","",51,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",51,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",51,null],[11,"index","","",51,null],[11,"index","","",51,null],[11,"index","","",51,null],[11,"index_mut","","",51,null],[11,"index_mut","","",51,null],[11,"index_mut","","",51,null],[11,"index_mut","","",51,null],[11,"deref","","",51,null],[11,"deref_mut","","",51,null],[11,"from_iter","","",51,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",51,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",51,null],[11,"eq","","",51,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","collections::borrow","",98,null],[11,"ne","","",98,null],[11,"eq","","",98,null],[11,"ne","","",98,null],[11,"eq","","",98,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"partial_cmp","","",51,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",51,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"add","","",51,null],[11,"drop","","",51,null],[11,"default","","",51,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",51,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",51,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",51,null],[11,"from","","",51,null],[11,"from","","",51,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",98,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",51,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"into_inner","","Drops all items that have not yet been moved and returns the empty vector.",137,{"inputs":[{"name":"intoiter"}],"output":{"name":"vec"}}],[11,"next","","",137,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",137,null],[11,"count","","",137,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",137,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",137,null],[11,"next","","",138,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",138,null],[11,"next_back","","",138,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",138,null],[11,"deref","","",139,{"inputs":[{"name":"derefvec"}],"output":{"name":"vec"}}],[11,"drop","","",139,null],[11,"drop","","",140,null],[11,"drop","","",141,null],[11,"clone","collections::vec_deque","",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",142,null],[11,"default","","",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",142,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",142,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",142,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",142,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",142,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`Ringbuf`. The collection may reserve more space to avoid frequent reallocations.",142,null],[11,"shrink_to_fit","","Shrinks the capacity of the ringbuf as much as possible.",142,null],[11,"truncate","","Shortens a ringbuf, dropping excess elements from the back.",142,null],[11,"iter","","Returns a front-to-back iterator.",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",142,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",142,null],[11,"len","","Returns the number of elements in the `VecDeque`.",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Creates a draining iterator that clears the `VecDeque` and iterates over\nthe removed items from start to end.",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",142,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",142,null],[11,"push_back","","Appends an element to the back of a buffer",142,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_back_remove","","Removes an element from anywhere in the ringbuf and returns it, replacing it with the last\nelement.",142,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","Removes an element from anywhere in the ringbuf and returns it, replacing it with the first\nelement.",142,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at position `i` within the ringbuf. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",142,null],[11,"remove","","Removes and returns the element at position `i` from the ringbuf.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `i` is out of bounds.",142,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",142,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",142,null],[11,"resize","","Modifies the ringbuf in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",142,null],[11,"clone","","",143,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",143,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",143,null],[11,"next_back","","",143,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"indexable","","",143,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",143,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next","","",144,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",144,null],[11,"next_back","","",144,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",145,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",145,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",145,null],[11,"next_back","","",145,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",146,null],[11,"next","","",146,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",146,null],[11,"next_back","","",146,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",142,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",142,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",142,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",142,null],[11,"index","","",142,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",142,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",142,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",142,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",142,null],[11,"fmt","","",142,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","collections::vec_map","",147,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"clone","","",147,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"clone_from","","",147,null],[11,"hash","","",147,null],[11,"new","","Creates an empty `VecMap`.",147,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"with_capacity","","Creates an empty `VecMap` with space for at least `capacity`\nelements before resizing.",147,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"vecmap"}}],[11,"capacity","","Returns the number of elements the `VecMap` can hold without\nreallocating.",147,{"inputs":[{"name":"vecmap"}],"output":{"name":"usize"}}],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long\nas all inserted keys are less than `len`.",147,null],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long as all inserted\nkeys are less than `len`.",147,null],[11,"keys","","Returns an iterator visiting all keys in ascending order of the keys.\nThe iterator's element type is `usize`.",147,{"inputs":[{"name":"vecmap"}],"output":{"name":"keys"}}],[11,"values","","Returns an iterator visiting all values in ascending order of the keys.\nThe iterator's element type is `&'r V`.",147,{"inputs":[{"name":"vecmap"}],"output":{"name":"values"}}],[11,"iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys.\nThe iterator's element type is `(usize, &'r V)`.",147,{"inputs":[{"name":"vecmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in ascending order of the keys,\nwith mutable references to the values.\nThe iterator's element type is `(usize, &'r mut V)`.",147,{"inputs":[{"name":"vecmap"}],"output":{"name":"itermut"}}],[11,"append","","Moves all elements from `other` into the map while overwriting existing keys.",147,null],[11,"split_off","","Splits the collection into two at the given key.",147,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"vecmap"}}],[11,"drain","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, emptying (but not consuming) the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`. Keeps the allocated memory for reuse.",147,{"inputs":[{"name":"vecmap"}],"output":{"name":"drain"}}],[11,"len","","Returns the number of elements in the map.",147,{"inputs":[{"name":"vecmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",147,{"inputs":[{"name":"vecmap"}],"output":{"name":"bool"}}],[11,"clear","","Clears the map, removing all key-value pairs.",147,null],[11,"get","","Returns a reference to the value corresponding to the key.",147,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",147,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",147,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",147,{"inputs":[{"name":"vecmap"},{"name":"usize"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",147,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",147,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"entry"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",148,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",148,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",148,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.",149,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",150,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",150,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",150,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,\nand returns the entry's old value.",150,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",150,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"eq","","",147,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",147,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"option"}}],[11,"cmp","","",147,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"ordering"}}],[11,"fmt","","",147,{"inputs":[{"name":"vecmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",147,{"inputs":[{"name":"vecmap"},{"name":"i"}],"output":{"name":"vecmap"}}],[11,"into_iter","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, consuming the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`.",147,{"inputs":[{"name":"vecmap"}],"output":{"name":"intoiter"}}],[11,"extend","","",147,null],[11,"index","","",147,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index","","",147,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",147,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",147,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"clone","","",151,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",151,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",151,null],[11,"next_back","","",151,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",152,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",152,null],[11,"next_back","","",152,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",153,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",154,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"next","","",155,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",155,null],[11,"next_back","","",155,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"next","","",153,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",153,null],[11,"next_back","","",153,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"next","","",154,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",154,null],[11,"next_back","","",154,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"next","","",156,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",156,null],[11,"next_back","","",156,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"eq","collections","",157,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"hash","","",157,null],[11,"fmt","","",157,{"inputs":[{"name":"bound"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",157,{"inputs":[{"name":"bound"}],"output":{"name":"bound"}}],[11,"new","alloc::boxed","Allocates memory on the heap and then moves `x` into it.",158,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",158,null],[11,"default","","",158,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",158,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",158,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",158,null],[11,"eq","","",158,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",158,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",158,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",158,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",158,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",158,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",158,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",158,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",158,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",158,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",158,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",158,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",158,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",158,null],[11,"next_back","","",158,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",158,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",158,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"deref","hyper::header","",50,{"inputs":[{"name":"accept"}],"output":{"name":"vec"}}],[11,"deref_mut","","",50,{"inputs":[{"name":"accept"}],"output":{"name":"vec"}}],[11,"header_name","","",50,{"inputs":[{"name":"accept"}],"output":{"name":"str"}}],[11,"parse_header","","",50,null],[11,"fmt_header","","",50,{"inputs":[{"name":"accept"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",50,{"inputs":[{"name":"accept"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",159,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"accesscontrolallowheaders"}],"output":{"name":"bool"}}],[11,"ne","","",159,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"accesscontrolallowheaders"}],"output":{"name":"bool"}}],[11,"fmt","","",159,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"accesscontrolallowheaders"}}],[11,"deref","","",159,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"vec"}}],[11,"deref_mut","","",159,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"vec"}}],[11,"header_name","","",159,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"str"}}],[11,"parse_header","","",159,null],[11,"fmt_header","","",159,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",159,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",160,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"accesscontrolallowmethods"}],"output":{"name":"bool"}}],[11,"ne","","",160,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"accesscontrolallowmethods"}],"output":{"name":"bool"}}],[11,"fmt","","",160,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",160,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"accesscontrolallowmethods"}}],[11,"deref","","",160,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"vec"}}],[11,"deref_mut","","",160,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"vec"}}],[11,"header_name","","",160,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"str"}}],[11,"parse_header","","",160,null],[11,"fmt_header","","",160,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",160,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"accesscontrolalloworigin"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"accesscontrolalloworigin"}],"output":{"name":"bool"}}],[11,"clone","","",40,{"inputs":[{"name":"accesscontrolalloworigin"}],"output":{"name":"accesscontrolalloworigin"}}],[11,"header_name","","",40,{"inputs":[{"name":"accesscontrolalloworigin"}],"output":{"name":"str"}}],[11,"parse_header","","",40,null],[11,"fmt_header","","",40,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",161,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"accesscontrolmaxage"}],"output":{"name":"bool"}}],[11,"ne","","",161,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"accesscontrolmaxage"}],"output":{"name":"bool"}}],[11,"fmt","","",161,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",161,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"accesscontrolmaxage"}}],[11,"deref","","",161,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"u32"}}],[11,"deref_mut","","",161,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"u32"}}],[11,"header_name","","",161,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"str"}}],[11,"parse_header","","",161,null],[11,"fmt_header","","",161,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",162,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"accesscontrolrequestheaders"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"accesscontrolrequestheaders"}],"output":{"name":"bool"}}],[11,"fmt","","",162,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",162,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"accesscontrolrequestheaders"}}],[11,"deref","","",162,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"vec"}}],[11,"deref_mut","","",162,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"vec"}}],[11,"header_name","","",162,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"str"}}],[11,"parse_header","","",162,null],[11,"fmt_header","","",162,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",163,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"accesscontrolrequestmethod"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"accesscontrolrequestmethod"}],"output":{"name":"bool"}}],[11,"fmt","","",163,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",163,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"accesscontrolrequestmethod"}}],[11,"deref","","",163,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"method"}}],[11,"deref_mut","","",163,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"method"}}],[11,"header_name","","",163,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"str"}}],[11,"parse_header","","",163,null],[11,"fmt_header","","",163,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",163,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",164,{"inputs":[{"name":"acceptcharset"},{"name":"acceptcharset"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"acceptcharset"},{"name":"acceptcharset"}],"output":{"name":"bool"}}],[11,"fmt","","",164,{"inputs":[{"name":"acceptcharset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",164,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"acceptcharset"}}],[11,"deref","","",164,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"vec"}}],[11,"deref_mut","","",164,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"vec"}}],[11,"header_name","","",164,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"str"}}],[11,"parse_header","","",164,null],[11,"fmt_header","","",164,{"inputs":[{"name":"acceptcharset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",164,{"inputs":[{"name":"acceptcharset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",165,{"inputs":[{"name":"acceptencoding"},{"name":"acceptencoding"}],"output":{"name":"bool"}}],[11,"ne","","",165,{"inputs":[{"name":"acceptencoding"},{"name":"acceptencoding"}],"output":{"name":"bool"}}],[11,"fmt","","",165,{"inputs":[{"name":"acceptencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",165,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"acceptencoding"}}],[11,"deref","","",165,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"vec"}}],[11,"deref_mut","","",165,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"vec"}}],[11,"header_name","","",165,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"str"}}],[11,"parse_header","","",165,null],[11,"fmt_header","","",165,{"inputs":[{"name":"acceptencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",165,{"inputs":[{"name":"acceptencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",166,{"inputs":[{"name":"acceptlanguage"},{"name":"acceptlanguage"}],"output":{"name":"bool"}}],[11,"ne","","",166,{"inputs":[{"name":"acceptlanguage"},{"name":"acceptlanguage"}],"output":{"name":"bool"}}],[11,"fmt","","",166,{"inputs":[{"name":"acceptlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",166,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"acceptlanguage"}}],[11,"deref","","",166,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"vec"}}],[11,"deref_mut","","",166,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"vec"}}],[11,"header_name","","",166,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"str"}}],[11,"parse_header","","",166,null],[11,"fmt_header","","",166,{"inputs":[{"name":"acceptlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",166,{"inputs":[{"name":"acceptlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",167,{"inputs":[{"name":"acceptranges"},{"name":"acceptranges"}],"output":{"name":"bool"}}],[11,"ne","","",167,{"inputs":[{"name":"acceptranges"},{"name":"acceptranges"}],"output":{"name":"bool"}}],[11,"fmt","","",167,{"inputs":[{"name":"acceptranges"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",167,{"inputs":[{"name":"acceptranges"}],"output":{"name":"acceptranges"}}],[11,"deref","","",167,{"inputs":[{"name":"acceptranges"}],"output":{"name":"vec"}}],[11,"deref_mut","","",167,{"inputs":[{"name":"acceptranges"}],"output":{"name":"vec"}}],[11,"header_name","","",167,{"inputs":[{"name":"acceptranges"}],"output":{"name":"str"}}],[11,"parse_header","","",167,null],[11,"fmt_header","","",167,{"inputs":[{"name":"acceptranges"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",167,{"inputs":[{"name":"acceptranges"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",168,{"inputs":[{"name":"allow"},{"name":"allow"}],"output":{"name":"bool"}}],[11,"ne","","",168,{"inputs":[{"name":"allow"},{"name":"allow"}],"output":{"name":"bool"}}],[11,"fmt","","",168,{"inputs":[{"name":"allow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",168,{"inputs":[{"name":"allow"}],"output":{"name":"allow"}}],[11,"deref","","",168,{"inputs":[{"name":"allow"}],"output":{"name":"vec"}}],[11,"deref_mut","","",168,{"inputs":[{"name":"allow"}],"output":{"name":"vec"}}],[11,"header_name","","",168,{"inputs":[{"name":"allow"}],"output":{"name":"str"}}],[11,"parse_header","","",168,null],[11,"fmt_header","","",168,{"inputs":[{"name":"allow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",168,{"inputs":[{"name":"allow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",169,{"inputs":[{"name":"authorization"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",169,{"inputs":[{"name":"authorization"},{"name":"authorization"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"authorization"},{"name":"authorization"}],"output":{"name":"bool"}}],[11,"clone","","",169,{"inputs":[{"name":"authorization"}],"output":{"name":"authorization"}}],[11,"deref","","",169,{"inputs":[{"name":"authorization"}],"output":{"name":"s"}}],[11,"deref_mut","","",169,{"inputs":[{"name":"authorization"}],"output":{"name":"s"}}],[11,"header_name","","",169,{"inputs":[{"name":"authorization"}],"output":{"name":"str"}}],[11,"parse_header","","",169,null],[11,"fmt_header","","",169,{"inputs":[{"name":"authorization"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"scheme","collections::string","",123,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"fmt_scheme","","",123,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header","",35,{"inputs":[{"name":"basic"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"basic"},{"name":"basic"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"basic"},{"name":"basic"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"basic"}],"output":{"name":"basic"}}],[11,"scheme","","",35,{"inputs":[{"name":"basic"}],"output":{"name":"option"}}],[11,"fmt_scheme","","",35,{"inputs":[{"name":"basic"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",35,{"inputs":[{"name":"basic"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",170,{"inputs":[{"name":"cachecontrol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",170,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"cachecontrol"}}],[11,"eq","","",170,{"inputs":[{"name":"cachecontrol"},{"name":"cachecontrol"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"cachecontrol"},{"name":"cachecontrol"}],"output":{"name":"bool"}}],[11,"deref","","",170,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"vec"}}],[11,"deref_mut","","",170,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"vec"}}],[11,"header_name","","",170,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"str"}}],[11,"parse_header","","",170,null],[11,"fmt_header","","",170,{"inputs":[{"name":"cachecontrol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"cachedirective"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"cachedirective"}],"output":{"name":"cachedirective"}}],[11,"eq","","",41,{"inputs":[{"name":"cachedirective"},{"name":"cachedirective"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"cachedirective"},{"name":"cachedirective"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"cachedirective"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",41,{"inputs":[{"name":"cachedirective"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"cookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",171,{"inputs":[{"name":"cookie"},{"name":"cookie"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"cookie"},{"name":"cookie"}],"output":{"name":"bool"}}],[11,"clone","","",171,{"inputs":[{"name":"cookie"}],"output":{"name":"cookie"}}],[11,"deref","","",171,{"inputs":[{"name":"cookie"}],"output":{"name":"vec"}}],[11,"deref_mut","","",171,{"inputs":[{"name":"cookie"}],"output":{"name":"vec"}}],[11,"header_name","","",171,{"inputs":[{"name":"cookie"}],"output":{"name":"str"}}],[11,"parse_header","","",171,null],[11,"fmt_header","","",171,{"inputs":[{"name":"cookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",171,null],[11,"from_cookie_jar","","Extracts all cookies from `CookieJar` and creates Cookie header.\nUseful for clients.",171,{"inputs":[{"name":"cookie"},{"name":"cookiejar"}],"output":{"name":"cookie"}}],[11,"fmt","","",42,{"inputs":[{"name":"connectionoption"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",42,{"inputs":[{"name":"connectionoption"},{"name":"connectionoption"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"connectionoption"},{"name":"connectionoption"}],"output":{"name":"bool"}}],[11,"clone","","",42,{"inputs":[{"name":"connectionoption"}],"output":{"name":"connectionoption"}}],[11,"from_str","","",42,{"inputs":[{"name":"connectionoption"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"connectionoption"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",172,{"inputs":[{"name":"connection"},{"name":"connection"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"connection"},{"name":"connection"}],"output":{"name":"bool"}}],[11,"fmt","","",172,{"inputs":[{"name":"connection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",172,{"inputs":[{"name":"connection"}],"output":{"name":"connection"}}],[11,"deref","","",172,{"inputs":[{"name":"connection"}],"output":{"name":"vec"}}],[11,"deref_mut","","",172,{"inputs":[{"name":"connection"}],"output":{"name":"vec"}}],[11,"header_name","","",172,{"inputs":[{"name":"connection"}],"output":{"name":"str"}}],[11,"parse_header","","",172,null],[11,"fmt_header","","",172,{"inputs":[{"name":"connection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",172,{"inputs":[{"name":"connection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",173,{"inputs":[{"name":"contentencoding"},{"name":"contentencoding"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"contentencoding"},{"name":"contentencoding"}],"output":{"name":"bool"}}],[11,"fmt","","",173,{"inputs":[{"name":"contentencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",173,{"inputs":[{"name":"contentencoding"}],"output":{"name":"contentencoding"}}],[11,"deref","","",173,{"inputs":[{"name":"contentencoding"}],"output":{"name":"vec"}}],[11,"deref_mut","","",173,{"inputs":[{"name":"contentencoding"}],"output":{"name":"vec"}}],[11,"header_name","","",173,{"inputs":[{"name":"contentencoding"}],"output":{"name":"str"}}],[11,"parse_header","","",173,null],[11,"fmt_header","","",173,{"inputs":[{"name":"contentencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"contentencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",174,{"inputs":[{"name":"contentlanguage"},{"name":"contentlanguage"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"contentlanguage"},{"name":"contentlanguage"}],"output":{"name":"bool"}}],[11,"fmt","","",174,{"inputs":[{"name":"contentlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",174,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"contentlanguage"}}],[11,"deref","","",174,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"vec"}}],[11,"deref_mut","","",174,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"vec"}}],[11,"header_name","","",174,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"str"}}],[11,"parse_header","","",174,null],[11,"fmt_header","","",174,{"inputs":[{"name":"contentlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",174,{"inputs":[{"name":"contentlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",175,{"inputs":[{"name":"contentlength"},{"name":"contentlength"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"contentlength"},{"name":"contentlength"}],"output":{"name":"bool"}}],[11,"fmt","","",175,{"inputs":[{"name":"contentlength"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",175,{"inputs":[{"name":"contentlength"}],"output":{"name":"contentlength"}}],[11,"deref","","",175,{"inputs":[{"name":"contentlength"}],"output":{"name":"u64"}}],[11,"deref_mut","","",175,{"inputs":[{"name":"contentlength"}],"output":{"name":"u64"}}],[11,"header_name","","",175,{"inputs":[{"name":"contentlength"}],"output":{"name":"str"}}],[11,"parse_header","","",175,null],[11,"fmt_header","","",175,{"inputs":[{"name":"contentlength"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"contentlength"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",176,{"inputs":[{"name":"contenttype"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"contenttype"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"fmt","","",176,{"inputs":[{"name":"contenttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",176,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"deref","","",176,{"inputs":[{"name":"contenttype"}],"output":{"name":"mime"}}],[11,"deref_mut","","",176,{"inputs":[{"name":"contenttype"}],"output":{"name":"mime"}}],[11,"header_name","","",176,{"inputs":[{"name":"contenttype"}],"output":{"name":"str"}}],[11,"parse_header","","",176,null],[11,"fmt_header","","",176,{"inputs":[{"name":"contenttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"contenttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",177,{"inputs":[{"name":"date"},{"name":"date"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"date"},{"name":"date"}],"output":{"name":"bool"}}],[11,"fmt","","",177,{"inputs":[{"name":"date"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",177,{"inputs":[{"name":"date"}],"output":{"name":"date"}}],[11,"deref","","",177,{"inputs":[{"name":"date"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",177,{"inputs":[{"name":"date"}],"output":{"name":"httpdate"}}],[11,"header_name","","",177,{"inputs":[{"name":"date"}],"output":{"name":"str"}}],[11,"parse_header","","",177,null],[11,"fmt_header","","",177,{"inputs":[{"name":"date"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"date"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",178,{"inputs":[{"name":"etag"},{"name":"etag"}],"output":{"name":"bool"}}],[11,"ne","","",178,{"inputs":[{"name":"etag"},{"name":"etag"}],"output":{"name":"bool"}}],[11,"fmt","","",178,{"inputs":[{"name":"etag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",178,{"inputs":[{"name":"etag"}],"output":{"name":"etag"}}],[11,"deref","","",178,{"inputs":[{"name":"etag"}],"output":{"name":"entitytag"}}],[11,"deref_mut","","",178,{"inputs":[{"name":"etag"}],"output":{"name":"entitytag"}}],[11,"header_name","","",178,{"inputs":[{"name":"etag"}],"output":{"name":"str"}}],[11,"parse_header","","",178,null],[11,"fmt_header","","",178,{"inputs":[{"name":"etag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",178,{"inputs":[{"name":"etag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"expect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"expect"},{"name":"expect"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"expect"},{"name":"expect"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"expect"}],"output":{"name":"expect"}}],[11,"header_name","","",43,{"inputs":[{"name":"expect"}],"output":{"name":"str"}}],[11,"parse_header","","",43,null],[11,"fmt_header","","",43,{"inputs":[{"name":"expect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",179,{"inputs":[{"name":"expires"},{"name":"expires"}],"output":{"name":"bool"}}],[11,"ne","","",179,{"inputs":[{"name":"expires"},{"name":"expires"}],"output":{"name":"bool"}}],[11,"fmt","","",179,{"inputs":[{"name":"expires"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",179,{"inputs":[{"name":"expires"}],"output":{"name":"expires"}}],[11,"deref","","",179,{"inputs":[{"name":"expires"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",179,{"inputs":[{"name":"expires"}],"output":{"name":"httpdate"}}],[11,"header_name","","",179,{"inputs":[{"name":"expires"}],"output":{"name":"str"}}],[11,"parse_header","","",179,null],[11,"fmt_header","","",179,{"inputs":[{"name":"expires"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",179,{"inputs":[{"name":"expires"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",180,{"inputs":[{"name":"from"},{"name":"from"}],"output":{"name":"bool"}}],[11,"ne","","",180,{"inputs":[{"name":"from"},{"name":"from"}],"output":{"name":"bool"}}],[11,"fmt","","",180,{"inputs":[{"name":"from"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",180,{"inputs":[{"name":"from"}],"output":{"name":"from"}}],[11,"deref","","",180,{"inputs":[{"name":"from"}],"output":{"name":"string"}}],[11,"deref_mut","","",180,{"inputs":[{"name":"from"}],"output":{"name":"string"}}],[11,"header_name","","",180,{"inputs":[{"name":"from"}],"output":{"name":"str"}}],[11,"parse_header","","",180,null],[11,"fmt_header","","",180,{"inputs":[{"name":"from"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",180,{"inputs":[{"name":"from"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"host"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"host"}],"output":{"name":"host"}}],[11,"header_name","","",36,{"inputs":[{"name":"host"}],"output":{"name":"str"}}],[11,"parse_header","","",36,null],[11,"fmt_header","","",36,{"inputs":[{"name":"host"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"ifmatch"},{"name":"ifmatch"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"ifmatch"},{"name":"ifmatch"}],"output":{"name":"bool"}}],[11,"fmt","","",44,{"inputs":[{"name":"ifmatch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"ifmatch"}],"output":{"name":"ifmatch"}}],[11,"header_name","","",44,{"inputs":[{"name":"ifmatch"}],"output":{"name":"str"}}],[11,"parse_header","","",44,null],[11,"fmt_header","","",44,{"inputs":[{"name":"ifmatch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"ifmatch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",181,{"inputs":[{"name":"ifmodifiedsince"},{"name":"ifmodifiedsince"}],"output":{"name":"bool"}}],[11,"ne","","",181,{"inputs":[{"name":"ifmodifiedsince"},{"name":"ifmodifiedsince"}],"output":{"name":"bool"}}],[11,"fmt","","",181,{"inputs":[{"name":"ifmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",181,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"ifmodifiedsince"}}],[11,"deref","","",181,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",181,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"header_name","","",181,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"str"}}],[11,"parse_header","","",181,null],[11,"fmt_header","","",181,{"inputs":[{"name":"ifmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",181,{"inputs":[{"name":"ifmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"ifnonematch"},{"name":"ifnonematch"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"ifnonematch"},{"name":"ifnonematch"}],"output":{"name":"bool"}}],[11,"fmt","","",45,{"inputs":[{"name":"ifnonematch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"ifnonematch"}],"output":{"name":"ifnonematch"}}],[11,"header_name","","",45,{"inputs":[{"name":"ifnonematch"}],"output":{"name":"str"}}],[11,"parse_header","","",45,null],[11,"fmt_header","","",45,{"inputs":[{"name":"ifnonematch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"ifnonematch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"ifrange"},{"name":"ifrange"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"ifrange"},{"name":"ifrange"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"ifrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"ifrange"}],"output":{"name":"ifrange"}}],[11,"header_name","","",46,{"inputs":[{"name":"ifrange"}],"output":{"name":"str"}}],[11,"parse_header","","",46,null],[11,"fmt_header","","",46,{"inputs":[{"name":"ifrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"ifrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",182,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"ifunmodifiedsince"}],"output":{"name":"bool"}}],[11,"ne","","",182,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"ifunmodifiedsince"}],"output":{"name":"bool"}}],[11,"fmt","","",182,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",182,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"ifunmodifiedsince"}}],[11,"deref","","",182,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",182,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"header_name","","",182,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"str"}}],[11,"parse_header","","",182,null],[11,"fmt_header","","",182,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",183,{"inputs":[{"name":"lastmodified"},{"name":"lastmodified"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"lastmodified"},{"name":"lastmodified"}],"output":{"name":"bool"}}],[11,"fmt","","",183,{"inputs":[{"name":"lastmodified"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",183,{"inputs":[{"name":"lastmodified"}],"output":{"name":"lastmodified"}}],[11,"deref","","",183,{"inputs":[{"name":"lastmodified"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",183,{"inputs":[{"name":"lastmodified"}],"output":{"name":"httpdate"}}],[11,"header_name","","",183,{"inputs":[{"name":"lastmodified"}],"output":{"name":"str"}}],[11,"parse_header","","",183,null],[11,"fmt_header","","",183,{"inputs":[{"name":"lastmodified"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",183,{"inputs":[{"name":"lastmodified"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",184,{"inputs":[{"name":"location"},{"name":"location"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"location"},{"name":"location"}],"output":{"name":"bool"}}],[11,"fmt","","",184,{"inputs":[{"name":"location"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",184,{"inputs":[{"name":"location"}],"output":{"name":"location"}}],[11,"deref","","",184,{"inputs":[{"name":"location"}],"output":{"name":"string"}}],[11,"deref_mut","","",184,{"inputs":[{"name":"location"}],"output":{"name":"string"}}],[11,"header_name","","",184,{"inputs":[{"name":"location"}],"output":{"name":"str"}}],[11,"parse_header","","",184,null],[11,"fmt_header","","",184,{"inputs":[{"name":"location"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"location"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"pragma"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"pragma"},{"name":"pragma"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"pragma"},{"name":"pragma"}],"output":{"name":"bool"}}],[11,"clone","","",47,{"inputs":[{"name":"pragma"}],"output":{"name":"pragma"}}],[11,"header_name","","",47,{"inputs":[{"name":"pragma"}],"output":{"name":"str"}}],[11,"parse_header","","",47,null],[11,"fmt_header","","",47,{"inputs":[{"name":"pragma"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",185,{"inputs":[{"name":"referer"},{"name":"referer"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"referer"},{"name":"referer"}],"output":{"name":"bool"}}],[11,"fmt","","",185,{"inputs":[{"name":"referer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",185,{"inputs":[{"name":"referer"}],"output":{"name":"referer"}}],[11,"deref","","",185,{"inputs":[{"name":"referer"}],"output":{"name":"string"}}],[11,"deref_mut","","",185,{"inputs":[{"name":"referer"}],"output":{"name":"string"}}],[11,"header_name","","",185,{"inputs":[{"name":"referer"}],"output":{"name":"str"}}],[11,"parse_header","","",185,null],[11,"fmt_header","","",185,{"inputs":[{"name":"referer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",185,{"inputs":[{"name":"referer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",186,{"inputs":[{"name":"server"},{"name":"server"}],"output":{"name":"bool"}}],[11,"ne","","",186,{"inputs":[{"name":"server"},{"name":"server"}],"output":{"name":"bool"}}],[11,"fmt","","",186,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",186,{"inputs":[{"name":"server"}],"output":{"name":"server"}}],[11,"deref","","",186,{"inputs":[{"name":"server"}],"output":{"name":"string"}}],[11,"deref_mut","","",186,{"inputs":[{"name":"server"}],"output":{"name":"string"}}],[11,"header_name","","",186,{"inputs":[{"name":"server"}],"output":{"name":"str"}}],[11,"parse_header","","",186,null],[11,"fmt_header","","",186,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",186,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",187,{"inputs":[{"name":"setcookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",187,{"inputs":[{"name":"setcookie"},{"name":"setcookie"}],"output":{"name":"bool"}}],[11,"ne","","",187,{"inputs":[{"name":"setcookie"},{"name":"setcookie"}],"output":{"name":"bool"}}],[11,"clone","","",187,{"inputs":[{"name":"setcookie"}],"output":{"name":"setcookie"}}],[11,"deref","","",187,{"inputs":[{"name":"setcookie"}],"output":{"name":"vec"}}],[11,"deref_mut","","",187,{"inputs":[{"name":"setcookie"}],"output":{"name":"vec"}}],[11,"header_name","","",187,{"inputs":[{"name":"setcookie"}],"output":{"name":"str"}}],[11,"parse_header","","",187,null],[11,"fmt_header","","",187,{"inputs":[{"name":"setcookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",187,{"inputs":[{"name":"setcookie"},{"name":"cookiejar"}],"output":{"name":"setcookie"}}],[11,"apply_to_cookie_jar","","Use this on client to apply changes from SetCookie to CookieJar.\nNote that this will `panic!` if `CookieJar` is not root.",187,{"inputs":[{"name":"setcookie"},{"name":"cookiejar"}],"output":null}],[11,"eq","","",188,{"inputs":[{"name":"transferencoding"},{"name":"transferencoding"}],"output":{"name":"bool"}}],[11,"ne","","",188,{"inputs":[{"name":"transferencoding"},{"name":"transferencoding"}],"output":{"name":"bool"}}],[11,"fmt","","",188,{"inputs":[{"name":"transferencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",188,{"inputs":[{"name":"transferencoding"}],"output":{"name":"transferencoding"}}],[11,"deref","","",188,{"inputs":[{"name":"transferencoding"}],"output":{"name":"vec"}}],[11,"deref_mut","","",188,{"inputs":[{"name":"transferencoding"}],"output":{"name":"vec"}}],[11,"header_name","","",188,{"inputs":[{"name":"transferencoding"}],"output":{"name":"str"}}],[11,"parse_header","","",188,null],[11,"fmt_header","","",188,{"inputs":[{"name":"transferencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"transferencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",189,{"inputs":[{"name":"upgrade"},{"name":"upgrade"}],"output":{"name":"bool"}}],[11,"ne","","",189,{"inputs":[{"name":"upgrade"},{"name":"upgrade"}],"output":{"name":"bool"}}],[11,"fmt","","",189,{"inputs":[{"name":"upgrade"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",189,{"inputs":[{"name":"upgrade"}],"output":{"name":"upgrade"}}],[11,"deref","","",189,{"inputs":[{"name":"upgrade"}],"output":{"name":"vec"}}],[11,"deref_mut","","",189,{"inputs":[{"name":"upgrade"}],"output":{"name":"vec"}}],[11,"header_name","","",189,{"inputs":[{"name":"upgrade"}],"output":{"name":"str"}}],[11,"parse_header","","",189,null],[11,"fmt_header","","",189,{"inputs":[{"name":"upgrade"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",189,{"inputs":[{"name":"upgrade"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",48,{"inputs":[{"name":"protocolname"},{"name":"protocolname"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"protocolname"},{"name":"protocolname"}],"output":{"name":"bool"}}],[11,"fmt","","",48,{"inputs":[{"name":"protocolname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"protocolname"}],"output":{"name":"protocolname"}}],[11,"from_str","","",48,{"inputs":[{"name":"protocolname"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"protocolname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"protocol"},{"name":"protocol"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"protocol"},{"name":"protocol"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"protocol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"protocol"}],"output":{"name":"protocol"}}],[11,"new","","Creates a new Protocol with the given name and version",37,{"inputs":[{"name":"protocol"},{"name":"protocolname"},{"name":"option"}],"output":{"name":"protocol"}}],[11,"from_str","","",37,{"inputs":[{"name":"protocol"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"protocol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",190,{"inputs":[{"name":"useragent"},{"name":"useragent"}],"output":{"name":"bool"}}],[11,"ne","","",190,{"inputs":[{"name":"useragent"},{"name":"useragent"}],"output":{"name":"bool"}}],[11,"fmt","","",190,{"inputs":[{"name":"useragent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",190,{"inputs":[{"name":"useragent"}],"output":{"name":"useragent"}}],[11,"deref","","",190,{"inputs":[{"name":"useragent"}],"output":{"name":"string"}}],[11,"deref_mut","","",190,{"inputs":[{"name":"useragent"}],"output":{"name":"string"}}],[11,"header_name","","",190,{"inputs":[{"name":"useragent"}],"output":{"name":"str"}}],[11,"parse_header","","",190,null],[11,"fmt_header","","",190,{"inputs":[{"name":"useragent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",190,{"inputs":[{"name":"useragent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",49,{"inputs":[{"name":"vary"},{"name":"vary"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"vary"},{"name":"vary"}],"output":{"name":"bool"}}],[11,"fmt","","",49,{"inputs":[{"name":"vary"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"vary"}],"output":{"name":"vary"}}],[11,"header_name","","",49,{"inputs":[{"name":"vary"}],"output":{"name":"str"}}],[11,"parse_header","","",49,null],[11,"fmt_header","","",49,{"inputs":[{"name":"vary"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"vary"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",191,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",191,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",191,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",191,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",191,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",191,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",191,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",191,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",191,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",191,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value or returns a default.",191,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value or computes a default.",191,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",191,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",191,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",191,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",191,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",191,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",191,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",191,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",191,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",191,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",191,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"fmt","core::num","",192,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",192,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",192,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",192,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",192,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",192,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",192,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",192,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",192,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",192,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",192,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",192,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",192,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",192,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"fmt","","",193,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",193,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",193,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",193,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",194,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",194,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",194,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",194,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",195,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",195,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",195,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",195,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",194,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"fmt","","",194,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",196,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",196,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",196,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",196,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",197,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",197,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",197,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",197,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",196,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",198,null],[11,"fmt","","",198,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",198,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",198,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",198,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",198,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",198,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",198,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",198,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",198,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",198,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",198,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",198,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",199,null],[11,"get","","Dereferences the content.",199,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",199,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",199,null],[11,"fmt","","",199,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","core::marker","",200,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",200,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"option"}}],[11,"lt","","",200,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"le","","",200,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"gt","","",200,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ge","","",200,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"eq","","",200,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ne","","",200,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"clone","","",200,{"inputs":[{"name":"nocopy"}],"output":{"name":"nocopy"}}],[11,"hash","","",201,null],[11,"eq","","",201,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",201,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",201,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",201,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",202,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",202,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",202,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",202,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",113,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",113,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",113,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",111,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",111,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",111,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",112,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",112,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",203,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",203,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",203,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",203,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",203,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",203,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",203,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","hyper::header::internals","",204,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",204,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",204,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",204,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",204,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",204,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",204,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",204,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",205,null],[11,"fmt","","",205,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",205,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",205,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",205,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",205,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::atomic","",206,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",207,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",208,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",209,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",210,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",206,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",206,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",206,null],[11,"swap","","Stores a value into the bool, returning the old value.",206,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the bool if the current value is the same as the expected value.",206,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",206,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",206,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",206,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",206,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",207,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",207,null],[11,"swap","","Stores a value into the isize, returning the old value.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the isize if the current value is the same as the expected value.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",208,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",208,null],[11,"swap","","Stores a value into the usize, returning the old value.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the usize if the current value is the same as the expected value.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",209,null],[11,"load","","Loads a value from the pointer.",209,null],[11,"store","","Stores a value into the pointer.",209,null],[11,"swap","","Stores a value into the pointer, returning the old value.",209,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the expected value.",209,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",211,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",211,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",211,null],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",211,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",211,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",211,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",211,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",212,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",212,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",212,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",212,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",213,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",213,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",213,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",213,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",213,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",213,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",213,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",213,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",213,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",214,null],[11,"clone","","",214,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",215,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"drop","","",216,null],[11,"deref","","",217,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",217,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",218,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",218,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",218,null],[11,"clone","core::char","",219,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",220,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",219,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"clone","","",221,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",222,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",221,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",223,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",223,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",223,null],[11,"next_back","","",223,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"indexable","","",223,{"inputs":[{"name":"rev"}],"output":{"name":"usize"}}],[11,"idx","","",223,{"inputs":[{"name":"rev"},{"name":"usize"}],"output":{"name":"option"}}],[11,"fmt","","",224,{"inputs":[{"name":"minmaxresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",224,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"ne","","",224,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"clone","","",224,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"minmaxresult"}}],[11,"into_option","","`into_option` creates an `Option` of type `(T,T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise variant `Some(x,y)` is returned where `x <= y`.\nIf `MinMaxResult` has variant `OneElement(x)`, performing this operation\nwill make one clone of `x`.",224,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"option"}}],[11,"clone","","",225,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",225,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",225,null],[11,"next_back","","",225,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"indexable","","",225,{"inputs":[{"name":"cloned"}],"output":{"name":"usize"}}],[11,"idx","","",225,{"inputs":[{"name":"cloned"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",226,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",226,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",226,null],[11,"indexable","","",226,{"inputs":[{"name":"cycle"}],"output":{"name":"usize"}}],[11,"idx","","",226,{"inputs":[{"name":"cycle"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",227,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",227,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",227,null],[11,"next_back","","",227,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"indexable","","",227,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"idx","","",227,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",228,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",228,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",228,null],[11,"next_back","","",228,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"indexable","","",228,{"inputs":[{"name":"zip"}],"output":{"name":"usize"}}],[11,"idx","","",228,{"inputs":[{"name":"zip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",229,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",229,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",229,null],[11,"next_back","","",229,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"indexable","","",229,{"inputs":[{"name":"map"}],"output":{"name":"usize"}}],[11,"idx","","",229,{"inputs":[{"name":"map"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",230,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",230,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",230,null],[11,"next_back","","",230,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",231,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",231,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",231,null],[11,"next_back","","",231,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",232,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","",232,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",232,null],[11,"next_back","","",232,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"indexable","","",232,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"idx","","",232,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",233,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",233,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",233,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",233,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",233,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",234,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",234,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",234,null],[11,"clone","","",235,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",235,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",235,null],[11,"clone","","",236,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",236,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",236,null],[11,"indexable","","",236,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"idx","","",236,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",237,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",237,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"size_hint","","",237,null],[11,"indexable","","",237,{"inputs":[{"name":"take"}],"output":{"name":"usize"}}],[11,"idx","","",237,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",238,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",238,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",238,null],[11,"clone","","",239,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",239,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",239,null],[11,"next_back","","",239,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",240,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",240,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"size_hint","","",240,null],[11,"next_back","","",240,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"indexable","","",240,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"idx","","",240,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"reset_fuse","","Resets the `Fuse` such that the next call to `.next()` or\n`.next_back()` will call the underlying iterator again even if it\npreviously returned `None`.",240,null],[11,"clone","","",241,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",241,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",241,null],[11,"next_back","","",241,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"indexable","","",241,{"inputs":[{"name":"inspect"}],"output":{"name":"usize"}}],[11,"idx","","",241,{"inputs":[{"name":"inspect"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",242,{"inputs":[{"name":"unfold"}],"output":{"name":"unfold"}}],[11,"new","","Creates a new iterator with the specified closure as the \"iterator\nfunction\" and an initial state to eventually pass to the closure",242,{"inputs":[{"name":"unfold"},{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[11,"next","","",242,{"inputs":[{"name":"unfold"}],"output":{"name":"option"}}],[11,"size_hint","","",242,null],[11,"clone","","",243,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",111,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",113,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",243,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",243,null],[11,"clone","","",244,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",244,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",244,null],[11,"next_back","","",244,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",243,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",243,null],[11,"next","core::ops","",113,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",113,null],[11,"next_back","","",113,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",111,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",245,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",245,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",245,null],[11,"next_back","","",245,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"indexable","","",245,{"inputs":[{"name":"repeat"}],"output":{"name":"usize"}}],[11,"idx","","",245,{"inputs":[{"name":"repeat"},{"name":"usize"}],"output":{"name":"option"}}],[11,"hash","core::option","",191,null],[11,"fmt","","",191,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",191,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",191,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",191,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",191,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",246,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",246,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",246,null],[11,"next_back","","",246,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",247,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",247,null],[11,"next_back","","",247,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",247,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",248,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",248,null],[11,"next_back","","",248,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",249,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",249,null],[11,"next_back","","",249,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",191,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",250,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",251,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",252,null],[11,"fmt","","",252,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",252,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",252,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",252,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",252,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",252,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",252,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",252,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",252,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",252,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",252,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",252,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",252,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",252,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",252,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",252,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",252,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",252,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",252,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",252,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",252,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",252,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",252,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",252,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",252,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",252,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",252,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",252,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",252,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",252,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",252,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",253,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",253,null],[11,"next_back","","",253,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",253,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",254,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",254,null],[11,"next_back","","",254,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",255,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",255,null],[11,"next_back","","",255,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",252,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",256,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",256,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",257,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",257,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",258,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",258,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",259,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",259,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",260,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",260,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",261,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",261,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",262,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",262,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",263,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",263,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",264,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",264,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",265,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",265,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",266,null],[11,"next","","",266,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",266,null],[11,"count","","",266,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",266,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",266,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",266,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",266,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"indexable","","",266,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",266,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",267,null],[11,"next","","",267,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",267,null],[11,"count","","",267,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",267,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",267,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",267,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",268,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",268,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",268,null],[11,"next_back","","",268,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",268,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",269,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",269,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",269,null],[11,"next_back","","",269,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",270,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",270,null],[11,"next","","",271,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",271,null],[11,"next","","",272,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",272,null],[11,"next","","",273,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",273,null],[11,"next","","",274,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",274,null],[11,"clone","","",275,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",275,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",275,null],[11,"next_back","","",275,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"indexable","","",275,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"idx","","",275,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",276,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",276,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",276,null],[11,"next_back","","",276,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"indexable","","",276,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"idx","","",276,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next","","",277,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",277,null],[11,"next_back","","",277,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"eq","core::str","",278,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",278,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",278,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",278,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",278,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",279,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",279,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",279,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",279,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",279,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",279,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",280,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",280,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",280,null],[11,"next_back","","",280,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"clone","","",281,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",281,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",281,null],[11,"next_back","","",281,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"clone","","",282,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"clone","","",283,{"inputs":[{"name":"bytesderef"}],"output":{"name":"bytesderef"}}],[11,"call","","",283,null],[11,"call_mut","","",283,null],[11,"call_once","","",283,null],[11,"next","","",282,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",282,null],[11,"next_back","","",282,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",282,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",284,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",285,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",285,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",286,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",286,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",285,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",286,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",287,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",287,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",288,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",288,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",287,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",288,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",289,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",290,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",290,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",291,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",291,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",292,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",293,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",293,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",294,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",294,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",293,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",294,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",295,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",296,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",296,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",297,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",297,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",296,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",297,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",298,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",298,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",298,null],[11,"next_back","","",298,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",299,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",300,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",300,null],[11,"call_mut","","",300,null],[11,"call_once","","",300,null],[11,"next","","",299,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",299,null],[11,"next_back","","",299,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",301,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"clone","","",302,{"inputs":[{"name":"oldsearcher"}],"output":{"name":"oldsearcher"}}],[11,"clone","","",303,{"inputs":[{"name":"oldmatchindices"}],"output":{"name":"oldmatchindices"}}],[11,"clone","","",304,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",305,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",305,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",305,null],[11,"finish","","",305,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",305,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",305,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",306,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",306,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",306,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",307,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",307,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",307,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",308,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",308,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",308,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",309,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",309,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",309,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",310,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",310,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",311,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",311,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",311,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",312,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",313,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",314,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Consumes the `DebugStruct`, finishing output and returning any error\nencountered.",314,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",315,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Consumes the `DebugTuple`, finishing output and returning any error\nencountered.",315,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"finish","","",316,null],[11,"entry","","Adds a new entry to the set output.",317,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",317,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the set output.",318,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",318,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",319,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"finish","","Consumes the `DebugMap`, finishing output and returning any error\nencountered.",319,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"fmt","core::fmt","",320,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",320,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",321,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",322,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",323,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",323,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",323,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",324,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",324,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",324,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",324,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",324,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",324,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",324,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",324,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",324,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",324,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",324,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",324,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",324,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",324,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"fmt","","",320,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",201,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",211,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",213,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",215,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",217,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header","",38,{"inputs":[{"name":"charset"},{"name":"charset"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"charset"},{"name":"charset"}],"output":{"name":"bool"}}],[11,"fmt","","",38,{"inputs":[{"name":"charset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"charset"}],"output":{"name":"charset"}}],[11,"fmt","","",38,{"inputs":[{"name":"charset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",38,{"inputs":[{"name":"charset"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"encoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"encoding"},{"name":"encoding"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"encoding"},{"name":"encoding"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"encoding"}],"output":{"name":"encoding"}}],[11,"fmt","","",39,{"inputs":[{"name":"encoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",39,{"inputs":[{"name":"encoding"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"entitytag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"entitytag"}],"output":{"name":"entitytag"}}],[11,"new","","Constructs a new EntityTag.\n# Panics\nIf the tag contains invalid characters.",32,{"inputs":[{"name":"entitytag"},{"name":"bool"},{"name":"string"}],"output":{"name":"entitytag"}}],[11,"tag","","Get the tag.",32,{"inputs":[{"name":"entitytag"}],"output":{"name":"str"}}],[11,"set_tag","","Set the tag.\n# Panics\nIf the tag contains invalid characters.",32,{"inputs":[{"name":"entitytag"},{"name":"string"}],"output":null}],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if both are not weak and their\nopaque-tags match character-by-character.",32,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if their\nopaque-tags match character-by-character, regardless of either or\nboth being tagged as \"weak\".",32,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",32,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",32,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"entitytag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",32,{"inputs":[{"name":"entitytag"},{"name":"str"}],"output":{"name":"result"}}],[11,"cmp","","",325,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",325,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"option"}}],[11,"lt","","",325,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"le","","",325,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"gt","","",325,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"ge","","",325,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"eq","","",325,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"ne","","",325,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"fmt","","",325,{"inputs":[{"name":"httpdate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",325,{"inputs":[{"name":"httpdate"}],"output":{"name":"httpdate"}}],[11,"from_str","","",325,{"inputs":[{"name":"httpdate"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",325,{"inputs":[{"name":"httpdate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"language"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"language"},{"name":"language"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"language"},{"name":"language"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"language"}],"output":{"name":"language"}}],[11,"from_str","","",33,{"inputs":[{"name":"language"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"language"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",326,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"option"}}],[11,"lt","","",326,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"le","","",326,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"gt","","",326,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"ge","","",326,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"eq","","",326,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"ne","","",326,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"cmp","","",326,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"ordering"}}],[11,"fmt","","",326,{"inputs":[{"name":"quality"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",326,{"inputs":[{"name":"quality"}],"output":{"name":"quality"}}],[11,"fmt","","",326,{"inputs":[{"name":"quality"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",326,{"inputs":[{"name":"quality"}],"output":{"name":"quality"}}],[11,"fmt","","",34,{"inputs":[{"name":"qualityitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"qualityitem"},{"name":"qualityitem"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"qualityitem"},{"name":"qualityitem"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"qualityitem"}],"output":{"name":"qualityitem"}}],[11,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",34,{"inputs":[{"name":"qualityitem"},{"name":"t"},{"name":"quality"}],"output":{"name":"qualityitem"}}],[11,"partial_cmp","","",34,{"inputs":[{"name":"qualityitem"},{"name":"qualityitem"}],"output":{"name":"option"}}],[11,"fmt","","",34,{"inputs":[{"name":"qualityitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",34,{"inputs":[{"name":"qualityitem"},{"name":"str"}],"output":{"name":"result"}}],[0,"parsing","","Utility functions for Header implementations.",null,null],[5,"from_one_raw_str","hyper::header::parsing","Reads a single raw string when parsing a header",null,null],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec.",null,null],[5,"from_one_comma_delimited","","Reads a comma-delimited raw string into a Vec.",null,null],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string.",null,null],[8,"Scheme","hyper::header","An Authorization scheme to be used in the header.",null,null],[10,"scheme","","An optional Scheme name.",327,{"inputs":[{"name":"scheme"}],"output":{"name":"option"}}],[10,"fmt_scheme","","Format the Scheme data into a header value.",327,{"inputs":[{"name":"scheme"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Header","","A trait for any object that will represent a header field and value.",null,null],[10,"header_name","","Returns the name of the header field this belongs to.",328,{"inputs":[{"name":"header"}],"output":{"name":"str"}}],[10,"parse_header","","Parse a header from a raw stream of bytes.",328,null],[8,"HeaderFormat","","A trait for any object that will represent a header field and value.",null,null],[10,"fmt_header","","Format a header to be output into a TcpStream.",329,{"inputs":[{"name":"headerformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","alloc::boxed","",158,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","hyper::header","",330,{"inputs":[{"name":"headers"}],"output":{"name":"headers"}}],[11,"new","","Creates a new, empty headers map.",330,{"inputs":[{"name":"headers"}],"output":{"name":"headers"}}],[11,"set","","Set a header field to the corresponding value.",330,{"inputs":[{"name":"headers"},{"name":"h"}],"output":null}],[11,"get_raw","","Access the raw value of a header.",330,{"inputs":[{"name":"headers"},{"name":"str"}],"output":{"name":"option"}}],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",330,{"inputs":[{"name":"headers"},{"name":"k"},{"name":"vec"}],"output":null}],[11,"remove_raw","","Remove a header set by set_raw",330,{"inputs":[{"name":"headers"},{"name":"str"}],"output":null}],[11,"get","","Get a reference to the header field's value, if it exists.",330,{"inputs":[{"name":"headers"}],"output":{"name":"option"}}],[11,"get_mut","","Get a mutable reference to the header field's value, if it exists.",330,{"inputs":[{"name":"headers"}],"output":{"name":"option"}}],[11,"has","","Returns a boolean of whether a certain header is in the map.",330,{"inputs":[{"name":"headers"}],"output":{"name":"bool"}}],[11,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",330,{"inputs":[{"name":"headers"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over the header fields.",330,{"inputs":[{"name":"headers"}],"output":{"name":"headersitems"}}],[11,"len","","Returns the number of headers in the map.",330,{"inputs":[{"name":"headers"}],"output":{"name":"usize"}}],[11,"clear","","Remove all headers from the map.",330,{"inputs":[{"name":"headers"}],"output":null}],[11,"fmt","","",330,{"inputs":[{"name":"headers"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",330,{"inputs":[{"name":"headers"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Item","","",null,null],[11,"next","","",331,{"inputs":[{"name":"headersitems"}],"output":{"name":"option"}}],[11,"is","","Check if a HeaderView is a certain Header.",332,{"inputs":[{"name":"headerview"}],"output":{"name":"bool"}}],[11,"name","","Get the Header name as a slice.",332,{"inputs":[{"name":"headerview"}],"output":{"name":"str"}}],[11,"value","","Cast the value to a certain Header type.",332,{"inputs":[{"name":"headerview"}],"output":{"name":"option"}}],[11,"value_string","","Get just the header value as a String.",332,{"inputs":[{"name":"headerview"}],"output":{"name":"string"}}],[11,"fmt","","",332,{"inputs":[{"name":"headerview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",332,{"inputs":[{"name":"headerview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"extend","","",330,{"inputs":[{"name":"headers"},{"name":"i"}],"output":null}],[11,"from_iter","","",330,{"inputs":[{"name":"headers"},{"name":"i"}],"output":{"name":"headers"}}],[11,"fmt","","",333,{"inputs":[{"name":"headerformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",333,{"inputs":[{"name":"headerformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"http","hyper","Pieces pertaining to the HTTP message protocol.",null,null],[3,"Incoming","hyper::http","An Incoming Message head. Includes request/status line, and headers.",null,null],[12,"version","","HTTP version of the message.",334,null],[12,"subject","","Subject (request line or status line) of Incoming message.",334,null],[12,"headers","","Headers of the Incoming message.",334,null],[3,"RawStatus","","The raw status code and reason-phrase.",null,null],[4,"HttpReader","","Readers to handle different Transfer-Encodings.",null,null],[13,"SizedReader","","A Reader used when a Content-Length header is passed with a positive integer.",335,null],[13,"ChunkedReader","","A Reader used when Transfer-Encoding is `chunked`.",335,null],[13,"EofReader","","A Reader used for responses that don't indicate a length or chunked.",335,null],[13,"EmptyReader","","A Reader used for messages that should never have a body.",335,null],[4,"HttpWriter","","Writers to handle different Transfer-Encodings.",null,null],[13,"ThroughWriter","","A no-op Writer, used initially before Transfer-Encoding is determined.",336,null],[13,"ChunkedWriter","","A Writer for when Transfer-Encoding includes `chunked`.",336,null],[13,"SizedWriter","","A Writer for when Content-Length is set.",336,null],[13,"EmptyWriter","","A writer that should not write any body.",336,null],[5,"parse_request","","Parses a request into an Incoming message head.",null,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[5,"parse_response","","Parses a response into an Incoming message head.",null,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[5,"should_keep_alive","","Checks if a connection should be kept alive.",null,{"inputs":[{"name":"httpversion"},{"name":"headers"}],"output":{"name":"bool"}}],[17,"SP","","",null,null],[17,"CR","","",null,null],[17,"LF","","",null,null],[17,"STAR","","",null,null],[17,"LINE_ENDING","","",null,null],[11,"into_inner","","Unwraps this HttpReader and returns the underlying Reader.",335,{"inputs":[{"name":"httpreader"}],"output":{"name":"r"}}],[11,"fmt","","",335,{"inputs":[{"name":"httpreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",335,null],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",336,{"inputs":[{"name":"httpwriter"}],"output":{"name":"w"}}],[11,"get_ref","","Access the inner Writer.",336,{"inputs":[{"name":"httpwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Access the inner Writer mutably.",336,{"inputs":[{"name":"httpwriter"}],"output":{"name":"w"}}],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",336,{"inputs":[{"name":"httpwriter"}],"output":{"name":"result"}}],[11,"write","","",336,null],[11,"flush","","",336,{"inputs":[{"name":"httpwriter"}],"output":{"name":"result"}}],[11,"fmt","","",336,{"inputs":[{"name":"httpwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",334,{"inputs":[{"name":"incoming"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",337,{"inputs":[{"name":"rawstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",337,{"inputs":[{"name":"rawstatus"},{"name":"rawstatus"}],"output":{"name":"bool"}}],[11,"ne","","",337,{"inputs":[{"name":"rawstatus"},{"name":"rawstatus"}],"output":{"name":"bool"}}],[11,"clone","","",337,{"inputs":[{"name":"rawstatus"}],"output":{"name":"rawstatus"}}],[0,"net","hyper","A collection of traits abstracting over Listeners and Streams.",null,null],[3,"NetworkConnections","hyper::net","An iterator wrapper over a NetworkAcceptor.",null,null],[3,"HttpConnector","","A connector that will produce HttpStreams.",null,null],[4,"Fresh","","The write-status indicating headers have not been written.",null,null],[4,"Streaming","","The write-status indicating headers have been written.",null,null],[4,"HttpListener","","A `NetworkListener` for `HttpStream`s.",null,null],[13,"Http","","Http variant.",338,null],[13,"Https","","Https variant. The two paths point to the certificate and key PEM files, in that order.",338,null],[4,"HttpStream","","A wrapper around a TcpStream.",null,null],[13,"Http","","A stream over the HTTP protocol.",339,null],[13,"Https","","A stream over the HTTP protocol, protected by SSL.",339,null],[6,"ContextVerifier","","A method that can set verification methods on an SSL context",null,null],[8,"NetworkListener","","An abstraction to listen for connections on a certain port.",null,null],[16,"Stream","hyper::net::NetworkListener","The stream produced for each connection.",null,null],[10,"accept","hyper::net","Listens on a socket.\nReturns an iterator of streams.",340,{"inputs":[{"name":"networklistener"}],"output":{"name":"result"}}],[10,"local_addr","","Get the address this Listener ended up listening on.",340,{"inputs":[{"name":"networklistener"}],"output":{"name":"result"}}],[11,"incoming","","Closes the Acceptor, so no more incoming connections will be handled.\nReturns an iterator over incoming connections.",340,{"inputs":[{"name":"networklistener"}],"output":{"name":"networkconnections"}}],[8,"NetworkStream","","An abstraction over streams that a Server can utilize.",null,null],[10,"peer_addr","","Get the remote address of the underlying connection.",341,{"inputs":[{"name":"networkstream"}],"output":{"name":"result"}}],[11,"close","","This will be called when Stream should no longer be kept alive.",341,{"inputs":[{"name":"networkstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[8,"NetworkConnector","","A connector creates a NetworkStream.",null,null],[16,"Stream","hyper::net::NetworkConnector","Type of Stream to create",null,null],[10,"connect","hyper::net","Connect to a remote address.",342,{"inputs":[{"name":"networkconnector"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[6,"Item","","",null,null],[11,"next","","",343,{"inputs":[{"name":"networkconnections"}],"output":{"name":"option"}}],[11,"from","alloc::boxed","",158,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"fmt","","",158,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","hyper","Is the underlying type in this trait object a T?",341,{"inputs":[{"name":"networkstream"}],"output":{"name":"bool"}}],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",341,{"inputs":[{"name":"networkstream"}],"output":{"name":"option"}}],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",341,{"inputs":[{"name":"networkstream"}],"output":{"name":"option"}}],[11,"downcast","","If the underlying type is T, extract it.",341,{"inputs":[{"name":"networkstream"}],"output":{"name":"result"}}],[11,"clone","hyper::net","",338,{"inputs":[{"name":"httplistener"}],"output":{"name":"httplistener"}}],[11,"http","","Start listening to an address over HTTP.",338,{"inputs":[{"name":"httplistener"},{"name":"to"}],"output":{"name":"result"}}],[11,"https","","Start listening to an address over HTTPS.",338,{"inputs":[{"name":"httplistener"},{"name":"to"},{"name":"path"},{"name":"path"}],"output":{"name":"result"}}],[11,"https_with_context","","Start listening to an address of HTTPS using the given SslContext",338,{"inputs":[{"name":"httplistener"},{"name":"to"},{"name":"sslcontext"}],"output":{"name":"result"}}],[6,"Stream","","",null,null],[11,"accept","","",338,{"inputs":[{"name":"httplistener"}],"output":{"name":"result"}}],[11,"local_addr","","",338,{"inputs":[{"name":"httplistener"}],"output":{"name":"result"}}],[11,"clone","","",339,{"inputs":[{"name":"httpstream"}],"output":{"name":"httpstream"}}],[11,"fmt","","",339,{"inputs":[{"name":"httpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",339,null],[11,"write","","",339,null],[11,"flush","","",339,{"inputs":[{"name":"httpstream"}],"output":{"name":"result"}}],[11,"peer_addr","","",339,{"inputs":[{"name":"httpstream"}],"output":{"name":"result"}}],[11,"close","","",339,{"inputs":[{"name":"httpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[6,"Stream","","",null,null],[11,"connect","","",344,{"inputs":[{"name":"httpconnector"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[0,"server","hyper","HTTP Server",null,null],[3,"Server","hyper::server","A server can listen on a TCP socket.",null,null],[3,"Listening","","A listening server, which can later be closed.",null,null],[12,"socket","","The socket addresses that the server is bound to.",345,null],[0,"request","","Server Requests",null,null],[3,"Request","hyper::server::request","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`.",null,null],[12,"remote_addr","","The IP address of the remote connection.",346,null],[12,"method","","The `Method`, such as `Get`, `Post`, etc.",346,null],[12,"headers","","The headers of the incoming request.",346,null],[12,"uri","","The target request-uri for this request.",346,null],[12,"version","","The version of HTTP for this request.",346,null],[11,"new","","Create a new Request, reading the StartLine and Headers so they are\nimmediately useful.",346,{"inputs":[{"name":"request"},{"name":"bufreader"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",346,null],[11,"read","","",346,null],[0,"response","hyper::server","Server Responses",null,null],[3,"Response","hyper::server::response","The outgoing half for a Tcp connection, created by a `Server` and given to a `Handler`.",null,null],[12,"version","","The HTTP version of this response.",347,null],[11,"fmt","","",347,{"inputs":[{"name":"response"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"status","","The status of this response.",347,{"inputs":[{"name":"response"}],"output":{"name":"statuscode"}}],[11,"headers","","The headers of this response.",347,{"inputs":[{"name":"response"}],"output":{"name":"headers"}}],[11,"construct","","Construct a Response from its constituent parts.",347,{"inputs":[{"name":"response"},{"name":"httpversion"},{"name":"httpwriter"},{"name":"statuscode"},{"name":"headers"}],"output":{"name":"response"}}],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",347,null],[11,"new","","Creates a new Response that can be used to write to a network stream.",347,{"inputs":[{"name":"response"},{"name":"write"}],"output":{"name":"response"}}],[11,"send","","Writes the body and ends the response.",347,null],[11,"start","","Consume this Response<Fresh>, writing the Headers and Status and creating a Response<Streaming>",347,{"inputs":[{"name":"response"}],"output":{"name":"result"}}],[11,"status_mut","","Get a mutable reference to the status.",347,{"inputs":[{"name":"response"}],"output":{"name":"statuscode"}}],[11,"headers_mut","","Get a mutable reference to the Headers.",347,{"inputs":[{"name":"response"}],"output":{"name":"headers"}}],[11,"end","","Flushes all writing of a response to the client.",347,{"inputs":[{"name":"response"}],"output":{"name":"result"}}],[11,"write","","",347,null],[11,"flush","","",347,{"inputs":[{"name":"response"}],"output":{"name":"result"}}],[11,"drop","","",347,{"inputs":[{"name":"response"}],"output":null}],[8,"Handler","hyper::server","A handler that can handle incoming requests for a server.",null,null],[10,"handle","","Receives a `Request`/`Response` pair, and should perform some action on them.",348,{"inputs":[{"name":"handler"},{"name":"request"},{"name":"response"}],"output":null}],[11,"check_continue","","Called when a Request includes a `Expect: 100-continue` header.",348,null],[11,"fmt","","",349,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new server with the provided handler.",349,{"inputs":[{"name":"server"},{"name":"h"}],"output":{"name":"server"}}],[11,"http","","Creates a new server that will handle `HttpStream`s.",349,{"inputs":[{"name":"server"},{"name":"h"}],"output":{"name":"server"}}],[11,"https","","Creates a new server that will handler `HttpStreams`s using a TLS connection.",349,{"inputs":[{"name":"server"},{"name":"h"},{"name":"path"},{"name":"path"}],"output":{"name":"server"}}],[11,"https_with_context","","Creates a new server that will handler `HttpStreams`s using a TLS connection defined by an SslContext.",349,{"inputs":[{"name":"server"},{"name":"h"},{"name":"sslcontext"}],"output":{"name":"server"}}],[11,"listen_threads","","Binds to a socket, and starts handling connections using a task pool.",349,{"inputs":[{"name":"server"},{"name":"t"},{"name":"usize"}],"output":{"name":"result"}}],[11,"listen","","Binds to a socket and starts handling connections.",349,{"inputs":[{"name":"server"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_listener","","Creates a new server that will handle `HttpStream`s.",349,{"inputs":[{"name":"server"},{"name":"l"},{"name":"usize"}],"output":{"name":"result"}}],[11,"fmt","","",345,{"inputs":[{"name":"listening"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",345,{"inputs":[{"name":"listening"}],"output":null}],[11,"close","","Stop the server from listening to its socket address.",345,{"inputs":[{"name":"listening"}],"output":{"name":"result"}}],[0,"status","hyper","HTTP status codes",null,null],[4,"StatusCode","hyper::status","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[13,"Continue","","100 Continue\n[[RFC7231, Section 6.2.1](https://tools.ietf.org/html/rfc7231#section-6.2.1)]",350,null],[13,"SwitchingProtocols","","101 Switching Protocols\n[[RFC7231, Section 6.2.2](https://tools.ietf.org/html/rfc7231#section-6.2.2)]",350,null],[13,"Processing","","102 Processing\n[[RFC2518](https://tools.ietf.org/html/rfc2518)]",350,null],[13,"Ok","","200 OK\n[[RFC7231, Section 6.3.1](https://tools.ietf.org/html/rfc7231#section-6.3.1)]",350,null],[13,"Created","","201 Created\n[[RFC7231, Section 6.3.2](https://tools.ietf.org/html/rfc7231#section-6.3.2)]",350,null],[13,"Accepted","","202 Accepted\n[[RFC7231, Section 6.3.3](https://tools.ietf.org/html/rfc7231#section-6.3.3)]",350,null],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information\n[[RFC7231, Section 6.3.4](https://tools.ietf.org/html/rfc7231#section-6.3.4)]",350,null],[13,"NoContent","","204 No Content\n[[RFC7231, Section 6.3.5](https://tools.ietf.org/html/rfc7231#section-6.3.5)]",350,null],[13,"ResetContent","","205 Reset Content\n[[RFC7231, Section 6.3.6](https://tools.ietf.org/html/rfc7231#section-6.3.6)]",350,null],[13,"PartialContent","","206 Partial Content\n[[RFC7233, Section 4.1](https://tools.ietf.org/html/rfc7233#section-4.1)]",350,null],[13,"MultiStatus","","207 Multi-Status\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",350,null],[13,"AlreadyReported","","208 Already Reported\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",350,null],[13,"ImUsed","","226 IM Used\n[[RFC3229](https://tools.ietf.org/html/rfc3229)]",350,null],[13,"MultipleChoices","","300 Multiple Choices\n[[RFC7231, Section 6.4.1](https://tools.ietf.org/html/rfc7231#section-6.4.1)]",350,null],[13,"MovedPermanently","","301 Moved Permanently\n[[RFC7231, Section 6.4.2](https://tools.ietf.org/html/rfc7231#section-6.4.2)]",350,null],[13,"Found","","302 Found\n[[RFC7231, Section 6.4.3](https://tools.ietf.org/html/rfc7231#section-6.4.3)]",350,null],[13,"SeeOther","","303 See Other\n[[RFC7231, Section 6.4.4](https://tools.ietf.org/html/rfc7231#section-6.4.4)]",350,null],[13,"NotModified","","304 Not Modified\n[[RFC7232, Section 4.1](https://tools.ietf.org/html/rfc7232#section-4.1)]",350,null],[13,"UseProxy","","305 Use Proxy\n[[RFC7231, Section 6.4.5](https://tools.ietf.org/html/rfc7231#section-6.4.5)]",350,null],[13,"TemporaryRedirect","","307 Temporary Redirect\n[[RFC7231, Section 6.4.7](https://tools.ietf.org/html/rfc7231#section-6.4.7)]",350,null],[13,"PermanentRedirect","","308 Permanent Redirect\n[[RFC7238](https://tools.ietf.org/html/rfc7238)]",350,null],[13,"BadRequest","","400 Bad Request\n[[RFC7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)]",350,null],[13,"Unauthorized","","401 Unauthorized\n[[RFC7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1)]",350,null],[13,"PaymentRequired","","402 Payment Required\n[[RFC7231, Section 6.5.2](https://tools.ietf.org/html/rfc7231#section-6.5.2)]",350,null],[13,"Forbidden","","403 Forbidden\n[[RFC7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3)]",350,null],[13,"NotFound","","404 Not Found\n[[RFC7231, Section 6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)]",350,null],[13,"MethodNotAllowed","","405 Method Not Allowed\n[[RFC7231, Section 6.5.5](https://tools.ietf.org/html/rfc7231#section-6.5.5)]",350,null],[13,"NotAcceptable","","406 Not Acceptable\n[[RFC7231, Section 6.5.6](https://tools.ietf.org/html/rfc7231#section-6.5.6)]",350,null],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required\n[[RFC7235, Section 3.2](https://tools.ietf.org/html/rfc7235#section-3.2)]",350,null],[13,"RequestTimeout","","408 Request Timeout\n[[RFC7231, Section 6.5.7](https://tools.ietf.org/html/rfc7231#section-6.5.7)]",350,null],[13,"Conflict","","409 Conflict\n[[RFC7231, Section 6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)]",350,null],[13,"Gone","","410 Gone\n[[RFC7231, Section 6.5.9](https://tools.ietf.org/html/rfc7231#section-6.5.9)]",350,null],[13,"LengthRequired","","411 Length Required\n[[RFC7231, Section 6.5.10](https://tools.ietf.org/html/rfc7231#section-6.5.10)]",350,null],[13,"PreconditionFailed","","412 Precondition Failed\n[[RFC7232, Section 4.2](https://tools.ietf.org/html/rfc7232#section-4.2)]",350,null],[13,"PayloadTooLarge","","413 Payload Too Large\n[[RFC7231, Section 6.5.11](https://tools.ietf.org/html/rfc7231#section-6.5.11)]",350,null],[13,"UriTooLong","","414 URI Too Long\n[[RFC7231, Section 6.5.12](https://tools.ietf.org/html/rfc7231#section-6.5.12)]",350,null],[13,"UnsupportedMediaType","","415 Unsupported Media Type\n[[RFC7231, Section 6.5.13](https://tools.ietf.org/html/rfc7231#section-6.5.13)]",350,null],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable\n[[RFC7233, Section 4.4](https://tools.ietf.org/html/rfc7233#section-4.4)]",350,null],[13,"ExpectationFailed","","417 Expectation Failed\n[[RFC7231, Section 6.5.14](https://tools.ietf.org/html/rfc7231#section-6.5.14)]",350,null],[13,"ImATeapot","","418 I'm a teapot\n[curiously, not registered by IANA, but [RFC2324](https://tools.ietf.org/html/rfc2324)]",350,null],[13,"UnprocessableEntity","","422 Unprocessable Entity\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",350,null],[13,"Locked","","423 Locked\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",350,null],[13,"FailedDependency","","424 Failed Dependency\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",350,null],[13,"UpgradeRequired","","426 Upgrade Required\n[[RFC7231, Section 6.5.15](https://tools.ietf.org/html/rfc7231#section-6.5.15)]",350,null],[13,"PreconditionRequired","","428 Precondition Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",350,null],[13,"TooManyRequests","","429 Too Many Requests\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",350,null],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",350,null],[13,"InternalServerError","","500 Internal Server Error\n[[RFC7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)]",350,null],[13,"NotImplemented","","501 Not Implemented\n[[RFC7231, Section 6.6.2](https://tools.ietf.org/html/rfc7231#section-6.6.2)]",350,null],[13,"BadGateway","","502 Bad Gateway\n[[RFC7231, Section 6.6.3](https://tools.ietf.org/html/rfc7231#section-6.6.3)]",350,null],[13,"ServiceUnavailable","","503 Service Unavailable\n[[RFC7231, Section 6.6.4](https://tools.ietf.org/html/rfc7231#section-6.6.4)]",350,null],[13,"GatewayTimeout","","504 Gateway Timeout\n[[RFC7231, Section 6.6.5](https://tools.ietf.org/html/rfc7231#section-6.6.5)]",350,null],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported\n[[RFC7231, Section 6.6.6](https://tools.ietf.org/html/rfc7231#section-6.6.6)]",350,null],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates\n[[RFC2295](https://tools.ietf.org/html/rfc2295)]",350,null],[13,"InsufficientStorage","","507 Insufficient Storage\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",350,null],[13,"LoopDetected","","508 Loop Detected\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",350,null],[13,"NotExtended","","510 Not Extended\n[[RFC2774](https://tools.ietf.org/html/rfc2774)]",350,null],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",350,null],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",350,null],[4,"StatusClass","","The class of an HTTP `status-code`.",null,null],[13,"Informational","","1xx (Informational): The request was received, continuing process",351,null],[13,"Success","","2xx (Success): The request was successfully received, understood, and accepted",351,null],[13,"Redirection","","3xx (Redirection): Further action needs to be taken in order to complete the request",351,null],[13,"ClientError","","4xx (Client Error): The request contains bad syntax or cannot be fulfilled",351,null],[13,"ServerError","","5xx (Server Error): The server failed to fulfill an apparently valid request",351,null],[13,"NoClass","","A status code lower than 100 or higher than 599. These codes do no belong to any class.",351,null],[11,"fmt","","",350,{"inputs":[{"name":"statuscode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",350,{"inputs":[{"name":"statuscode"}],"output":{"name":"option"}}],[11,"class","","Determine the class of a status code, based on its first digit.",350,{"inputs":[{"name":"statuscode"}],"output":{"name":"statusclass"}}],[11,"is_informational","","Check if class is Informational.",350,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_success","","Check if class is Success.",350,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_redirection","","Check if class is Redirection.",350,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_client_error","","Check if class is ClientError.",350,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_server_error","","Check if class is ServerError.",350,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_strange_status","","Check if class is NoClass",350,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"fmt","","",350,{"inputs":[{"name":"statuscode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",350,{"inputs":[{"name":"statuscode"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"clone","","",350,{"inputs":[{"name":"statuscode"}],"output":{"name":"statuscode"}}],[11,"partial_cmp","","",350,{"inputs":[{"name":"statuscode"},{"name":"statuscode"}],"output":{"name":"option"}}],[11,"cmp","","",350,{"inputs":[{"name":"statuscode"},{"name":"statuscode"}],"output":{"name":"ordering"}}],[11,"cmp","","",351,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",351,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"option"}}],[11,"lt","","",351,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"le","","",351,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"gt","","",351,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"ge","","",351,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"eq","","",351,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"ne","","",351,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"clone","","",351,{"inputs":[{"name":"statusclass"}],"output":{"name":"statusclass"}}],[11,"fmt","","",351,{"inputs":[{"name":"statusclass"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default_code","","Get the default status code for the class.",351,{"inputs":[{"name":"statusclass"}],"output":{"name":"statuscode"}}],[0,"uri","hyper","HTTP RequestUris",null,null],[4,"RequestUri","hyper::uri","The Request-URI of a Request's StartLine.",null,null],[13,"AbsolutePath","","The most common request target, an absolute path and optional query.",352,null],[13,"AbsoluteUri","","An absolute URI. Used in conjunction with proxies.",352,null],[13,"Authority","","The authority form is only for use with `CONNECT` requests.",352,null],[13,"Star","","The star is used to target the entire server, instead of a specific resource.",352,null],[11,"clone","","",352,{"inputs":[{"name":"requesturi"}],"output":{"name":"requesturi"}}],[11,"eq","","",352,{"inputs":[{"name":"requesturi"},{"name":"requesturi"}],"output":{"name":"bool"}}],[11,"ne","","",352,{"inputs":[{"name":"requesturi"},{"name":"requesturi"}],"output":{"name":"bool"}}],[11,"fmt","","",352,{"inputs":[{"name":"requesturi"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",352,{"inputs":[{"name":"requesturi"},{"name":"str"}],"output":{"name":"result"}}],[0,"version","hyper","HTTP Versions enum",null,null],[4,"HttpVersion","hyper::version","Represents a version of the HTTP spec.",null,null],[13,"Http09","","`HTTP/0.9`",353,null],[13,"Http10","","`HTTP/1.0`",353,null],[13,"Http11","","`HTTP/1.1`",353,null],[13,"Http20","","`HTTP/2.0`",353,null],[11,"fmt","","",353,{"inputs":[{"name":"httpversion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",353,null],[11,"cmp","","",353,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"ordering"}}],[11,"clone","","",353,{"inputs":[{"name":"httpversion"}],"output":{"name":"httpversion"}}],[11,"partial_cmp","","",353,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"option"}}],[11,"lt","","",353,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"le","","",353,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"gt","","",353,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"ge","","",353,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"eq","","",353,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"ne","","",353,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"fmt","","",353,{"inputs":[{"name":"httpversion"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"bench_header!","hyper","",null,null],[14,"deref!","","",null,null],[14,"tm!","","",null,null],[14,"test_header!","","",null,null],[14,"header!","","",null,null]],"paths":[[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[3,"Url"],[3,"EncodingOverride"],[4,"Host"],[3,"Ipv6Address"],[4,"ParseError"],[4,"Context"],[3,"CharRanges"],[3,"EncodeSet"],[3,"PathFormatter"],[3,"UserInfoFormatter"],[3,"UrlNoFragmentFormatter"],[4,"SchemeData"],[3,"RelativeSchemeData"],[3,"UrlParser"],[4,"SchemeType"],[4,"Body"],[4,"RedirectPolicy"],[3,"Config"],[3,"Pool"],[3,"PooledStream"],[3,"Request"],[3,"Response"],[8,"IntoUrl"],[3,"Client"],[3,"RequestBuilder"],[4,"Error"],[4,"Method"],[3,"EntityTag"],[3,"Language"],[3,"QualityItem"],[3,"Basic"],[3,"Host"],[3,"Protocol"],[4,"Charset"],[4,"Encoding"],[4,"AccessControlAllowOrigin"],[4,"CacheDirective"],[4,"ConnectionOption"],[4,"Expect"],[4,"IfMatch"],[4,"IfNoneMatch"],[4,"IfRange"],[4,"Pragma"],[4,"ProtocolName"],[4,"Vary"],[3,"Accept"],[3,"Vec"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"BitVec"],[3,"Iter"],[3,"BitSet"],[3,"SetIter"],[3,"TwoBitPositions"],[3,"Union"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"RawItems"],[3,"Node"],[3,"Handle"],[3,"ElemsAndEdges"],[3,"MoveTraversalImpl"],[3,"AbsTraversal"],[3,"NodeSlice"],[3,"MutNodeSlice"],[3,"BTreeMap"],[3,"AbsIter"],[3,"IdRef"],[3,"PartialSearchStack"],[3,"Pusher"],[3,"SearchStack"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Range"],[3,"RangeMut"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"BTreeSet"],[3,"Iter"],[3,"IntoIter"],[3,"Range"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[3,"Rc"],[3,"Arc"],[4,"Cow"],[3,"EnumSet"],[3,"Iter"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"RangeFrom"],[3,"RangeTo"],[3,"Range"],[3,"ElementSwaps"],[4,"Direction"],[3,"SizeDirection"],[3,"Permutations"],[4,"DecompositionType"],[3,"Decompositions"],[4,"RecompositionState"],[3,"Recompositions"],[3,"Utf16Units"],[3,"String"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"StrSearcher"],[4,"State"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[3,"DerefString"],[3,"ParseError"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"DerefVec"],[3,"PartialVecNonZeroSized"],[3,"PartialVecZeroSized"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"VecMap"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"IntoIter"],[4,"Bound"],[3,"Box"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"AcceptRanges"],[3,"Allow"],[3,"Authorization"],[3,"CacheControl"],[3,"Cookie"],[3,"Connection"],[3,"ContentEncoding"],[3,"ContentLanguage"],[3,"ContentLength"],[3,"ContentType"],[3,"Date"],[3,"ETag"],[3,"Expires"],[3,"From"],[3,"IfModifiedSince"],[3,"IfUnmodifiedSince"],[3,"LastModified"],[3,"Location"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"TransferEncoding"],[3,"Upgrade"],[3,"UserAgent"],[4,"Option"],[3,"Wrapping"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"NoCopy"],[3,"PhantomData"],[3,"RangeFull"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"BorrowRefMut"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[4,"MinMaxResult"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Unfold"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"BytesDeref"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"TwoWaySearcher"],[4,"OldSearcher"],[3,"OldMatchIndices"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"HttpDate"],[3,"Quality"],[8,"Scheme"],[8,"Header"],[8,"HeaderFormat"],[3,"Headers"],[3,"HeadersItems"],[3,"HeaderView"],[3,"HeaderFormatter"],[3,"Incoming"],[4,"HttpReader"],[4,"HttpWriter"],[3,"RawStatus"],[4,"HttpListener"],[4,"HttpStream"],[8,"NetworkListener"],[8,"NetworkStream"],[8,"NetworkConnector"],[3,"NetworkConnections"],[3,"HttpConnector"],[3,"Listening"],[3,"Request"],[3,"Response"],[8,"Handler"],[3,"Server"],[4,"StatusCode"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"]]};
searchIndex['cookie'] = {"items":[[0,"","cookie","",null,null],[3,"CookieJar","","A jar of cookies for managing a session",null,null],[3,"Cookie","","",null,null],[12,"name","","",0,null],[12,"value","","",0,null],[12,"expires","","",0,null],[12,"max_age","","",0,null],[12,"domain","","",0,null],[12,"path","","",0,null],[12,"secure","","",0,null],[12,"httponly","","",0,null],[12,"custom","","",0,null],[3,"AttrVal","","",null,null],[11,"new","","Creates a new empty cookie jar with the given signing key.",1,null],[11,"add_original","","Adds an original cookie from a request.",1,{"inputs":[{"name":"cookiejar"},{"name":"cookie"}],"output":null}],[11,"add","","Adds a new cookie to this cookie jar.",1,{"inputs":[{"name":"cookiejar"},{"name":"cookie"}],"output":null}],[11,"remove","","Removes a cookie from this cookie jar.",1,{"inputs":[{"name":"cookiejar"},{"name":"str"}],"output":null}],[11,"find","","Finds a cookie inside of this cookie jar.",1,{"inputs":[{"name":"cookiejar"},{"name":"str"}],"output":{"name":"option"}}],[11,"signed","","Creates a child signed cookie jar.",1,{"inputs":[{"name":"cookiejar"}],"output":{"name":"cookiejar"}}],[11,"encrypted","","Creates a child encrypted cookie jar.",1,{"inputs":[{"name":"cookiejar"}],"output":{"name":"cookiejar"}}],[11,"permanent","","Creates a child jar for permanent cookie storage.",1,{"inputs":[{"name":"cookiejar"}],"output":{"name":"cookiejar"}}],[11,"delta","","Calculates the changes that have occurred to this cookie jar over time,\nreturning a vector of `Set-Cookie` headers.",1,{"inputs":[{"name":"cookiejar"}],"output":{"name":"vec"}}],[11,"iter","","Return an iterator over the cookies in this jar.",1,{"inputs":[{"name":"cookiejar"}],"output":{"name":"iter"}}],[11,"fmt","","",0,{"inputs":[{"name":"cookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"cookie"}],"output":{"name":"cookie"}}],[11,"eq","","",0,{"inputs":[{"name":"cookie"},{"name":"cookie"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"cookie"},{"name":"cookie"}],"output":{"name":"bool"}}],[11,"new","","",0,{"inputs":[{"name":"cookie"},{"name":"string"},{"name":"string"}],"output":{"name":"cookie"}}],[11,"parse","","",0,{"inputs":[{"name":"cookie"},{"name":"str"}],"output":{"name":"result"}}],[11,"pair","","",0,{"inputs":[{"name":"cookie"}],"output":{"name":"attrval"}}],[11,"fmt","","",2,{"inputs":[{"name":"attrval"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"cookie"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",0,{"inputs":[{"name":"cookie"},{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"Cookie"],[3,"CookieJar"],[3,"AttrVal"]]};
searchIndex['chrono'] = {"items":[[0,"","chrono","# Chrono 0.2.13",null,null],[11,"weeks","time::duration","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",0,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",0,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",0,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",0,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",0,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",0,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",0,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",0,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",0,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",0,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",0,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",0,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",0,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",0,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",0,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",0,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",0,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",0,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",0,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",0,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",0,{"inputs":[{"name":"duration"}],"output":{"name":"bool"}}],[11,"fmt","time","",1,{"inputs":[{"name":"tmfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","time::duration","",0,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[6,"Output","chrono","",null,null],[11,"neg","time::duration","",0,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[6,"Output","chrono","",null,null],[11,"add","time::duration","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[6,"Output","chrono","",null,null],[11,"sub","time::duration","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[6,"Output","chrono","",null,null],[11,"mul","time::duration","",0,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[6,"Output","chrono","",null,null],[11,"div","time::duration","",0,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"fmt","","",0,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","time","",2,{"inputs":[{"name":"timespec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",2,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"new","","",2,{"inputs":[{"name":"timespec"},{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[6,"Output","chrono","",null,null],[11,"add","time","",2,{"inputs":[{"name":"timespec"},{"name":"duration"}],"output":{"name":"timespec"}}],[6,"Output","chrono","",null,null],[11,"sub","time","",2,{"inputs":[{"name":"timespec"},{"name":"duration"}],"output":{"name":"timespec"}}],[6,"Output","chrono","",null,null],[11,"sub","time","",2,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"duration"}}],[11,"clone","","",3,{"inputs":[{"name":"precisetime"}],"output":{"name":"precisetime"}}],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",3,{"inputs":[{"name":"precisetime"}],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",3,{"inputs":[{"name":"precisetime"},{"name":"precisetime"}],"output":{"name":"duration"}}],[11,"fmt","","",4,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",4,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"fmt","","",4,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Output","chrono","",null,null],[11,"sub","time","",4,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"duration"}}],[6,"Output","chrono","",null,null],[11,"sub","time","",4,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[6,"Output","chrono","",null,null],[11,"add","time","",4,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"fmt","time::steady","",5,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"now","","",5,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[6,"Output","chrono","",null,null],[11,"sub","time::steady","",5,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"duration"}}],[6,"Output","chrono","",null,null],[11,"sub","time::steady","",5,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[6,"Output","chrono","",null,null],[11,"add","time::steady","",5,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"option"}}],[11,"cmp","","",5,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"ordering"}}],[11,"eq","","",5,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"fmt","time","",6,{"inputs":[{"name":"tm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[6,"Output","chrono","",null,null],[11,"add","time","The resulting Tm is in UTC.",6,{"inputs":[{"name":"tm"},{"name":"duration"}],"output":{"name":"tm"}}],[6,"Output","chrono","",null,null],[11,"sub","time","The resulting Tm is in UTC.",6,{"inputs":[{"name":"tm"},{"name":"duration"}],"output":{"name":"tm"}}],[6,"Output","chrono","",null,null],[11,"sub","time","",6,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"duration"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"option"}}],[11,"cmp","","",6,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"ordering"}}],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",6,{"inputs":[{"name":"tm"}],"output":{"name":"timespec"}}],[11,"to_local","","Convert time to the local timezone",6,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"to_utc","","Convert time to the UTC",6,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",6,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",6,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"strftime","","Formats the time according to the format string.",6,{"inputs":[{"name":"tm"},{"name":"str"}],"output":{"name":"result"}}],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",6,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",6,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",6,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"clone","","",7,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",7,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"tmfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fmt"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Duration","chrono","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[4,"Weekday","","The day of week (DOW).",null,null],[13,"Mon","","Monday.",9,null],[13,"Tue","","Tuesday.",9,null],[13,"Wed","","Wednesday.",9,null],[13,"Thu","","Thursday.",9,null],[13,"Fri","","Friday.",9,null],[13,"Sat","","Saturday.",9,null],[13,"Sun","","Sunday.",9,null],[0,"duration","","ISO 8601 duration.",null,null],[3,"Duration","chrono::duration","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[0,"offset","chrono","The time zone, which calculates offsets from the local time to UTC.",null,null],[4,"LocalResult","chrono::offset","The conversion result from the local time to the timezone-aware datetime types.",null,null],[13,"None","","Given local time representation is invalid.\nThis can occur when, for example, the positive timezone transition.",10,null],[13,"Single","","Given local time representation has a single unique result.",10,null],[13,"Ambiguous","","Given local time representation has multiple results and thus ambiguous.\nThis can occur when, for example, the negative timezone transition.",10,null],[0,"utc","","The UTC (Coordinated Universal Time) time zone.",null,null],[3,"UTC","chrono::offset::utc","The UTC time zone. This is the most efficient time zone when you don't need the local time.\nIt is also used as an offset (which is also a dummy type).",null,null],[11,"eq","","",11,{"inputs":[{"name":"utc"},{"name":"utc"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"utc"},{"name":"utc"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"utc"}],"output":{"name":"utc"}}],[11,"today","","Returns a `Date` which corresponds to the current date.",11,{"inputs":[{"name":"utc"}],"output":{"name":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",11,{"inputs":[{"name":"utc"}],"output":{"name":"datetime"}}],[6,"Offset","","",null,null],[11,"from_offset","","",11,{"inputs":[{"name":"utc"},{"name":"utc"}],"output":{"name":"utc"}}],[11,"offset_from_local_date","","",11,{"inputs":[{"name":"utc"},{"name":"naivedate"}],"output":{"name":"localresult"}}],[11,"offset_from_local_datetime","","",11,{"inputs":[{"name":"utc"},{"name":"naivedatetime"}],"output":{"name":"localresult"}}],[11,"offset_from_utc_date","","",11,{"inputs":[{"name":"utc"},{"name":"naivedate"}],"output":{"name":"utc"}}],[11,"offset_from_utc_datetime","","",11,{"inputs":[{"name":"utc"},{"name":"naivedatetime"}],"output":{"name":"utc"}}],[11,"local_minus_utc","","",11,{"inputs":[{"name":"utc"}],"output":{"name":"duration"}}],[11,"fmt","","",11,{"inputs":[{"name":"utc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"utc"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"fixed","chrono::offset","The time zone which has a fixed offset from UTC.",null,null],[3,"FixedOffset","chrono::offset::fixed","The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.",null,null],[11,"eq","","",12,{"inputs":[{"name":"fixedoffset"},{"name":"fixedoffset"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"fixedoffset"},{"name":"fixedoffset"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"fixedoffset"}],"output":{"name":"fixedoffset"}}],[11,"east","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.",12,{"inputs":[{"name":"fixedoffset"},{"name":"i32"}],"output":{"name":"fixedoffset"}}],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.",12,{"inputs":[{"name":"fixedoffset"},{"name":"i32"}],"output":{"name":"option"}}],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.",12,{"inputs":[{"name":"fixedoffset"},{"name":"i32"}],"output":{"name":"fixedoffset"}}],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.",12,{"inputs":[{"name":"fixedoffset"},{"name":"i32"}],"output":{"name":"option"}}],[6,"Offset","","",null,null],[11,"from_offset","","",12,{"inputs":[{"name":"fixedoffset"},{"name":"fixedoffset"}],"output":{"name":"fixedoffset"}}],[11,"offset_from_local_date","","",12,{"inputs":[{"name":"fixedoffset"},{"name":"naivedate"}],"output":{"name":"localresult"}}],[11,"offset_from_local_datetime","","",12,{"inputs":[{"name":"fixedoffset"},{"name":"naivedatetime"}],"output":{"name":"localresult"}}],[11,"offset_from_utc_date","","",12,{"inputs":[{"name":"fixedoffset"},{"name":"naivedate"}],"output":{"name":"fixedoffset"}}],[11,"offset_from_utc_datetime","","",12,{"inputs":[{"name":"fixedoffset"},{"name":"naivedatetime"}],"output":{"name":"fixedoffset"}}],[11,"local_minus_utc","","",12,{"inputs":[{"name":"fixedoffset"}],"output":{"name":"duration"}}],[11,"fmt","","",12,{"inputs":[{"name":"fixedoffset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"fixedoffset"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"local","chrono::offset","The local (system) time zone.",null,null],[3,"Local","chrono::offset::local","The local timescale. This is implemented via the standard `time` crate.",null,null],[11,"clone","","",13,{"inputs":[{"name":"local"}],"output":{"name":"local"}}],[11,"today","","Returns a `Date` which corresponds to the current date.",13,{"inputs":[{"name":"local"}],"output":{"name":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",13,{"inputs":[{"name":"local"}],"output":{"name":"datetime"}}],[6,"Offset","","",null,null],[11,"from_offset","","",13,{"inputs":[{"name":"local"},{"name":"fixedoffset"}],"output":{"name":"local"}}],[11,"offset_from_local_date","","",13,{"inputs":[{"name":"local"},{"name":"naivedate"}],"output":{"name":"localresult"}}],[11,"offset_from_local_datetime","","",13,{"inputs":[{"name":"local"},{"name":"naivedatetime"}],"output":{"name":"localresult"}}],[11,"offset_from_utc_date","","",13,{"inputs":[{"name":"local"},{"name":"naivedate"}],"output":{"name":"fixedoffset"}}],[11,"offset_from_utc_datetime","","",13,{"inputs":[{"name":"local"},{"name":"naivedatetime"}],"output":{"name":"fixedoffset"}}],[11,"from_local_date","","",13,{"inputs":[{"name":"local"},{"name":"naivedate"}],"output":{"name":"localresult"}}],[11,"from_local_datetime","","",13,{"inputs":[{"name":"local"},{"name":"naivedatetime"}],"output":{"name":"localresult"}}],[11,"from_utc_date","","",13,{"inputs":[{"name":"local"},{"name":"naivedate"}],"output":{"name":"date"}}],[11,"from_utc_datetime","","",13,{"inputs":[{"name":"local"},{"name":"naivedatetime"}],"output":{"name":"datetime"}}],[8,"Offset","chrono::offset","The offset from the local time to UTC.",null,null],[10,"local_minus_utc","","Returns the offset from UTC to the local time stored.",14,{"inputs":[{"name":"offset"}],"output":{"name":"duration"}}],[8,"TimeZone","","The time zone.",null,null],[16,"Offset","chrono::offset::TimeZone","An associated offset type.\nThis type is used to store the actual offset in date and time types.\nThe original `TimeZone` value can be recovered via `TimeZone::from_offset`.",null,null],[11,"ymd","chrono::offset","Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",15,{"inputs":[{"name":"timezone"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"date"}}],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",15,{"inputs":[{"name":"timezone"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"localresult"}}],[11,"yo","","Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",15,{"inputs":[{"name":"timezone"},{"name":"i32"},{"name":"u32"}],"output":{"name":"date"}}],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",15,{"inputs":[{"name":"timezone"},{"name":"i32"},{"name":"u32"}],"output":{"name":"localresult"}}],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.",15,{"inputs":[{"name":"timezone"},{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"date"}}],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.",15,{"inputs":[{"name":"timezone"},{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"localresult"}}],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.",15,{"inputs":[{"name":"timezone"},{"name":"i64"},{"name":"u32"}],"output":{"name":"datetime"}}],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.",15,{"inputs":[{"name":"timezone"},{"name":"i64"},{"name":"u32"}],"output":{"name":"localresult"}}],[11,"datetime_from_str","","Parses a string with the specified format string and\nreturns a `DateTime` with the current offset.\nSee the `format::strftime` module on the supported escape sequences.",15,{"inputs":[{"name":"timezone"},{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[10,"from_offset","","Reconstructs the time zone from the offset.",15,{"inputs":[{"name":"timezone"},{"name":"offset"}],"output":{"name":"self"}}],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if possible.",15,{"inputs":[{"name":"timezone"},{"name":"naivedate"}],"output":{"name":"localresult"}}],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if possible.",15,{"inputs":[{"name":"timezone"},{"name":"naivedatetime"}],"output":{"name":"localresult"}}],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware `Date` if possible.",15,{"inputs":[{"name":"timezone"},{"name":"naivedate"}],"output":{"name":"localresult"}}],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.",15,{"inputs":[{"name":"timezone"},{"name":"naivedatetime"}],"output":{"name":"localresult"}}],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot fail.",15,{"inputs":[{"name":"timezone"},{"name":"naivedate"}],"output":{"name":"offset"}}],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This cannot fail.",15,{"inputs":[{"name":"timezone"},{"name":"naivedatetime"}],"output":{"name":"offset"}}],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).",15,{"inputs":[{"name":"timezone"},{"name":"naivedate"}],"output":{"name":"date"}}],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).",15,{"inputs":[{"name":"timezone"},{"name":"naivedatetime"}],"output":{"name":"datetime"}}],[11,"fmt","","",10,{"inputs":[{"name":"localresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"localresult"},{"name":"localresult"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"localresult"},{"name":"localresult"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"localresult"}],"output":{"name":"localresult"}}],[11,"single","","Returns `Some` only when the conversion result is unique, or `None` otherwise.",10,{"inputs":[{"name":"localresult"}],"output":{"name":"option"}}],[11,"earliest","","Returns `Some` for the earliest possible conversion result, or `None` if none.",10,{"inputs":[{"name":"localresult"}],"output":{"name":"option"}}],[11,"latest","","Returns `Some` for the latest possible conversion result, or `None` if none.",10,{"inputs":[{"name":"localresult"}],"output":{"name":"option"}}],[11,"map","","Maps a `LocalResult<T>` into `LocalResult<U>` with given function.",10,{"inputs":[{"name":"localresult"},{"name":"f"}],"output":{"name":"localresult"}}],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.",10,{"inputs":[{"name":"localresult"},{"name":"naivetime"}],"output":{"name":"localresult"}}],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.",10,{"inputs":[{"name":"localresult"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"localresult"}}],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,{"inputs":[{"name":"localresult"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"localresult"}}],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,{"inputs":[{"name":"localresult"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"localresult"}}],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,{"inputs":[{"name":"localresult"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"localresult"}}],[11,"unwrap","","Returns the single unique conversion result, or fails accordingly.",10,{"inputs":[{"name":"localresult"}],"output":{"name":"t"}}],[0,"naive","chrono","Date and time types which do not concern about the timezones.",null,null],[0,"date","chrono::naive","ISO 8601 calendar date without timezone.",null,null],[3,"NaiveDate","chrono::naive::date","ISO 8601 calendar date without timezone.\nAllows for every proleptic Gregorian date from Jan 1, 262145 BCE to Dec 31, 262143 CE.\nAlso supports the conversion from ISO 8601 ordinal and week date.",null,null],[17,"MIN","","The minimum possible `NaiveDate`.",null,null],[17,"MAX","","The maximum possible `NaiveDate`.",null,null],[11,"clone","","",16,{"inputs":[{"name":"naivedate"}],"output":{"name":"naivedate"}}],[11,"cmp","","",16,{"inputs":[{"name":"naivedate"},{"name":"naivedate"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"naivedate"},{"name":"naivedate"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"naivedate"},{"name":"naivedate"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"naivedate"},{"name":"naivedate"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"naivedate"},{"name":"naivedate"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"naivedate"},{"name":"naivedate"}],"output":{"name":"bool"}}],[11,"eq","","",16,{"inputs":[{"name":"naivedate"},{"name":"naivedate"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"naivedate"},{"name":"naivedate"}],"output":{"name":"bool"}}],[11,"from_ymd","","Makes a new `NaiveDate` from year, month and day.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",16,{"inputs":[{"name":"naivedate"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivedate"}}],[11,"from_ymd_opt","","Makes a new `NaiveDate` from year, month and day.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",16,{"inputs":[{"name":"naivedate"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_yo","","Makes a new `NaiveDate` from year and day of year (DOY or \"ordinal\").\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",16,{"inputs":[{"name":"naivedate"},{"name":"i32"},{"name":"u32"}],"output":{"name":"naivedate"}}],[11,"from_yo_opt","","Makes a new `NaiveDate` from year and day of year (DOY or \"ordinal\").\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",16,{"inputs":[{"name":"naivedate"},{"name":"i32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_isoywd","","Makes a new `NaiveDate` from ISO week date (year and week number) and day of the week (DOW).\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `NaiveDate` may have a different year from the input year.",16,{"inputs":[{"name":"naivedate"},{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"naivedate"}}],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from ISO week date (year and week number) and day of the week (DOW).\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `NaiveDate` may have a different year from the input year.",16,{"inputs":[{"name":"naivedate"},{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"option"}}],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\nin the proleptic Gregorian calendar.",16,{"inputs":[{"name":"naivedate"},{"name":"i32"}],"output":{"name":"naivedate"}}],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\nin the proleptic Gregorian calendar.",16,{"inputs":[{"name":"naivedate"},{"name":"i32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDate`.\nSee the `format::strftime` module on the supported escape sequences.",16,{"inputs":[{"name":"naivedate"},{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.",16,{"inputs":[{"name":"naivedate"},{"name":"naivetime"}],"output":{"name":"naivedatetime"}}],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",16,{"inputs":[{"name":"naivedate"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",16,{"inputs":[{"name":"naivedate"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.",16,{"inputs":[{"name":"naivedate"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.",16,{"inputs":[{"name":"naivedate"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.",16,{"inputs":[{"name":"naivedate"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.",16,{"inputs":[{"name":"naivedate"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.",16,{"inputs":[{"name":"naivedate"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.",16,{"inputs":[{"name":"naivedate"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"succ","","Makes a new `NaiveDate` for the next date.",16,{"inputs":[{"name":"naivedate"}],"output":{"name":"naivedate"}}],[11,"succ_opt","","Makes a new `NaiveDate` for the next date.",16,{"inputs":[{"name":"naivedate"}],"output":{"name":"option"}}],[11,"pred","","Makes a new `NaiveDate` for the prior date.",16,{"inputs":[{"name":"naivedate"}],"output":{"name":"naivedate"}}],[11,"pred_opt","","Makes a new `NaiveDate` for the prior date.",16,{"inputs":[{"name":"naivedate"}],"output":{"name":"option"}}],[11,"checked_add","","Adds the `days` part of given `Duration` to the current date.",16,{"inputs":[{"name":"naivedate"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtracts the `days` part of given `Duration` from the current date.",16,{"inputs":[{"name":"naivedate"},{"name":"duration"}],"output":{"name":"option"}}],[11,"format_with_items","","Formats the date with the specified formatting items.",16,{"inputs":[{"name":"naivedate"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"format","","Formats the date with the specified format string.\nSee the `format::strftime` module on the supported escape sequences.",16,{"inputs":[{"name":"naivedate"},{"name":"str"}],"output":{"name":"delayedformat"}}],[11,"year","","",16,{"inputs":[{"name":"naivedate"}],"output":{"name":"i32"}}],[11,"month","","",16,{"inputs":[{"name":"naivedate"}],"output":{"name":"u32"}}],[11,"month0","","",16,{"inputs":[{"name":"naivedate"}],"output":{"name":"u32"}}],[11,"day","","",16,{"inputs":[{"name":"naivedate"}],"output":{"name":"u32"}}],[11,"day0","","",16,{"inputs":[{"name":"naivedate"}],"output":{"name":"u32"}}],[11,"ordinal","","",16,{"inputs":[{"name":"naivedate"}],"output":{"name":"u32"}}],[11,"ordinal0","","",16,{"inputs":[{"name":"naivedate"}],"output":{"name":"u32"}}],[11,"weekday","","",16,{"inputs":[{"name":"naivedate"}],"output":{"name":"weekday"}}],[11,"isoweekdate","","",16,null],[11,"with_year","","",16,{"inputs":[{"name":"naivedate"},{"name":"i32"}],"output":{"name":"option"}}],[11,"with_month","","",16,{"inputs":[{"name":"naivedate"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_month0","","",16,{"inputs":[{"name":"naivedate"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day","","",16,{"inputs":[{"name":"naivedate"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day0","","",16,{"inputs":[{"name":"naivedate"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal","","",16,{"inputs":[{"name":"naivedate"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal0","","",16,{"inputs":[{"name":"naivedate"},{"name":"u32"}],"output":{"name":"option"}}],[11,"hash","","",16,{"inputs":[{"name":"naivedate"},{"name":"h"}],"output":null}],[6,"Output","","",null,null],[11,"add","","",16,{"inputs":[{"name":"naivedate"},{"name":"duration"}],"output":{"name":"naivedate"}}],[6,"Output","","",null,null],[11,"sub","","",16,{"inputs":[{"name":"naivedate"},{"name":"naivedate"}],"output":{"name":"duration"}}],[6,"Output","","",null,null],[11,"sub","","",16,{"inputs":[{"name":"naivedate"},{"name":"duration"}],"output":{"name":"naivedate"}}],[11,"fmt","","",16,{"inputs":[{"name":"naivedate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"naivedate"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",16,{"inputs":[{"name":"naivedate"},{"name":"str"}],"output":{"name":"parseresult"}}],[0,"time","chrono::naive","ISO 8601 time without timezone.",null,null],[3,"NaiveTime","chrono::naive::time","ISO 8601 time without timezone.\nAllows for the nanosecond precision and optional leap second representation.",null,null],[11,"clone","","",17,{"inputs":[{"name":"naivetime"}],"output":{"name":"naivetime"}}],[11,"cmp","","",17,{"inputs":[{"name":"naivetime"},{"name":"naivetime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"naivetime"},{"name":"naivetime"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"naivetime"},{"name":"naivetime"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"naivetime"},{"name":"naivetime"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"naivetime"},{"name":"naivetime"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"naivetime"},{"name":"naivetime"}],"output":{"name":"bool"}}],[11,"eq","","",17,{"inputs":[{"name":"naivetime"},{"name":"naivetime"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"naivetime"},{"name":"naivetime"}],"output":{"name":"bool"}}],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",17,{"inputs":[{"name":"naivetime"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",17,{"inputs":[{"name":"naivetime"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.",17,{"inputs":[{"name":"naivetime"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.",17,{"inputs":[{"name":"naivetime"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.",17,{"inputs":[{"name":"naivetime"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.",17,{"inputs":[{"name":"naivetime"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.",17,{"inputs":[{"name":"naivetime"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.",17,{"inputs":[{"name":"naivetime"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.",17,{"inputs":[{"name":"naivetime"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.",17,{"inputs":[{"name":"naivetime"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveTime`.\nSee the `format::strftime` module on the supported escape sequences.",17,{"inputs":[{"name":"naivetime"},{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"format_with_items","","Formats the time with the specified formatting items.",17,{"inputs":[{"name":"naivetime"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"format","","Formats the time with the specified format string.\nSee the `format::strftime` module on the supported escape sequences.",17,{"inputs":[{"name":"naivetime"},{"name":"str"}],"output":{"name":"delayedformat"}}],[11,"hour","","",17,{"inputs":[{"name":"naivetime"}],"output":{"name":"u32"}}],[11,"minute","","",17,{"inputs":[{"name":"naivetime"}],"output":{"name":"u32"}}],[11,"second","","",17,{"inputs":[{"name":"naivetime"}],"output":{"name":"u32"}}],[11,"nanosecond","","",17,{"inputs":[{"name":"naivetime"}],"output":{"name":"u32"}}],[11,"with_hour","","",17,{"inputs":[{"name":"naivetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_minute","","",17,{"inputs":[{"name":"naivetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_second","","",17,{"inputs":[{"name":"naivetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_nanosecond","","",17,{"inputs":[{"name":"naivetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"num_seconds_from_midnight","","",17,{"inputs":[{"name":"naivetime"}],"output":{"name":"u32"}}],[11,"hash","","",17,{"inputs":[{"name":"naivetime"},{"name":"h"}],"output":null}],[6,"Output","","",null,null],[11,"add","","",17,{"inputs":[{"name":"naivetime"},{"name":"duration"}],"output":{"name":"naivetime"}}],[6,"Output","","",null,null],[11,"sub","","",17,{"inputs":[{"name":"naivetime"},{"name":"naivetime"}],"output":{"name":"duration"}}],[6,"Output","","",null,null],[11,"sub","","",17,{"inputs":[{"name":"naivetime"},{"name":"duration"}],"output":{"name":"naivetime"}}],[11,"fmt","","",17,{"inputs":[{"name":"naivetime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"naivetime"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",17,{"inputs":[{"name":"naivetime"},{"name":"str"}],"output":{"name":"parseresult"}}],[0,"datetime","chrono::naive","ISO 8601 date and time without timezone.",null,null],[3,"NaiveDateTime","chrono::naive::datetime","ISO 8601 combined date and time without timezone.",null,null],[11,"clone","","",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"naivedatetime"}}],[11,"cmp","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"naivedatetime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"naivedatetime"}],"output":{"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"naivedatetime"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"naivedatetime"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"naivedatetime"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"naivedatetime"}],"output":{"name":"bool"}}],[11,"eq","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"naivedatetime"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"naivedatetime"}],"output":{"name":"bool"}}],[11,"new","","Makes a new `NaiveDateTime` from date and time components.\nEquivalent to `date.and_time(time)` and many other helper constructors on `NaiveDate`.",18,{"inputs":[{"name":"naivedatetime"},{"name":"naivedate"},{"name":"naivetime"}],"output":{"name":"naivedatetime"}}],[11,"from_timestamp","","Makes a new `NaiveDateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.",18,{"inputs":[{"name":"naivedatetime"},{"name":"i64"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\nand the number of nanoseconds since the last whole non-leap second.",18,{"inputs":[{"name":"naivedatetime"},{"name":"i64"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_num_seconds_from_unix_epoch","","*Deprecated:* Same to `NaiveDateTime::from_timestamp`.",18,{"inputs":[{"name":"naivedatetime"},{"name":"i64"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"from_num_seconds_from_unix_epoch_opt","","*Deprecated:* Same to `NaiveDateTime::from_timestamp_opt`.",18,{"inputs":[{"name":"naivedatetime"},{"name":"i64"},{"name":"u32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDateTime`.\nSee the `format::strftime` module on the supported escape sequences.",18,{"inputs":[{"name":"naivedatetime"},{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"date","","Retrieves a date component.",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"naivedate"}}],[11,"time","","Retrieves a time component.",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"naivetime"}}],[11,"timestamp","","Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n(aka \"UNIX timestamp\").\nNote that this does *not* account for the timezone!",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"i64"}}],[11,"num_seconds_from_unix_epoch","","*Deprecated:* Same to `NaiveDateTime::timestamp`.",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"i64"}}],[11,"checked_add","","Adds given `Duration` to the current date and time.",18,{"inputs":[{"name":"naivedatetime"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtracts given `Duration` from the current date and time.",18,{"inputs":[{"name":"naivedatetime"},{"name":"duration"}],"output":{"name":"option"}}],[11,"format_with_items","","Formats the combined date and time with the specified formatting items.",18,{"inputs":[{"name":"naivedatetime"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"format","","Formats the combined date and time with the specified format string.\nSee the `format::strftime` module on the supported escape sequences.",18,{"inputs":[{"name":"naivedatetime"},{"name":"str"}],"output":{"name":"delayedformat"}}],[11,"year","","",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"i32"}}],[11,"month","","",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"u32"}}],[11,"month0","","",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"u32"}}],[11,"day","","",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"u32"}}],[11,"day0","","",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"u32"}}],[11,"ordinal","","",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"u32"}}],[11,"ordinal0","","",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"u32"}}],[11,"weekday","","",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"weekday"}}],[11,"isoweekdate","","",18,null],[11,"with_year","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"i32"}],"output":{"name":"option"}}],[11,"with_month","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_month0","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day0","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal0","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"hour","","",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"u32"}}],[11,"minute","","",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"u32"}}],[11,"second","","",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"u32"}}],[11,"nanosecond","","",18,{"inputs":[{"name":"naivedatetime"}],"output":{"name":"u32"}}],[11,"with_hour","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_minute","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_second","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_nanosecond","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"hash","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"h"}],"output":null}],[6,"Output","","",null,null],[11,"add","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"duration"}],"output":{"name":"naivedatetime"}}],[6,"Output","","",null,null],[11,"sub","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"naivedatetime"}],"output":{"name":"duration"}}],[6,"Output","","",null,null],[11,"sub","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"duration"}],"output":{"name":"naivedatetime"}}],[11,"fmt","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",18,{"inputs":[{"name":"naivedatetime"},{"name":"str"}],"output":{"name":"parseresult"}}],[0,"date","chrono","ISO 8601 calendar date with time zone.",null,null],[3,"Date","chrono::date","ISO 8601 calendar date with time zone.",null,null],[17,"MIN","","The minimum possible `Date`.",null,null],[17,"MAX","","The maximum possible `Date`.",null,null],[11,"clone","","",19,{"inputs":[{"name":"date"}],"output":{"name":"date"}}],[11,"from_utc","","Makes a new `Date` with given *UTC* date and offset.\nThe local date should be constructed via the `TimeZone` trait.",19,{"inputs":[{"name":"date"},{"name":"naivedate"},{"name":"tz"}],"output":{"name":"date"}}],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.",19,{"inputs":[{"name":"date"},{"name":"naivetime"}],"output":{"name":"option"}}],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.",19,{"inputs":[{"name":"date"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"datetime"}}],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.",19,{"inputs":[{"name":"date"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.",19,{"inputs":[{"name":"date"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"datetime"}}],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.",19,{"inputs":[{"name":"date"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",19,{"inputs":[{"name":"date"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"datetime"}}],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",19,{"inputs":[{"name":"date"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",19,{"inputs":[{"name":"date"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"datetime"}}],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",19,{"inputs":[{"name":"date"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"succ","","Makes a new `Date` for the next date.",19,{"inputs":[{"name":"date"}],"output":{"name":"date"}}],[11,"succ_opt","","Makes a new `Date` for the next date.",19,{"inputs":[{"name":"date"}],"output":{"name":"option"}}],[11,"pred","","Makes a new `Date` for the prior date.",19,{"inputs":[{"name":"date"}],"output":{"name":"date"}}],[11,"pred_opt","","Makes a new `Date` for the prior date.",19,{"inputs":[{"name":"date"}],"output":{"name":"option"}}],[11,"offset","","Retrieves an associated offset from UTC.",19,{"inputs":[{"name":"date"}],"output":{"name":"tz"}}],[11,"timezone","","Retrieves an associated time zone.",19,{"inputs":[{"name":"date"}],"output":{"name":"tz"}}],[11,"with_timezone","","Changes the associated time zone.\nThis does not change the actual `Date` (but will change the string representation).",19,{"inputs":[{"name":"date"},{"name":"tz2"}],"output":{"name":"date"}}],[11,"checked_add","","Adds given `Duration` to the current date.",19,{"inputs":[{"name":"date"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtracts given `Duration` from the current date.",19,{"inputs":[{"name":"date"},{"name":"duration"}],"output":{"name":"option"}}],[11,"naive_utc","","Returns a view to the naive UTC date.",19,{"inputs":[{"name":"date"}],"output":{"name":"naivedate"}}],[11,"naive_local","","Returns a view to the naive local date.",19,{"inputs":[{"name":"date"}],"output":{"name":"naivedate"}}],[11,"format_with_items","","Formats the date with the specified formatting items.",19,{"inputs":[{"name":"date"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"format","","Formats the date with the specified format string.\nSee the `format::strftime` module on the supported escape sequences.",19,{"inputs":[{"name":"date"},{"name":"str"}],"output":{"name":"delayedformat"}}],[11,"year","","",19,{"inputs":[{"name":"date"}],"output":{"name":"i32"}}],[11,"month","","",19,{"inputs":[{"name":"date"}],"output":{"name":"u32"}}],[11,"month0","","",19,{"inputs":[{"name":"date"}],"output":{"name":"u32"}}],[11,"day","","",19,{"inputs":[{"name":"date"}],"output":{"name":"u32"}}],[11,"day0","","",19,{"inputs":[{"name":"date"}],"output":{"name":"u32"}}],[11,"ordinal","","",19,{"inputs":[{"name":"date"}],"output":{"name":"u32"}}],[11,"ordinal0","","",19,{"inputs":[{"name":"date"}],"output":{"name":"u32"}}],[11,"weekday","","",19,{"inputs":[{"name":"date"}],"output":{"name":"weekday"}}],[11,"isoweekdate","","",19,null],[11,"with_year","","",19,{"inputs":[{"name":"date"},{"name":"i32"}],"output":{"name":"option"}}],[11,"with_month","","",19,{"inputs":[{"name":"date"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_month0","","",19,{"inputs":[{"name":"date"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day","","",19,{"inputs":[{"name":"date"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day0","","",19,{"inputs":[{"name":"date"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal","","",19,{"inputs":[{"name":"date"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal0","","",19,{"inputs":[{"name":"date"},{"name":"u32"}],"output":{"name":"option"}}],[11,"eq","","",19,{"inputs":[{"name":"date"},{"name":"date"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"date"},{"name":"date"}],"output":{"name":"option"}}],[11,"cmp","","",19,{"inputs":[{"name":"date"},{"name":"date"}],"output":{"name":"ordering"}}],[11,"hash","","",19,{"inputs":[{"name":"date"},{"name":"h"}],"output":null}],[6,"Output","","",null,null],[11,"add","","",19,{"inputs":[{"name":"date"},{"name":"duration"}],"output":{"name":"date"}}],[6,"Output","","",null,null],[11,"sub","","",19,{"inputs":[{"name":"date"},{"name":"date"}],"output":{"name":"duration"}}],[6,"Output","","",null,null],[11,"sub","","",19,{"inputs":[{"name":"date"},{"name":"duration"}],"output":{"name":"date"}}],[11,"fmt","","",19,{"inputs":[{"name":"date"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"date"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"datetime","chrono","ISO 8601 date and time with time zone.",null,null],[3,"DateTime","chrono::datetime","ISO 8601 combined date and time with time zone.",null,null],[11,"clone","","",20,{"inputs":[{"name":"datetime"}],"output":{"name":"datetime"}}],[11,"from_utc","","Makes a new `DateTime` with given *UTC* datetime and offset.\nThe local datetime should be constructed via the `TimeZone` trait.",20,{"inputs":[{"name":"datetime"},{"name":"naivedatetime"},{"name":"tz"}],"output":{"name":"datetime"}}],[11,"date","","Retrieves a date component.",20,{"inputs":[{"name":"datetime"}],"output":{"name":"date"}}],[11,"time","","Retrieves a time component.\nUnlike `date`, this is not associated to the time zone.",20,{"inputs":[{"name":"datetime"}],"output":{"name":"naivetime"}}],[11,"timestamp","","Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n(aka \"UNIX timestamp\").",20,{"inputs":[{"name":"datetime"}],"output":{"name":"i64"}}],[11,"num_seconds_from_unix_epoch","","*Deprecated*: Same to `DateTime::timestamp`.",20,{"inputs":[{"name":"datetime"}],"output":{"name":"i64"}}],[11,"offset","","Retrieves an associated offset from UTC.",20,{"inputs":[{"name":"datetime"}],"output":{"name":"tz"}}],[11,"timezone","","Retrieves an associated time zone.",20,{"inputs":[{"name":"datetime"}],"output":{"name":"tz"}}],[11,"with_timezone","","Changes the associated time zone.\nThis does not change the actual `DateTime` (but will change the string representation).",20,{"inputs":[{"name":"datetime"},{"name":"tz2"}],"output":{"name":"datetime"}}],[11,"checked_add","","Adds given `Duration` to the current date and time.",20,{"inputs":[{"name":"datetime"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtracts given `Duration` from the current date and time.",20,{"inputs":[{"name":"datetime"},{"name":"duration"}],"output":{"name":"option"}}],[11,"naive_utc","","Returns a view to the naive UTC datetime.",20,{"inputs":[{"name":"datetime"}],"output":{"name":"naivedatetime"}}],[11,"naive_local","","Returns a view to the naive local datetime.",20,{"inputs":[{"name":"datetime"}],"output":{"name":"naivedatetime"}}],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,\nthen returns a new `DateTime` with a parsed `FixedOffset`.",20,{"inputs":[{"name":"datetime"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,\nthen returns a new `DateTime` with a parsed `FixedOffset`.",20,{"inputs":[{"name":"datetime"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"parse_from_str","","Parses a string with the specified format string and\nreturns a new `DateTime` with a parsed `FixedOffset`.\nSee the `format::strftime` module on the supported escape sequences.",20,{"inputs":[{"name":"datetime"},{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.",20,{"inputs":[{"name":"datetime"}],"output":{"name":"string"}}],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.",20,{"inputs":[{"name":"datetime"}],"output":{"name":"string"}}],[11,"format_with_items","","Formats the combined date and time with the specified formatting items.",20,{"inputs":[{"name":"datetime"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"format","","Formats the combined date and time with the specified format string.\nSee the `format::strftime` module on the supported escape sequences.",20,{"inputs":[{"name":"datetime"},{"name":"str"}],"output":{"name":"delayedformat"}}],[11,"year","","",20,{"inputs":[{"name":"datetime"}],"output":{"name":"i32"}}],[11,"month","","",20,{"inputs":[{"name":"datetime"}],"output":{"name":"u32"}}],[11,"month0","","",20,{"inputs":[{"name":"datetime"}],"output":{"name":"u32"}}],[11,"day","","",20,{"inputs":[{"name":"datetime"}],"output":{"name":"u32"}}],[11,"day0","","",20,{"inputs":[{"name":"datetime"}],"output":{"name":"u32"}}],[11,"ordinal","","",20,{"inputs":[{"name":"datetime"}],"output":{"name":"u32"}}],[11,"ordinal0","","",20,{"inputs":[{"name":"datetime"}],"output":{"name":"u32"}}],[11,"weekday","","",20,{"inputs":[{"name":"datetime"}],"output":{"name":"weekday"}}],[11,"isoweekdate","","",20,null],[11,"with_year","","",20,{"inputs":[{"name":"datetime"},{"name":"i32"}],"output":{"name":"option"}}],[11,"with_month","","",20,{"inputs":[{"name":"datetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_month0","","",20,{"inputs":[{"name":"datetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day","","",20,{"inputs":[{"name":"datetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_day0","","",20,{"inputs":[{"name":"datetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal","","",20,{"inputs":[{"name":"datetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_ordinal0","","",20,{"inputs":[{"name":"datetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"hour","","",20,{"inputs":[{"name":"datetime"}],"output":{"name":"u32"}}],[11,"minute","","",20,{"inputs":[{"name":"datetime"}],"output":{"name":"u32"}}],[11,"second","","",20,{"inputs":[{"name":"datetime"}],"output":{"name":"u32"}}],[11,"nanosecond","","",20,{"inputs":[{"name":"datetime"}],"output":{"name":"u32"}}],[11,"with_hour","","",20,{"inputs":[{"name":"datetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_minute","","",20,{"inputs":[{"name":"datetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_second","","",20,{"inputs":[{"name":"datetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"with_nanosecond","","",20,{"inputs":[{"name":"datetime"},{"name":"u32"}],"output":{"name":"option"}}],[11,"eq","","",20,{"inputs":[{"name":"datetime"},{"name":"datetime"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"datetime"},{"name":"datetime"}],"output":{"name":"option"}}],[11,"cmp","","",20,{"inputs":[{"name":"datetime"},{"name":"datetime"}],"output":{"name":"ordering"}}],[11,"hash","","",20,{"inputs":[{"name":"datetime"},{"name":"h"}],"output":null}],[6,"Output","","",null,null],[11,"add","","",20,{"inputs":[{"name":"datetime"},{"name":"duration"}],"output":{"name":"datetime"}}],[6,"Output","","",null,null],[11,"sub","","",20,{"inputs":[{"name":"datetime"},{"name":"datetime"}],"output":{"name":"duration"}}],[6,"Output","","",null,null],[11,"sub","","",20,{"inputs":[{"name":"datetime"},{"name":"duration"}],"output":{"name":"datetime"}}],[11,"fmt","","",20,{"inputs":[{"name":"datetime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"datetime"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",20,{"inputs":[{"name":"datetime"},{"name":"str"}],"output":{"name":"parseresult"}}],[6,"Err","","",null,null],[11,"from_str","","",20,{"inputs":[{"name":"datetime"},{"name":"str"}],"output":{"name":"parseresult"}}],[6,"Err","","",null,null],[11,"from_str","","",20,{"inputs":[{"name":"datetime"},{"name":"str"}],"output":{"name":"parseresult"}}],[0,"format","chrono","Formatting utilities for date and time.",null,null],[3,"ParseError","chrono::format","An error from the `parse` function.",null,null],[3,"DelayedFormat","","A *temporary* object which can be used as an argument to `format!` or others.\nThis is normally constructed via `format` methods of each date and time type.",null,null],[4,"Pad","","Padding characters for numeric items.",null,null],[13,"None","","No padding.",21,null],[13,"Zero","","Zero (`0`) padding.",21,null],[13,"Space","","Space padding.",21,null],[4,"Numeric","","Numeric item types.\nThey have associated formatting width (FW) and parsing width (PW).",null,null],[13,"Year","","Full Gregorian year (FW=4, PW=infinity).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.",22,null],[13,"YearDiv100","","Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.",22,null],[13,"YearMod100","","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",22,null],[13,"IsoYear","","Year in the ISO week date (FW=4, PW=infinity).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.",22,null],[13,"IsoYearDiv100","","Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.",22,null],[13,"IsoYearMod100","","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.",22,null],[13,"Month","","Month (FW=PW=2).",22,null],[13,"Day","","Day of the month (FW=PW=2).",22,null],[13,"WeekFromSun","","Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).",22,null],[13,"WeekFromMon","","Week number, where the week 1 starts at the first Monday of January (FW=PW=2).",22,null],[13,"IsoWeek","","Week number in the ISO week date (FW=PW=2).",22,null],[13,"NumDaysFromSun","","Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).",22,null],[13,"WeekdayFromMon","","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",22,null],[13,"Ordinal","","Day of the year (FW=PW=3).",22,null],[13,"Hour","","Hour number in the 24-hour clocks (FW=PW=2).",22,null],[13,"Hour12","","Hour number in the 12-hour clocks (FW=PW=2).",22,null],[13,"Minute","","The number of minutes since the last whole hour (FW=PW=2).",22,null],[13,"Second","","The number of seconds since the last whole minute (FW=PW=2).",22,null],[13,"Nanosecond","","The number of nanoseconds since the last whole second (FW=PW=9).\nNote that this is *not* left-aligned; see also `Fixed::Nanosecond`.",22,null],[13,"Timestamp","","The number of non-leap seconds since January 1, 1970 0:00:00 UTC (FW=1, PW=infinity).",22,null],[4,"Fixed","","Fixed-format item types.",null,null],[13,"ShortMonthName","","Abbreviated month names.",23,null],[13,"LongMonthName","","Full month names.",23,null],[13,"ShortWeekdayName","","Abbreviated day of the week names.",23,null],[13,"LongWeekdayName","","Full day of the week names.",23,null],[13,"LowerAmPm","","AM/PM.",23,null],[13,"UpperAmPm","","AM/PM.",23,null],[13,"Nanosecond","","An optional dot plus one or more digits for left-aligned nanoseconds.\nMay print nothing, 3, 6 or 9 digits according to the available accuracy.\nSee also `Numeric::Nanosecond`.",23,null],[13,"TimezoneName","","Timezone name.",23,null],[13,"TimezoneOffset","","Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).",23,null],[13,"TimezoneOffsetZ","","Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).",23,null],[13,"RFC2822","","RFC 2822 date and time syntax. Commonly used for email and MIME date and time.",23,null],[13,"RFC3339","","RFC 3339 & ISO 8601 date and time syntax.",23,null],[4,"Item","","A single formatting item. This is used for both formatting and parsing.",null,null],[13,"Literal","","A literally printed and parsed text.",24,null],[13,"Space","","Whitespace. Prints literally but reads zero or more whitespace.",24,null],[13,"Numeric","","Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\nthe parser simply ignores any padded whitespace and zeroes.",24,null],[13,"Fixed","","Fixed-format item.",24,null],[13,"Error","","Issues a formatting error. Used to signal an invalid format string.",24,null],[5,"parse","","Tries to parse given string into `parsed` with given formatting items.\nReturns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\nThere should be no trailing string after parsing; use a stray `Item::Space` to trim whitespaces.",null,{"inputs":[{"name":"parsed"},{"name":"str"},{"name":"i"}],"output":{"name":"parseresult"}}],[5,"format","","Tries to format given arguments with given formatting items.\nInternally used by `DelayedFormat`.",null,{"inputs":[{"name":"formatter"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"i"}],"output":{"name":"result"}}],[0,"parsed","","A collection of parsed date and time items.\nThey can be constructed incrementally while being checked for consistency.",null,null],[3,"Parsed","chrono::format::parsed","Parsed parts of date and time. There are two classes of methods:",null,null],[12,"year","","Year. This can be negative unlike `year_{div,mod}_100` fields.",25,null],[12,"year_div_100","","Year divided by 100. Implies that the year is >= 1 BCE when set.",25,null],[12,"year_mod_100","","Year modulo 100. Implies that the year is >= 1 BCE when set.",25,null],[12,"isoyear","","Year in the ISO week date. This can be negative unlike `isoyear_{div,mod}_100` fields.",25,null],[12,"isoyear_div_100","","Year in the ISO week date, divided by 100. Implies that the year is >= 1 BCE when set.",25,null],[12,"isoyear_mod_100","","Year in the ISO week date, modulo 100. Implies that the year is >= 1 BCE when set.",25,null],[12,"month","","Month (1--12).",25,null],[12,"week_from_sun","","Week number, where the week 1 starts at the first Sunday of January.\n(0--53, 1--53 or 1--52 depending on the year).",25,null],[12,"week_from_mon","","Week number, where the week 1 starts at the first Monday of January.\n(0--53, 1--53 or 1--52 depending on the year).",25,null],[12,"isoweek","","ISO week number (1--52 or 1--53 depending on the year).",25,null],[12,"weekday","","Day of the week.",25,null],[12,"ordinal","","Day of the year (1--365 or 1--366 depending on the year).",25,null],[12,"day","","Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).",25,null],[12,"hour_div_12","","Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.",25,null],[12,"hour_mod_12","","Hour number modulo 12 (0--11).",25,null],[12,"minute","","Minute number (0--59).",25,null],[12,"second","","Second number (0--60, accounting for leap seconds).",25,null],[12,"nanosecond","","The number of nanoseconds since the whole second (0--999,999,999).",25,null],[12,"timestamp","","The number of non-leap seconds since January 1, 1970 0:00:00 UTC.",25,null],[12,"offset","","Offset from the local time to UTC, in seconds.",25,null],[11,"fmt","","",25,{"inputs":[{"name":"parsed"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"parsed"},{"name":"parsed"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"parsed"},{"name":"parsed"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"parsed"}],"output":{"name":"parsed"}}],[11,"new","","Returns the initial value of parsed parts.",25,{"inputs":[{"name":"parsed"}],"output":{"name":"parsed"}}],[11,"set_year","","Tries to set the `year` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_year_div_100","","Tries to set the `year_div_100` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_year_mod_100","","Tries to set the `year_mod_100` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_isoyear","","Tries to set the `isoyear` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_isoyear_div_100","","Tries to set the `isoyear_div_100` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_isoyear_mod_100","","Tries to set the `isoyear_mod_100` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_month","","Tries to set the `month` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_week_from_sun","","Tries to set the `week_from_sun` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_week_from_mon","","Tries to set the `week_from_mon` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_isoweek","","Tries to set the `isoweek` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_weekday","","Tries to set the `weekday` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"weekday"}],"output":{"name":"parseresult"}}],[11,"set_ordinal","","Tries to set the `ordinal` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_day","","Tries to set the `day` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_ampm","","Tries to set the `hour_div_12` field from given value. (`false` for AM, `true` for PM)",25,{"inputs":[{"name":"parsed"},{"name":"bool"}],"output":{"name":"parseresult"}}],[11,"set_hour12","","Tries to set the `hour_mod_12` field from given hour number in 12-hour clocks.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_hour","","Tries to set both `hour_div_12` and `hour_mod_12` fields from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_minute","","Tries to set the `minute` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_second","","Tries to set the `second` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_nanosecond","","Tries to set the `nanosecond` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_timestamp","","Tries to set the `timestamp` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"set_offset","","Tries to set the `offset` field from given value.",25,{"inputs":[{"name":"parsed"},{"name":"i64"}],"output":{"name":"parseresult"}}],[11,"to_naive_date","","Returns a parsed naive date out of given fields.",25,{"inputs":[{"name":"parsed"}],"output":{"name":"parseresult"}}],[11,"to_naive_time","","Returns a parsed naive time out of given fields.",25,{"inputs":[{"name":"parsed"}],"output":{"name":"parseresult"}}],[11,"to_naive_datetime_with_offset","","Returns a parsed naive date and time out of given fields,\nexcept for the `offset` field (assumed to have a given value).\nThis is required for parsing a local time or other known-timezone inputs.",25,{"inputs":[{"name":"parsed"},{"name":"i32"}],"output":{"name":"parseresult"}}],[11,"to_fixed_offset","","Returns a parsed fixed time zone offset out of given fields.",25,{"inputs":[{"name":"parsed"}],"output":{"name":"parseresult"}}],[11,"to_datetime","","Returns a parsed timezone-aware date and time out of given fields.",25,{"inputs":[{"name":"parsed"}],"output":{"name":"parseresult"}}],[11,"to_datetime_with_timezone","","Returns a parsed timezone-aware date and time out of given fields,\nwith an additional `TimeZone` used to interpret and validate the local date.",25,{"inputs":[{"name":"parsed"},{"name":"tz"}],"output":{"name":"parseresult"}}],[0,"strftime","chrono::format","`strftime`/`strptime`-inspired date and time formatting syntax.",null,null],[3,"StrftimeItems","chrono::format::strftime","Parsing iterator for `strftime`-like format strings.",null,null],[11,"clone","","",26,{"inputs":[{"name":"strftimeitems"}],"output":{"name":"strftimeitems"}}],[11,"new","","Creates a new parsing iterator from the `strftime`-like format string.",26,{"inputs":[{"name":"strftimeitems"},{"name":"str"}],"output":{"name":"strftimeitems"}}],[6,"Item","","",null,null],[11,"next","","",26,{"inputs":[{"name":"strftimeitems"}],"output":{"name":"option"}}],[6,"ParseResult","chrono::format","Same to `Result<T, ParseError>`.",null,null],[11,"fmt","","",21,{"inputs":[{"name":"pad"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"pad"},{"name":"pad"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"pad"},{"name":"pad"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"pad"}],"output":{"name":"pad"}}],[11,"fmt","","",22,{"inputs":[{"name":"numeric"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"numeric"},{"name":"numeric"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"numeric"},{"name":"numeric"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"numeric"}],"output":{"name":"numeric"}}],[11,"fmt","","",23,{"inputs":[{"name":"fixed"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"fixed"},{"name":"fixed"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"fixed"},{"name":"fixed"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"fixed"}],"output":{"name":"fixed"}}],[11,"fmt","","",24,{"inputs":[{"name":"item"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"item"},{"name":"item"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"item"},{"name":"item"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"eq","","",27,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",27,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",27,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"fmt","","",28,{"inputs":[{"name":"delayedformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Makes a new `DelayedFormat` value out of local date and time.",28,{"inputs":[{"name":"delayedformat"},{"name":"option"},{"name":"option"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"new_with_offset","","Makes a new `DelayedFormat` value out of local date and time and UTC offset.",28,{"inputs":[{"name":"delayedformat"},{"name":"option"},{"name":"option"},{"name":"off"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"fmt","","",28,{"inputs":[{"name":"delayedformat"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Datelike","chrono","The common set of methods for date component.",null,null],[10,"year","","Returns the year number.",29,{"inputs":[{"name":"datelike"}],"output":{"name":"i32"}}],[11,"year_ce","","Returns the absolute year number starting from 1 with a boolean flag,\nwhich is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).",29,null],[10,"month","","Returns the month number starting from 1.",29,{"inputs":[{"name":"datelike"}],"output":{"name":"u32"}}],[10,"month0","","Returns the month number starting from 0.",29,{"inputs":[{"name":"datelike"}],"output":{"name":"u32"}}],[10,"day","","Returns the day of month starting from 1.",29,{"inputs":[{"name":"datelike"}],"output":{"name":"u32"}}],[10,"day0","","Returns the day of month starting from 0.",29,{"inputs":[{"name":"datelike"}],"output":{"name":"u32"}}],[10,"ordinal","","Returns the day of year starting from 1.",29,{"inputs":[{"name":"datelike"}],"output":{"name":"u32"}}],[10,"ordinal0","","Returns the day of year starting from 0.",29,{"inputs":[{"name":"datelike"}],"output":{"name":"u32"}}],[10,"weekday","","Returns the day of week.",29,{"inputs":[{"name":"datelike"}],"output":{"name":"weekday"}}],[10,"isoweekdate","","Returns the ISO week date: an adjusted year, week number and day of week.\nThe adjusted year may differ from that of the calendar date.",29,null],[10,"with_year","","Makes a new value with the year number changed.",29,{"inputs":[{"name":"datelike"},{"name":"i32"}],"output":{"name":"option"}}],[10,"with_month","","Makes a new value with the month number (starting from 1) changed.",29,{"inputs":[{"name":"datelike"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_month0","","Makes a new value with the month number (starting from 0) changed.",29,{"inputs":[{"name":"datelike"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_day","","Makes a new value with the day of month (starting from 1) changed.",29,{"inputs":[{"name":"datelike"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_day0","","Makes a new value with the day of month (starting from 0) changed.",29,{"inputs":[{"name":"datelike"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1) changed.",29,{"inputs":[{"name":"datelike"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0) changed.",29,{"inputs":[{"name":"datelike"},{"name":"u32"}],"output":{"name":"option"}}],[11,"num_days_from_ce","","Returns the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",29,{"inputs":[{"name":"datelike"}],"output":{"name":"i32"}}],[8,"Timelike","","The common set of methods for time component.",null,null],[10,"hour","","Returns the hour number from 0 to 23.",30,{"inputs":[{"name":"timelike"}],"output":{"name":"u32"}}],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag,\nwhich is false for AM and true for PM.",30,null],[10,"minute","","Returns the minute number from 0 to 59.",30,{"inputs":[{"name":"timelike"}],"output":{"name":"u32"}}],[10,"second","","Returns the second number from 0 to 59.",30,{"inputs":[{"name":"timelike"}],"output":{"name":"u32"}}],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents the leap second.",30,{"inputs":[{"name":"timelike"}],"output":{"name":"u32"}}],[10,"with_hour","","Makes a new value with the hour number changed.",30,{"inputs":[{"name":"timelike"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_minute","","Makes a new value with the minute number changed.",30,{"inputs":[{"name":"timelike"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_second","","Makes a new value with the second number changed.",30,{"inputs":[{"name":"timelike"},{"name":"u32"}],"output":{"name":"option"}}],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole non-leap second changed.",30,{"inputs":[{"name":"timelike"},{"name":"u32"}],"output":{"name":"option"}}],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",30,{"inputs":[{"name":"timelike"}],"output":{"name":"u32"}}],[11,"fmt","","",9,{"inputs":[{"name":"weekday"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"weekday"}],"output":{"name":"weekday"}}],[11,"eq","","",9,{"inputs":[{"name":"weekday"},{"name":"weekday"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"weekday"},{"name":"weekday"}],"output":{"name":"bool"}}],[11,"succ","","The next day in the week.",9,{"inputs":[{"name":"weekday"}],"output":{"name":"weekday"}}],[11,"pred","","The previous day in the week.",9,{"inputs":[{"name":"weekday"}],"output":{"name":"weekday"}}],[11,"number_from_monday","","Returns a DOW number starting from Monday = 1. (ISO 8601 weekday number)",9,{"inputs":[{"name":"weekday"}],"output":{"name":"u32"}}],[11,"number_from_sunday","","Returns a DOW number starting from Sunday = 1.",9,{"inputs":[{"name":"weekday"}],"output":{"name":"u32"}}],[11,"num_days_from_monday","","Returns a DOW number starting from Monday = 0.",9,{"inputs":[{"name":"weekday"}],"output":{"name":"u32"}}],[11,"num_days_from_sunday","","Returns a DOW number starting from Sunday = 0.",9,{"inputs":[{"name":"weekday"}],"output":{"name":"u32"}}],[11,"from_i64","","",9,{"inputs":[{"name":"weekday"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",9,{"inputs":[{"name":"weekday"},{"name":"u64"}],"output":{"name":"option"}}]],"paths":[[3,"Duration"],[3,"TmFmt"],[3,"Timespec"],[3,"PreciseTime"],[3,"SteadyTime"],[3,"SteadyTime"],[3,"Tm"],[4,"ParseError"],[4,"Fmt"],[4,"Weekday"],[4,"LocalResult"],[3,"UTC"],[3,"FixedOffset"],[3,"Local"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"NaiveTime"],[3,"NaiveDateTime"],[3,"Date"],[3,"DateTime"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,"Parsed"],[3,"StrftimeItems"],[3,"ParseError"],[3,"DelayedFormat"],[8,"Datelike"],[8,"Timelike"]]};
searchIndex['openssl'] = {"items":[[0,"","openssl","",null,null],[0,"asn1","","",null,null],[3,"Asn1Time","openssl::asn1","",null,null],[11,"new","","Wraps existing ASN1_TIME and takes ownership",0,null],[11,"days_from_now","","Creates a new time on specified interval in days from now",0,{"inputs":[{"name":"asn1time"},{"name":"u32"}],"output":{"name":"result"}}],[11,"get_handle","","Returns raw handle",0,null],[11,"drop","","",0,{"inputs":[{"name":"asn1time"}],"output":null}],[0,"bn","openssl","",null,null],[3,"BigNum","openssl::bn","",null,null],[4,"RNGProperty","","",null,null],[13,"MsbMaybeZero","","",1,null],[13,"MsbOne","","",1,null],[13,"TwoMsbOne","","",1,null],[0,"unchecked","","",null,null],[6,"Output","openssl::bn::unchecked","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"clone","openssl::bn","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"bignum"}}],[6,"Output","openssl::bn::unchecked","",null,null],[11,"neg","openssl::bn","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"bignum"}}],[11,"clone","","",1,{"inputs":[{"name":"rngproperty"}],"output":{"name":"rngproperty"}}],[11,"new","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"new_from","","",2,{"inputs":[{"name":"bignum"},{"name":"u64"}],"output":{"name":"result"}}],[11,"from_dec_str","","",2,{"inputs":[{"name":"bignum"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_hex_str","","",2,{"inputs":[{"name":"bignum"},{"name":"str"}],"output":{"name":"result"}}],[11,"new_from_slice","","",2,null],[11,"checked_sqr","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_nnmod","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_add","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_sub","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_mul","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_sqr","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_exp","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_exp","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_inv","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"add_word","","",2,{"inputs":[{"name":"bignum"},{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"sub_word","","",2,{"inputs":[{"name":"bignum"},{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"mul_word","","",2,{"inputs":[{"name":"bignum"},{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"div_word","","",2,{"inputs":[{"name":"bignum"},{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"mod_word","","",2,{"inputs":[{"name":"bignum"},{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"checked_gcd","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_generate_prime","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"},{"name":"bool"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"is_prime","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"is_prime_fast","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_new_random","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"},{"name":"rngproperty"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_new_pseudo_random","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"},{"name":"rngproperty"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_rand_in_range","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_pseudo_rand_in_range","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"set_bit","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"clear_bit","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"is_bit_set","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"mask_bits","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"checked_shl1","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_shr1","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_add","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_sub","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mul","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_div","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_shl","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"checked_shr","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"negate","","",2,{"inputs":[{"name":"bignum"}],"output":null}],[11,"abs_cmp","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"ordering"}}],[11,"is_negative","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"bool"}}],[11,"num_bits","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"i32"}}],[11,"num_bytes","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"i32"}}],[11,"to_vec","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"vec"}}],[11,"to_dec_str","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"string"}}],[11,"to_hex_str","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"string"}}],[11,"fmt","","",2,{"inputs":[{"name":"bignum"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"option"}}],[11,"drop","","",2,{"inputs":[{"name":"bignum"}],"output":null}],[0,"bio","openssl","",null,null],[3,"MemBio","openssl::bio","",null,null],[11,"drop","","",3,{"inputs":[{"name":"membio"}],"output":null}],[11,"new","","Creates a new owned memory based BIO",3,{"inputs":[{"name":"membio"}],"output":{"name":"result"}}],[11,"borrowed","","Returns a \"borrow\", i.e. it has no ownership",3,null],[11,"unwrap","","Consumes current bio and returns wrapped value\nNote that data ownership is lost and\nshould be managed manually",3,null],[11,"get_handle","","Temporarily gets wrapped value",3,null],[11,"read","","",3,null],[11,"write","","",3,null],[11,"flush","","",3,{"inputs":[{"name":"membio"}],"output":{"name":"result"}}],[0,"crypto","openssl","",null,null],[0,"hash","openssl::crypto","",null,null],[3,"Hasher","openssl::crypto::hash","Provides message digest (hash) computation.",null,null],[4,"Type","","Message digest (hash) type.",null,null],[13,"MD5","","",4,null],[13,"SHA1","","",4,null],[13,"SHA224","","",4,null],[13,"SHA256","","",4,null],[13,"SHA384","","",4,null],[13,"SHA512","","",4,null],[13,"RIPEMD160","","",4,null],[5,"hash","","Computes the hash of the `data` with the hash `t`.",null,null],[11,"clone","","",4,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[11,"md_len","","Returns the length of the message digest.",4,{"inputs":[{"name":"type"}],"output":{"name":"usize"}}],[11,"evp_md","","Internal interface subject to removal.",4,null],[11,"new","","Creates a new `Hasher` with the specified hash type.",5,{"inputs":[{"name":"hasher"},{"name":"type"}],"output":{"name":"hasher"}}],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",5,{"inputs":[{"name":"hasher"}],"output":{"name":"vec"}}],[11,"write","","",5,null],[11,"flush","","",5,{"inputs":[{"name":"hasher"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"hasher"}],"output":{"name":"hasher"}}],[11,"drop","","",5,{"inputs":[{"name":"hasher"}],"output":null}],[0,"hmac","openssl::crypto","",null,null],[3,"HMAC","openssl::crypto::hmac","Provides HMAC computation.",null,null],[5,"hmac","","Computes the HMAC of the `data` with the hash `t` and `key`.",null,null],[11,"new","","Creates a new `HMAC` with the specified hash type using the `key`.",6,null],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",6,{"inputs":[{"name":"hmac"}],"output":{"name":"vec"}}],[11,"write","","",6,null],[11,"flush","","",6,{"inputs":[{"name":"hmac"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"hmac"}],"output":{"name":"hmac"}}],[11,"drop","","",6,{"inputs":[{"name":"hmac"}],"output":null}],[0,"pkcs5","openssl::crypto","",null,null],[5,"pbkdf2_hmac_sha1","openssl::crypto::pkcs5","Derives a key from a password and salt using the PBKDF2-HMAC-SHA1 algorithm.",null,null],[0,"pkey","openssl::crypto","",null,null],[3,"PKey","openssl::crypto::pkey","",null,null],[4,"Parts","","",null,null],[13,"Neither","","",7,null],[13,"Public","","",7,null],[13,"Both","","",7,null],[4,"Role","","Represents a role an asymmetric key might be appropriate for.",null,null],[13,"Encrypt","","",8,null],[13,"Decrypt","","",8,null],[13,"Sign","","",8,null],[13,"Verify","","",8,null],[4,"EncryptionPadding","","Type of encryption padding to use.",null,null],[13,"OAEP","","",9,null],[13,"PKCS1v15","","",9,null],[11,"clone","","",7,{"inputs":[{"name":"parts"}],"output":{"name":"parts"}}],[11,"clone","","",8,{"inputs":[{"name":"role"}],"output":{"name":"role"}}],[11,"clone","","",9,{"inputs":[{"name":"encryptionpadding"}],"output":{"name":"encryptionpadding"}}],[11,"new","","",10,{"inputs":[{"name":"pkey"}],"output":{"name":"pkey"}}],[11,"from_handle","","",10,null],[11,"private_key_from_pem","","Reads private key from PEM, takes ownership of handle",10,{"inputs":[{"name":"pkey"},{"name":"r"}],"output":{"name":"result"}}],[11,"gen","","",10,{"inputs":[{"name":"pkey"},{"name":"usize"}],"output":null}],[11,"save_pub","","Returns a serialized form of the public key, suitable for load_pub().",10,{"inputs":[{"name":"pkey"}],"output":{"name":"vec"}}],[11,"load_pub","","Loads a serialized form of the public key, as produced by save_pub().",10,null],[11,"save_priv","","Returns a serialized form of the public and private keys, suitable for\nload_priv().",10,{"inputs":[{"name":"pkey"}],"output":{"name":"vec"}}],[11,"load_priv","","Loads a serialized form of the public and private keys, as produced by\nsave_priv().",10,null],[11,"write_pem","","Stores private key as a PEM",10,{"inputs":[{"name":"pkey"},{"name":"w"}],"output":{"name":"result"}}],[11,"size","","Returns the size of the public key modulus.",10,{"inputs":[{"name":"pkey"}],"output":{"name":"usize"}}],[11,"can","","Returns whether this pkey object can perform the specified role.",10,{"inputs":[{"name":"pkey"},{"name":"role"}],"output":{"name":"bool"}}],[11,"max_data","","Returns the maximum amount of data that can be encrypted by an encrypt()\ncall.",10,{"inputs":[{"name":"pkey"}],"output":{"name":"usize"}}],[11,"encrypt_with_padding","","",10,null],[11,"decrypt_with_padding","","",10,null],[11,"encrypt","","Encrypts data using OAEP padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",10,null],[11,"decrypt","","Decrypts data, expecting OAEP padding, returning the decrypted data.",10,null],[11,"sign","","Signs data, using OpenSSL's default scheme and sha256. Unlike encrypt(),\ncan process an arbitrary amount of data; returns the signature.",10,null],[11,"verify","","Verifies a signature s (using OpenSSL's default scheme and sha256) on a\nmessage m. Returns true if the signature is valid, and false otherwise.",10,null],[11,"sign_with_hash","","",10,null],[11,"verify_with_hash","","",10,null],[11,"get_handle","","",10,null],[11,"drop","","",10,{"inputs":[{"name":"pkey"}],"output":null}],[0,"rand","openssl::crypto","",null,null],[5,"rand_bytes","openssl::crypto::rand","",null,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[0,"symm","openssl::crypto","",null,null],[3,"Crypter","openssl::crypto::symm","Represents a symmetric cipher context.",null,null],[4,"Mode","","",null,null],[13,"Encrypt","","",11,null],[13,"Decrypt","","",11,null],[4,"Type","","",null,null],[13,"AES_128_ECB","","",12,null],[13,"AES_128_CBC","","",12,null],[13,"AES_256_ECB","","",12,null],[13,"AES_256_CBC","","",12,null],[13,"RC4_128","","",12,null],[5,"encrypt","","Encrypts data, using the specified crypter type in encrypt mode with the\nspecified key and iv; returns the resulting (encrypted) data.",null,null],[5,"decrypt","","Decrypts data, using the specified crypter type in decrypt mode with the\nspecified key and iv; returns the resulting (decrypted) data.",null,null],[11,"clone","","",11,{"inputs":[{"name":"mode"}],"output":{"name":"mode"}}],[11,"clone","","",12,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[11,"new","","",13,{"inputs":[{"name":"crypter"},{"name":"type"}],"output":{"name":"crypter"}}],[11,"pad","","Enables or disables padding. If padding is disabled, total amount of\ndata encrypted must be a multiple of block size.",13,{"inputs":[{"name":"crypter"},{"name":"bool"}],"output":null}],[11,"init","","Initializes this crypter.",13,null],[11,"update","","Update this crypter with more data to encrypt or decrypt. Returns\nencrypted or decrypted bytes.",13,null],[11,"finalize","","Finish crypting. Returns the remaining partial block of output, if any.",13,{"inputs":[{"name":"crypter"}],"output":{"name":"vec"}}],[11,"drop","","",13,{"inputs":[{"name":"crypter"}],"output":null}],[0,"memcmp","openssl::crypto","",null,null],[5,"eq","openssl::crypto::memcmp","Returns `true` iff `a` and `b` contain the same bytes.",null,null],[0,"ssl","openssl","",null,null],[3,"SslContextOptions","openssl::ssl","",null,null],[3,"SslVerifyMode","","",null,null],[3,"SslContext","","An SSL context object",null,null],[3,"Ssl","","",null,null],[3,"SslStream","","A stream wrapper which handles SSL encryption for an underlying stream.",null,null],[4,"SslMethod","","Determines the SSL method supported",null,null],[13,"Sslv23","","Support the SSLv2, SSLv3 and TLSv1 protocols.",14,null],[13,"Sslv3","","Only support the SSLv3 protocol.",14,null],[13,"Tlsv1","","Only support the TLSv1 protocol.",14,null],[4,"MaybeSslStream","","A utility type to help in cases where the use of SSL is decided at runtime.",null,null],[13,"Ssl","","A connection using SSL",15,null],[13,"Normal","","A connection not using SSL",15,null],[0,"error","","",null,null],[4,"SslError","openssl::ssl::error","An SSL error",null,null],[13,"StreamError","","The underlying stream reported an error",16,null],[13,"SslSessionClosed","","The SSL session has been closed by the other end",16,null],[13,"OpenSslErrors","","An error in the OpenSSL library",16,null],[4,"OpensslError","","An error from the OpenSSL library",null,null],[13,"UnknownError","","An unknown error",17,null],[12,"library","openssl::ssl::error::OpensslError","The library reporting the error",17,null],[12,"function","","The function reporting the error",17,null],[12,"reason","","The reason for the error",17,null],[11,"fmt","openssl::ssl::error","",16,{"inputs":[{"name":"sslerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"sslerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",16,{"inputs":[{"name":"sslerror"}],"output":{"name":"str"}}],[11,"cause","","",16,{"inputs":[{"name":"sslerror"}],"output":{"name":"option"}}],[11,"eq","","",17,{"inputs":[{"name":"opensslerror"},{"name":"opensslerror"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"opensslerror"},{"name":"opensslerror"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"opensslerror"}],"output":{"name":"opensslerror"}}],[11,"fmt","","",17,{"inputs":[{"name":"opensslerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Creates a new `OpenSslErrors` with the current contents of the error\nstack.",16,{"inputs":[{"name":"sslerror"}],"output":{"name":"sslerror"}}],[11,"from_error","","Creates an `SslError` from the raw numeric error code.",16,{"inputs":[{"name":"sslerror"},{"name":"c_ulong"}],"output":{"name":"sslerror"}}],[6,"VerifyCallback","openssl::ssl","The signature of functions that can be used to manually verify certificates",null,null],[6,"VerifyCallbackData","","The signature of functions that can be used to manually verify certificates\nwhen user-data should be carried for all verification process",null,null],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLV2","","",null,null],[17,"SSL_OP_NO_SSLV3","","",null,null],[17,"SSL_OP_NO_TLSV1","","",null,null],[17,"SSL_OP_NO_TLSV1_2","","",null,null],[17,"SSL_OP_NO_TLSV1_1","","",null,null],[17,"SSL_OP_NO_DTLSV1","","",null,null],[17,"SSL_OP_NO_DTLSV1_2","","",null,null],[17,"SSL_VERIFY_PEER","","/// Verify that the server's certificate is trusted",null,null],[17,"SSL_VERIFY_NONE","","/// Do not verify the server's certificate",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","/// Terminate handshake if client did not return a certificate.\n/// Use together with SSL_VERIFY_PEER.",null,null],[11,"hash","","",18,null],[11,"cmp","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"eq","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",18,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"all","","Returns the set containing all flags.",18,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",18,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"c_long"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"c_long"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"c_long"}],"output":{"name":"sslcontextoptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",18,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":null}],[6,"Output","","",null,null],[11,"bitor","","Returns the union of the two sets of flags.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[6,"Output","","",null,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[6,"Output","","",null,null],[11,"bitand","","Returns the intersection between the two sets of flags.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[6,"Output","","",null,null],[11,"sub","","Returns the set difference of the two sets of flags.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[6,"Output","","",null,null],[11,"not","","Returns the complement of this set of flags.",18,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"eq","","",14,{"inputs":[{"name":"sslmethod"},{"name":"sslmethod"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"sslmethod"},{"name":"sslmethod"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"fmt","","",14,{"inputs":[{"name":"sslmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"sslmethod"}],"output":{"name":"sslmethod"}}],[11,"is_dtls","","",14,{"inputs":[{"name":"sslmethod"}],"output":{"name":"bool"}}],[11,"is_dtlsv1","","",14,{"inputs":[{"name":"sslmethod"}],"output":{"name":"bool"}}],[11,"is_dtlsv1_2","","",14,{"inputs":[{"name":"sslmethod"}],"output":{"name":"bool"}}],[11,"hash","","",19,null],[11,"cmp","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"eq","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",19,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"all","","Returns the set containing all flags.",19,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",19,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"i32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",19,{"inputs":[{"name":"sslverifymode"},{"name":"i32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",19,{"inputs":[{"name":"sslverifymode"},{"name":"i32"}],"output":{"name":"sslverifymode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",19,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",19,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":null}],[6,"Output","","",null,null],[11,"bitor","","Returns the union of the two sets of flags.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[6,"Output","","",null,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[6,"Output","","",null,null],[11,"bitand","","Returns the intersection between the two sets of flags.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[6,"Output","","",null,null],[11,"sub","","Returns the set difference of the two sets of flags.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[6,"Output","","",null,null],[11,"not","","Returns the complement of this set of flags.",19,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",20,{"inputs":[{"name":"mutex"},{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current task until it is able to do so.",20,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",20,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",20,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"from","alloc::boxed","",21,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",21,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",21,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",21,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",22,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",23,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",24,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","","",25,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",26,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",27,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"is","openssl","Returns true if the boxed type is the same as `T`",28,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",28,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",28,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",28,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",28,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",28,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",28,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",28,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[6,"Owned","openssl::ssl","",null,null],[11,"into_ascii_uppercase","collections::string","",29,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"into_ascii_lowercase","","",29,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[6,"Owned","openssl::ssl","",null,null],[11,"into_ascii_uppercase","collections::vec","",30,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"into_ascii_lowercase","","",30,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[6,"Owned","openssl::ssl","",null,null],[6,"Owned","","",null,null],[6,"Item","","",null,null],[11,"next","std::ascii","",31,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",31,null],[11,"next_back","","",31,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[6,"Output","openssl::ssl","",null,null],[11,"shl","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shr","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shl","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shr","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shl","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shr","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shl","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shr","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shl","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shr","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shl","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shr","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shl","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shr","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shl","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shr","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shl","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shr","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shl","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"shr","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"add","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"sub","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"mul","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"not","core::num","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitxor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitand","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"add","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"sub","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"mul","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"not","core::num","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitxor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitand","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"add","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"sub","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"mul","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"not","core::num","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitxor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitand","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"add","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"sub","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"mul","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"not","core::num","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitxor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitand","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"add","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"sub","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"mul","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"not","core::num","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitxor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitand","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"add","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"sub","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"mul","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"not","core::num","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitxor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitand","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"add","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"sub","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"mul","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"not","core::num","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitxor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitand","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"add","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"sub","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"mul","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"not","core::num","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitxor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitand","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"add","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"sub","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"mul","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"not","core::num","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitxor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitand","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"add","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"sub","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"mul","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"not","core::num","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitxor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitor","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitand","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"clone","std::thread::local","",33,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",33,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",34,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",34,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"get","std::thread::local::imp","",35,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",36,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",36,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",36,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",37,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",37,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",37,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",37,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"scoped","","Spawns a new child thread that must be joined within a given\nscope, and returns a `JoinGuard`.",37,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle's token available if it is not already.",38,null],[11,"name","","Gets the thread's name.",38,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",38,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",38,{"inputs":[{"name":"thread"},{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",39,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",39,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"thread","","Extracts a handle to the thread this guard will join on.",40,{"inputs":[{"name":"joinguard"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish, returning the result of the\nthread's calculation.",40,{"inputs":[{"name":"joinguard"}],"output":{"name":"t"}}],[11,"drop","","",40,null],[11,"clone","std::collections::hash::table","",41,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",42,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",43,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",43,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",43,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",44,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",44,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",44,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",45,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",45,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",42,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",42,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",42,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",42,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",42,{"inputs":[{"name":"bucket"},{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit's initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",42,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",42,null],[11,"next","","",45,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",45,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",45,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key's hash,\ninto this bucket in the hashtable. Note how `self` is 'moved' into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",45,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",44,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",44,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the 'ideal' location\nas determined by the key's hash stored in it.",44,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",44,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",44,null],[11,"take","","Removes this bucket's key and value from the hashtable.",44,null],[11,"replace","","",44,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",44,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",44,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",44,null],[11,"expect_full","","",46,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",47,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",47,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",48,{"inputs":[{"name":"rawtable"},{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable's capacity, similar to a vector's.",48,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",48,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",48,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",48,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",48,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",48,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",49,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::table","",49,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::table","",50,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",51,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::table","",51,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"len","","",51,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::table","",52,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"len","","",52,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::table","",53,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"len","","",53,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::table","",54,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"len","","",54,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",54,null],[11,"clone","","",48,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",48,null],[11,"clone","std::collections::hash::map","",55,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",56,{"inputs":[{"name":"hashmap"},{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Creates an empty hashmap which will use the given hasher to hash keys.",56,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",56,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",56,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",56,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&'a K`.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&'a V`.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&'a K, &'a V)`.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&'a K, &'a mut V)`.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",56,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",56,null],[11,"get","","Returns a reference to the value corresponding to the key.",56,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",56,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",56,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",56,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",56,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",56,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",56,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[6,"Output","openssl::ssl","",null,null],[11,"index","std::collections::hash::map","",56,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",57,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",58,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",59,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","std::collections::hash::map","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::map","",57,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"len","","",57,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::map","",60,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",60,null],[11,"len","","",60,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::map","",61,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"len","","",61,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::map","",58,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"len","","",58,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::map","",59,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"len","","",59,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::map","",62,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"len","","",62,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",63,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",63,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",63,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",64,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",64,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",64,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry's old value",64,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",64,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it",65,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",56,{"inputs":[{"name":"hashmap"},{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",56,null],[11,"clone","","",66,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",66,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[6,"Hasher","openssl::ssl","",null,null],[11,"hasher","std::collections::hash::map","",66,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",66,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",67,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",67,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",67,{"inputs":[{"name":"hashset"},{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hash_state","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",67,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",67,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",67,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",67,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",67,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &'a T.",67,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",67,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",67,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",67,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",67,null],[11,"contains","","Returns `true` if the set contains a value.",67,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",67,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",67,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"eq","","",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",67,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",67,{"inputs":[{"name":"hashset"},{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",67,null],[11,"default","","",67,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[6,"Output","openssl::ssl","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","std::collections::hash::set","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",67,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",68,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::set","",68,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"len","","",68,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::set","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"len","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::set","",70,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"len","","",70,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",71,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::set","",71,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"clone","","",72,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::set","",72,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"clone","","",73,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::set","",73,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"clone","","",74,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::collections::hash::set","",74,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[6,"Hasher","openssl::ssl","",null,null],[11,"hasher","std::collections::hash::state","",75,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",75,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",75,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"clone","collections::binary_heap","",76,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"default","","",76,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",76,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",76,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",76,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",76,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",76,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",76,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",76,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",76,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",76,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",76,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",76,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",76,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",76,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",76,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",76,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",76,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",76,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",76,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",76,null],[11,"clone","","",77,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::binary_heap","",77,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"next_back","","",77,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::binary_heap","",78,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"next_back","","",78,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::binary_heap","",79,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",79,null],[11,"next_back","","",79,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from_iter","","",76,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::binary_heap","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",76,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::binary_heap","",76,null],[11,"clone","collections::vec_deque","",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",80,null],[11,"default","","",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",80,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",80,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",80,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",80,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",80,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`Ringbuf`. The collection may reserve more space to avoid frequent reallocations.",80,null],[11,"shrink_to_fit","","Shrinks the capacity of the ringbuf as much as possible.",80,null],[11,"truncate","","Shortens a ringbuf, dropping excess elements from the back.",80,null],[11,"iter","","Returns a front-to-back iterator.",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",80,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",80,null],[11,"len","","Returns the number of elements in the `VecDeque`.",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Creates a draining iterator that clears the `VecDeque` and iterates over\nthe removed items from start to end.",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",80,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",80,null],[11,"push_back","","Appends an element to the back of a buffer",80,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_back_remove","","Removes an element from anywhere in the ringbuf and returns it, replacing it with the last\nelement.",80,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","Removes an element from anywhere in the ringbuf and returns it, replacing it with the first\nelement.",80,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at position `i` within the ringbuf. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",80,null],[11,"remove","","Removes and returns the element at position `i` from the ringbuf.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `i` is out of bounds.",80,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",80,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",80,null],[11,"resize","","Modifies the ringbuf in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",80,null],[11,"clone","","",81,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::vec_deque","",81,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",81,null],[11,"next_back","","",81,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"indexable","","",81,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",81,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::vec_deque","",82,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"next_back","","",82,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",83,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::vec_deque","",83,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"next_back","","",83,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",84,null],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::vec_deque","",84,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",84,null],[11,"next_back","","",84,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",80,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",80,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",80,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",80,null],[6,"Output","openssl::ssl","",null,null],[11,"index","collections::vec_deque","",80,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",80,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",80,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::vec_deque","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",80,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::vec_deque","",80,null],[11,"fmt","","",80,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","collections::vec_map","",85,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"clone","","",85,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"clone_from","","",85,null],[11,"hash","","",85,null],[11,"new","","Creates an empty `VecMap`.",85,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"with_capacity","","Creates an empty `VecMap` with space for at least `capacity`\nelements before resizing.",85,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"vecmap"}}],[11,"capacity","","Returns the number of elements the `VecMap` can hold without\nreallocating.",85,{"inputs":[{"name":"vecmap"}],"output":{"name":"usize"}}],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long\nas all inserted keys are less than `len`.",85,null],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long as all inserted\nkeys are less than `len`.",85,null],[11,"keys","","Returns an iterator visiting all keys in ascending order of the keys.\nThe iterator's element type is `usize`.",85,{"inputs":[{"name":"vecmap"}],"output":{"name":"keys"}}],[11,"values","","Returns an iterator visiting all values in ascending order of the keys.\nThe iterator's element type is `&'r V`.",85,{"inputs":[{"name":"vecmap"}],"output":{"name":"values"}}],[11,"iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys.\nThe iterator's element type is `(usize, &'r V)`.",85,{"inputs":[{"name":"vecmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in ascending order of the keys,\nwith mutable references to the values.\nThe iterator's element type is `(usize, &'r mut V)`.",85,{"inputs":[{"name":"vecmap"}],"output":{"name":"itermut"}}],[11,"append","","Moves all elements from `other` into the map while overwriting existing keys.",85,null],[11,"split_off","","Splits the collection into two at the given key.",85,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"vecmap"}}],[11,"drain","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, emptying (but not consuming) the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`. Keeps the allocated memory for reuse.",85,{"inputs":[{"name":"vecmap"}],"output":{"name":"drain"}}],[11,"len","","Returns the number of elements in the map.",85,{"inputs":[{"name":"vecmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",85,{"inputs":[{"name":"vecmap"}],"output":{"name":"bool"}}],[11,"clear","","Clears the map, removing all key-value pairs.",85,null],[11,"get","","Returns a reference to the value corresponding to the key.",85,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",85,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",85,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",85,{"inputs":[{"name":"vecmap"},{"name":"usize"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",85,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",85,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"entry"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",86,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",86,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",86,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.",87,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",88,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",88,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",88,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,\nand returns the entry's old value.",88,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",88,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"eq","","",85,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"option"}}],[11,"cmp","","",85,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"ordering"}}],[11,"fmt","","",85,{"inputs":[{"name":"vecmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",85,{"inputs":[{"name":"vecmap"},{"name":"i"}],"output":{"name":"vecmap"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::vec_map","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, consuming the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`.",85,{"inputs":[{"name":"vecmap"}],"output":{"name":"intoiter"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::vec_map","",85,null],[6,"Output","openssl::ssl","",null,null],[11,"index","collections::vec_map","",85,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[6,"Output","openssl::ssl","",null,null],[11,"index","collections::vec_map","",85,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",85,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",85,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"clone","","",89,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::vec_map","",89,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"next_back","","",89,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::vec_map","",90,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"next_back","","",90,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",91,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",92,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::vec_map","",93,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"next_back","","",93,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::vec_map","",91,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"next_back","","",91,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::vec_map","",92,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"next_back","","",92,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::vec_map","",94,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next_back","","",94,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","collections::linked_list","",95,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",96,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"clone","","",97,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",98,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",98,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",98,null],[11,"iter","","Provides a forward iterator.",98,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",98,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",98,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",98,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",98,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",98,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",98,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",98,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",98,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",98,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",98,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",98,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",98,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",98,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",98,null],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::linked_list","",95,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next_back","","",95,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::linked_list","",99,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"next_back","","",99,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",99,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",99,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::linked_list","",96,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"next_back","","",96,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",98,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::linked_list","Consumes the list into an iterator yielding elements by value.",98,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::linked_list","",98,null],[11,"eq","","",98,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",98,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",98,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",98,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",98,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",98,null],[11,"drop","std::dynamic_lib","",100,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",100,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",100,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",100,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",100,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",100,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",100,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::env","",101,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[6,"Item","openssl::ssl","",null,null],[11,"next","std::env","",102,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"clone","","",103,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",103,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",103,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",103,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::env","",104,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",104,null],[11,"fmt","","",105,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",105,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",105,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::env","",106,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"len","","",106,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::env","",107,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"len","","",107,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"hash","std::ffi::c_str","",108,null],[11,"cmp","","",108,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",108,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",108,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",108,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",108,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",108,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",108,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"clone","","",108,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",109,null],[11,"fmt","","",110,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",110,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",110,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",108,{"inputs":[{"name":"cstring"},{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",108,{"inputs":[{"name":"cstring"},{"name":"vec"}],"output":{"name":"cstring"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",108,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",108,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",109,null],[11,"as_ptr","","Returns the inner pointer to this C string.",109,null],[11,"to_bytes","","Converts this C string to a byte slice.",109,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",109,null],[6,"Target","openssl::ssl","",null,null],[11,"deref","std::ffi::c_str","",108,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",108,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",110,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",110,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",110,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",110,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",111,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"eq","std::ffi::c_str","",109,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",109,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",109,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"clone","std::ffi::os_str","",112,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",112,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",112,{"inputs":[{"name":"osstring"},{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",112,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",112,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&OsStr` slice.",112,null],[11,"from","","",112,{"inputs":[{"name":"osstring"},{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",112,{"inputs":[{"name":"osstring"},{"name":"t"}],"output":{"name":"osstring"}}],[6,"Output","openssl::ssl","",null,null],[11,"index","std::ffi::os_str","",112,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",113,{"inputs":[{"name":"osstr"},{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `OsStr` is valid unicode.",113,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow<str>`.",113,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",113,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",113,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",113,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[6,"Target","openssl::ssl","",null,null],[11,"deref","std::ffi::os_str","",112,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",112,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",112,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",112,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",112,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",112,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",112,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",112,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",112,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",112,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",112,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",112,null],[11,"eq","","",113,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",113,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",113,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",113,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",113,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",113,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",113,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",113,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",113,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"hash","","",113,null],[11,"fmt","","",113,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",112,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[6,"Owned","openssl::ssl","",null,null],[11,"to_owned","std::ffi::os_str","",113,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",113,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",112,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",29,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",114,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",115,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",115,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",116,null],[11,"eq","","",116,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",117,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",117,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"path","","Returns `None`.",117,{"inputs":[{"name":"file"}],"output":{"name":"option"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",117,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",117,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",117,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",117,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",117,null],[11,"write","","",117,null],[11,"flush","","",117,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",117,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank net set of options ready for configuration.",114,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",114,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",114,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",114,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",114,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",114,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",114,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",118,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",118,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",118,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",118,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",118,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"accessed","","Returns the most recent access time for a file.",118,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"modified","","Returns the most recent modification time for a file.",118,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",115,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",115,null],[11,"is_dir","","Test whether this file type represents a directory.",116,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",116,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",116,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::fs","",119,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",120,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",120,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",120,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",120,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::fs","",121,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"metadata","std::path","",122,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","",122,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","",122,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","",122,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","",122,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","",122,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","",122,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","",122,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"new","std::fs","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",123,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",123,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",123,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"get","std::io::lazy","",124,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity",125,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity",125,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",125,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",125,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",125,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",125,null],[11,"fill_buf","","",125,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",125,null],[11,"fmt","","",125,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",125,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity",127,{"inputs":[{"name":"bufwriter"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity",127,{"inputs":[{"name":"bufwriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",127,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying write.",127,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",127,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",127,null],[11,"flush","","",127,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",127,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",127,null],[11,"error","","Returns the error which caused the call to `into_inner` to fail.",126,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",126,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",111,{"inputs":[{"name":"error"},{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",126,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",126,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`",128,{"inputs":[{"name":"linewriter"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",128,{"inputs":[{"name":"linewriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",128,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",128,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",128,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",128,null],[11,"flush","","",128,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",128,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",129,null],[11,"with_capacities","","Creates a new buffered stream with explicitly listed capacities for the\nreader/writer buffer.",130,{"inputs":[{"name":"bufstream"},{"name":"usize"},{"name":"usize"},{"name":"s"}],"output":{"name":"bufstream"}}],[11,"new","","Creates a new buffered stream with the default reader/writer buffer\ncapacities.",130,{"inputs":[{"name":"bufstream"},{"name":"s"}],"output":{"name":"bufstream"}}],[11,"get_ref","","Gets a reference to the underlying stream.",130,{"inputs":[{"name":"bufstream"}],"output":{"name":"s"}}],[11,"get_mut","","Gets a mutable reference to the underlying stream.",130,{"inputs":[{"name":"bufstream"}],"output":{"name":"s"}}],[11,"into_inner","","Unwraps this `BufStream`, returning the underlying stream.",130,{"inputs":[{"name":"bufstream"}],"output":{"name":"result"}}],[11,"fill_buf","","",130,{"inputs":[{"name":"bufstream"}],"output":{"name":"result"}}],[11,"consume","","",130,null],[11,"read","","",130,null],[11,"write","","",130,null],[11,"flush","","",130,{"inputs":[{"name":"bufstream"}],"output":{"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"bufstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::io::cursor","",131,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",131,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",131,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",131,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",131,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current value of this cursor",131,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the value of this cursor",131,null],[11,"seek","","",131,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"seek","","",131,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"seek","","",131,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",131,null],[11,"read","","",131,null],[11,"read","","",131,null],[11,"fill_buf","","",131,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",131,null],[11,"fill_buf","","",131,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",131,null],[11,"fill_buf","","",131,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",131,null],[11,"write","","",131,null],[11,"flush","","",131,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",131,null],[11,"flush","","",131,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",111,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",134,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",111,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",111,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",111,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",111,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",111,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",111,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",111,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"read","alloc::boxed","",21,null],[11,"read_to_end","","",21,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",21,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","","",21,null],[11,"flush","","",21,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",21,null],[11,"write_fmt","","",21,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",21,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",21,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",21,null],[11,"read_until","","",21,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",21,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",30,null],[11,"write_all","","",30,null],[11,"flush","","",30,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"read","std::io::util","",135,null],[11,"fill_buf","","",135,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",135,null],[11,"read","","",136,null],[11,"write","","",137,null],[11,"flush","","",137,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",138,null],[11,"write","","",139,null],[11,"flush","","",139,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",140,null],[11,"flush","","",140,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",141,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",141,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",141,null],[11,"read_to_end","","",141,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",141,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",142,null],[11,"fill_buf","","",142,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",142,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",143,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",143,null],[11,"flush","","",143,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",143,null],[11,"write_fmt","","",143,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",144,null],[11,"flush","","",144,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",145,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",145,null],[11,"flush","","",145,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",145,null],[11,"write_fmt","","",145,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",146,null],[11,"flush","","",146,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",147,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",147,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",147,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",148,null],[11,"flush","","",148,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",149,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",150,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",150,null],[11,"fill_buf","","",150,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",150,null],[11,"read","","",151,null],[6,"Item","openssl::ssl","",null,null],[11,"next","std::io","",152,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",153,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::io","",154,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",153,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",153,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",153,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::io","",155,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::io","",156,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",157,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",157,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",157,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",157,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",157,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",157,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",157,null],[11,"fmt","","",157,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",157,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",157,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",158,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",158,null],[11,"clone","","",158,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",158,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",159,{"inputs":[{"name":"ipv4addr"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",159,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address 0.0.0.0.",159,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",159,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",159,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",159,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",159,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",159,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",159,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",159,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",159,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",159,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",157,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",159,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",159,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",159,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",159,null],[11,"partial_cmp","","",159,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",159,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",159,{"inputs":[{"name":"ipv4addr"},{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",160,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",160,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address ::.",160,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",160,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",160,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",160,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",160,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",160,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",160,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address's multicast scope if the address is multicast.",160,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",160,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",160,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",160,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",160,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",160,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",160,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",160,null],[11,"partial_cmp","","",160,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",160,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",161,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",161,null],[11,"eq","","",161,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",161,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",161,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",161,{"inputs":[{"name":"socketaddr"},{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",161,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"port","","Returns the port number associated with this socket address.",161,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",162,{"inputs":[{"name":"socketaddrv4"},{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",162,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"port","","Returns the port number associated with this socket address.",162,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",163,{"inputs":[{"name":"socketaddrv6"},{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",163,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"port","","Returns the port number associated with this socket address.",163,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"flowinfo","","Returns scope ID associated with this address, corresponding to the\n`sin6_flowinfo` field in C.",163,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"scope_id","","Returns scope ID associated with this address, corresponding to the\n`sin6_scope_id` field in C.",163,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"fmt","","",161,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",163,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",163,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",162,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",163,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",162,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",163,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",162,null],[11,"hash","","",163,null],[6,"Iter","openssl::ssl","",null,null],[11,"to_socket_addrs","std::net::addr","",161,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[6,"Iter","openssl::ssl","",null,null],[11,"to_socket_addrs","std::net::addr","",162,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[6,"Iter","openssl::ssl","",null,null],[11,"to_socket_addrs","std::net::addr","",163,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[6,"Iter","openssl::ssl","",null,null],[6,"Iter","","",null,null],[6,"Iter","","",null,null],[6,"Iter","","",null,null],[6,"Iter","","",null,null],[6,"Iter","","",null,null],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",164,{"inputs":[{"name":"tcpstream"},{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",164,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",164,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",164,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",164,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_nodelay","","Sets the nodelay flag on this connection to the boolean specified.",164,{"inputs":[{"name":"tcpstream"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_keepalive","","Sets the keepalive timeout to the timeout specified.",164,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read","","",164,null],[11,"write","","",164,null],[11,"flush","","",164,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",164,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",165,{"inputs":[{"name":"tcplistener"},{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",165,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",165,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",165,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",165,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::net::tcp","",166,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",165,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",167,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",167,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",167,null],[11,"local_addr","","Returns the socket address that this socket was created from.",167,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",167,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_broadcast","","Sets the broadcast flag on or off.",167,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_multicast_loop","","Sets the multicast loop flag to the specified value.",167,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"join_multicast","","Joins a multicast IP address (becomes a member of it).",167,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"leave_multicast","","Leaves a multicast IP address (drops membership from it).",167,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"set_multicast_time_to_live","","Sets the multicast TTL.",167,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"set_time_to_live","","Sets this socket's TTL.",167,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"fmt","","",167,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","openssl::ssl","",null,null],[11,"from_str","std::net::ip","",157,{"inputs":[{"name":"ipaddr"},{"name":"str"}],"output":{"name":"result"}}],[6,"Err","openssl::ssl","",null,null],[11,"from_str","std::net::ip","",159,{"inputs":[{"name":"ipv4addr"},{"name":"str"}],"output":{"name":"result"}}],[6,"Err","openssl::ssl","",null,null],[11,"from_str","std::net::ip","",160,{"inputs":[{"name":"ipv6addr"},{"name":"str"}],"output":{"name":"result"}}],[6,"Err","openssl::ssl","",null,null],[11,"from_str","std::net::addr","",161,{"inputs":[{"name":"socketaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",168,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",168,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",168,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",168,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::net","",169,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",169,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",169,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::net","",170,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"as_raw_fd","std::fs","",117,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",117,{"inputs":[{"name":"file"},{"name":"i32"}],"output":{"name":"file"}}],[11,"as_raw_fd","std::net::tcp","",164,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",165,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",167,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",164,{"inputs":[{"name":"tcpstream"},{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",165,{"inputs":[{"name":"tcplistener"},{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",167,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"from_vec","std::ffi::os_str","",112,{"inputs":[{"name":"osstring"},{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",112,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",113,null],[11,"as_bytes","","",113,null],[11,"mode","std::fs","",115,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",115,null],[11,"from_mode","","",115,{"inputs":[{"name":"permissions"},{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",114,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"as_raw","","",118,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"dev","std::sys::ext::fs","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime","","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blocks","","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ino","std::fs","",120,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",123,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",172,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",172,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"signal","","",173,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"eq","std::path","",174,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",174,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",174,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",174,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",174,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",174,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",174,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",174,null],[11,"fmt","","",174,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",174,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins `\\\\?\\`.",174,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",175,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",175,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",175,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",175,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",175,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",175,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",175,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",175,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",176,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",176,null],[11,"clone","","",176,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",176,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",176,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",176,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",176,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",176,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"fmt","","",177,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",177,null],[11,"cmp","","",177,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",177,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",177,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",177,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",177,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",177,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",177,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",177,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",177,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",177,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",178,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",179,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",178,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",178,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",178,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",178,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",179,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",179,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",179,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::path","",179,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",179,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::path","",178,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",178,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",178,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",178,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",178,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"hash","","",180,null],[11,"clone","","",180,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",180,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",180,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",180,null],[11,"pop","","Truncate `self` to `self.parent()`.",180,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",180,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",180,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",180,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",180,{"inputs":[{"name":"pathbuf"},{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",180,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",180,{"inputs":[{"name":"pathbuf"},{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",180,{"inputs":[{"name":"pathbuf"},{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",180,null],[11,"fmt","","",180,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",122,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",122,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `Path` is valid unicode.",122,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow<str>`.",122,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",122,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",122,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",122,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",122,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",122,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",122,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",122,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",122,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",122,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",122,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file()`.",122,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file()`, if possible.",122,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",122,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",122,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",122,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",122,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path's components viewed as `OsStr` slices.",122,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",122,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[6,"Target","openssl::ssl","",null,null],[11,"deref","std::path","",180,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",180,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",180,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[6,"Owned","openssl::ssl","",null,null],[11,"to_owned","std::path","",122,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",180,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",180,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",180,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",180,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",180,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"hash","","",122,null],[11,"as_ref","","",122,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",122,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",181,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",181,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",122,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",122,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",122,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",122,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",113,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","","",112,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",29,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",180,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"write","std::process","",182,null],[11,"flush","","",182,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",183,null],[11,"read","","",184,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",172,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",172,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",172,null],[11,"env","","Inserts or updates an environment variable mapping.",172,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",172,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",172,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",172,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process's stdin handle (file descriptor 0).",172,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process's stdout handle (file descriptor 1).",172,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process's stderr handle (file descriptor 2).",172,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",172,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",172,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",172,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",172,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",185,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",185,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"clone","","",186,{"inputs":[{"name":"stdioimp"}],"output":{"name":"stdioimp"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",187,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",187,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",187,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"fmt","","",173,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",173,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",173,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",173,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",173,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",173,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",188,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",188,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning a `Output`\ninstance.",188,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",189,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",189,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe's state\nflag.",189,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe's state\nflag.",189,{"inputs":[{"name":"signaltoken"},{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",190,null],[11,"new","std::sync::mpsc::oneshot","",191,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",191,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",191,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",191,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",191,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",191,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",191,null],[11,"drop_port","","",191,null],[11,"can_recv","","",191,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",191,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",191,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",191,null],[11,"eq","std::sync::mpsc::select","",192,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",192,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",193,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",193,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",193,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",194,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",194,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",194,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",194,null],[11,"drop","","",193,null],[11,"drop","","",194,null],[6,"Item","openssl::ssl","",null,null],[11,"next","std::sync::mpsc::select","",195,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"new","std::sync::mpsc::shared","",196,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"postinit_lock","","",196,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",196,null],[11,"send","","",196,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",196,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",196,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",196,null],[11,"drop_chan","","",196,null],[11,"drop_port","","",196,null],[11,"can_recv","","",196,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",196,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",196,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",196,null],[11,"new","std::sync::mpsc::stream","",197,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",197,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",197,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",197,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",197,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",197,null],[11,"drop_port","","",197,null],[11,"can_recv","","",197,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",197,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",197,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",197,null],[11,"fmt","std::sync::mpsc::sync","",198,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",199,{"inputs":[{"name":"packet"},{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",199,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",199,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",199,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",199,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",199,null],[11,"drop_chan","","",199,null],[11,"drop_port","","",199,null],[11,"can_recv","","",199,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",199,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",199,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",199,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",200,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",200,null],[11,"pop","","Pops some data from this queue.",200,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",200,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",201,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",201,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",201,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",201,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",201,null],[11,"clone","std::sync::mpsc","",202,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",202,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",202,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",203,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",203,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",203,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",203,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",204,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",204,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",204,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",204,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",205,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",205,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",205,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",206,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",206,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",206,null],[11,"send","","Sends a value on this synchronous channel.",207,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",207,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",207,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",207,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",208,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",208,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",208,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::sync::mpsc","",209,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[11,"next","std::sync::mpsc","",210,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","std::sync::mpsc","",208,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",208,null],[11,"fmt","","",202,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",202,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",202,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",202,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",205,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",205,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",205,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",205,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",203,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",203,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",203,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",204,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",204,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",204,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",211,{"inputs":[{"name":"barrier"},{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",211,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the \"leader thread\".",212,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"new","std::sync::condvar","Creates a new condition variable which is ready to be waited on and\nnotified.",213,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",213,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",213,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",213,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",213,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",213,null],[11,"drop","","",213,null],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",214,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",214,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",214,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",214,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",214,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",214,null],[11,"get","std::sync::future","Get the value of the future.",215,{"inputs":[{"name":"future"}],"output":{"name":"a"}}],[11,"into_inner","","Gets the value from this future, forcing evaluation.",215,{"inputs":[{"name":"future"}],"output":{"name":"a"}}],[11,"get_ref","","Executes the future's closure and then returns a reference\nto the result.  The reference lasts as long as\nthe future.",215,{"inputs":[{"name":"future"}],"output":{"name":"a"}}],[11,"from_value","","Create a future from a value.",215,{"inputs":[{"name":"future"},{"name":"a"}],"output":{"name":"future"}}],[11,"from_fn","","Create a future from a function.",215,{"inputs":[{"name":"future"},{"name":"f"}],"output":{"name":"future"}}],[11,"from_receiver","","Create a future from a port",215,{"inputs":[{"name":"future"},{"name":"receiver"}],"output":{"name":"future"}}],[11,"spawn","","Create a future from a unique closure.",215,{"inputs":[{"name":"future"},{"name":"f"}],"output":{"name":"future"}}],[11,"drop","std::sync::mutex","",20,null],[11,"fmt","","",20,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",216,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",216,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",216,null],[6,"Target","openssl::ssl","",null,null],[11,"deref","std::sync::mutex","",217,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",217,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",217,null],[11,"call_once","std::sync::once","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",218,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock<T>` which is unlocked.",219,{"inputs":[{"name":"rwlock"},{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",219,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",219,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",219,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",219,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",219,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"drop","","",219,null],[11,"fmt","","",219,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",220,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",220,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",220,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",220,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",220,null],[6,"Target","openssl::ssl","",null,null],[11,"deref","std::sync::rwlock","",221,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[6,"Target","openssl::ssl","",null,null],[11,"deref","std::sync::rwlock","",222,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",222,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",221,null],[11,"drop","","",222,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",223,{"inputs":[{"name":"semaphore"},{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",223,null],[11,"release","","Release a resource from this semaphore.",223,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",223,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",224,null],[11,"default","core::atomic","",225,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",226,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",227,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",228,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",229,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",225,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",225,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",225,null],[11,"swap","","Stores a value into the bool, returning the old value.",225,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the bool if the current value is the same as the expected value.",225,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",225,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",225,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",225,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",225,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",226,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",226,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",226,null],[11,"swap","","Stores a value into the isize, returning the old value.",226,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the isize if the current value is the same as the expected value.",226,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",226,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",226,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",226,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",226,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",226,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",227,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",227,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",227,null],[11,"swap","","Stores a value into the usize, returning the old value.",227,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the usize if the current value is the same as the expected value.",227,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",227,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",227,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",227,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",227,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",227,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",228,null],[11,"load","","Loads a value from the pointer.",228,null],[11,"store","","Stores a value into the pointer.",228,null],[11,"swap","","Stores a value into the pointer, returning the old value.",228,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the expected value.",228,null],[11,"fmt","std::time::duration","",230,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",230,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",230,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",230,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",230,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",230,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",230,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",230,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",230,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",230,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",230,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",230,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",230,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",230,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",230,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",230,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",230,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",230,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",230,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",230,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",230,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",230,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",230,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",230,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",230,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",230,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",230,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",230,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",230,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",230,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",230,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",230,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",230,{"inputs":[{"name":"duration"}],"output":{"name":"bool"}}],[6,"Output","openssl::ssl","",null,null],[11,"neg","std::time::duration","",230,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[6,"Output","openssl::ssl","",null,null],[11,"add","std::time::duration","",230,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[6,"Output","openssl::ssl","",null,null],[11,"sub","std::time::duration","",230,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[6,"Output","openssl::ssl","",null,null],[11,"mul","std::time::duration","",230,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[6,"Output","openssl::ssl","",null,null],[11,"div","std::time::duration","",230,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"fmt","","",230,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",231,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",231,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",231,null],[11,"wait","","Waits for a signal on the specified mutex.",231,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",231,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",231,null],[11,"lock","std::sys_common::mutex","Locks the mutex blocking the current thread until it is available.",232,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",232,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",232,null],[11,"destroy","","Deallocates all resources associated with this mutex.",232,null],[6,"Item","openssl::ssl","",null,null],[11,"next","std::sys_common::net2","",233,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",233,null],[11,"connect","","",234,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",234,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_nodelay","","",234,{"inputs":[{"name":"tcpstream"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_keepalive","","",234,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read","","",234,null],[11,"write","","",234,null],[11,"peer_addr","","",234,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",234,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",234,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",234,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",234,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",235,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",235,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",235,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",235,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",235,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",235,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",236,{"inputs":[{"name":"udpsocket"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",236,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",236,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",236,null],[11,"send_to","","",236,null],[11,"set_broadcast","","",236,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_multicast_loop","","",236,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"join_multicast","","",236,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"leave_multicast","","",236,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"multicast_time_to_live","","",236,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"time_to_live","","",236,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"duplicate","","",236,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",236,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","std::sys_common::poison","",237,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",237,null],[11,"get","","",237,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",238,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",238,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",238,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",238,{"inputs":[{"name":"poisonerror"},{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",238,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",238,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",238,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",239,{"inputs":[{"name":"trylockerror"},{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",239,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",239,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",239,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",239,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",240,{"inputs":[{"name":"reentrantmutex"},{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",240,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",240,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",240,null],[11,"fmt","","",240,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Target","openssl::ssl","",null,null],[11,"deref","std::sys_common::remutex","",241,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",241,null],[11,"read","std::sys_common::rwlock","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",242,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",242,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",242,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",242,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",242,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",242,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",242,null],[11,"get","std::sys_common::thread_local","Gets the value associated with this TLS key",243,null],[11,"set","","Sets this TLS key to a new value.",243,null],[11,"destroy","","Deallocates this OS TLS key.",243,null],[11,"new","","Creates a new managed OS TLS key.",244,{"inputs":[{"name":"key"},{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",244,null],[11,"set","","See StaticKey::set",244,null],[11,"drop","","",244,null],[11,"clone","std::sys_common::wtf8","",245,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",245,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",245,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",245,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",245,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",245,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",245,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",245,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",245,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",245,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",245,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",245,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",245,{"inputs":[{"name":"codepoint"},{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",245,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",245,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",245,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",246,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",246,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",246,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",246,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",246,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",246,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",246,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",246,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",246,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&str` slice.",247,{"inputs":[{"name":"wtf8"},{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",247,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b'\\xFF' otherwise.",247,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_point_at","","Returns the code point at `position`.",247,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"codepoint"}}],[11,"code_point_range_at","","Returns the code point at `position`\nand the position of the next code point.",247,null],[11,"code_points","","Returns an iterator for the string’s code points.",247,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&str` slice.",247,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&str` slice if the contents are well-formed in UTF-8.",247,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",247,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[6,"Target","openssl::ssl","",null,null],[11,"deref","std::sys_common::wtf8","",246,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",246,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an new, empty WTF-8 string.",246,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates an new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",246,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",246,{"inputs":[{"name":"wtf8buf"},{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&str` slice.",246,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",246,null],[11,"as_slice","","",246,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",246,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",246,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",246,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",246,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",246,null],[11,"push","","Append a code point at the end of the string.",246,null],[11,"truncate","","Shortens a string to the specified length.",246,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",246,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",246,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",246,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",246,null],[11,"eq","","",247,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",247,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",247,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",247,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",247,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",247,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",247,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",247,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Output","openssl::ssl","",null,null],[11,"index","std::sys_common::wtf8","",247,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[6,"Output","openssl::ssl","",null,null],[11,"index","std::sys_common::wtf8","",247,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[6,"Output","openssl::ssl","",null,null],[11,"index","std::sys_common::wtf8","",247,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[6,"Output","openssl::ssl","",null,null],[11,"index","std::sys_common::wtf8","",247,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",248,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::sys_common::wtf8","",248,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",248,null],[11,"clone","","",249,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::sys_common::wtf8","",249,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",249,null],[11,"hash","","",245,null],[11,"hash","","",246,null],[11,"hash","","",247,null],[6,"Owned","openssl::ssl","",null,null],[11,"is_ascii","std::sys_common::wtf8","",247,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",247,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",247,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",247,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",247,null],[11,"make_ascii_lowercase","","",247,null],[11,"new","std::sys::condvar","",250,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","",250,null],[11,"notify_all","","",250,null],[11,"wait","","",250,null],[11,"wait_timeout","","",250,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",250,null],[11,"new","std::sys::fd","",251,{"inputs":[{"name":"filedesc"},{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",251,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",251,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",251,null],[11,"write","","",251,null],[11,"set_cloexec","","",251,null],[11,"drop","","",251,null],[11,"clone","std::sys::fs2","",252,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",253,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",253,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",253,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",253,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",254,null],[11,"eq","","",254,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",254,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",254,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",255,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",255,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"accessed","","",255,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"modified","","",255,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"file_type","","",255,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"raw","","",255,{"inputs":[{"name":"fileattr"}],"output":{"name":"stat"}}],[11,"as_raw_stat","std::fs","",118,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"as_raw_stat","std::sys::ext::fs","",171,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"readonly","std::sys::fs2","",253,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",253,null],[11,"mode","","",253,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",254,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",254,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",254,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::sys::fs2","",256,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",257,null],[11,"path","","",258,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",258,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",258,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",258,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",258,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",252,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","",252,null],[11,"write","","",252,null],[11,"append","","",252,null],[11,"truncate","","",252,null],[11,"create","","",252,null],[11,"mode","","",252,null],[11,"open","","",259,{"inputs":[{"name":"file"},{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",259,{"inputs":[{"name":"file"},{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"into_fd","","",259,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"file_attr","","",259,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",259,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",259,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",259,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",259,null],[11,"write","","",259,null],[11,"flush","","",259,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",259,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fd","","",259,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",260,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",260,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",260,null],[11,"fmt","","",259,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",261,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","",261,null],[11,"unlock","","",261,null],[11,"try_lock","","",261,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",261,null],[11,"new","","",262,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","",262,null],[11,"try_lock","","",262,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",262,null],[11,"destroy","","",262,null],[11,"new","std::sys::net","",263,{"inputs":[{"name":"socket"},{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",263,null],[11,"duplicate","","",263,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",263,null],[6,"Item","openssl::ssl","",null,null],[11,"next","std::sys::os","",264,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",264,null],[11,"fmt","","",265,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",265,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",265,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::sys::os","",266,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",266,null],[11,"len","","",266,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","std::sys::os","",267,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",267,null],[11,"hash","std::sys::os_str","",268,null],[11,"clone","","",268,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",269,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",268,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",268,{"inputs":[{"name":"buf"},{"name":"string"}],"output":{"name":"buf"}}],[11,"as_slice","","",268,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",268,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",268,null],[11,"from_str","","",269,{"inputs":[{"name":"slice"},{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",269,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",269,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",269,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe2","",270,{"inputs":[{"name":"anonpipe"},{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",270,null],[11,"write","","",270,null],[11,"into_fd","","",270,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"clone","std::sys::process2","",271,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"new","","",271,{"inputs":[{"name":"command"},{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",271,null],[11,"args","","",271,null],[11,"env","","",271,null],[11,"env_remove","","",271,null],[11,"env_clear","","",271,null],[11,"cwd","","",271,null],[11,"fmt","","",272,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",272,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",272,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",272,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",272,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",272,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",272,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","",273,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"spawn","","",273,{"inputs":[{"name":"process"},{"name":"command"},{"name":"stdio"},{"name":"stdio"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"wait","","",273,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"try_wait","","",273,{"inputs":[{"name":"process"}],"output":{"name":"option"}}],[11,"read","std::sys::rwlock","",274,null],[11,"try_read","","",274,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",274,null],[11,"try_write","","",274,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",274,null],[11,"write_unlock","","",274,null],[11,"destroy","","",274,null],[11,"new","std::sys::stack_overflow","",275,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"drop","","",275,null],[11,"new","std::sys::thread","",276,{"inputs":[{"name":"thread"},{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",276,null],[11,"set_name","","",276,null],[11,"sleep","","",276,null],[11,"join","","",276,null],[11,"drop","","",276,null],[11,"now","std::sys::time::inner","",277,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"ns","","",277,{"inputs":[{"name":"steadytime"}],"output":{"name":"u64"}}],[6,"Output","openssl::ssl","",null,null],[11,"new","std::sys::stdio","",278,{"inputs":[{"name":"stdin"}],"output":{"name":"stdin"}}],[11,"read","","",278,null],[11,"new","","",279,{"inputs":[{"name":"stdout"}],"output":{"name":"stdout"}}],[11,"write","","",279,null],[11,"new","","",280,{"inputs":[{"name":"stderr"}],"output":{"name":"stderr"}}],[11,"write","","",280,null],[11,"write","","",280,null],[11,"flush","","",280,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"clone","std::rt::libunwind","",281,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"new","std::rand::os::imp","Create a new `OsRng`.",282,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",282,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",282,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",282,null],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",283,{"inputs":[{"name":"readerrng"},{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",283,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",283,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",283,null],[11,"clone","std::rand","",284,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",284,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",284,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",284,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",284,null],[11,"from_seed","","",284,null],[11,"reseed","","",285,null],[11,"clone","","",286,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",286,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",286,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",286,null],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",287,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",287,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",287,null],[11,"finish","","",287,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",287,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",287,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"fmt","core::simd","",288,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",288,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",289,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",289,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",290,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",290,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",291,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",291,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",292,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",292,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",293,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",293,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",294,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",294,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",295,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",295,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",296,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",296,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",297,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",297,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"clone","collections::str","",298,{"inputs":[{"name":"decompositiontype"}],"output":{"name":"decompositiontype"}}],[11,"clone","","",299,{"inputs":[{"name":"decompositions"}],"output":{"name":"decompositions"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::str","",299,{"inputs":[{"name":"decompositions"}],"output":{"name":"option"}}],[11,"size_hint","","",299,null],[11,"clone","","",300,{"inputs":[{"name":"recompositionstate"}],"output":{"name":"recompositionstate"}}],[11,"clone","","",301,{"inputs":[{"name":"recompositions"}],"output":{"name":"recompositions"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::str","",301,{"inputs":[{"name":"recompositions"}],"output":{"name":"option"}}],[11,"clone","","",302,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::str","",302,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",302,null],[11,"borrow","collections::string","",29,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[6,"Owned","openssl::ssl","",null,null],[11,"fmt","core::str::pattern","",303,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",303,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",303,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",303,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",304,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[6,"Searcher","openssl::ssl","",null,null],[11,"into_searcher","core::str::pattern","",305,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",304,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",304,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",304,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",306,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"eq","","",307,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",307,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",307,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[6,"Searcher","openssl::ssl","",null,null],[11,"haystack","core::str::pattern","",306,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",306,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",306,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",308,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",308,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",308,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",308,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",308,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",308,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",308,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",308,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[6,"Searcher","openssl::ssl","",null,null],[11,"clone","core::str::pattern","",309,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",309,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",309,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",309,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",309,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",309,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",309,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",309,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[6,"Searcher","openssl::ssl","",null,null],[11,"clone","core::str::pattern","",310,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",310,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",310,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",310,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",310,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",310,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",310,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",310,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[6,"Searcher","openssl::ssl","",null,null],[6,"Searcher","","",null,null],[11,"fmt","core::cmp","",311,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",311,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",311,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",311,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",311,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",311,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",311,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"new","core::ptr","Creates a new `Unique`.",312,null],[11,"get","","Dereferences the content.",312,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",312,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[6,"Target","openssl::ssl","",null,null],[11,"deref","core::ptr","",312,null],[11,"fmt","","",312,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",30,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",30,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",30,null],[11,"from_raw_buf","","Creates a vector by copying the elements from a raw pointer.",30,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",30,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",30,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",30,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",30,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",30,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",30,null],[11,"as_slice","","Extracts a slice containing the entire vector.",30,null],[11,"as_mut_slice","","Deprecated: use `&mut s[..]` instead.",30,null],[11,"set_len","","Sets the length of a vector.",30,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",30,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",30,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",30,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",30,null],[11,"push","","Appends an element to the back of a collection.",30,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it is empty.",30,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",30,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",30,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",30,null],[11,"len","","Returns the number of elements in the vector.",30,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",30,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"map_in_place","","Converts a `Vec<T>` to a `Vec<U>` where `T` and `U` have the same\nsize and in case they are not zero-sized the same minimal alignment.",30,{"inputs":[{"name":"vec"},{"name":"f"}],"output":{"name":"vec"}}],[11,"split_off","","Splits the collection into two at the given index.",30,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",30,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",30,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",30,null],[11,"clone","","",30,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",30,null],[11,"hash","","",30,null],[6,"Output","openssl::ssl","",null,null],[11,"index","collections::vec","",30,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",30,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[6,"Output","openssl::ssl","",null,null],[11,"index","collections::vec","",30,null],[6,"Output","openssl::ssl","",null,null],[11,"index","collections::vec","",30,null],[6,"Output","openssl::ssl","",null,null],[11,"index","collections::vec","",30,null],[6,"Output","openssl::ssl","",null,null],[11,"index","collections::vec","",30,null],[11,"index_mut","","",30,null],[11,"index_mut","","",30,null],[11,"index_mut","","",30,null],[11,"index_mut","","",30,null],[6,"Target","openssl::ssl","",null,null],[11,"deref","collections::vec","",30,null],[11,"deref_mut","","",30,null],[11,"from_iter","","",30,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::vec","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",30,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::vec","",30,null],[11,"eq","","",30,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","collections::borrow","",313,null],[11,"ne","","",313,null],[11,"eq","","",313,null],[11,"ne","","",313,null],[11,"eq","","",313,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",313,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"partial_cmp","","",30,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",30,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[6,"Output","openssl::ssl","",null,null],[11,"add","collections::vec","",30,null],[11,"drop","","",30,null],[11,"default","","",30,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",30,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",30,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",30,null],[11,"from","","",30,null],[11,"from","","",30,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",313,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",30,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"into_inner","","Drops all items that have not yet been moved and returns the empty vector.",314,{"inputs":[{"name":"intoiter"}],"output":{"name":"vec"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::vec","",314,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",314,null],[11,"count","","",314,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",314,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",314,null],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::vec","",315,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",315,null],[11,"next_back","","",315,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",315,null],[6,"Output","openssl::ssl","",null,null],[11,"index","collections::bit","",316,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"new","","Creates an empty `BitVec`.",316,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"from_elem","","Creates a `BitVec` that holds `nbits` elements, setting each element\nto `bit`.",316,{"inputs":[{"name":"bitvec"},{"name":"usize"},{"name":"bool"}],"output":{"name":"bitvec"}}],[11,"with_capacity","","Constructs a new, empty `BitVec` with the specified capacity.",316,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bitvec"}}],[11,"from_bytes","","Transforms a byte-vector into a `BitVec`. Each byte becomes eight bits,\nwith the most significant bits of each byte coming first. Each\nbit becomes `true` if equal to 1 or `false` if equal to 0.",316,null],[11,"from_fn","","Creates a `BitVec` of the specified length where the value at each index\nis `f(index)`.",316,{"inputs":[{"name":"bitvec"},{"name":"usize"},{"name":"f"}],"output":{"name":"bitvec"}}],[11,"get","","Retrieves the value at index `i`, or `None` if the index is out of bounds.",316,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"option"}}],[11,"set","","Sets the value of a bit at an index `i`.",316,null],[11,"set_all","","Sets all bits to 1.",316,null],[11,"negate","","Flips all bits.",316,null],[11,"union","","Calculates the union of two bitvectors. This acts like the bitwise `or`\nfunction.",316,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"intersect","","Calculates the intersection of two bitvectors. This acts like the\nbitwise `and` function.",316,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"difference","","Calculates the difference between two bitvectors.",316,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"all","","Returns `true` if all bits are 1.",316,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over the elements of the vector in order.",316,{"inputs":[{"name":"bitvec"}],"output":{"name":"iter"}}],[11,"none","","Returns `true` if all bits are 0.",316,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"any","","Returns `true` if any bit is 1.",316,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"to_bytes","","Organises the bits into bytes, such that the first bit in the\n`BitVec` becomes the high-order bit of the first byte. If the\nsize of the `BitVec` is not a multiple of eight then trailing bits\nwill be filled-in with `false`.",316,{"inputs":[{"name":"bitvec"}],"output":{"name":"vec"}}],[11,"eq_vec","","Compares a `BitVec` to a slice of `bool`s.\nBoth the `BitVec` and slice must have the same length.",316,null],[11,"truncate","","Shortens a `BitVec`, dropping excess elements.",316,null],[11,"reserve","","Reserves capacity for at least `additional` more bits to be inserted in the given\n`BitVec`. The collection may reserve more space to avoid frequent reallocations.",316,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bits to be inserted in the\ngiven `BitVec`. Does nothing if the capacity is already sufficient.",316,null],[11,"capacity","","Returns the capacity in bits for this bit vector. Inserting any\nelement less than this amount will not trigger a resizing.",316,{"inputs":[{"name":"bitvec"}],"output":{"name":"usize"}}],[11,"grow","","Grows the `BitVec` in-place, adding `n` copies of `value` to the `BitVec`.",316,null],[11,"pop","","Removes the last bit from the BitVec, and returns it. Returns None if the BitVec is empty.",316,{"inputs":[{"name":"bitvec"}],"output":{"name":"option"}}],[11,"push","","Pushes a `bool` onto the end.",316,null],[11,"len","","Returns the total number of bits in this vector",316,{"inputs":[{"name":"bitvec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if there are no bits in this vector",316,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"clear","","Clears all bits in this vector.",316,null],[11,"default","","",316,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"from_iter","","",316,{"inputs":[{"name":"bitvec"},{"name":"i"}],"output":{"name":"bitvec"}}],[11,"extend","","",316,null],[11,"clone","","",316,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"clone_from","","",316,null],[11,"partial_cmp","","",316,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"option"}}],[11,"cmp","","",316,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"ordering"}}],[11,"fmt","","",316,{"inputs":[{"name":"bitvec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",316,null],[11,"eq","","",316,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"clone","","",317,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::bit","",317,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",317,null],[11,"next_back","","",317,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"indexable","","",317,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",317,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[11,"clone","collections::bit","",318,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"default","","",318,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"from_iter","","",318,{"inputs":[{"name":"bitset"},{"name":"i"}],"output":{"name":"bitset"}}],[11,"extend","","",318,null],[11,"partial_cmp","","",318,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"option"}}],[11,"cmp","","",318,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"ordering"}}],[11,"eq","","",318,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"new","","Creates a new empty `BitSet`.",318,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"with_capacity","","Creates a new `BitSet` with initially no contents, able to\nhold `nbits` elements without resizing.",318,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bitset"}}],[11,"from_bit_vec","","Creates a new `BitSet` from the given bit vector.",318,{"inputs":[{"name":"bitset"},{"name":"bitvec"}],"output":{"name":"bitset"}}],[11,"capacity","","Returns the capacity in bits for this bit vector. Inserting any\nelement less than this amount will not trigger a resizing.",318,{"inputs":[{"name":"bitset"}],"output":{"name":"usize"}}],[11,"reserve_len","","Reserves capacity for the given `BitSet` to contain `len` distinct elements. In the case\nof `BitSet` this means reallocations will not occur as long as all inserted elements\nare less than `len`.",318,null],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `BitSet` to contain `len` distinct elements.\nIn the case of `BitSet` this means reallocations will not occur as long as all inserted\nelements are less than `len`.",318,null],[11,"into_bit_vec","","Consumes this set to return the underlying bit vector.",318,{"inputs":[{"name":"bitset"}],"output":{"name":"bitvec"}}],[11,"get_ref","","Returns a reference to the underlying bit vector.",318,{"inputs":[{"name":"bitset"}],"output":{"name":"bitvec"}}],[11,"shrink_to_fit","","Truncates the underlying vector to the least length required.",318,null],[11,"iter","","Iterator over each u32 stored in the `BitSet`.",318,{"inputs":[{"name":"bitset"}],"output":{"name":"setiter"}}],[11,"union","","Iterator over each u32 stored in `self` union `other`.\nSee [union_with](#method.union_with) for an efficient in-place version.",318,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"union"}}],[11,"intersection","","Iterator over each usize stored in `self` intersect `other`.\nSee [intersect_with](#method.intersect_with) for an efficient in-place version.",318,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"intersection"}}],[11,"difference","","Iterator over each usize stored in the `self` setminus `other`.\nSee [difference_with](#method.difference_with) for an efficient in-place version.",318,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Iterator over each u32 stored in the symmetric difference of `self` and `other`.\nSee [symmetric_difference_with](#method.symmetric_difference_with) for\nan efficient in-place version.",318,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"symmetricdifference"}}],[11,"union_with","","Unions in-place with the specified other bit vector.",318,null],[11,"intersect_with","","Intersects in-place with the specified other bit vector.",318,null],[11,"difference_with","","Makes this bit vector the difference with the specified other bit vector\nin-place.",318,null],[11,"symmetric_difference_with","","Makes this bit vector the symmetric difference with the specified other\nbit vector in-place.",318,null],[11,"len","","Returns the number of set bits in this set.",318,{"inputs":[{"name":"bitset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns whether there are no bits set in this set",318,{"inputs":[{"name":"bitset"}],"output":{"name":"bool"}}],[11,"clear","","Clears all bits in this set",318,null],[11,"contains","","Returns `true` if this set contains the specified integer.",318,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",318,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",318,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",318,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",318,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",318,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"fmt","","",318,{"inputs":[{"name":"bitset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",318,null],[11,"clone","","",319,{"inputs":[{"name":"setiter"}],"output":{"name":"setiter"}}],[11,"clone","","",320,{"inputs":[{"name":"twobitpositions"}],"output":{"name":"twobitpositions"}}],[11,"clone","","",321,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"clone","","",322,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"clone","","",323,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"clone","","",324,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::bit","",319,{"inputs":[{"name":"setiter"}],"output":{"name":"option"}}],[11,"size_hint","","",319,null],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::bit","",320,{"inputs":[{"name":"twobitpositions"}],"output":{"name":"option"}}],[11,"size_hint","","",320,null],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::bit","",321,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",321,null],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::bit","",322,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",322,null],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::bit","",323,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",323,null],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::bit","",324,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",324,null],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[11,"next","collections::btree::node","",325,{"inputs":[{"name":"rawitems"}],"output":{"name":"option"}}],[11,"next_back","","",325,{"inputs":[{"name":"rawitems"}],"output":{"name":"option"}}],[11,"drop","","",325,null],[11,"drop","","",326,null],[11,"as_slices","","",326,null],[11,"as_slices_mut","","",326,null],[11,"as_slices_internal","","",326,{"inputs":[{"name":"node"}],"output":{"name":"nodeslice"}}],[11,"as_slices_internal_mut","","",326,{"inputs":[{"name":"node"}],"output":{"name":"mutnodeslice"}}],[11,"keys","","",326,null],[11,"keys_mut","","",326,null],[11,"vals","","",326,null],[11,"vals_mut","","",326,null],[11,"edges","","",326,null],[11,"edges_mut","","",326,null],[11,"clone","","",326,{"inputs":[{"name":"node"}],"output":{"name":"node"}}],[11,"clone","","",327,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"search","","Searches for the given key in the node. If it finds an exact match,\n`Found` will be yielded with the matching index. If it doesn't find an exact match,\n`GoDown` will be yielded with the index of the subtree the key must lie in.",326,{"inputs":[{"name":"node"},{"name":"noderef"},{"name":"q"}],"output":{"name":"searchresult"}}],[11,"make_leaf_root","","Make a leaf root from scratch",326,{"inputs":[{"name":"node"},{"name":"usize"}],"output":{"name":"node"}}],[11,"make_internal_root","","Make an internal root and swap it with an old root",326,null],[11,"len","","How many key-value pairs the node contains",326,{"inputs":[{"name":"node"}],"output":{"name":"usize"}}],[11,"is_empty","","Does the node not contain any key-value pairs",326,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"capacity","","How many key-value pairs the node can fit",326,{"inputs":[{"name":"node"}],"output":{"name":"usize"}}],[11,"is_leaf","","If the node has any children",326,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"is_underfull","","if the node has too few elements",326,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"is_full","","if the node cannot fit any more elements",326,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"node","","Returns a reference to the node that contains the pointed-to edge or key/value pair. This\nis very different from `edge` and `edge_mut` because those return children of the node\nreturned by `node`.",327,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"as_raw","","Converts a handle into one that stores the same information using a raw pointer. This can\nbe useful in conjunction with `from_raw` when the type system is insufficient for\ndetermining the lifetimes of the nodes.",327,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"from_raw","","Converts from a handle stored with a raw pointer, which isn't directly usable, to a handle\nstored with a reference. This is an unsafe inverse of `as_raw`, and together they allow\nunsafely extending the lifetime of the reference to the `Node`.",327,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"from_raw_mut","","Converts from a handle stored with a raw pointer, which isn't directly usable, to a handle\nstored with a mutable reference. This is an unsafe inverse of `as_raw`, and together they\nallow unsafely extending the lifetime of the reference to the `Node`.",327,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"into_edge","","Turns the handle into a reference to the edge it points at. This is necessary because the\nreturned pointer has a larger lifetime than what would be returned by `edge` or `edge_mut`,\nmaking it more suitable for moving down a chain of nodes.",327,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"into_edge_mut","","Turns the handle into a mutable reference to the edge it points at. This is necessary\nbecause the returned pointer has a larger lifetime than what would be returned by\n`edge_mut`, making it more suitable for moving down a chain of nodes.",327,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"force","","Figure out whether this handle is pointing to something in a leaf node or to something in\nan internal node, clarifying the type according to the result.",327,{"inputs":[{"name":"handle"}],"output":{"name":"forceresult"}}],[11,"insert_as_leaf","","Tries to insert this key-value pair at the given index in this leaf node\nIf the node is full, we have to split it.",327,null],[11,"edge_mut","","Returns a mutable reference to the edge pointed-to by this handle. This should not be\nconfused with `node`, which references the parent node of what is returned here.",327,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"insert_as_internal","","Tries to insert this key-value pair at the given index in this internal node\nIf the node is full, we have to split it.",327,{"inputs":[{"name":"handle"},{"name":"k"},{"name":"v"},{"name":"node"}],"output":{"name":"insertionresult"}}],[11,"handle_underflow","","Handle an underflow in this node's child. We favour handling \"to the left\" because we know\nwe're empty, but our neighbour can be full. Handling to the left means when we choose to\nsteal, we pop off the end of our neighbour (always fast) and \"unshift\" ourselves\n(always slow, but at least faster since we know we're half-empty).\nHandling \"to the right\" reverses these roles. Of course, we merge whenever possible\nbecause we want dense nodes, and merging is about equal work regardless of direction.",327,null],[11,"into_kv","","Turns the handle into references to the key and value it points at. This is necessary\nbecause the returned pointers have larger lifetimes than what would be returned by `key`\nor `val`.",327,null],[11,"into_kv_mut","","Turns the handle into mutable references to the key and value it points at. This is\nnecessary because the returned pointers have larger lifetimes than what would be returned\nby `key_mut` or `val_mut`.",327,null],[11,"into_left_edge","","Convert this handle into one pointing at the edge immediately to the left of the key/value\npair pointed-to by this handle. This is useful because it returns a reference with larger\nlifetime than `left_edge`.",327,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"key_mut","","Returns a mutable reference to the key pointed-to by this handle. This doesn't return a\nreference with a lifetime as large as `into_kv_mut`, but it also does not consume the\nhandle.",327,{"inputs":[{"name":"handle"}],"output":{"name":"k"}}],[11,"val_mut","","Returns a mutable reference to the value pointed-to by this handle. This doesn't return a\nreference with a lifetime as large as `into_kv_mut`, but it also does not consume the\nhandle.",327,{"inputs":[{"name":"handle"}],"output":{"name":"v"}}],[11,"left_edge","","Gets the handle pointing to the edge immediately to the left of the key/value pair pointed\nto by this handle.",327,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"right_edge","","Gets the handle pointing to the edge immediately to the right of the key/value pair pointed\nto by this handle.",327,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"remove_as_leaf","","Removes the key/value pair at the handle's location.",327,null],[11,"kv_handle","","Returns the mutable handle pointing to the key/value pair at a given index.",326,{"inputs":[{"name":"node"},{"name":"usize"}],"output":{"name":"handle"}}],[11,"iter","","",326,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"iter_mut","","",326,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"into_iter","","",326,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"hoist_lone_child","","When a node has no keys or values and only a single edge, extract that edge.",326,null],[11,"clone","","",328,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"elemsandedges"}}],[6,"Item","openssl::ssl","",null,null],[6,"Edge","","",null,null],[11,"next_kv","collections::btree::node","",328,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_kv_back","","",328,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_edge","","",328,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_edge_back","","",328,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[6,"Edge","","",null,null],[11,"next_kv","collections::btree::node","",329,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_kv_back","","",329,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_edge","","",329,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_edge_back","","",329,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"drop","","",329,null],[11,"clone","","",330,{"inputs":[{"name":"abstraversal"}],"output":{"name":"abstraversal"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::node","",330,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_back","","",330,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_edge_item","","Advances the iterator and returns the item if it's an edge. Returns None\nand does nothing if the first item is not an edge.",330,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_edge_item_back","","Advances the iterator and returns the item if it's an edge. Returns None\nand does nothing if the last item is not an edge.",330,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_kv_item","","Advances the iterator and returns the item if it's a key-value pair. Returns None\nand does nothing if the first item is not a key-value pair.",330,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_kv_item_back","","Advances the iterator and returns the item if it's a key-value pair. Returns None\nand does nothing if the last item is not a key-value pair.",330,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"slice_from","","Returns a sub-slice with elements starting with `min_key`.",331,{"inputs":[{"name":"nodeslice"},{"name":"k"}],"output":{"name":"nodeslice"}}],[11,"slice_to","","Returns a sub-slice with elements up to and including `max_key`.",331,{"inputs":[{"name":"nodeslice"},{"name":"k"}],"output":{"name":"nodeslice"}}],[11,"iter","","Returns an iterator over key/value pairs and edges in a slice.",331,{"inputs":[{"name":"nodeslice"}],"output":{"name":"abstraversal"}}],[11,"slice_from","","Returns a sub-slice with elements starting with `min_key`.",332,{"inputs":[{"name":"mutnodeslice"},{"name":"k"}],"output":{"name":"mutnodeslice"}}],[11,"slice_to","","Returns a sub-slice with elements up to and including `max_key`.",332,{"inputs":[{"name":"mutnodeslice"},{"name":"k"}],"output":{"name":"mutnodeslice"}}],[11,"iter_mut","","Returns an iterator over key/value pairs and edges in a slice.",332,{"inputs":[{"name":"mutnodeslice"}],"output":{"name":"abstraversal"}}],[11,"clone","collections::btree::map","",333,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"clone","","",334,{"inputs":[{"name":"absiter"}],"output":{"name":"absiter"}}],[11,"new","","Makes a new empty BTreeMap with a reasonable choice for B.",333,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"with_b","","Makes a new empty BTreeMap with the given B.",333,{"inputs":[{"name":"btreemap"},{"name":"usize"}],"output":{"name":"btreemap"}}],[11,"clear","","Clears the map, removing all values.",333,null],[11,"get","","Returns a reference to the value corresponding to the key.",333,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",333,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",333,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",333,{"inputs":[{"name":"btreemap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",333,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::btree::map","Gets an owning iterator over the entries of the map.",333,{"inputs":[{"name":"btreemap"}],"output":{"name":"intoiter"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Target","","",null,null],[11,"deref","collections::btree::map::stack","",335,{"inputs":[{"name":"idref"}],"output":{"name":"t"}}],[11,"deref_mut","","",335,{"inputs":[{"name":"idref"}],"output":{"name":"t"}}],[11,"new","","Creates a new PartialSearchStack from a BTreeMap by initializing the stack with the\nroot of the tree.",336,{"inputs":[{"name":"partialsearchstack"},{"name":"btreemap"}],"output":{"name":"partialsearchstack"}}],[11,"with","","Breaks up the stack into a `Pusher` and the next `Node`, allowing the given closure\nto interact with, search, and finally push the `Node` onto the stack. The passed in\nclosure must be polymorphic on the `'id` lifetime parameter, as this statically\nensures that only `Handle`s from the correct `Node` can be pushed.",336,{"inputs":[{"name":"partialsearchstack"},{"name":"f"}],"output":{"name":"t"}}],[11,"push","","Pushes the requested child of the stack's current top on top of the stack. If the child\nexists, then a new PartialSearchStack is yielded. Otherwise, a VacantSearchStack is\nyielded.",337,{"inputs":[{"name":"pusher"},{"name":"handle"}],"output":{"name":"partialsearchstack"}}],[11,"seal","","Converts the PartialSearchStack into a SearchStack.",337,{"inputs":[{"name":"pusher"},{"name":"handle"}],"output":{"name":"searchstack"}}],[11,"peek","","Gets a reference to the value the stack points to.",338,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"peek_mut","","Gets a mutable reference to the value the stack points to.",338,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"into_top","","Converts the stack into a mutable reference to the value it points to, with a lifetime\ntied to the original tree.",338,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"remove","","Removes the key and value in the top element of the stack, then handles underflows as\ndescribed in BTree's pop function.",338,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"insert","","Inserts the key and value into the top element in the stack, and if that node has to\nsplit recursively inserts the split contents into the next element stack until\nsplits stop.",338,{"inputs":[{"name":"searchstack"},{"name":"k"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","collections::btree::map","",333,{"inputs":[{"name":"btreemap"},{"name":"t"}],"output":{"name":"btreemap"}}],[11,"extend","","",333,null],[11,"hash","","",333,null],[11,"default","","",333,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"eq","","",333,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",333,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"option"}}],[11,"cmp","","",333,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"ordering"}}],[11,"fmt","","",333,{"inputs":[{"name":"btreemap"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Output","openssl::ssl","",null,null],[11,"index","collections::btree::map","",333,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"v"}}],[11,"traverse","collections::btree::node","",330,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"traverse","","",330,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"traverse","","",330,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::map","",334,{"inputs":[{"name":"absiter"}],"output":{"name":"option"}}],[11,"size_hint","","",334,null],[11,"next_back","","",334,{"inputs":[{"name":"absiter"}],"output":{"name":"option"}}],[11,"clone","","",339,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::map","",339,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",339,null],[11,"next_back","","",339,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::map","",340,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",340,null],[11,"next_back","","",340,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::map","",341,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",341,null],[11,"next_back","","",341,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",342,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::map","",342,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",342,null],[11,"next_back","","",342,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"clone","","",343,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::map","",343,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",343,null],[11,"next_back","","",343,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"clone","","",344,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::map","",344,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",344,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::map","",345,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"next_back","","",345,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",346,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",346,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",346,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.",347,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",348,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",348,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",348,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,\nand returns the entry's old value.",348,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",348,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"iter","","Gets an iterator over the entries of the map.",333,{"inputs":[{"name":"btreemap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",333,{"inputs":[{"name":"btreemap"}],"output":{"name":"itermut"}}],[11,"keys","","Gets an iterator over the keys of the map.",333,{"inputs":[{"name":"btreemap"}],"output":{"name":"keys"}}],[11,"values","","Gets an iterator over the values of the map.",333,{"inputs":[{"name":"btreemap"}],"output":{"name":"values"}}],[11,"len","","Returns the number of elements in the map.",333,{"inputs":[{"name":"btreemap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",333,{"inputs":[{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",333,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"range_mut","","Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",333,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"rangemut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",333,{"inputs":[{"name":"btreemap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"partial_cmp","collections::btree::set","",349,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"option"}}],[11,"lt","","",349,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"le","","",349,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"gt","","",349,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ge","","",349,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"cmp","","",349,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"ordering"}}],[11,"eq","","",349,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ne","","",349,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"hash","","",349,null],[11,"clone","","",349,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"new","","Makes a new BTreeSet with a reasonable choice of B.",349,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"with_b","","Makes a new BTreeSet with the given B.",349,{"inputs":[{"name":"btreeset"},{"name":"usize"}],"output":{"name":"btreeset"}}],[11,"iter","","Gets an iterator over the BTreeSet's contents.",349,{"inputs":[{"name":"btreeset"}],"output":{"name":"iter"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the set, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",349,{"inputs":[{"name":"btreeset"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"difference","","Visits the values representing the difference, in ascending order.",349,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visits the values representing the symmetric difference, in ascending order.",349,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visits the values representing the intersection, in ascending order.",349,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"intersection"}}],[11,"union","","Visits the values representing the union, in ascending order.",349,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",349,{"inputs":[{"name":"btreeset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",349,{"inputs":[{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"clear","","Clears the set, removing all values.",349,null],[11,"contains","","Returns `true` if the set contains a value.",349,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",349,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",349,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",349,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",349,{"inputs":[{"name":"btreeset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",349,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"from_iter","","",349,{"inputs":[{"name":"btreeset"},{"name":"i"}],"output":{"name":"btreeset"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::btree::set","Gets an iterator for moving out the BtreeSet's contents.",349,{"inputs":[{"name":"btreeset"}],"output":{"name":"intoiter"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::btree::set","",349,null],[11,"default","","",349,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[6,"Output","openssl::ssl","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"fmt","collections::btree::set","",349,{"inputs":[{"name":"btreeset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",350,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::set","",350,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",350,null],[11,"next_back","","",350,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::set","",351,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",351,null],[11,"next_back","","",351,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",352,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::set","",352,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",352,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",353,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::set","",353,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"clone","","",354,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::set","",354,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"clone","","",355,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::set","",355,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"clone","","",356,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::btree::set","",356,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"borrow","alloc::rc","",357,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"borrow","alloc::arc","",358,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"borrow","collections::borrow","",313,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[6,"Owned","openssl::ssl","",null,null],[11,"clone","collections::borrow","",313,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",313,null],[11,"into_owned","","Extracts the owned data.",313,null],[6,"Target","openssl::ssl","",null,null],[11,"deref","collections::borrow","",313,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",313,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",313,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",313,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",313,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",313,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",313,null],[11,"into_cow","","",313,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",313,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"hash","collections::enum_set","",359,null],[11,"cmp","","",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"option"}}],[11,"lt","","",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"le","","",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"gt","","",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ge","","",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"eq","","",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ne","","",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clone","","",359,{"inputs":[{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"fmt","","",359,{"inputs":[{"name":"enumset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns an empty `EnumSet`.",359,{"inputs":[{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"len","","Returns the number of elements in the given `EnumSet`.",359,{"inputs":[{"name":"enumset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the `EnumSet` is empty.",359,{"inputs":[{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clear","","",359,null],[11,"is_disjoint","","Returns `false` if the `EnumSet` contains any enum of the given `EnumSet`.",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if a given `EnumSet` is included in this `EnumSet`.",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if this `EnumSet` is included in the given `EnumSet`.",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"union","","Returns the union of both `EnumSets`.",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"intersection","","Returns the intersection of both `EnumSets`.",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"insert","","Adds an enum to the `EnumSet`, and returns `true` if it wasn't there before",359,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"remove","","Removes an enum from the EnumSet",359,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` if an `EnumSet` contains a given enum.",359,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over an `EnumSet`.",359,{"inputs":[{"name":"enumset"}],"output":{"name":"iter"}}],[6,"Output","openssl::ssl","",null,null],[11,"sub","collections::enum_set","",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitor","collections::enum_set","",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitand","collections::enum_set","",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[6,"Output","openssl::ssl","",null,null],[11,"bitxor","collections::enum_set","",359,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"clone","","",360,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::enum_set","",360,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",360,null],[11,"from_iter","","",359,{"inputs":[{"name":"enumset"},{"name":"i"}],"output":{"name":"enumset"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::enum_set","",359,null],[11,"clone","core::fmt::rt::v1","",361,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",362,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",363,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",363,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",363,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",364,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",365,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"start","core::ops","",366,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"end","","",367,{"inputs":[{"name":"rangeto"}],"output":{"name":"option"}}],[11,"start","","",368,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"end","","",368,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","collections::slice","",369,{"inputs":[{"name":"elementswaps"}],"output":{"name":"elementswaps"}}],[11,"new","","Creates an `ElementSwaps` iterator for a sequence of `length` elements.",369,{"inputs":[{"name":"elementswaps"},{"name":"usize"}],"output":{"name":"elementswaps"}}],[11,"borrow","collections::vec","",30,null],[11,"borrow_mut","","",30,null],[6,"Owned","openssl::ssl","",null,null],[11,"clone","collections::slice","",370,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"clone","","",371,{"inputs":[{"name":"sizedirection"}],"output":{"name":"sizedirection"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::slice","",369,{"inputs":[{"name":"elementswaps"}],"output":{"name":"option"}}],[11,"size_hint","","",369,null],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::slice","",372,{"inputs":[{"name":"permutations"}],"output":{"name":"option"}}],[11,"size_hint","","",372,null],[11,"cmp","collections::string","",29,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",29,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",29,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",29,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",29,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",29,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",26,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",29,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",29,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_str","","Creates a new string buffer from the given string.",29,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from_utf8","","Returns the vector as a string buffer, if possible, taking care not to\ncopy it.",29,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a vector of bytes to a new UTF-8 string.\nAny invalid UTF-8 sequences are replaced with U+FFFD REPLACEMENT CHARACTER.",29,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",29,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",29,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",29,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a new `String` without checking if\nit contains valid UTF-8. This is unsafe because it assumes that\nthe UTF-8-ness of the vector has already been validated.",29,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",29,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",29,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",29,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",29,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",29,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",29,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",29,null],[11,"push","","Adds the given character to the end of the string.",29,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",29,null],[11,"truncate","","Shortens a string to the specified length.",29,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",29,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",29,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",29,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",29,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",29,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",29,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",29,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",29,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",26,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",26,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",26,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",29,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",29,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",29,null],[11,"extend","","",29,null],[6,"Searcher","openssl::ssl","",null,null],[11,"eq","collections::string","",29,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",29,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",29,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",313,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",313,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",313,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",313,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",29,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",313,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",313,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",29,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",29,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",29,null],[6,"Output","openssl::ssl","",null,null],[11,"add","collections::string","",29,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[6,"Output","openssl::ssl","",null,null],[11,"index","collections::string","",29,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[6,"Output","openssl::ssl","",null,null],[11,"index","collections::string","",29,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[6,"Output","openssl::ssl","",null,null],[11,"index","collections::string","",29,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[6,"Output","openssl::ssl","",null,null],[11,"index","collections::string","",29,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[6,"Target","openssl::ssl","",null,null],[11,"deref","collections::string","",29,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[6,"Target","openssl::ssl","",null,null],[11,"deref","collections::string","",373,{"inputs":[{"name":"derefstring"}],"output":{"name":"string"}}],[11,"eq","","",374,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",374,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",374,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",374,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[6,"Err","openssl::ssl","",null,null],[11,"from_str","collections::string","",29,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"as_ref","","",29,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from","","",29,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",313,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",313,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",29,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",29,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",29,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",29,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",375,null],[6,"Item","openssl::ssl","",null,null],[11,"next","collections::string","",375,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",375,null],[11,"next_back","","",375,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","collections::vec","",376,null],[11,"drop","","",377,null],[11,"drop","","",378,null],[11,"eq","collections","",379,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"ne","","",379,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"hash","","",379,null],[11,"fmt","","",379,{"inputs":[{"name":"bound"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",379,{"inputs":[{"name":"bound"}],"output":{"name":"bound"}}],[11,"new","alloc::boxed","Allocates memory on the heap and then moves `x` into it.",21,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",21,null],[11,"default","","",21,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",21,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",21,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",21,null],[11,"eq","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",21,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",21,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",21,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Target","openssl::ssl","",null,null],[11,"deref","alloc::boxed","",21,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",21,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","alloc::boxed","",21,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",21,null],[11,"next_back","","",21,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[6,"Output","openssl::ssl","",null,null],[6,"Output","","",null,null],[11,"call_once","alloc::boxed","",21,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[6,"Output","openssl::ssl","",null,null],[11,"call_once","alloc::boxed","",21,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[6,"Target","openssl::ssl","",null,null],[11,"deref","collections::vec","",376,{"inputs":[{"name":"derefvec"}],"output":{"name":"vec"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",380,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",380,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",380,null],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",380,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",380,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",380,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",380,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",381,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",381,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",381,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",381,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",382,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",382,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",382,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",382,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",382,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",382,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",382,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",382,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",382,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",383,null],[11,"clone","","",383,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[6,"Target","openssl::ssl","",null,null],[11,"deref","core::cell","",384,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"drop","","",385,null],[6,"Target","openssl::ssl","",null,null],[11,"deref","core::cell","",386,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",386,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",387,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",387,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",387,null],[11,"clone","core::raw","",388,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",389,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[6,"Output","openssl::ssl","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"eq","core::ops","",390,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",390,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",390,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",390,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",368,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",368,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",368,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",368,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",366,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",366,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",366,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",366,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",367,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",367,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",367,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",367,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Target","openssl::ssl","",null,null],[6,"Target","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Item","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"clone","core::iter","",391,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",391,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",391,null],[11,"next_back","","",391,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"indexable","","",391,{"inputs":[{"name":"rev"}],"output":{"name":"usize"}}],[11,"idx","","",391,{"inputs":[{"name":"rev"},{"name":"usize"}],"output":{"name":"option"}}],[11,"fmt","","",392,{"inputs":[{"name":"minmaxresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",392,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"ne","","",392,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"clone","","",392,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"minmaxresult"}}],[11,"into_option","","`into_option` creates an `Option` of type `(T,T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise variant `Some(x,y)` is returned where `x <= y`.\nIf `MinMaxResult` has variant `OneElement(x)`, performing this operation\nwill make one clone of `x`.",392,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"option"}}],[11,"clone","","",393,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",393,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",393,null],[11,"next_back","","",393,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"indexable","","",393,{"inputs":[{"name":"cloned"}],"output":{"name":"usize"}}],[11,"idx","","",393,{"inputs":[{"name":"cloned"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",394,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",394,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",394,null],[11,"indexable","","",394,{"inputs":[{"name":"cycle"}],"output":{"name":"usize"}}],[11,"idx","","",394,{"inputs":[{"name":"cycle"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",395,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",395,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",395,null],[11,"next_back","","",395,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"indexable","","",395,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"idx","","",395,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",396,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",396,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",396,null],[11,"next_back","","",396,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"indexable","","",396,{"inputs":[{"name":"zip"}],"output":{"name":"usize"}}],[11,"idx","","",396,{"inputs":[{"name":"zip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",397,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",397,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",397,null],[11,"next_back","","",397,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"indexable","","",397,{"inputs":[{"name":"map"}],"output":{"name":"usize"}}],[11,"idx","","",397,{"inputs":[{"name":"map"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",398,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",398,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",398,null],[11,"next_back","","",398,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",399,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",399,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",399,null],[11,"next_back","","",399,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",400,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",400,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",400,null],[11,"next_back","","",400,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"indexable","","",400,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"idx","","",400,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",401,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",401,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",401,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",401,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",401,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",402,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",402,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",402,null],[11,"clone","","",403,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",403,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",403,null],[11,"clone","","",404,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",404,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",404,null],[11,"indexable","","",404,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"idx","","",404,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",405,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",405,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"size_hint","","",405,null],[11,"indexable","","",405,{"inputs":[{"name":"take"}],"output":{"name":"usize"}}],[11,"idx","","",405,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",406,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",406,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",406,null],[11,"clone","","",407,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",407,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",407,null],[11,"next_back","","",407,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",408,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",408,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"size_hint","","",408,null],[11,"next_back","","",408,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"indexable","","",408,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"idx","","",408,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"reset_fuse","","Resets the `Fuse` such that the next call to `.next()` or\n`.next_back()` will call the underlying iterator again even if it\npreviously returned `None`.",408,null],[11,"clone","","",409,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",409,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",409,null],[11,"next_back","","",409,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"indexable","","",409,{"inputs":[{"name":"inspect"}],"output":{"name":"usize"}}],[11,"idx","","",409,{"inputs":[{"name":"inspect"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",410,{"inputs":[{"name":"unfold"}],"output":{"name":"unfold"}}],[11,"new","","Creates a new iterator with the specified closure as the \"iterator\nfunction\" and an initial state to eventually pass to the closure",410,{"inputs":[{"name":"unfold"},{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",410,{"inputs":[{"name":"unfold"}],"output":{"name":"option"}}],[11,"size_hint","","",410,null],[11,"clone","","",411,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",366,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",368,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",411,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",411,null],[11,"clone","","",412,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",412,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",412,null],[11,"next_back","","",412,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",411,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",411,null],[6,"Item","openssl::ssl","",null,null],[11,"next","core::ops","",368,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",368,null],[11,"next_back","","",368,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::ops","",366,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",413,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::iter","",413,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",413,null],[11,"next_back","","",413,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"indexable","","",413,{"inputs":[{"name":"repeat"}],"output":{"name":"usize"}}],[11,"idx","","",413,{"inputs":[{"name":"repeat"},{"name":"usize"}],"output":{"name":"option"}}],[11,"cmp","core::marker","",414,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",414,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"option"}}],[11,"lt","","",414,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"le","","",414,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"gt","","",414,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ge","","",414,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"eq","","",414,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ne","","",414,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"clone","","",414,{"inputs":[{"name":"nocopy"}],"output":{"name":"nocopy"}}],[11,"hash","","",415,null],[11,"eq","","",415,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",415,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",415,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",415,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",357,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",357,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"make_unique","","Make a mutable reference from the given `Rc<T>`.",357,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[6,"Target","openssl::ssl","",null,null],[11,"deref","alloc::rc","",357,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",357,null],[11,"clone","","Makes a clone of the `Rc<T>`.",357,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",357,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",357,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",357,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",357,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",357,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",357,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",357,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",357,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",357,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",357,null],[11,"fmt","","",357,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",357,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",357,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",416,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",416,null],[11,"clone","","Makes a clone of the `Weak<T>`.",416,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",416,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","openssl","",417,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",417,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",417,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",417,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",417,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",417,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",417,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",417,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",418,null],[11,"fmt","","",418,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",418,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",418,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",418,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",418,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"hash","core::result","",419,null],[11,"fmt","","",419,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",419,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",419,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",419,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",419,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",419,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",419,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",419,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",419,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",419,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",419,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",419,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",419,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",419,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",419,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",419,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",419,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",419,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",419,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",419,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",419,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",419,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",419,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",419,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",419,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",419,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",419,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",419,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",419,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",419,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","core::result","Returns a consuming iterator over the possibly contained value.",419,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::result","",420,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",420,null],[11,"next_back","","",420,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",420,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::result","",421,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",421,null],[11,"next_back","","",421,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::result","",422,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",422,null],[11,"next_back","","",422,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",419,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","rustc_unicode::char","",423,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","rustc_unicode::char","",424,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"hash","core::option","",425,null],[11,"fmt","","",425,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",425,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",425,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",425,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",425,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",425,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",425,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",425,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",425,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",425,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",425,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",425,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",425,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",425,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",425,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",425,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",425,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",425,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",425,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",425,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value or returns a default.",425,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value or computes a default.",425,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",425,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",425,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",425,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",425,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",425,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",425,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",425,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",425,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",425,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",425,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",425,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",425,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",425,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","core::option","Returns a consuming iterator over the possibly contained value.",425,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",426,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::option","",426,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",426,null],[11,"next_back","","",426,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::option","",427,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",427,null],[11,"next_back","","",427,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",427,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::option","",428,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",428,null],[11,"next_back","","",428,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[6,"Item","openssl::ssl","",null,null],[11,"next","core::option","",429,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",429,null],[11,"next_back","","",429,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",425,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"fmt","openssl::ssl","",430,{"inputs":[{"name":"sslcontext"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",430,{"inputs":[{"name":"sslcontext"}],"output":null}],[11,"new","","Creates a new SSL context.",430,{"inputs":[{"name":"sslcontext"},{"name":"sslmethod"}],"output":{"name":"result"}}],[11,"set_verify","","Configures the certificate verification method for new connections.",430,{"inputs":[{"name":"sslcontext"},{"name":"sslverifymode"},{"name":"option"}],"output":null}],[11,"set_verify_with_data","","Configures the certificate verification method for new connections also\ncarrying supplied data.",430,{"inputs":[{"name":"sslcontext"},{"name":"sslverifymode"},{"name":"verifycallbackdata"},{"name":"t"}],"output":null}],[11,"set_verify_depth","","Sets verification depth",430,{"inputs":[{"name":"sslcontext"},{"name":"u32"}],"output":null}],[11,"set_read_ahead","","",430,{"inputs":[{"name":"sslcontext"},{"name":"u32"}],"output":null}],[11,"set_CA_file","","Specifies the file that contains trusted CA certificates.",430,{"inputs":[{"name":"sslcontext"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_certificate_file","","Specifies the file that contains certificate",430,{"inputs":[{"name":"sslcontext"},{"name":"path"},{"name":"x509filetype"}],"output":{"name":"result"}}],[11,"set_certificate","","Specifies the certificate",430,{"inputs":[{"name":"sslcontext"},{"name":"x509"}],"output":{"name":"result"}}],[11,"add_extra_chain_cert","","Adds a certificate to the certificate chain presented together with the\ncertificate specified using set_certificate()",430,{"inputs":[{"name":"sslcontext"},{"name":"x509"}],"output":{"name":"result"}}],[11,"set_private_key_file","","Specifies the file that contains private key",430,{"inputs":[{"name":"sslcontext"},{"name":"path"},{"name":"x509filetype"}],"output":{"name":"result"}}],[11,"set_private_key","","Specifies the private key",430,{"inputs":[{"name":"sslcontext"},{"name":"pkey"}],"output":{"name":"result"}}],[11,"check_private_key","","Check consistency of private key and certificate",430,{"inputs":[{"name":"sslcontext"}],"output":{"name":"result"}}],[11,"set_cipher_list","","",430,{"inputs":[{"name":"sslcontext"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_options","","",430,{"inputs":[{"name":"sslcontext"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"get_options","","",430,{"inputs":[{"name":"sslcontext"}],"output":{"name":"sslcontextoptions"}}],[11,"clear_options","","",430,{"inputs":[{"name":"sslcontext"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"fmt","","",431,{"inputs":[{"name":"ssl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",431,{"inputs":[{"name":"ssl"}],"output":null}],[11,"new","","",431,{"inputs":[{"name":"ssl"},{"name":"sslcontext"}],"output":{"name":"result"}}],[11,"set_hostname","","Set the host name to be used with SNI (Server Name Indication).",431,{"inputs":[{"name":"ssl"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_peer_certificate","","",431,{"inputs":[{"name":"ssl"}],"output":{"name":"option"}}],[11,"clone","","",432,{"inputs":[{"name":"sslstream"}],"output":{"name":"sslstream"}}],[11,"try_clone","","Create a new independently owned handle to the underlying socket.",432,{"inputs":[{"name":"sslstream"}],"output":{"name":"result"}}],[11,"fmt","","",432,{"inputs":[{"name":"sslstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_server_from","","",432,{"inputs":[{"name":"sslstream"},{"name":"ssl"},{"name":"s"}],"output":{"name":"result"}}],[11,"new_from","","Attempts to create a new SSL stream from a given `Ssl` instance.",432,{"inputs":[{"name":"sslstream"},{"name":"ssl"},{"name":"s"}],"output":{"name":"result"}}],[11,"new","","Creates a new SSL stream",432,{"inputs":[{"name":"sslstream"},{"name":"sslcontext"},{"name":"s"}],"output":{"name":"result"}}],[11,"new_server","","Creates a new SSL server stream",432,{"inputs":[{"name":"sslstream"},{"name":"sslcontext"},{"name":"s"}],"output":{"name":"result"}}],[11,"get_ref","","Returns a reference to the underlying stream.",432,{"inputs":[{"name":"sslstream"}],"output":{"name":"s"}}],[11,"get_mut","","Returns a mutable reference to the underlying stream.",432,{"inputs":[{"name":"sslstream"}],"output":{"name":"s"}}],[11,"get_compression","","Get the compression currently in use.  The result will be\neither None, indicating no compression is in use, or a string\nwith the compression name.",432,{"inputs":[{"name":"sslstream"}],"output":{"name":"option"}}],[11,"read","","",432,null],[11,"write","","",432,null],[11,"flush","","",432,{"inputs":[{"name":"sslstream"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"maybesslstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",15,null],[11,"write","","",15,null],[11,"flush","","",15,{"inputs":[{"name":"maybesslstream"}],"output":{"name":"result"}}],[11,"get_ref","","Returns a reference to the underlying stream.",15,{"inputs":[{"name":"maybesslstream"}],"output":{"name":"s"}}],[11,"get_mut","","Returns a mutable reference to the underlying stream.",15,{"inputs":[{"name":"maybesslstream"}],"output":{"name":"s"}}],[0,"x509","openssl","",null,null],[3,"X509StoreContext","openssl::x509","",null,null],[3,"X509Generator","","Generator of private key/certificate pairs",null,null],[3,"X509","","A public key certificate",null,null],[3,"X509Name","","",null,null],[4,"X509FileType","","",null,null],[13,"PEM","","",433,null],[13,"ASN1","","",433,null],[13,"Default","","",433,null],[4,"KeyUsage","","",null,null],[13,"DigitalSignature","","",434,null],[13,"NonRepudiation","","",434,null],[13,"KeyEncipherment","","",434,null],[13,"DataEncipherment","","",434,null],[13,"KeyAgreement","","",434,null],[13,"KeyCertSign","","",434,null],[13,"CRLSign","","",434,null],[13,"EncipherOnly","","",434,null],[13,"DecipherOnly","","",434,null],[4,"ExtKeyUsage","","",null,null],[13,"ServerAuth","","",435,null],[13,"ClientAuth","","",435,null],[13,"CodeSigning","","",435,null],[13,"EmailProtection","","",435,null],[13,"TimeStamping","","",435,null],[13,"MsCodeInd","","",435,null],[13,"MsCodeCom","","",435,null],[13,"MsCtlSign","","",435,null],[13,"MsSgc","","",435,null],[13,"MsEfs","","",435,null],[13,"NsSgc","","",435,null],[4,"X509ValidationError","","",null,null],[13,"X509UnableToGetIssuerCert","","",436,null],[13,"X509UnableToGetCrl","","",436,null],[13,"X509UnableToDecryptCertSignature","","",436,null],[13,"X509UnableToDecryptCrlSignature","","",436,null],[13,"X509UnableToDecodeIssuerPublicKey","","",436,null],[13,"X509CertSignatureFailure","","",436,null],[13,"X509CrlSignatureFailure","","",436,null],[13,"X509CertNotYetValid","","",436,null],[13,"X509CertHasExpired","","",436,null],[13,"X509CrlNotYetValid","","",436,null],[13,"X509CrlHasExpired","","",436,null],[13,"X509ErrorInCertNotBeforeField","","",436,null],[13,"X509ErrorInCertNotAfterField","","",436,null],[13,"X509ErrorInCrlLastUpdateField","","",436,null],[13,"X509ErrorInCrlNextUpdateField","","",436,null],[13,"X509OutOfMem","","",436,null],[13,"X509DepthZeroSelfSignedCert","","",436,null],[13,"X509SelfSignedCertInChain","","",436,null],[13,"X509UnableToGetIssuerCertLocally","","",436,null],[13,"X509UnableToVerifyLeafSignature","","",436,null],[13,"X509CertChainTooLong","","",436,null],[13,"X509CertRevoked","","",436,null],[13,"X509InvalidCA","","",436,null],[13,"X509PathLengthExceeded","","",436,null],[13,"X509InvalidPurpose","","",436,null],[13,"X509CertUntrusted","","",436,null],[13,"X509CertRejected","","",436,null],[13,"X509SubjectIssuerMismatch","","",436,null],[13,"X509AkidSkidMismatch","","",436,null],[13,"X509AkidIssuerSerialMismatch","","",436,null],[13,"X509KeyusageNoCertsign","","",436,null],[13,"X509UnableToGetCrlIssuer","","",436,null],[13,"X509UnhandledCriticalExtension","","",436,null],[13,"X509KeyusageNoCrlSign","","",436,null],[13,"X509UnhandledCriticalCrlExtension","","",436,null],[13,"X509InvalidNonCA","","",436,null],[13,"X509ProxyPathLengthExceeded","","",436,null],[13,"X509KeyusageNoDigitalSignature","","",436,null],[13,"X509ProxyCertificatesNotAllowed","","",436,null],[13,"X509InvalidExtension","","",436,null],[13,"X509InavlidPolicyExtension","","",436,null],[13,"X509NoExplicitPolicy","","",436,null],[13,"X509DifferentCrlScope","","",436,null],[13,"X509UnsupportedExtensionFeature","","",436,null],[13,"X509UnnestedResource","","",436,null],[13,"X509PermittedVolation","","",436,null],[13,"X509ExcludedViolation","","",436,null],[13,"X509SubtreeMinmax","","",436,null],[13,"X509UnsupportedConstraintType","","",436,null],[13,"X509UnsupportedConstraintSyntax","","",436,null],[13,"X509UnsupportedNameSyntax","","",436,null],[13,"X509CrlPathValidationError","","",436,null],[13,"X509ApplicationVerification","","",436,null],[13,"X509UnknownError","","",436,null],[11,"clone","","",433,{"inputs":[{"name":"x509filetype"}],"output":{"name":"x509filetype"}}],[11,"new","","",437,null],[11,"get_error","","",437,{"inputs":[{"name":"x509storecontext"}],"output":{"name":"option"}}],[11,"get_current_cert","","",437,{"inputs":[{"name":"x509storecontext"}],"output":{"name":"option"}}],[11,"clone","","",434,{"inputs":[{"name":"keyusage"}],"output":{"name":"keyusage"}}],[11,"clone","","",435,{"inputs":[{"name":"extkeyusage"}],"output":{"name":"extkeyusage"}}],[11,"new","","Creates a new generator with the following defaults:",438,{"inputs":[{"name":"x509generator"}],"output":{"name":"x509generator"}}],[11,"set_bitlength","","Sets desired bit length",438,{"inputs":[{"name":"x509generator"},{"name":"u32"}],"output":{"name":"x509generator"}}],[11,"set_valid_period","","Sets certificate validity period in days since today",438,{"inputs":[{"name":"x509generator"},{"name":"u32"}],"output":{"name":"x509generator"}}],[11,"set_CN","","Sets Common Name of certificate",438,{"inputs":[{"name":"x509generator"},{"name":"str"}],"output":{"name":"x509generator"}}],[11,"set_usage","","Sets what for certificate could be used",438,null],[11,"set_ext_usage","","Sets allowed extended usage of certificate",438,null],[11,"set_sign_hash","","",438,{"inputs":[{"name":"x509generator"},{"name":"type"}],"output":{"name":"x509generator"}}],[11,"generate","","Generates a private key and a signed certificate and returns them",438,{"inputs":[{"name":"x509generator"}],"output":{"name":"result"}}],[11,"sign","","Signs certificate with a private key and returns it\nNote: That the bit-length of the private key is used (set_bitlength is ignored)",438,{"inputs":[{"name":"x509generator"},{"name":"pkey"}],"output":{"name":"result"}}],[11,"new","","Creates new from handle with desired ownership.",439,null],[11,"new_in_ctx","","Creates a new certificate from context. Doesn't take ownership\nof handle.",439,null],[11,"from_pem","","Reads certificate from PEM, takes ownership of handle",439,{"inputs":[{"name":"x509"},{"name":"r"}],"output":{"name":"result"}}],[11,"get_handle","","",439,null],[11,"subject_name","","",439,{"inputs":[{"name":"x509"}],"output":{"name":"x509name"}}],[11,"public_key","","",439,{"inputs":[{"name":"x509"}],"output":{"name":"pkey"}}],[11,"fingerprint","","Returns certificate fingerprint calculated using provided hash",439,{"inputs":[{"name":"x509"},{"name":"type"}],"output":{"name":"option"}}],[11,"write_pem","","Writes certificate as PEM",439,{"inputs":[{"name":"x509"},{"name":"w"}],"output":{"name":"result"}}],[11,"drop","","",439,{"inputs":[{"name":"x509"}],"output":null}],[11,"clone","","",436,{"inputs":[{"name":"x509validationerror"}],"output":{"name":"x509validationerror"}}]],"paths":[[3,"Asn1Time"],[4,"RNGProperty"],[3,"BigNum"],[3,"MemBio"],[4,"Type"],[3,"Hasher"],[3,"HMAC"],[4,"Parts"],[4,"Role"],[4,"EncryptionPadding"],[3,"PKey"],[4,"Mode"],[4,"Type"],[3,"Crypter"],[4,"SslMethod"],[4,"MaybeSslStream"],[4,"SslError"],[4,"OpensslError"],[3,"SslContextOptions"],[3,"SslVerifyMode"],[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"Error"],[3,"String"],[3,"Vec"],[3,"EscapeDefault"],[3,"Wrapping"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"ScopedKey"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"JoinGuard"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"VecMap"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"Metadata"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"Path"],[3,"DirBuilder"],[3,"Lazy"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"InternalBufWriter"],[3,"BufStream"],[3,"Cursor"],[4,"Repr"],[3,"Custom"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"Metadata"],[3,"Command"],[3,"ExitStatus"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Display"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"Output"],[4,"StdioImp"],[3,"Stdio"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Future"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Condvar"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Condvar"],[3,"FileDesc"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"FileAttr"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[4,"ExitStatus"],[3,"Process"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"SteadyTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[4,"_Unwind_Action"],[3,"OsRng"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"SipHasher"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[4,"DecompositionType"],[3,"Decompositions"],[4,"RecompositionState"],[3,"Recompositions"],[3,"Utf16Units"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"StrSearcher"],[4,"State"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[4,"Ordering"],[3,"Unique"],[4,"Cow"],[3,"IntoIter"],[3,"Drain"],[3,"BitVec"],[3,"Iter"],[3,"BitSet"],[3,"SetIter"],[3,"TwoBitPositions"],[3,"Union"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"RawItems"],[3,"Node"],[3,"Handle"],[3,"ElemsAndEdges"],[3,"MoveTraversalImpl"],[3,"AbsTraversal"],[3,"NodeSlice"],[3,"MutNodeSlice"],[3,"BTreeMap"],[3,"AbsIter"],[3,"IdRef"],[3,"PartialSearchStack"],[3,"Pusher"],[3,"SearchStack"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Range"],[3,"RangeMut"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"BTreeSet"],[3,"Iter"],[3,"IntoIter"],[3,"Range"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[3,"Rc"],[3,"Arc"],[3,"EnumSet"],[3,"Iter"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"RangeFrom"],[3,"RangeTo"],[3,"Range"],[3,"ElementSwaps"],[4,"Direction"],[3,"SizeDirection"],[3,"Permutations"],[3,"DerefString"],[3,"ParseError"],[3,"Drain"],[3,"DerefVec"],[3,"PartialVecNonZeroSized"],[3,"PartialVecZeroSized"],[4,"Bound"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"BorrowRefMut"],[3,"RefMut"],[3,"UnsafeCell"],[3,"Slice"],[3,"TraitObject"],[3,"RangeFull"],[3,"Rev"],[4,"MinMaxResult"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Unfold"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"NoCopy"],[3,"PhantomData"],[3,"Weak"],[8,"Any"],[3,"TypeId"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"SslContext"],[3,"Ssl"],[3,"SslStream"],[4,"X509FileType"],[4,"KeyUsage"],[4,"ExtKeyUsage"],[4,"X509ValidationError"],[3,"X509StoreContext"],[3,"X509Generator"],[3,"X509"]]};
searchIndex['serde'] = {"items":[[0,"","serde","Serde Serialization Framework",null,null],[0,"bytes","","Helper module to enable serializing bytes more efficiently",null,null],[3,"Bytes","serde::bytes","`Bytes` wraps a `&[u8]` in order to serialize into a byte array.",null,null],[3,"ByteBuf","","`ByteBuf` wraps a `Vec<u8>` in order to hook into serialize and from deserialize a byte array.",null,null],[3,"ByteBufVisitor","","",null,null],[11,"from","","",0,null],[11,"from","","",0,{"inputs":[{"name":"bytes"},{"name":"vec"}],"output":{"name":"self"}}],[6,"Target","","",null,null],[11,"deref","","",0,null],[11,"serialize","","",0,{"inputs":[{"name":"bytes"},{"name":"s"}],"output":{"name":"result"}}],[11,"cmp","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"bytebuf"},{"name":"bytebuf"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"bytebuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"bytebuf"}],"output":{"name":"bytebuf"}}],[11,"new","","",1,{"inputs":[{"name":"bytebuf"}],"output":{"name":"self"}}],[11,"with_capacity","","",1,{"inputs":[{"name":"bytebuf"},{"name":"usize"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"bytebuf"},{"name":"t"}],"output":{"name":"self"}}],[11,"as_ref","","",1,{"inputs":[{"name":"bytebuf"}],"output":{"name":"vec"}}],[11,"as_ref","","",1,null],[11,"as_mut","","",1,{"inputs":[{"name":"bytebuf"}],"output":{"name":"vec"}}],[11,"as_mut","","",1,null],[6,"Target","","",null,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"serialize","","",1,{"inputs":[{"name":"bytebuf"},{"name":"s"}],"output":{"name":"result"}}],[6,"Value","","",null,null],[11,"visit_unit","","",2,{"inputs":[{"name":"bytebufvisitor"}],"output":{"name":"result"}}],[11,"visit_seq","","",2,{"inputs":[{"name":"bytebufvisitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_bytes","","",2,null],[11,"visit_byte_buf","","",2,{"inputs":[{"name":"bytebufvisitor"},{"name":"vec"}],"output":{"name":"result"}}],[11,"deserialize","","",1,{"inputs":[{"name":"bytebuf"},{"name":"d"}],"output":{"name":"result"}}],[0,"de","serde","Generic deserialization framework.",null,null],[0,"impls","serde::de","",null,null],[3,"UnitVisitor","serde::de::impls","",null,null],[3,"PrimitiveVisitor","","",null,null],[3,"BTreeSetVisitor","","",null,null],[3,"HashSetVisitor","","",null,null],[3,"VecVisitor","","",null,null],[3,"BTreeMapVisitor","","",null,null],[3,"HashMapVisitor","","",null,null],[6,"Value","","",null,null],[11,"visit_unit","","",3,{"inputs":[{"name":"unitvisitor"}],"output":{"name":"result"}}],[11,"visit_seq","","",3,{"inputs":[{"name":"unitvisitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","",4,{"inputs":[{"name":"primitivevisitor"}],"output":{"name":"self"}}],[6,"Value","","",null,null],[11,"visit_isize","","",4,{"inputs":[{"name":"primitivevisitor"},{"name":"isize"}],"output":{"name":"result"}}],[11,"visit_i8","","",4,{"inputs":[{"name":"primitivevisitor"},{"name":"i8"}],"output":{"name":"result"}}],[11,"visit_i16","","",4,{"inputs":[{"name":"primitivevisitor"},{"name":"i16"}],"output":{"name":"result"}}],[11,"visit_i32","","",4,{"inputs":[{"name":"primitivevisitor"},{"name":"i32"}],"output":{"name":"result"}}],[11,"visit_i64","","",4,{"inputs":[{"name":"primitivevisitor"},{"name":"i64"}],"output":{"name":"result"}}],[11,"visit_usize","","",4,{"inputs":[{"name":"primitivevisitor"},{"name":"usize"}],"output":{"name":"result"}}],[11,"visit_u8","","",4,{"inputs":[{"name":"primitivevisitor"},{"name":"u8"}],"output":{"name":"result"}}],[11,"visit_u16","","",4,{"inputs":[{"name":"primitivevisitor"},{"name":"u16"}],"output":{"name":"result"}}],[11,"visit_u32","","",4,{"inputs":[{"name":"primitivevisitor"},{"name":"u32"}],"output":{"name":"result"}}],[11,"visit_u64","","",4,{"inputs":[{"name":"primitivevisitor"},{"name":"u64"}],"output":{"name":"result"}}],[11,"visit_f32","","",4,{"inputs":[{"name":"primitivevisitor"},{"name":"f32"}],"output":{"name":"result"}}],[11,"visit_f64","","",4,{"inputs":[{"name":"primitivevisitor"},{"name":"f64"}],"output":{"name":"result"}}],[11,"deserialize","collections::string","",5,{"inputs":[{"name":"string"},{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","core::option","",6,{"inputs":[{"name":"option"},{"name":"d"}],"output":{"name":"result"}}],[11,"new","serde::de::impls","",7,{"inputs":[{"name":"btreesetvisitor"}],"output":{"name":"self"}}],[6,"Value","","",null,null],[11,"visit_unit","","",7,{"inputs":[{"name":"btreesetvisitor"}],"output":{"name":"result"}}],[11,"visit_seq","","",7,{"inputs":[{"name":"btreesetvisitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","collections::btree::set","",8,{"inputs":[{"name":"btreeset"},{"name":"d"}],"output":{"name":"result"}}],[11,"new","serde::de::impls","",9,{"inputs":[{"name":"hashsetvisitor"}],"output":{"name":"self"}}],[6,"Value","","",null,null],[11,"visit_unit","","",9,{"inputs":[{"name":"hashsetvisitor"}],"output":{"name":"result"}}],[11,"visit_seq","","",9,{"inputs":[{"name":"hashsetvisitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","std::collections::hash::set","",10,{"inputs":[{"name":"hashset"},{"name":"d"}],"output":{"name":"result"}}],[11,"new","serde::de::impls","",11,{"inputs":[{"name":"vecvisitor"}],"output":{"name":"self"}}],[6,"Value","","",null,null],[11,"visit_unit","","",11,{"inputs":[{"name":"vecvisitor"}],"output":{"name":"result"}}],[11,"visit_seq","","",11,{"inputs":[{"name":"vecvisitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"deserialize","collections::vec","",12,{"inputs":[{"name":"vec"},{"name":"d"}],"output":{"name":"result"}}],[11,"new","serde::de::impls","",13,{"inputs":[{"name":"btreemapvisitor"}],"output":{"name":"self"}}],[6,"Value","","",null,null],[11,"visit_unit","","",13,{"inputs":[{"name":"btreemapvisitor"}],"output":{"name":"result"}}],[11,"visit_map","","",13,{"inputs":[{"name":"btreemapvisitor"},{"name":"visitor"}],"output":{"name":"result"}}],[11,"deserialize","collections::btree::map","",14,{"inputs":[{"name":"btreemap"},{"name":"d"}],"output":{"name":"result"}}],[11,"new","serde::de::impls","",15,{"inputs":[{"name":"hashmapvisitor"}],"output":{"name":"self"}}],[6,"Value","","",null,null],[11,"visit_unit","","",15,{"inputs":[{"name":"hashmapvisitor"}],"output":{"name":"result"}}],[11,"visit_map","","",15,{"inputs":[{"name":"hashmapvisitor"},{"name":"v_"}],"output":{"name":"result"}}],[11,"deserialize","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"},{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","std::path","",17,{"inputs":[{"name":"pathbuf"},{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","alloc::boxed","",18,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","alloc::arc","",19,{"inputs":[{"name":"arc"},{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","alloc::rc","",20,{"inputs":[{"name":"rc"},{"name":"d"}],"output":{"name":"result"}}],[0,"value","serde::de","",null,null],[3,"UnitDeserializer","serde::de::value","A helper deserializer that deserializes a `()`.",null,null],[3,"BoolDeserializer","","",null,null],[3,"I8Deserializer","","",null,null],[3,"I16Deserializer","","",null,null],[3,"I32Deserializer","","",null,null],[3,"I64Deserializer","","",null,null],[3,"IsizeDeserializer","","",null,null],[3,"U8Deserializer","","",null,null],[3,"U16Deserializer","","",null,null],[3,"U32Deserializer","","",null,null],[3,"U64Deserializer","","",null,null],[3,"UsizeDeserializer","","",null,null],[3,"F32Deserializer","","",null,null],[3,"F64Deserializer","","",null,null],[3,"CharDeserializer","","",null,null],[3,"StrDeserializer","","A helper deserializer that deserializes a `&str`.",null,null],[3,"StringDeserializer","","A helper deserializer that deserializes a `String`.",null,null],[3,"SeqDeserializer","","",null,null],[3,"MapDeserializer","","",null,null],[4,"Error","","",null,null],[13,"SyntaxError","","",21,null],[13,"EndOfStreamError","","",21,null],[13,"UnknownFieldError","","",21,null],[13,"MissingFieldError","","",21,null],[8,"ValueDeserializer","","",null,null],[16,"Deserializer","serde::de::value::ValueDeserializer","",null,null],[10,"into_deserializer","serde::de::value","",22,{"inputs":[{"name":"valuedeserializer"}],"output":{"name":"deserializer"}}],[11,"syntax_error","","",21,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"end_of_stream_error","","",21,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"unknown_field_error","","",21,{"inputs":[{"name":"error"},{"name":"str"}],"output":{"name":"self"}}],[11,"missing_field_error","","",21,{"inputs":[{"name":"error"},{"name":"str"}],"output":{"name":"self"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",23,{"inputs":[{"name":"unitdeserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_option","","",23,{"inputs":[{"name":"unitdeserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",24,{"inputs":[{"name":"booldeserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",25,{"inputs":[{"name":"i8deserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",26,{"inputs":[{"name":"i16deserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",27,{"inputs":[{"name":"i32deserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",28,{"inputs":[{"name":"i64deserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",29,{"inputs":[{"name":"isizedeserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",30,{"inputs":[{"name":"u8deserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",31,{"inputs":[{"name":"u16deserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",32,{"inputs":[{"name":"u32deserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",33,{"inputs":[{"name":"u64deserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",34,{"inputs":[{"name":"usizedeserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",35,{"inputs":[{"name":"f32deserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",36,{"inputs":[{"name":"f64deserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",37,{"inputs":[{"name":"chardeserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[6,"Error","","",null,null],[11,"visit","","",38,{"inputs":[{"name":"strdeserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_enum","","",38,{"inputs":[{"name":"strdeserializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[6,"Error","","",null,null],[11,"visit_variant","","",38,{"inputs":[{"name":"strdeserializer"}],"output":{"name":"result"}}],[11,"visit_unit","","",38,{"inputs":[{"name":"strdeserializer"}],"output":{"name":"result"}}],[6,"Deserializer","","",null,null],[11,"into_deserializer","collections::string","",5,{"inputs":[{"name":"string"}],"output":{"name":"stringdeserializer"}}],[6,"Error","serde::de::value","",null,null],[11,"visit","","",39,{"inputs":[{"name":"stringdeserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_enum","","",39,{"inputs":[{"name":"stringdeserializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[6,"Error","","",null,null],[11,"visit_variant","","",39,{"inputs":[{"name":"stringdeserializer"}],"output":{"name":"result"}}],[11,"visit_unit","","",39,{"inputs":[{"name":"stringdeserializer"}],"output":{"name":"result"}}],[11,"new","","",40,{"inputs":[{"name":"seqdeserializer"},{"name":"i"},{"name":"usize"}],"output":{"name":"self"}}],[6,"Error","","",null,null],[11,"visit","","",40,{"inputs":[{"name":"seqdeserializer"},{"name":"v"}],"output":{"name":"result"}}],[6,"Error","","",null,null],[11,"visit","","",40,{"inputs":[{"name":"seqdeserializer"}],"output":{"name":"result"}}],[11,"end","","",40,{"inputs":[{"name":"seqdeserializer"}],"output":{"name":"result"}}],[11,"size_hint","","",40,null],[6,"Deserializer","","",null,null],[11,"into_deserializer","collections::vec","",12,{"inputs":[{"name":"vec"}],"output":{"name":"seqdeserializer"}}],[6,"Deserializer","serde::de::value","",null,null],[11,"into_deserializer","collections::btree::set","",8,{"inputs":[{"name":"btreeset"}],"output":{"name":"seqdeserializer"}}],[6,"Deserializer","serde::de::value","",null,null],[11,"into_deserializer","std::collections::hash::set","",10,{"inputs":[{"name":"hashset"}],"output":{"name":"seqdeserializer"}}],[11,"new","serde::de::value","",41,{"inputs":[{"name":"mapdeserializer"},{"name":"i"},{"name":"usize"}],"output":{"name":"self"}}],[6,"Error","","",null,null],[11,"visit","","",41,{"inputs":[{"name":"mapdeserializer"},{"name":"v_"}],"output":{"name":"result"}}],[6,"Error","","",null,null],[11,"visit_key","","",41,{"inputs":[{"name":"mapdeserializer"}],"output":{"name":"result"}}],[11,"visit_value","","",41,{"inputs":[{"name":"mapdeserializer"}],"output":{"name":"result"}}],[11,"end","","",41,{"inputs":[{"name":"mapdeserializer"}],"output":{"name":"result"}}],[11,"size_hint","","",41,null],[6,"Deserializer","","",null,null],[11,"into_deserializer","collections::btree::map","",14,{"inputs":[{"name":"btreemap"}],"output":{"name":"mapdeserializer"}}],[6,"Deserializer","serde::de::value","",null,null],[11,"into_deserializer","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"}],"output":{"name":"mapdeserializer"}}],[8,"Error","serde::de","",null,null],[10,"syntax_error","","",42,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[10,"end_of_stream_error","","",42,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[10,"unknown_field_error","","",42,{"inputs":[{"name":"error"},{"name":"str"}],"output":{"name":"self"}}],[10,"missing_field_error","","",42,{"inputs":[{"name":"error"},{"name":"str"}],"output":{"name":"self"}}],[8,"Deserialize","","",null,null],[10,"deserialize","","Deserialize this value given this `Deserializer`.",43,{"inputs":[{"name":"deserialize"},{"name":"d"}],"output":{"name":"result"}}],[8,"Deserializer","","`Deserializer` is an abstract trait that can deserialize values into a `Visitor`.",null,null],[16,"Error","serde::de::Deserializer","",null,null],[10,"visit","serde::de","The `visit` method walks a visitor through a value as it is being deserialized.",44,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_option","","The `visit_option` method allows a `Deserialize` type to inform the `Deserializer` that\nit's expecting an optional value. This allows deserializers that encode an optional value\nas a nullable value to convert the null value into a `None`, and a regular value as\n`Some(value)`.",44,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_seq","","The `visit_seq` method allows a `Deserialize` type to inform the `Deserializer` that it's\nexpecting a sequence of values. This allows deserializers to parse sequences that aren't\ntagged as sequences.",44,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_map","","The `visit_map` method allows a `Deserialize` type to inform the `Deserializer` that it's\nexpecting a map of values. This allows deserializers to parse sequences that aren't tagged\nas maps.",44,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_named_unit","","The `visit_named_unit` method allows a `Deserialize` type to inform the `Deserializer` that\nit's expecting a named unit. This allows deserializers to a named unit that aren't tagged\nas a named unit.",44,{"inputs":[{"name":"deserializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_named_seq","","The `visit_named_seq` method allows a `Deserialize` type to inform the `Deserializer` that\nit's expecting a named sequence of values. This allows deserializers to parse sequences\nthat aren't tagged as sequences.",44,{"inputs":[{"name":"deserializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_named_map","","The `visit_named_map` method allows a `Deserialize` type to inform the `Deserializer` that\nit's expecting a map of values. This allows deserializers to parse sequences that aren't\ntagged as maps.",44,{"inputs":[{"name":"deserializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_enum","","The `visit_enum` method allows a `Deserialize` type to inform the `Deserializer` that it's\nexpecting an enum value. This allows deserializers that provide a custom enumeration\nserialization to properly deserialize the type.",44,{"inputs":[{"name":"deserializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_bytes","","The `visit_bytes` method allows a `Deserialize` type to inform the `Deserializer` that it's\nexpecting a `Vec<u8>`. This allows deserializers that provide a custom byte vector\nserialization to properly deserialize the type.",44,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[8,"Visitor","","",null,null],[16,"Value","serde::de::Visitor","",null,null],[11,"visit_bool","serde::de","",45,{"inputs":[{"name":"visitor"},{"name":"bool"}],"output":{"name":"result"}}],[11,"visit_isize","","",45,{"inputs":[{"name":"visitor"},{"name":"isize"}],"output":{"name":"result"}}],[11,"visit_i8","","",45,{"inputs":[{"name":"visitor"},{"name":"i8"}],"output":{"name":"result"}}],[11,"visit_i16","","",45,{"inputs":[{"name":"visitor"},{"name":"i16"}],"output":{"name":"result"}}],[11,"visit_i32","","",45,{"inputs":[{"name":"visitor"},{"name":"i32"}],"output":{"name":"result"}}],[11,"visit_i64","","",45,{"inputs":[{"name":"visitor"},{"name":"i64"}],"output":{"name":"result"}}],[11,"visit_usize","","",45,{"inputs":[{"name":"visitor"},{"name":"usize"}],"output":{"name":"result"}}],[11,"visit_u8","","",45,{"inputs":[{"name":"visitor"},{"name":"u8"}],"output":{"name":"result"}}],[11,"visit_u16","","",45,{"inputs":[{"name":"visitor"},{"name":"u16"}],"output":{"name":"result"}}],[11,"visit_u32","","",45,{"inputs":[{"name":"visitor"},{"name":"u32"}],"output":{"name":"result"}}],[11,"visit_u64","","",45,{"inputs":[{"name":"visitor"},{"name":"u64"}],"output":{"name":"result"}}],[11,"visit_f32","","",45,{"inputs":[{"name":"visitor"},{"name":"f32"}],"output":{"name":"result"}}],[11,"visit_f64","","",45,{"inputs":[{"name":"visitor"},{"name":"f64"}],"output":{"name":"result"}}],[11,"visit_char","","",45,{"inputs":[{"name":"visitor"},{"name":"char"}],"output":{"name":"result"}}],[11,"visit_str","","",45,{"inputs":[{"name":"visitor"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_string","","",45,{"inputs":[{"name":"visitor"},{"name":"string"}],"output":{"name":"result"}}],[11,"visit_unit","","",45,{"inputs":[{"name":"visitor"}],"output":{"name":"result"}}],[11,"visit_named_unit","","",45,{"inputs":[{"name":"visitor"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_none","","",45,{"inputs":[{"name":"visitor"}],"output":{"name":"result"}}],[11,"visit_some","","",45,{"inputs":[{"name":"visitor"},{"name":"d"}],"output":{"name":"result"}}],[11,"visit_seq","","",45,{"inputs":[{"name":"visitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_map","","",45,{"inputs":[{"name":"visitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_bytes","","",45,null],[11,"visit_byte_buf","","",45,{"inputs":[{"name":"visitor"},{"name":"vec"}],"output":{"name":"result"}}],[8,"SeqVisitor","","",null,null],[16,"Error","serde::de::SeqVisitor","",null,null],[10,"visit","serde::de","",46,{"inputs":[{"name":"seqvisitor"}],"output":{"name":"result"}}],[10,"end","","",46,{"inputs":[{"name":"seqvisitor"}],"output":{"name":"result"}}],[11,"size_hint","","",46,null],[8,"MapVisitor","","",null,null],[16,"Error","serde::de::MapVisitor","",null,null],[11,"visit","serde::de","",47,{"inputs":[{"name":"mapvisitor"}],"output":{"name":"result"}}],[10,"visit_key","","",47,{"inputs":[{"name":"mapvisitor"}],"output":{"name":"result"}}],[10,"visit_value","","",47,{"inputs":[{"name":"mapvisitor"}],"output":{"name":"result"}}],[10,"end","","",47,{"inputs":[{"name":"mapvisitor"}],"output":{"name":"result"}}],[11,"size_hint","","",47,null],[11,"missing_field","","",47,{"inputs":[{"name":"mapvisitor"},{"name":"str"}],"output":{"name":"result"}}],[8,"EnumVisitor","","`EnumVisitor` is a visitor that is created by the `Deserialize` and passed to the\n`Deserializer` in order to deserialize enums.",null,null],[16,"Value","serde::de::EnumVisitor","",null,null],[10,"visit","serde::de","",48,{"inputs":[{"name":"enumvisitor"},{"name":"v"}],"output":{"name":"result"}}],[8,"VariantVisitor","","`VariantVisitor` is a visitor that is created by the `Deserializer` and passed to the\n`Deserialize` in order to deserialize a specific enum variant.",null,null],[16,"Error","serde::de::VariantVisitor","",null,null],[10,"visit_variant","serde::de","`visit_variant` is called to identify which variant to deserialize.",49,{"inputs":[{"name":"variantvisitor"}],"output":{"name":"result"}}],[11,"visit_unit","","`visit_unit` is called when deserializing a variant with no values.",49,{"inputs":[{"name":"variantvisitor"}],"output":{"name":"result"}}],[11,"visit_seq","","`visit_seq` is called when deserializing a tuple-like variant.",49,{"inputs":[{"name":"variantvisitor"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_map","","`visit_map` is called when deserializing a struct-like variant.",49,{"inputs":[{"name":"variantvisitor"},{"name":"v"}],"output":{"name":"result"}}],[8,"EnumSeqVisitor","","",null,null],[16,"Value","serde::de::EnumSeqVisitor","",null,null],[10,"visit","serde::de","",50,{"inputs":[{"name":"enumseqvisitor"},{"name":"v"}],"output":{"name":"result"}}],[8,"EnumMapVisitor","","",null,null],[16,"Value","serde::de::EnumMapVisitor","",null,null],[10,"visit","serde::de","",51,{"inputs":[{"name":"enummapvisitor"},{"name":"v"}],"output":{"name":"result"}}],[6,"Error","","",null,null],[6,"Error","","",null,null],[6,"Error","","",null,null],[0,"iter","serde","",null,null],[3,"LineColIterator","serde::iter","",null,null],[11,"new","","",52,{"inputs":[{"name":"linecoliterator"},{"name":"iter"}],"output":{"name":"linecoliterator"}}],[11,"line","","Report the current line inside the iterator.",52,{"inputs":[{"name":"linecoliterator"}],"output":{"name":"usize"}}],[11,"col","","Report the current column inside the iterator.",52,{"inputs":[{"name":"linecoliterator"}],"output":{"name":"usize"}}],[11,"get_ref","","Gets a reference to the underlying iterator.",52,{"inputs":[{"name":"linecoliterator"}],"output":{"name":"iter"}}],[11,"get_mut","","Gets a mutable reference to the underlying iterator.",52,{"inputs":[{"name":"linecoliterator"}],"output":{"name":"iter"}}],[11,"into_inner","","Unwraps this `LineColIterator`, returning the underlying iterator.",52,{"inputs":[{"name":"linecoliterator"}],"output":{"name":"iter"}}],[6,"Item","","",null,null],[11,"next","","",52,{"inputs":[{"name":"linecoliterator"}],"output":{"name":"option"}}],[0,"json","serde","JSON and serialization",null,null],[0,"builder","serde::json","",null,null],[3,"ArrayBuilder","serde::json::builder","",null,null],[3,"ObjectBuilder","","",null,null],[11,"new","","",53,{"inputs":[{"name":"arraybuilder"}],"output":{"name":"arraybuilder"}}],[11,"unwrap","","",53,{"inputs":[{"name":"arraybuilder"}],"output":{"name":"value"}}],[11,"push","","",53,{"inputs":[{"name":"arraybuilder"},{"name":"t"}],"output":{"name":"arraybuilder"}}],[11,"push_array","","",53,{"inputs":[{"name":"arraybuilder"},{"name":"f"}],"output":{"name":"arraybuilder"}}],[11,"push_object","","",53,{"inputs":[{"name":"arraybuilder"},{"name":"f"}],"output":{"name":"arraybuilder"}}],[11,"new","","",54,{"inputs":[{"name":"objectbuilder"}],"output":{"name":"objectbuilder"}}],[11,"unwrap","","",54,{"inputs":[{"name":"objectbuilder"}],"output":{"name":"value"}}],[11,"insert","","",54,{"inputs":[{"name":"objectbuilder"},{"name":"string"},{"name":"v"}],"output":{"name":"objectbuilder"}}],[11,"insert_array","","",54,{"inputs":[{"name":"objectbuilder"},{"name":"string"},{"name":"f"}],"output":{"name":"objectbuilder"}}],[11,"insert_object","","",54,{"inputs":[{"name":"objectbuilder"},{"name":"string"},{"name":"f"}],"output":{"name":"objectbuilder"}}],[0,"de","serde::json","",null,null],[3,"Deserializer","serde::json::de","",null,null],[5,"from_iter","","Decodes a json value from a `std::io::Read`.",null,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[5,"from_reader","","Decodes a json value from a `std::io::Read`.",null,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[5,"from_slice","","Decodes a json value from a `&str`.",null,null],[5,"from_str","","Decodes a json value from a `&str`.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Creates the JSON parser from an `std::iter::Iterator`.",55,{"inputs":[{"name":"deserializer"},{"name":"iter"}],"output":{"name":"result"}}],[11,"end","","",55,{"inputs":[{"name":"deserializer"}],"output":{"name":"result"}}],[6,"Error","","",null,null],[11,"visit","","",55,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_option","","",55,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_enum","","",55,{"inputs":[{"name":"deserializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[6,"Error","","",null,null],[11,"visit_variant","","",55,{"inputs":[{"name":"deserializer"}],"output":{"name":"result"}}],[11,"visit_unit","","",55,{"inputs":[{"name":"deserializer"}],"output":{"name":"result"}}],[11,"visit_seq","","",55,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_map","","",55,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[0,"error","serde::json","",null,null],[4,"ErrorCode","serde::json::error","The errors that can arise while parsing a JSON stream.",null,null],[13,"EOFWhileParsingList","","",56,null],[13,"EOFWhileParsingObject","","",56,null],[13,"EOFWhileParsingString","","",56,null],[13,"EOFWhileParsingValue","","",56,null],[13,"ExpectedColon","","",56,null],[13,"ExpectedConversion","","",56,null],[13,"ExpectedEnumEnd","","",56,null],[13,"ExpectedEnumEndToken","","",56,null],[13,"ExpectedEnumMapStart","","",56,null],[13,"ExpectedEnumToken","","",56,null],[13,"ExpectedEnumVariantString","","",56,null],[13,"ExpectedListCommaOrEnd","","",56,null],[13,"ExpectedName","","",56,null],[13,"ExpectedObjectCommaOrEnd","","",56,null],[13,"ExpectedSomeIdent","","",56,null],[13,"ExpectedSomeValue","","",56,null],[13,"InvalidEscape","","",56,null],[13,"InvalidNumber","","",56,null],[13,"InvalidUnicodeCodePoint","","",56,null],[13,"KeyMustBeAString","","",56,null],[13,"LoneLeadingSurrogateInHexEscape","","",56,null],[13,"UnknownField","","",56,null],[13,"MissingField","","",56,null],[13,"NotFourDigit","","",56,null],[13,"NotUtf8","","",56,null],[13,"TrailingCharacters","","",56,null],[13,"UnexpectedEndOfHexEscape","","",56,null],[13,"UnknownVariant","","",56,null],[13,"UnrecognizedHex","","",56,null],[4,"Error","","",null,null],[13,"SyntaxError","","msg, line, col",57,null],[13,"IoError","","",57,null],[13,"MissingFieldError","","",57,null],[11,"eq","","",56,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"clone","","",56,{"inputs":[{"name":"errorcode"}],"output":{"name":"errorcode"}}],[11,"fmt","","",56,{"inputs":[{"name":"errorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",57,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",57,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"fmt","","",57,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",57,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",57,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"syntax_error","","",57,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"end_of_stream_error","","",57,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"unknown_field_error","","",57,{"inputs":[{"name":"error"},{"name":"str"}],"output":{"name":"error"}}],[11,"missing_field_error","","",57,{"inputs":[{"name":"error"},{"name":"str"}],"output":{"name":"error"}}],[0,"ser","serde::json","",null,null],[3,"Serializer","serde::json::ser","A structure for implementing serialization to JSON.",null,null],[3,"CompactFormatter","","",null,null],[3,"PrettyFormatter","","",null,null],[5,"escape_bytes","","",null,null],[5,"escape_str","","",null,{"inputs":[{"name":"w"},{"name":"str"}],"output":{"name":"result"}}],[5,"to_writer","","Encode the specified struct into a json `[u8]` writer.",null,{"inputs":[{"name":"w"},{"name":"t"}],"output":{"name":"result"}}],[5,"to_writer_pretty","","Encode the specified struct into a json `[u8]` writer.",null,{"inputs":[{"name":"w"},{"name":"t"}],"output":{"name":"result"}}],[5,"to_vec","","Encode the specified struct into a json `[u8]` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"vec"}}],[5,"to_vec_pretty","","Encode the specified struct into a json `[u8]` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"vec"}}],[5,"to_string","","Encode the specified struct into a json `String` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"to_string_pretty","","Encode the specified struct into a json `String` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[8,"Formatter","","",null,null],[10,"open","","",58,{"inputs":[{"name":"formatter"},{"name":"w"},{"name":"u8"}],"output":{"name":"result"}}],[10,"comma","","",58,{"inputs":[{"name":"formatter"},{"name":"w"},{"name":"bool"}],"output":{"name":"result"}}],[10,"colon","","",58,{"inputs":[{"name":"formatter"},{"name":"w"}],"output":{"name":"result"}}],[10,"close","","",58,{"inputs":[{"name":"formatter"},{"name":"w"},{"name":"u8"}],"output":{"name":"result"}}],[11,"new","","Creates a new JSON serializer.",59,{"inputs":[{"name":"serializer"},{"name":"w"}],"output":{"name":"self"}}],[11,"pretty","","Creates a new JSON pretty print serializer.",59,{"inputs":[{"name":"serializer"},{"name":"w"}],"output":{"name":"self"}}],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to the writer\nspecified.",59,{"inputs":[{"name":"serializer"},{"name":"w"},{"name":"f"}],"output":{"name":"self"}}],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",59,{"inputs":[{"name":"serializer"}],"output":{"name":"w"}}],[6,"Error","","",null,null],[11,"visit_bool","","",59,{"inputs":[{"name":"serializer"},{"name":"bool"}],"output":{"name":"result"}}],[11,"visit_isize","","",59,{"inputs":[{"name":"serializer"},{"name":"isize"}],"output":{"name":"result"}}],[11,"visit_i8","","",59,{"inputs":[{"name":"serializer"},{"name":"i8"}],"output":{"name":"result"}}],[11,"visit_i16","","",59,{"inputs":[{"name":"serializer"},{"name":"i16"}],"output":{"name":"result"}}],[11,"visit_i32","","",59,{"inputs":[{"name":"serializer"},{"name":"i32"}],"output":{"name":"result"}}],[11,"visit_i64","","",59,{"inputs":[{"name":"serializer"},{"name":"i64"}],"output":{"name":"result"}}],[11,"visit_usize","","",59,{"inputs":[{"name":"serializer"},{"name":"usize"}],"output":{"name":"result"}}],[11,"visit_u8","","",59,{"inputs":[{"name":"serializer"},{"name":"u8"}],"output":{"name":"result"}}],[11,"visit_u16","","",59,{"inputs":[{"name":"serializer"},{"name":"u16"}],"output":{"name":"result"}}],[11,"visit_u32","","",59,{"inputs":[{"name":"serializer"},{"name":"u32"}],"output":{"name":"result"}}],[11,"visit_u64","","",59,{"inputs":[{"name":"serializer"},{"name":"u64"}],"output":{"name":"result"}}],[11,"visit_f32","","",59,{"inputs":[{"name":"serializer"},{"name":"f32"}],"output":{"name":"result"}}],[11,"visit_f64","","",59,{"inputs":[{"name":"serializer"},{"name":"f64"}],"output":{"name":"result"}}],[11,"visit_char","","",59,{"inputs":[{"name":"serializer"},{"name":"char"}],"output":{"name":"result"}}],[11,"visit_str","","",59,{"inputs":[{"name":"serializer"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_none","","",59,{"inputs":[{"name":"serializer"}],"output":{"name":"result"}}],[11,"visit_some","","",59,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_unit","","",59,{"inputs":[{"name":"serializer"}],"output":{"name":"result"}}],[11,"visit_enum_unit","","",59,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_seq","","",59,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_enum_seq","","",59,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_seq_elt","","",59,{"inputs":[{"name":"serializer"},{"name":"t"}],"output":{"name":"result"}}],[11,"visit_map","","",59,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_enum_map","","",59,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_map_elt","","",59,{"inputs":[{"name":"serializer"},{"name":"k"},{"name":"v"}],"output":{"name":"result"}}],[11,"open","","",60,{"inputs":[{"name":"compactformatter"},{"name":"w"},{"name":"u8"}],"output":{"name":"result"}}],[11,"comma","","",60,{"inputs":[{"name":"compactformatter"},{"name":"w"},{"name":"bool"}],"output":{"name":"result"}}],[11,"colon","","",60,{"inputs":[{"name":"compactformatter"},{"name":"w"}],"output":{"name":"result"}}],[11,"close","","",60,{"inputs":[{"name":"compactformatter"},{"name":"w"},{"name":"u8"}],"output":{"name":"result"}}],[11,"open","","",61,{"inputs":[{"name":"prettyformatter"},{"name":"w"},{"name":"u8"}],"output":{"name":"result"}}],[11,"comma","","",61,{"inputs":[{"name":"prettyformatter"},{"name":"w"},{"name":"bool"}],"output":{"name":"result"}}],[11,"colon","","",61,{"inputs":[{"name":"prettyformatter"},{"name":"w"}],"output":{"name":"result"}}],[11,"close","","",61,{"inputs":[{"name":"prettyformatter"},{"name":"w"},{"name":"u8"}],"output":{"name":"result"}}],[0,"value","serde::json","",null,null],[3,"Serializer","serde::json::value","",null,null],[3,"Deserializer","","",null,null],[4,"Value","","",null,null],[13,"Null","","",62,null],[13,"Bool","","",62,null],[13,"I64","","",62,null],[13,"U64","","",62,null],[13,"F64","","",62,null],[13,"String","","",62,null],[13,"Array","","",62,null],[13,"Object","","",62,null],[5,"to_value","","Shortcut function to encode a `T` into a JSON `Value`",null,{"inputs":[{"name":"t"}],"output":{"name":"value"}}],[5,"from_value","","Shortcut function to decode a JSON `Value` into a `T`",null,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"eq","","",62,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"value"}],"output":{"name":"value"}}],[11,"find","","If the `Value` is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",62,{"inputs":[{"name":"value"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_path","","Attempts to get a nested Value Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the `Value` associated with the final key.",62,null],[11,"search","","If the `Value` is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the `Value` is not an Object, returns None.",62,{"inputs":[{"name":"value"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_object","","Returns true if the `Value` is an Object. Returns false otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"as_object","","If the `Value` is an Object, returns the associated BTreeMap.\nReturns None otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"as_object_mut","","If the `Value` is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"is_array","","Returns true if the `Value` is an Array. Returns false otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"as_array","","If the `Value` is an Array, returns the associated vector.\nReturns None otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable vector.\nReturns None otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"is_string","","Returns true if the `Value` is a String. Returns false otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"as_string","","If the `Value` is a String, returns the associated str.\nReturns None otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"is_number","","Returns true if the `Value` is a Number. Returns false otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the `Value` is a i64. Returns false otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the `Value` is a u64. Returns false otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the `Value` is a f64. Returns false otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"as_i64","","If the `Value` is a number, return or cast it to a i64.\nReturns None otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"as_u64","","If the `Value` is a number, return or cast it to a u64.\nReturns None otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"as_f64","","If the `Value` is a number, return or cast it to a f64.\nReturns None otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the `Value` is a Boolean, returns the associated bool.\nReturns None otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"is_null","","Returns true if the `Value` is a Null. Returns false otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"as_null","","If the `Value` is a Null, returns ().\nReturns None otherwise.",62,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"serialize","","",62,{"inputs":[{"name":"value"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",62,{"inputs":[{"name":"value"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","Serializes a json value into a string",62,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",63,{"inputs":[{"name":"serializer"}],"output":{"name":"serializer"}}],[11,"unwrap","","",63,{"inputs":[{"name":"serializer"}],"output":{"name":"value"}}],[6,"Error","","",null,null],[11,"visit_bool","","",63,{"inputs":[{"name":"serializer"},{"name":"bool"}],"output":{"name":"result"}}],[11,"visit_i64","","",63,{"inputs":[{"name":"serializer"},{"name":"i64"}],"output":{"name":"result"}}],[11,"visit_u64","","",63,{"inputs":[{"name":"serializer"},{"name":"u64"}],"output":{"name":"result"}}],[11,"visit_f64","","",63,{"inputs":[{"name":"serializer"},{"name":"f64"}],"output":{"name":"result"}}],[11,"visit_char","","",63,{"inputs":[{"name":"serializer"},{"name":"char"}],"output":{"name":"result"}}],[11,"visit_str","","",63,{"inputs":[{"name":"serializer"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_none","","",63,{"inputs":[{"name":"serializer"}],"output":{"name":"result"}}],[11,"visit_some","","",63,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_unit","","",63,{"inputs":[{"name":"serializer"}],"output":{"name":"result"}}],[11,"visit_enum_unit","","",63,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_seq","","",63,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_enum_seq","","",63,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_seq_elt","","",63,{"inputs":[{"name":"serializer"},{"name":"t"}],"output":{"name":"result"}}],[11,"visit_map","","",63,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_enum_map","","",63,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_map_elt","","",63,{"inputs":[{"name":"serializer"},{"name":"k"},{"name":"v"}],"output":{"name":"result"}}],[11,"new","","Creates a new deserializer instance for deserializing the specified JSON value.",64,{"inputs":[{"name":"deserializer"},{"name":"value"}],"output":{"name":"deserializer"}}],[6,"Error","","",null,null],[11,"visit","","",64,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_option","","",64,{"inputs":[{"name":"deserializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_enum","","",64,{"inputs":[{"name":"deserializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[0,"ser","serde","Generic serialization framework.",null,null],[0,"impls","serde::ser","",null,null],[3,"SeqIteratorVisitor","serde::ser::impls","",null,null],[3,"TupleVisitor1","","",null,null],[3,"TupleVisitor2","","",null,null],[3,"TupleVisitor3","","",null,null],[3,"TupleVisitor4","","",null,null],[3,"TupleVisitor5","","",null,null],[3,"TupleVisitor6","","",null,null],[3,"TupleVisitor7","","",null,null],[3,"TupleVisitor8","","",null,null],[3,"TupleVisitor9","","",null,null],[3,"TupleVisitor10","","",null,null],[3,"TupleVisitor11","","",null,null],[3,"TupleVisitor12","","",null,null],[3,"MapIteratorVisitor","","",null,null],[11,"serialize","collections::string","",5,{"inputs":[{"name":"string"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","core::option","",6,{"inputs":[{"name":"option"},{"name":"s"}],"output":{"name":"result"}}],[11,"new","serde::ser::impls","",65,{"inputs":[{"name":"seqiteratorvisitor"},{"name":"iter"},{"name":"option"}],"output":{"name":"seqiteratorvisitor"}}],[11,"visit","","",65,{"inputs":[{"name":"seqiteratorvisitor"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",65,{"inputs":[{"name":"seqiteratorvisitor"}],"output":{"name":"option"}}],[11,"serialize","collections::vec","",12,{"inputs":[{"name":"vec"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","collections::btree::set","",8,{"inputs":[{"name":"btreeset"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","std::collections::hash::set","",10,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"result"}}],[11,"new","serde::ser::impls","",66,null],[11,"visit","","",66,{"inputs":[{"name":"tuplevisitor1"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",66,{"inputs":[{"name":"tuplevisitor1"}],"output":{"name":"option"}}],[11,"new","","",67,null],[11,"visit","","",67,{"inputs":[{"name":"tuplevisitor2"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",67,{"inputs":[{"name":"tuplevisitor2"}],"output":{"name":"option"}}],[11,"new","","",68,null],[11,"visit","","",68,{"inputs":[{"name":"tuplevisitor3"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",68,{"inputs":[{"name":"tuplevisitor3"}],"output":{"name":"option"}}],[11,"new","","",69,null],[11,"visit","","",69,{"inputs":[{"name":"tuplevisitor4"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",69,{"inputs":[{"name":"tuplevisitor4"}],"output":{"name":"option"}}],[11,"new","","",70,null],[11,"visit","","",70,{"inputs":[{"name":"tuplevisitor5"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",70,{"inputs":[{"name":"tuplevisitor5"}],"output":{"name":"option"}}],[11,"new","","",71,null],[11,"visit","","",71,{"inputs":[{"name":"tuplevisitor6"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",71,{"inputs":[{"name":"tuplevisitor6"}],"output":{"name":"option"}}],[11,"new","","",72,null],[11,"visit","","",72,{"inputs":[{"name":"tuplevisitor7"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",72,{"inputs":[{"name":"tuplevisitor7"}],"output":{"name":"option"}}],[11,"new","","",73,null],[11,"visit","","",73,{"inputs":[{"name":"tuplevisitor8"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",73,{"inputs":[{"name":"tuplevisitor8"}],"output":{"name":"option"}}],[11,"new","","",74,null],[11,"visit","","",74,{"inputs":[{"name":"tuplevisitor9"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",74,{"inputs":[{"name":"tuplevisitor9"}],"output":{"name":"option"}}],[11,"new","","",75,null],[11,"visit","","",75,{"inputs":[{"name":"tuplevisitor10"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",75,{"inputs":[{"name":"tuplevisitor10"}],"output":{"name":"option"}}],[11,"new","","",76,null],[11,"visit","","",76,{"inputs":[{"name":"tuplevisitor11"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",76,{"inputs":[{"name":"tuplevisitor11"}],"output":{"name":"option"}}],[11,"new","","",77,null],[11,"visit","","",77,{"inputs":[{"name":"tuplevisitor12"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",77,{"inputs":[{"name":"tuplevisitor12"}],"output":{"name":"option"}}],[11,"new","","",78,{"inputs":[{"name":"mapiteratorvisitor"},{"name":"iter"},{"name":"option"}],"output":{"name":"mapiteratorvisitor"}}],[11,"visit","","",78,{"inputs":[{"name":"mapiteratorvisitor"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","",78,{"inputs":[{"name":"mapiteratorvisitor"}],"output":{"name":"option"}}],[11,"serialize","collections::btree::map","",14,{"inputs":[{"name":"btreemap"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","alloc::boxed","",18,{"inputs":[{"name":"box"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","alloc::rc","",20,{"inputs":[{"name":"rc"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","alloc::arc","",19,{"inputs":[{"name":"arc"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","std::path","",79,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"result"}}],[11,"serialize","","",17,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"result"}}],[8,"Serialize","serde::ser","",null,null],[10,"serialize","","",80,{"inputs":[{"name":"serialize"},{"name":"s"}],"output":{"name":"result"}}],[8,"Serializer","","",null,null],[16,"Error","serde::ser::Serializer","",null,null],[10,"visit_bool","serde::ser","`visit_bool` serializes a `bool` value.",81,{"inputs":[{"name":"serializer"},{"name":"bool"}],"output":{"name":"result"}}],[11,"visit_isize","","`visit_isize` serializes a `isize` value. By default it casts the value to a `i64` and\npasses it to the `visit_i64` method.",81,{"inputs":[{"name":"serializer"},{"name":"isize"}],"output":{"name":"result"}}],[11,"visit_i8","","`visit_i8` serializes a `i8` value. By default it casts the value to a `i64` and\npasses it to the `visit_i64` method.",81,{"inputs":[{"name":"serializer"},{"name":"i8"}],"output":{"name":"result"}}],[11,"visit_i16","","`visit_i16` serializes a `i16` value. By default it casts the value to a `i64` and\npasses it to the `visit_i64` method.",81,{"inputs":[{"name":"serializer"},{"name":"i16"}],"output":{"name":"result"}}],[11,"visit_i32","","`visit_i32` serializes a `i32` value. By default it casts the value to a `i64` and\npasses it to the `visit_i64` method.",81,{"inputs":[{"name":"serializer"},{"name":"i32"}],"output":{"name":"result"}}],[10,"visit_i64","","`visit_i64` serializes a `i64` value.",81,{"inputs":[{"name":"serializer"},{"name":"i64"}],"output":{"name":"result"}}],[11,"visit_usize","","`visit_usize` serializes a `usize` value. By default it casts the value to a `u64` and\npasses it to the `visit_u64` method.",81,{"inputs":[{"name":"serializer"},{"name":"usize"}],"output":{"name":"result"}}],[11,"visit_u8","","`visit_u8` serializes a `u8` value. By default it casts the value to a `u64` and passes\nit to the `visit_u64` method.",81,{"inputs":[{"name":"serializer"},{"name":"u8"}],"output":{"name":"result"}}],[11,"visit_u16","","`visit_u32` serializes a `u32` value. By default it casts the value to a `u64` and passes\nit to the `visit_u64` method.",81,{"inputs":[{"name":"serializer"},{"name":"u16"}],"output":{"name":"result"}}],[11,"visit_u32","","`visit_u32` serializes a `u32` value. By default it casts the value to a `u64` and passes\nit to the `visit_u64` method.",81,{"inputs":[{"name":"serializer"},{"name":"u32"}],"output":{"name":"result"}}],[10,"visit_u64","","`visit_u64` serializes a `u64` value.",81,{"inputs":[{"name":"serializer"},{"name":"u64"}],"output":{"name":"result"}}],[11,"visit_f32","","`visit_f32` serializes a `f32` value. By default it casts the value to a `f64` and passes\nit to the `visit_f64` method.",81,{"inputs":[{"name":"serializer"},{"name":"f32"}],"output":{"name":"result"}}],[10,"visit_f64","","`visit_f64` serializes a `f64` value.",81,{"inputs":[{"name":"serializer"},{"name":"f64"}],"output":{"name":"result"}}],[11,"visit_char","","`visit_char` serializes a character. By default it serializes it as a `&str` containing a\nsingle character.",81,{"inputs":[{"name":"serializer"},{"name":"char"}],"output":{"name":"result"}}],[10,"visit_str","","`visit_str` serializes a `&str`.",81,{"inputs":[{"name":"serializer"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_bytes","","`visit_bytes` is a hook that enables those serialization formats that support serializing\nbyte slices separately from generic arrays. By default it serializes as a regular array. ",81,null],[10,"visit_unit","","",81,{"inputs":[{"name":"serializer"}],"output":{"name":"result"}}],[11,"visit_named_unit","","",81,{"inputs":[{"name":"serializer"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_enum_unit","","",81,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[10,"visit_none","","",81,{"inputs":[{"name":"serializer"}],"output":{"name":"result"}}],[10,"visit_some","","",81,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[10,"visit_seq","","",81,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_named_seq","","",81,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_enum_seq","","",81,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[10,"visit_seq_elt","","",81,{"inputs":[{"name":"serializer"},{"name":"t"}],"output":{"name":"result"}}],[10,"visit_map","","",81,{"inputs":[{"name":"serializer"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_named_map","","",81,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[11,"visit_enum_map","","",81,{"inputs":[{"name":"serializer"},{"name":"str"},{"name":"str"},{"name":"v"}],"output":{"name":"result"}}],[10,"visit_map_elt","","",81,{"inputs":[{"name":"serializer"},{"name":"k"},{"name":"v"}],"output":{"name":"result"}}],[8,"SeqVisitor","","",null,null],[10,"visit","","",82,{"inputs":[{"name":"seqvisitor"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","Return the length of the sequence if known.",82,{"inputs":[{"name":"seqvisitor"}],"output":{"name":"option"}}],[8,"MapVisitor","","",null,null],[10,"visit","","",83,{"inputs":[{"name":"mapvisitor"},{"name":"s"}],"output":{"name":"result"}}],[11,"len","","Return the length of the map if known.",83,{"inputs":[{"name":"mapvisitor"}],"output":{"name":"option"}}]],"paths":[[3,"Bytes"],[3,"ByteBuf"],[3,"ByteBufVisitor"],[3,"UnitVisitor"],[3,"PrimitiveVisitor"],[3,"String"],[4,"Option"],[3,"BTreeSetVisitor"],[3,"BTreeSet"],[3,"HashSetVisitor"],[3,"HashSet"],[3,"VecVisitor"],[3,"Vec"],[3,"BTreeMapVisitor"],[3,"BTreeMap"],[3,"HashMapVisitor"],[3,"HashMap"],[3,"PathBuf"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Error"],[8,"ValueDeserializer"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U32Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"SeqDeserializer"],[3,"MapDeserializer"],[8,"Error"],[8,"Deserialize"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqVisitor"],[8,"MapVisitor"],[8,"EnumVisitor"],[8,"VariantVisitor"],[8,"EnumSeqVisitor"],[8,"EnumMapVisitor"],[3,"LineColIterator"],[3,"ArrayBuilder"],[3,"ObjectBuilder"],[3,"Deserializer"],[4,"ErrorCode"],[4,"Error"],[8,"Formatter"],[3,"Serializer"],[3,"CompactFormatter"],[3,"PrettyFormatter"],[4,"Value"],[3,"Serializer"],[3,"Deserializer"],[3,"SeqIteratorVisitor"],[3,"TupleVisitor1"],[3,"TupleVisitor2"],[3,"TupleVisitor3"],[3,"TupleVisitor4"],[3,"TupleVisitor5"],[3,"TupleVisitor6"],[3,"TupleVisitor7"],[3,"TupleVisitor8"],[3,"TupleVisitor9"],[3,"TupleVisitor10"],[3,"TupleVisitor11"],[3,"TupleVisitor12"],[3,"MapIteratorVisitor"],[3,"Path"],[8,"Serialize"],[8,"Serializer"],[8,"SeqVisitor"],[8,"MapVisitor"]]};
searchIndex['time'] = {"items":[[0,"","time","Simple time handling.",null,null],[3,"Duration","","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10<sup>9</sup> - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"tmfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,{"inputs":[{"name":"duration"}],"output":{"name":"bool"}}],[11,"neg","","",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"add","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",4,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"div","","",4,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"fmt","","",4,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"timespec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"new","","",0,{"inputs":[{"name":"timespec"},{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[6,"Output","","",null,null],[11,"add","","",0,{"inputs":[{"name":"timespec"},{"name":"duration"}],"output":{"name":"timespec"}}],[6,"Output","","",null,null],[11,"sub","","",0,{"inputs":[{"name":"timespec"},{"name":"duration"}],"output":{"name":"timespec"}}],[6,"Output","","",null,null],[11,"sub","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"duration"}}],[11,"clone","","",5,{"inputs":[{"name":"precisetime"}],"output":{"name":"precisetime"}}],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",5,{"inputs":[{"name":"precisetime"}],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",5,{"inputs":[{"name":"precisetime"},{"name":"precisetime"}],"output":{"name":"duration"}}],[11,"fmt","","",6,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",6,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"fmt","","",6,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Output","","",null,null],[11,"sub","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"duration"}}],[6,"Output","","",null,null],[11,"sub","","",6,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[6,"Output","","",null,null],[11,"add","","",6,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"fmt","","",1,{"inputs":[{"name":"tm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[6,"Output","","",null,null],[11,"add","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"tm"},{"name":"duration"}],"output":{"name":"tm"}}],[6,"Output","","",null,null],[11,"sub","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"tm"},{"name":"duration"}],"output":{"name":"tm"}}],[6,"Output","","",null,null],[11,"sub","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"duration"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"ordering"}}],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,{"inputs":[{"name":"tm"}],"output":{"name":"timespec"}}],[11,"to_local","","Convert time to the local timezone",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"to_utc","","Convert time to the UTC",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"strftime","","Formats the time according to the format string.",1,{"inputs":[{"name":"tm"},{"name":"str"}],"output":{"name":"result"}}],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"clone","","",2,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",2,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"tmfmt"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex['openssl_sys'] = {"items":[[0,"","openssl_sys","",null,null],[3,"EVP_MD_CTX","","",null,null],[3,"HMAC_CTX","","",null,null],[3,"X509V3_CTX","","",null,null],[3,"BIGNUM","","",null,null],[12,"d","","",0,null],[12,"top","","",0,null],[12,"dmax","","",0,null],[12,"neg","","",0,null],[12,"flags","","",0,null],[5,"init","","",null,{"inputs":[],"output":null}],[5,"BIO_eof","","",null,null],[5,"SSL_CTX_set_options","","",null,null],[5,"SSL_CTX_get_options","","",null,null],[5,"SSL_CTX_clear_options","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"ASN1_INTEGER_set","","",null,null],[5,"ASN1_STRING_type_new","","",null,null],[5,"ASN1_TIME_free","","",null,null],[5,"BIO_ctrl","","",null,null],[5,"BIO_free_all","","",null,null],[5,"BIO_new","","",null,null],[5,"BIO_read","","",null,null],[5,"BIO_write","","",null,null],[5,"BIO_s_mem","","",null,null],[5,"BN_new","","",null,null],[5,"BN_dup","","",null,null],[5,"BN_clear_free","","",null,null],[5,"BN_CTX_new","","",null,null],[5,"BN_CTX_free","","",null,null],[5,"BN_num_bits","","",null,null],[5,"BN_set_negative","","",null,null],[5,"BN_set_word","","",null,null],[5,"BN_add","","",null,null],[5,"BN_div","","",null,null],[5,"BN_exp","","",null,null],[5,"BN_gcd","","",null,null],[5,"BN_mod_add","","",null,null],[5,"BN_mod_exp","","",null,null],[5,"BN_mod_inverse","","",null,null],[5,"BN_mod_mul","","",null,null],[5,"BN_mod_sqr","","",null,null],[5,"BN_mod_sub","","",null,null],[5,"BN_mul","","",null,null],[5,"BN_nnmod","","",null,null],[5,"BN_add_word","","",null,null],[5,"BN_sub_word","","",null,null],[5,"BN_mul_word","","",null,null],[5,"BN_div_word","","",null,null],[5,"BN_mod_word","","",null,null],[5,"BN_sqr","","",null,null],[5,"BN_sub","","",null,null],[5,"BN_clear_bit","","",null,null],[5,"BN_is_bit_set","","",null,null],[5,"BN_lshift","","",null,null],[5,"BN_lshift1","","",null,null],[5,"BN_mask_bits","","",null,null],[5,"BN_rshift","","",null,null],[5,"BN_set_bit","","",null,null],[5,"BN_rshift1","","",null,null],[5,"BN_cmp","","",null,null],[5,"BN_ucmp","","",null,null],[5,"BN_generate_prime_ex","","",null,null],[5,"BN_is_prime_ex","","",null,null],[5,"BN_is_prime_fasttest_ex","","",null,null],[5,"BN_rand","","",null,null],[5,"BN_pseudo_rand","","",null,null],[5,"BN_rand_range","","",null,null],[5,"BN_pseudo_rand_range","","",null,null],[5,"BN_bin2bn","","",null,null],[5,"BN_bn2bin","","",null,null],[5,"BN_dec2bn","","",null,null],[5,"BN_bn2dec","","",null,null],[5,"BN_hex2bn","","",null,null],[5,"BN_bn2hex","","",null,null],[5,"CRYPTO_num_locks","","",null,null],[5,"CRYPTO_set_locking_callback","","",null,null],[5,"CRYPTO_free","","",null,null],[5,"CRYPTO_memcmp","","",null,null],[5,"ERR_get_error","","",null,null],[5,"ERR_lib_error_string","","",null,null],[5,"ERR_func_error_string","","",null,null],[5,"ERR_reason_error_string","","",null,null],[5,"ERR_load_crypto_strings","","",null,null],[5,"EVP_md5","","",null,null],[5,"EVP_ripemd160","","",null,null],[5,"EVP_sha1","","",null,null],[5,"EVP_sha224","","",null,null],[5,"EVP_sha256","","",null,null],[5,"EVP_sha384","","",null,null],[5,"EVP_sha512","","",null,null],[5,"EVP_aes_128_cbc","","",null,null],[5,"EVP_aes_128_ecb","","",null,null],[5,"EVP_aes_256_cbc","","",null,null],[5,"EVP_aes_256_ecb","","",null,null],[5,"EVP_rc4","","",null,null],[5,"EVP_CIPHER_CTX_new","","",null,null],[5,"EVP_CIPHER_CTX_set_padding","","",null,null],[5,"EVP_CIPHER_CTX_free","","",null,null],[5,"EVP_CipherInit","","",null,null],[5,"EVP_CipherUpdate","","",null,null],[5,"EVP_CipherFinal","","",null,null],[5,"EVP_DigestInit","","",null,null],[5,"EVP_DigestInit_ex","","",null,null],[5,"EVP_DigestUpdate","","",null,null],[5,"EVP_DigestFinal","","",null,null],[5,"EVP_DigestFinal_ex","","",null,null],[5,"EVP_MD_CTX_create","","",null,null],[5,"EVP_MD_CTX_copy_ex","","",null,null],[5,"EVP_MD_CTX_destroy","","",null,null],[5,"EVP_PKEY_new","","",null,null],[5,"EVP_PKEY_free","","",null,null],[5,"EVP_PKEY_assign","","",null,null],[5,"EVP_PKEY_get1_RSA","","",null,null],[5,"EVP_PKEY_set1_RSA","","",null,null],[5,"HMAC_CTX_init","","",null,null],[5,"HMAC_CTX_cleanup","","",null,null],[5,"HMAC_CTX_copy","","",null,null],[5,"HMAC_Init_ex_shim","","",null,null],[5,"HMAC_Final_shim","","",null,null],[5,"HMAC_Update_shim","","",null,null],[5,"PEM_read_bio_X509","","",null,null],[5,"PEM_read_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_X509","","",null,null],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",null,null],[5,"RAND_bytes","","",null,null],[5,"RSA_generate_key","","",null,null],[5,"RSA_private_decrypt","","",null,null],[5,"RSA_public_encrypt","","",null,null],[5,"RSA_sign","","",null,null],[5,"RSA_size","","",null,null],[5,"RSA_verify","","",null,null],[5,"SSL_library_init","","",null,null],[5,"SSL_load_error_strings","","",null,null],[5,"SSLv3_method","","",null,null],[5,"TLSv1_method","","",null,null],[5,"SSLv23_method","","",null,null],[5,"SSL_new","","",null,null],[5,"SSL_free","","",null,null],[5,"SSL_set_bio","","",null,null],[5,"SSL_get_rbio","","",null,null],[5,"SSL_get_wbio","","",null,null],[5,"SSL_accept","","",null,null],[5,"SSL_connect","","",null,null],[5,"SSL_ctrl","","",null,null],[5,"SSL_get_error","","",null,null],[5,"SSL_read","","",null,null],[5,"SSL_write","","",null,null],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",null,null],[5,"SSL_get_SSL_CTX","","",null,null],[5,"SSL_get_current_compression","","",null,null],[5,"SSL_get_peer_certificate","","",null,null],[5,"SSL_COMP_get_name","","",null,null],[5,"SSL_CTX_new","","",null,null],[5,"SSL_CTX_free","","",null,null],[5,"SSL_CTX_set_verify","","",null,null],[5,"SSL_CTX_set_verify_depth","","",null,null],[5,"SSL_CTX_load_verify_locations","","",null,null],[5,"SSL_CTX_get_ex_new_index","","",null,null],[5,"SSL_CTX_set_ex_data","","",null,null],[5,"SSL_CTX_get_ex_data","","",null,null],[5,"SSL_CTX_use_certificate_file","","",null,null],[5,"SSL_CTX_use_certificate","","",null,null],[5,"SSL_CTX_use_PrivateKey_file","","",null,null],[5,"SSL_CTX_use_PrivateKey","","",null,null],[5,"SSL_CTX_check_private_key","","",null,null],[5,"SSL_CTX_set_cipher_list","","",null,null],[5,"SSL_CTX_ctrl","","",null,null],[5,"X509_add_ext","","",null,null],[5,"X509_digest","","",null,null],[5,"X509_free","","",null,null],[5,"X509_get_serialNumber","","",null,null],[5,"X509_get_subject_name","","",null,null],[5,"X509_gmtime_adj","","",null,null],[5,"X509_new","","",null,null],[5,"X509_set_issuer_name","","",null,null],[5,"X509_set_notAfter","","",null,null],[5,"X509_set_notBefore","","",null,null],[5,"X509_set_version","","",null,null],[5,"X509_set_pubkey","","",null,null],[5,"X509_sign","","",null,null],[5,"X509_get_pubkey","","",null,null],[5,"X509_EXTENSION_free","","",null,null],[5,"X509_NAME_add_entry_by_txt","","",null,null],[5,"X509_NAME_get_index_by_NID","","",null,null],[5,"X509_NAME_get_entry","","",null,null],[5,"X509_NAME_ENTRY_get_data","","",null,null],[5,"ASN1_STRING_to_UTF8","","",null,null],[5,"X509_STORE_CTX_get_current_cert","","",null,null],[5,"X509_STORE_CTX_get_error","","",null,null],[5,"X509_STORE_CTX_get_ex_data","","",null,null],[5,"X509V3_EXT_conf_nid","","",null,null],[5,"X509V3_set_ctx","","",null,null],[5,"i2d_RSA_PUBKEY","","",null,null],[5,"d2i_RSA_PUBKEY","","",null,null],[5,"i2d_RSAPrivateKey","","",null,null],[5,"d2i_RSAPrivateKey","","",null,null],[0,"probe","","",null,null],[3,"ProbeResult","openssl_sys::probe","",null,null],[12,"cert_file","","",1,null],[12,"cert_dir","","",1,null],[5,"find_certs_dirs","","Probe the system for the directory in which CA certificates should likely be\nfound.",null,{"inputs":[],"output":{"name":"vec"}}],[5,"init_ssl_cert_env_vars","","",null,{"inputs":[],"output":null}],[5,"probe","","",null,{"inputs":[],"output":{"name":"proberesult"}}],[6,"ASN1_INTEGER","openssl_sys","",null,null],[6,"ASN1_STRING","","",null,null],[6,"ASN1_TIME","","",null,null],[6,"BIO","","",null,null],[6,"BIO_METHOD","","",null,null],[6,"BN_CTX","","",null,null],[6,"COMP_METHOD","","",null,null],[6,"CRYPTO_EX_DATA","","",null,null],[6,"ENGINE","","",null,null],[6,"EVP_CIPHER","","",null,null],[6,"EVP_CIPHER_CTX","","",null,null],[6,"EVP_MD","","",null,null],[6,"EVP_PKEY","","",null,null],[6,"EVP_PKEY_CTX","","",null,null],[6,"RSA","","",null,null],[6,"SSL","","",null,null],[6,"SSL_CTX","","",null,null],[6,"SSL_METHOD","","",null,null],[6,"X509","","",null,null],[6,"X509_CRL","","",null,null],[6,"X509_EXTENSION","","",null,null],[6,"X509_NAME","","",null,null],[6,"X509_NAME_ENTRY","","",null,null],[6,"X509_REQ","","",null,null],[6,"X509_STORE_CTX","","",null,null],[6,"CRYPTO_EX_new","","",null,null],[6,"CRYPTO_EX_dup","","",null,null],[6,"CRYPTO_EX_free","","",null,null],[6,"PasswordCallback","","",null,null],[17,"BIO_CTRL_EOF","","",null,null],[17,"CRYPTO_LOCK","","",null,null],[17,"MBSTRING_ASC","","",null,null],[17,"MBSTRING_BMP","","",null,null],[17,"MBSTRING_FLAG","","",null,null],[17,"MBSTRING_UNIV","","",null,null],[17,"MBSTRING_UTF8","","",null,null],[17,"NID_ext_key_usage","","",null,null],[17,"NID_key_usage","","",null,null],[17,"SSL_CTRL_OPTIONS","","",null,null],[17,"SSL_CTRL_CLEAR_OPTIONS","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",null,null],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",null,null],[17,"SSL_CTRL_SET_READ_AHEAD","","",null,null],[17,"SSL_ERROR_NONE","","",null,null],[17,"SSL_ERROR_SSL","","",null,null],[17,"SSL_ERROR_SYSCALL","","",null,null],[17,"SSL_ERROR_WANT_ACCEPT","","",null,null],[17,"SSL_ERROR_WANT_CONNECT","","",null,null],[17,"SSL_ERROR_WANT_READ","","",null,null],[17,"SSL_ERROR_WANT_WRITE","","",null,null],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",null,null],[17,"SSL_ERROR_ZERO_RETURN","","",null,null],[17,"SSL_VERIFY_NONE","","",null,null],[17,"SSL_VERIFY_PEER","","",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",null,null],[17,"TLSEXT_NAMETYPE_host_name","","",null,null],[17,"SSL_TLSEXT_ERR_OK","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",null,null],[17,"SSL_TLSEXT_ERR_NOACK","","",null,null],[17,"V_ASN1_GENERALIZEDTIME","","",null,null],[17,"V_ASN1_UTCTIME","","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[17,"X509_FILETYPE_PEM","","",null,null],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",null,null],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",null,null],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",null,null],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CERT_REJECTED","","",null,null],[17,"X509_V_ERR_CERT_REVOKED","","",null,null],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CERT_UNTRUSTED","","",null,null],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",null,null],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",null,null],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",null,null],[17,"X509_V_ERR_INVALID_CA","","",null,null],[17,"X509_V_ERR_INVALID_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_NON_CA","","",null,null],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_PURPOSE","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",null,null],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",null,null],[17,"X509_V_ERR_OUT_OF_MEM","","",null,null],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",null,null],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",null,null],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",null,null],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",null,null],[17,"X509_V_ERR_SUBTREE_MINMAX","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",null,null],[17,"X509_V_OK","","",null,null],[11,"clone","","",2,{"inputs":[{"name":"evp_md_ctx"}],"output":{"name":"evp_md_ctx"}}],[11,"clone","","",3,{"inputs":[{"name":"hmac_ctx"}],"output":{"name":"hmac_ctx"}}],[11,"clone","","",4,{"inputs":[{"name":"x509v3_ctx"}],"output":{"name":"x509v3_ctx"}}],[11,"clone","","",0,{"inputs":[{"name":"bignum"}],"output":{"name":"bignum"}}]],"paths":[[3,"BIGNUM"],[3,"ProbeResult"],[3,"EVP_MD_CTX"],[3,"HMAC_CTX"],[3,"X509V3_CTX"]]};
searchIndex['num'] = {"items":[[0,"","num","Simple numerics.",null,null],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[0,"bigint","","A Big integer (signed version: `BigInt`, unsigned version: `BigUint`).",null,null],[3,"BigUint","num::bigint","A big unsigned integer type.",null,null],[3,"RadixFmt","","",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[4,"ParseBigIntError","","",null,null],[13,"ParseInt","","",1,null],[13,"Other","","",1,null],[0,"big_digit","","",null,null],[5,"from_doublebigdigit","num::bigint::big_digit","Split one `DoubleBigDigit` into two `BigDigit`s.",null,null],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",null,{"inputs":[{"name":"bigdigit"},{"name":"bigdigit"}],"output":{"name":"doublebigdigit"}}],[17,"BITS","","",null,null],[17,"BASE","","",null,null],[6,"BigDigit","num::bigint","A `BigDigit` is a `BigUint`'s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its\nsize is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",2,{"inputs":[{"name":"tobiguint"}],"output":{"name":"option"}}],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",3,{"inputs":[{"name":"tobigint"}],"output":{"name":"option"}}],[8,"RandBigInt","","",null,null],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"biguint"}}],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound. Fails\nwhen the bound is zero.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"biguint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",5,{"inputs":[{"name":"biguint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"eq","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"ordering"}}],[11,"default","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"hash","","",5,{"inputs":[{"name":"biguint"},{"name":"h"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",5,{"inputs":[{"name":"biguint"},{"name":"str"}],"output":{"name":"result"}}],[6,"FromStrRadixErr","","",null,null],[11,"from_str_radix","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[6,"Output","","",null,null],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"shl","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"shr","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[11,"zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"is_zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"one","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"neg","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[11,"checked_add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"div_rem","","",5,null],[11,"div_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mod_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div_mod_floor","","",5,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"to_i64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"to_u64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"from_i64","","",5,{"inputs":[{"name":"biguint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",5,{"inputs":[{"name":"biguint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"to_biguint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_biguint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"clone","","",7,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",7,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",5,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"parse_bytes","","Creates and initializes a `BigUint`.",5,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"usize"}}],[11,"decode","","",0,{"inputs":[{"name":"sign"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"sign"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[6,"Output","","",null,null],[11,"neg","","Negate Sign value.",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"bigint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",6,{"inputs":[{"name":"bigint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"eq","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"ordering"}}],[11,"default","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",6,{"inputs":[{"name":"bigint"},{"name":"h"}],"output":null}],[6,"Err","","",null,null],[11,"from_str","","",6,{"inputs":[{"name":"bigint"},{"name":"str"}],"output":{"name":"result"}}],[6,"FromStrRadixErr","","",null,null],[11,"from_str_radix","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[6,"Output","","",null,null],[11,"shl","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"shr","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[11,"zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"one","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"signum","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_positive","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_negative","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[6,"Output","","",null,null],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"neg","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"div_rem","","",6,null],[11,"div_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mod_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div_mod_floor","","",6,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"to_i64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_u64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"from_i64","","",6,{"inputs":[{"name":"bigint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",6,{"inputs":[{"name":"bigint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"to_bigint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_bigint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"new","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",6,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",6,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",6,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",6,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not negative.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"parsebiginterror"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parseinterror"}],"output":{"name":"parsebiginterror"}}],[0,"complex","num","Complex numbers.",null,null],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",8,null],[12,"im","","Imaginary portion of the complex number",8,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"fmt","","",8,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"complex"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"complex"},{"name":"__s"}],"output":{"name":"result"}}],[11,"hash","","",8,null],[11,"clone","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"eq","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"new","","Create a new Complex",8,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"scale","","Multiplies `self` by the scalar `t`.",8,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"unscale","","Divides `self` by the scalar `t`.",8,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"inv","","Returns `1/self`",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"norm","","Calculate |self|",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"arg","","Calculate the principal Arg of self.",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",8,null],[11,"from_polar","","Convert a polar representation into a complex number.",8,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[11,"add","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"add","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"mul","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"mul","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"neg","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[11,"zero","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"is_zero","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"one","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"fmt","","",8,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"integer","num","Integer trait and functions.",null,null],[5,"div_rem","num::integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",9,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",9,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",9,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",9,null],[0,"iter","num","External iterators for generic mathematics",null,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",10,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[6,"Item","","",null,null],[11,"next","","",10,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[6,"Item","","",null,null],[11,"next","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",11,null],[11,"next_back","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"clone","","",12,{"inputs":[{"name":"rangestep"}],"output":{"name":"rangestep"}}],[6,"Item","","",null,null],[11,"next","","",12,{"inputs":[{"name":"rangestep"}],"output":{"name":"option"}}],[11,"clone","","",13,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"rangestepinclusive"}}],[6,"Item","","",null,null],[11,"next","","",13,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"option"}}],[0,"traits","num","Numeric traits for generic mathematics",null,null],[3,"ParseFloatError","num::traits","",null,null],[12,"kind","","",14,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",15,null],[13,"Invalid","","",15,null],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","num::traits::Num","Parse error for `from_str_radix`",null,null],[10,"from_str_radix","num::traits","Convert from a string and radix <= 36.",16,{"inputs":[{"name":"num"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",17,{"inputs":[{"name":"zero"}],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",17,{"inputs":[{"name":"zero"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",18,{"inputs":[{"name":"one"}],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",19,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",19,{"inputs":[{"name":"signed"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",19,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",19,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",19,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",20,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",20,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",21,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",21,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",22,{"inputs":[{"name":"checkedadd"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",23,{"inputs":[{"name":"checkedsub"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",24,{"inputs":[{"name":"checkedmul"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",25,{"inputs":[{"name":"checkeddiv"},{"name":"self"}],"output":{"name":"option"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",26,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",26,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",29,{"inputs":[{"name":"numcast"},{"name":"t"}],"output":{"name":"option"}}],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",30,{"inputs":[{"name":"float"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",30,{"inputs":[{"name":"float"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",30,{"inputs":[{"name":"float"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",30,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",30,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[0,"rational","num","Rational numbers",null,null],[3,"Ratio","num::rational","Represents the ratio between 2 numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","",null,null],[6,"Rational64","","",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"fmt","","",31,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",31,{"inputs":[{"name":"ratio"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",31,{"inputs":[{"name":"ratio"},{"name":"__s"}],"output":{"name":"result"}}],[11,"hash","","",31,null],[11,"clone","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"from_integer","","Creates a ratio representing the integer `t`.",31,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new_raw","","Creates a ratio without checking for `denom == 0` or reducing.",31,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new","","Create a new Ratio. Fails if `denom == 0`.",31,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"to_integer","","Converts to an integer.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"numer","","Gets an immutable reference to the numerator.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"denom","","Gets an immutable reference to the denominator.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"reduced","","Returns a `reduce`d copy of self.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"recip","","Returns the reciprocal.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"floor","","Rounds towards minus infinity.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"ceil","","Rounds towards plus infinity.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"trunc","","Rounds towards zero.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"fract","","Returns the fractional part of a number.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"from_float","","Converts a float into a rational number.",31,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"option"}}],[11,"eq","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"lt","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"gt","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"le","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ge","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"option"}}],[11,"cmp","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ordering"}}],[6,"Output","","",null,null],[11,"mul","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"mul","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"add","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"add","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"rem","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"rem","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"neg","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[11,"zero","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_zero","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"one","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"FromStrRadixErr","","",null,null],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",31,{"inputs":[{"name":"ratio"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"abs","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"abs_sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"signum","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_positive","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"is_negative","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",31,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","Parses `numer/denom` or just `numer`.",31,{"inputs":[{"name":"ratio"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"parseratioerror"}}],[11,"fmt","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",32,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"str"}}]],"paths":[[4,"Sign"],[4,"ParseBigIntError"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"],[3,"BigUint"],[3,"BigInt"],[3,"RadixFmt"],[3,"Complex"],[8,"Integer"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"Float"],[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex['serde_macros'] = {"items":[],"paths":[]};
searchIndex['mime'] = {"items":[[0,"","mime","# Mime",null,null],[3,"Mime","","Mime, or Media Type. Encapsulates common registers types.",null,null],[4,"TopLevel","","",null,null],[13,"Star","","",0,null],[13,"Text","","",0,null],[13,"Image","","",0,null],[13,"Audio","","",0,null],[13,"Video","","",0,null],[13,"Application","","",0,null],[13,"Multipart","","",0,null],[13,"Message","","",0,null],[13,"Model","","",0,null],[13,"Ext","","",0,null],[4,"SubLevel","","",null,null],[13,"Star","","",1,null],[13,"Plain","","",1,null],[13,"Html","","",1,null],[13,"Xml","","",1,null],[13,"Javascript","","",1,null],[13,"Css","","",1,null],[13,"Json","","",1,null],[13,"WwwFormUrlEncoded","","",1,null],[13,"FormData","","",1,null],[13,"Png","","",1,null],[13,"Gif","","",1,null],[13,"Bmp","","",1,null],[13,"Jpeg","","",1,null],[13,"Ext","","",1,null],[4,"Attr","","",null,null],[13,"Charset","","",2,null],[13,"Q","","",2,null],[13,"Ext","","",2,null],[4,"Value","","",null,null],[13,"Utf8","","",3,null],[13,"Ext","","",3,null],[6,"Param","","",null,null],[11,"fmt","","",4,{"inputs":[{"name":"mime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"mime"},{"name":"mime"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"mime"},{"name":"mime"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"mime"}],"output":{"name":"mime"}}],[11,"fmt","","",0,{"inputs":[{"name":"toplevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"toplevel"}],"output":{"name":"toplevel"}}],[11,"eq","","",0,{"inputs":[{"name":"toplevel"},{"name":"toplevel"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"toplevel"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",0,{"inputs":[{"name":"toplevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"sublevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"sublevel"}],"output":{"name":"sublevel"}}],[11,"eq","","",1,{"inputs":[{"name":"sublevel"},{"name":"sublevel"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"sublevel"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",1,{"inputs":[{"name":"sublevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"attr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"attr"}],"output":{"name":"attr"}}],[11,"eq","","",2,{"inputs":[{"name":"attr"},{"name":"attr"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"attr"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",2,{"inputs":[{"name":"attr"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"value"}],"output":{"name":"value"}}],[11,"eq","","",3,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",3,{"inputs":[{"name":"value"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"mime"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",4,{"inputs":[{"name":"mime"},{"name":"str"}],"output":{"name":"result"}}],[14,"mime!","","Easily create a Mime without having to import so many enums.",null,null]],"paths":[[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[3,"Mime"]]};
searchIndex['url'] = {"items":[[0,"","url","<a href=\"https://github.com/servo/rust-url\"><img style=\"position: absolute; top: 0; left: 0; border: 0;\" src=\"../github.png\" alt=\"Fork me on GitHub\"></a>\n<style>.sidebar { margin-top: 53px }</style>",null,null],[3,"Ipv6Address","","A 128 bit IPv6 address",null,null],[12,"pieces","","",0,null],[3,"Url","","The parsed representation of an absolute URL.",null,null],[12,"scheme","","The scheme (a.k.a. protocol) of the URL, in ASCII lower case.",1,null],[12,"scheme_data","","The components of the URL whose representation depends on where the scheme is *relative*.",1,null],[12,"query","","The query string of the URL.",1,null],[12,"fragment","","The fragment identifier of the URL.",1,null],[3,"RelativeSchemeData","","Components for URLs in a *relative* scheme such as HTTP.",null,null],[12,"username","","The username of the URL, as a possibly empty, percent-encoded string.",2,null],[12,"password","","The password of the URL.",2,null],[12,"host","","The host of the URL, either a domain name or an IPv4 address",2,null],[12,"port","","The port number of the URL.\n`None` for file-like schemes, or to indicate the default port number.",2,null],[12,"default_port","","The default port number for the URL’s scheme.\n`None` for file-like schemes.",2,null],[12,"path","","The path of the URL, as vector of percent-encoded strings.",2,null],[3,"UrlParser","","A set of optional parameters for URL parsing.",null,null],[4,"Host","","The host name of an URL.",null,null],[13,"Domain","","A (DNS) domain name or an IPv4 address.",3,null],[13,"Ipv6","","An IPv6 address, represented inside `[...]` square brackets\nso that `:` colon characters in the address are not ambiguous\nwith the port number delimiter.",3,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",4,null],[13,"InvalidScheme","","",4,null],[13,"InvalidPort","","",4,null],[13,"InvalidIpv6Address","","",4,null],[13,"InvalidDomainCharacter","","",4,null],[13,"InvalidCharacter","","",4,null],[13,"InvalidBackslash","","",4,null],[13,"InvalidPercentEncoded","","",4,null],[13,"InvalidAtSymbolInUser","","",4,null],[13,"ExpectedTwoSlashes","","",4,null],[13,"ExpectedInitialSlash","","",4,null],[13,"NonUrlCodePoint","","",4,null],[13,"RelativeUrlWithScheme","","",4,null],[13,"RelativeUrlWithoutBase","","",4,null],[13,"RelativeUrlWithNonRelativeBase","","",4,null],[13,"NonAsciiDomainsNotSupportedYet","","",4,null],[13,"CannotSetJavascriptFragment","","",4,null],[13,"CannotSetPortWithFileLikeScheme","","",4,null],[13,"CannotSetUsernameWithNonRelativeScheme","","",4,null],[13,"CannotSetPasswordWithNonRelativeScheme","","",4,null],[13,"CannotSetHostPortWithNonRelativeScheme","","",4,null],[13,"CannotSetHostWithNonRelativeScheme","","",4,null],[13,"CannotSetPortWithNonRelativeScheme","","",4,null],[13,"CannotSetPathWithNonRelativeScheme","","",4,null],[4,"SchemeData","","The components of the URL whose representation depends on where the scheme is *relative*.",null,null],[13,"Relative","","Components for URLs in a *relative* scheme such as HTTP.",5,null],[13,"NonRelative","","No further structure is assumed for *non-relative* schemes such as `data` and `mailto`.",5,null],[4,"SchemeType","","Determines the behavior of the URL parser for a given scheme.",null,null],[13,"NonRelative","","Indicate that the scheme is *non-relative*.",6,null],[13,"Relative","","Indicate that the scheme is *relative*, and what the default port number is.",6,null],[13,"FileLike","","Indicate a *relative* scheme similar to the *file* scheme.",6,null],[5,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier.",null,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[5,"whatwg_scheme_type_mapper","","http://url.spec.whatwg.org/#relative-scheme",null,{"inputs":[{"name":"str"}],"output":{"name":"schemetype"}}],[11,"fmt","","",3,{"inputs":[{"name":"host"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"host"}],"output":{"name":"host"}}],[11,"eq","","",3,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"ipv6address"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"ipv6address"},{"name":"ipv6address"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"ipv6address"},{"name":"ipv6address"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"ipv6address"}],"output":{"name":"ipv6address"}}],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",3,{"inputs":[{"name":"host"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"serialize","","Serialize the host as a string.",3,{"inputs":[{"name":"host"}],"output":{"name":"string"}}],[11,"fmt","","",3,{"inputs":[{"name":"host"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"parse","","Parse an IPv6 address, without the [] square brackets.",0,{"inputs":[{"name":"ipv6address"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"serialize","","Serialize the IPv6 address to a string.",0,{"inputs":[{"name":"ipv6address"}],"output":{"name":"string"}}],[11,"fmt","","",0,{"inputs":[{"name":"ipv6address"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"eq","","",4,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"description","","",4,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"fmt","","",4,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"urlutils","","These methods are not meant for use in Rust code,\nonly to help implement the JavaScript URLUtils API: http://url.spec.whatwg.org/#urlutils",null,null],[3,"UrlUtilsWrapper","url::urlutils","",null,null],[12,"url","","",7,null],[12,"parser","","",7,null],[0,"percent_encoding","url","",null,null],[3,"EncodeSet","url::percent_encoding","Represents a set of characters / bytes that should be percent-encoded.",null,null],[5,"percent_encode_to","","Percent-encode the given bytes, and push the result to `output`.",null,null],[5,"percent_encode","","Percent-encode the given bytes.",null,null],[5,"utf8_percent_encode_to","","Percent-encode the UTF-8 encoding of the given string, and push the result to `output`.",null,{"inputs":[{"name":"str"},{"name":"encodeset"},{"name":"string"}],"output":null}],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,{"inputs":[{"name":"str"},{"name":"encodeset"}],"output":{"name":"string"}}],[5,"percent_decode_to","","Percent-decode the given bytes, and push the result to `output`.",null,null],[5,"percent_decode","","Percent-decode the given bytes.",null,null],[5,"lossy_utf8_percent_decode","","Percent-decode the given bytes, and decode the result as UTF-8.",null,null],[5,"from_hex","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[7,"SIMPLE_ENCODE_SET","","This encode set is used for fragment identifier and non-relative scheme data.",null,null],[7,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",null,null],[7,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",null,null],[7,"USERINFO_ENCODE_SET","","This encode set is used in the URL parser for usernames and passwords.",null,null],[7,"PASSWORD_ENCODE_SET","","This encode set should be used when setting the password field of a parsed URL.",null,null],[7,"USERNAME_ENCODE_SET","","This encode set should be used when setting the username field of a parsed URL.",null,null],[7,"FORM_URLENCODED_ENCODE_SET","","This encode set is used in `application/x-www-form-urlencoded` serialization.",null,null],[11,"clone","","",8,{"inputs":[{"name":"encodeset"}],"output":{"name":"encodeset"}}],[0,"form_urlencoded","url","Parser and serializer for the [`application/x-www-form-urlencoded` format](\nhttp://url.spec.whatwg.org/#application/x-www-form-urlencoded),\nas used by HTML forms.",null,null],[5,"parse","url::form_urlencoded","Convert a byte string in the `application/x-www-form-urlencoded` format\ninto a vector of (name, value) pairs.",null,null],[5,"serialize","","Convert an iterator of (name, value) pairs\ninto a string in the `application/x-www-form-urlencoded` format.",null,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[0,"punycode","url","Punycode ([RFC 3492](http://tools.ietf.org/html/rfc3492)) implementation.",null,null],[5,"decode_to_string","url::punycode","Convert Punycode to an Unicode `String`.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"decode","","Convert Punycode to Unicode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode","","Convert Unicode to Punycode.",null,null],[0,"format","url","Formatting utilities for URLs.",null,null],[3,"PathFormatter","url::format","Formatter and serializer for URL path data.",null,null],[12,"path","","The path as a slice of string-like objects (String or &str).",9,null],[3,"UserInfoFormatter","","Formatter and serializer for URL username and password data.",null,null],[12,"username","","URL username as a string slice.",10,null],[12,"password","","URL password as an optional string slice.",10,null],[3,"UrlNoFragmentFormatter","","Formatter for URLs which ignores the fragment field.",null,null],[12,"url","","",11,null],[11,"fmt","","",9,{"inputs":[{"name":"pathformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"userinfoformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"urlnofragmentformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"ErrorHandler","url","This is called on non-fatal parse errors.",null,null],[6,"ParseResult","","",null,null],[11,"fmt","","",1,{"inputs":[{"name":"url"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"url"}],"output":{"name":"url"}}],[11,"eq","","",1,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"schemedata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"schemedata"}],"output":{"name":"schemedata"}}],[11,"eq","","",5,{"inputs":[{"name":"schemedata"},{"name":"schemedata"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"schemedata"},{"name":"schemedata"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"relativeschemedata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"relativeschemedata"}}],[11,"eq","","",2,{"inputs":[{"name":"relativeschemedata"},{"name":"relativeschemedata"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"relativeschemedata"},{"name":"relativeschemedata"}],"output":{"name":"bool"}}],[11,"hash","","",1,{"inputs":[{"name":"url"},{"name":"h"}],"output":null}],[6,"Err","","",null,null],[11,"from_str","","",1,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"new","","Return a new UrlParser with default parameters.",12,{"inputs":[{"name":"urlparser"}],"output":{"name":"urlparser"}}],[11,"base_url","","Set the base URL used for resolving relative URL references, and return the `UrlParser`.\nThe default is no base URL, so that relative URLs references fail to parse.",12,{"inputs":[{"name":"urlparser"},{"name":"url"}],"output":{"name":"urlparser"}}],[11,"error_handler","","Set an error handler for non-fatal parse errors, and return the `UrlParser`.",12,{"inputs":[{"name":"urlparser"},{"name":"errorhandler"}],"output":{"name":"urlparser"}}],[11,"scheme_type_mapper","","Set a *scheme type mapper*, and return the `UrlParser`.",12,null],[11,"parse","","Parse `input` as an URL, with all the parameters previously set in the `UrlParser`.",12,{"inputs":[{"name":"urlparser"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier.",12,{"inputs":[{"name":"urlparser"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"clone","","",6,{"inputs":[{"name":"schemetype"}],"output":{"name":"schemetype"}}],[11,"fmt","","",6,{"inputs":[{"name":"schemetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"schemetype"},{"name":"schemetype"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"schemetype"},{"name":"schemetype"}],"output":{"name":"bool"}}],[11,"default_port","","",6,{"inputs":[{"name":"schemetype"}],"output":{"name":"option"}}],[11,"same_as","","",6,{"inputs":[{"name":"schemetype"},{"name":"schemetype"}],"output":{"name":"bool"}}],[11,"parse","","Parse an URL with the default `UrlParser` parameters.",1,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",1,{"inputs":[{"name":"url"},{"name":"p"}],"output":{"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",1,{"inputs":[{"name":"url"},{"name":"p"}],"output":{"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",1,{"inputs":[{"name":"url"}],"output":{"name":"result"}}],[11,"serialize","","Return the serialization of this URL as a string.",1,{"inputs":[{"name":"url"}],"output":{"name":"string"}}],[11,"serialize_no_fragment","","Return the serialization of this URL, without the fragment identifier, as a string",1,{"inputs":[{"name":"url"}],"output":{"name":"string"}}],[11,"non_relative_scheme_data","","If the URL is *non-relative*, return the string scheme data.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"non_relative_scheme_data_mut","","If the URL is *non-relative*, return a mutable reference to the string scheme data.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"relative_scheme_data","","If the URL is in a *relative scheme*, return the structured scheme data.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"relative_scheme_data_mut","","If the URL is in a *relative scheme*,\nreturn a mutable reference to the structured scheme data.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"username","","If the URL is in a *relative scheme*, return its username.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"username_mut","","If the URL is in a *relative scheme*, return a mutable reference to its username.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"lossy_percent_decode_username","","Percent-decode the URL’s username, if any.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"password","","If the URL is in a *relative scheme*, return its password, if any.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"password_mut","","If the URL is in a *relative scheme*, return a mutable reference to its password, if any.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"serialize_userinfo","","Serialize the URL's username and password, if any.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"host","","If the URL is in a *relative scheme*, return its structured host.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"host_mut","","If the URL is in a *relative scheme*, return a mutable reference to its structured host.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"domain","","If the URL is in a *relative scheme* and its host is a domain,\nreturn the domain as a string.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"domain_mut","","If the URL is in a *relative scheme* and its host is a domain,\nreturn a mutable reference to the domain string.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"serialize_host","","If the URL is in a *relative scheme*, serialize its host as a string.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"port","","If the URL is in a *relative scheme* and has a port number, return it.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"port_mut","","If the URL is in a *relative scheme*, return a mutable reference to its port.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"port_or_default","","If the URL is in a *relative scheme* that is not a file-like,\nreturn its port number, even if it is the default.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"path","","If the URL is in a *relative scheme*, return its path components.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"path_mut","","If the URL is in a *relative scheme*, return a mutable reference to its path components.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"serialize_path","","If the URL is in a *relative scheme*, serialize its path as a string.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return a vector of (key, value) pairs.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"set_query_from_pairs","","Serialize an iterator of (key, value) pairs as `application/x-www-form-urlencoded`\nand set it as the URL’s query string.",1,{"inputs":[{"name":"url"},{"name":"i"}],"output":null}],[11,"lossy_percent_decode_query","","Percent-decode the URL’s query string, if any.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"lossy_percent_decode_fragment","","Percent-decode the URL’s fragment identifier, if any.",1,{"inputs":[{"name":"url"}],"output":{"name":"option"}}],[11,"encode","","",1,{"inputs":[{"name":"url"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"url"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"url"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"schemedata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"lossy_percent_decode_username","","Percent-decode the URL’s username.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"string"}}],[11,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"option"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"result"}}],[11,"domain","","If the host is a domain, return the domain as a string.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"option"}}],[11,"domain_mut","","If the host is a domain, return a mutable reference to the domain string.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"option"}}],[11,"port_or_default","","Return the port number of the URL, even if it is the default.\nReturn `None` for file-like URLs.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"option"}}],[11,"serialize_path","","Serialize the path as a string.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"string"}}],[11,"serialize_userinfo","","Serialize the userinfo as a string.",2,{"inputs":[{"name":"relativeschemedata"}],"output":{"name":"string"}}],[11,"fmt","","",2,{"inputs":[{"name":"relativeschemedata"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Ipv6Address"],[3,"Url"],[3,"RelativeSchemeData"],[4,"Host"],[4,"ParseError"],[4,"SchemeData"],[4,"SchemeType"],[3,"UrlUtilsWrapper"],[3,"EncodeSet"],[3,"PathFormatter"],[3,"UserInfoFormatter"],[3,"UrlNoFragmentFormatter"],[3,"UrlParser"]]};
searchIndex['rand'] = {"items":[[0,"","rand","Utilities for random number generation",null,null],[3,"OsRng","","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",0,null],[12,"item","","The actual item which is being weighted",0,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low < high`, so this\nfunction doesn't have to repeat the check.",1,{"inputs":[{"name":"samplerange"},{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",1,{"inputs":[{"name":"samplerange"},{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low >= high`.",2,{"inputs":[{"name":"range"},{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",3,{"inputs":[{"name":"gamma"}],"output":{"name":"gamma"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",3,{"inputs":[{"name":"gamma"},{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",4,{"inputs":[{"name":"chisquared"}],"output":{"name":"chisquared"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k < 0`.",4,{"inputs":[{"name":"chisquared"},{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",5,{"inputs":[{"name":"fisherf"}],"output":{"name":"fisherf"}}],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",5,{"inputs":[{"name":"fisherf"},{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",6,{"inputs":[{"name":"studentt"}],"output":{"name":"studentt"}}],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n <= 0`.",6,{"inputs":[{"name":"studentt"},{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",7,{"inputs":[{"name":"standardnormal"}],"output":{"name":"standardnormal"}}],[11,"rand","","",7,{"inputs":[{"name":"standardnormal"},{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",8,{"inputs":[{"name":"normal"}],"output":{"name":"normal"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",8,{"inputs":[{"name":"normal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",9,{"inputs":[{"name":"lognormal"}],"output":{"name":"lognormal"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",9,{"inputs":[{"name":"lognormal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",10,{"inputs":[{"name":"exp1"}],"output":{"name":"exp1"}}],[11,"rand","","",10,{"inputs":[{"name":"exp1"},{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",11,{"inputs":[{"name":"exp"}],"output":{"name":"exp"}}],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda <= 0`.",11,{"inputs":[{"name":"exp"},{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",12,{"inputs":[{"name":"sample"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",13,{"inputs":[{"name":"independentsample"},{"name":"r"}],"output":{"name":"support"}}],[11,"clone","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"self"}}],[11,"sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"new","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"randsample"}}],[11,"clone","","",0,{"inputs":[{"name":"weighted"}],"output":{"name":"weighted"}}],[11,"new","","Create a new `WeightedChoice`.",15,null],[11,"sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"clone","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"next_u32","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"u32"}}],[11,"reseed","","",16,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",16,null],[11,"rand","","",16,{"inputs":[{"name":"isaacrng"},{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"clone","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"next_u32","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u32"}}],[11,"next_u64","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u64"}}],[11,"reseed","","",17,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",17,null],[11,"rand","","",17,{"inputs":[{"name":"isaac64rng"},{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",18,{"inputs":[{"name":"chacharng"},{"name":"u64"},{"name":"u64"}],"output":null}],[11,"next_u32","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"u32"}}],[11,"reseed","","",18,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",18,null],[11,"rand","","",18,{"inputs":[{"name":"chacharng"},{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",19,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",20,{"inputs":[{"name":"reseeder"},{"name":"r"}],"output":null}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",19,{"inputs":[{"name":"reseedingrng"},{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",19,{"inputs":[{"name":"reseedingrng"}],"output":null}],[11,"next_u32","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",19,null],[11,"clone","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"reseed","","",21,{"inputs":[{"name":"reseedwithdefault"},{"name":"r"}],"output":null}],[11,"default","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","core::option","",24,{"inputs":[{"name":"option"},{"name":"r"}],"output":{"name":"option"}}],[0,"os","rand","Interfaces to the operating system provided random number\ngenerators.",null,null],[11,"new","","Create a new `OsRng`.",25,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",25,null],[0,"read","","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",26,{"inputs":[{"name":"readrng"},{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",26,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",27,{"inputs":[{"name":"rand"},{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",28,null],[11,"gen","","Return a random value of a `Rand` type.",28,{"inputs":[{"name":"rng"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",28,{"inputs":[{"name":"rng"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",28,{"inputs":[{"name":"rng"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",28,{"inputs":[{"name":"rng"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",28,{"inputs":[{"name":"rng"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",28,null],[11,"shuffle","","Shuffle a mutable slice in place.",28,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":null}],[10,"from_seed","","Create a new RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":{"name":"self"}}],[6,"Item","","",null,null],[11,"next","","",30,{"inputs":[{"name":"generator"}],"output":{"name":"option"}}],[6,"Item","","",null,null],[11,"next","","",31,{"inputs":[{"name":"asciigenerator"}],"output":{"name":"option"}}],[11,"clone","","",32,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",32,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",32,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",32,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",32,null],[11,"rand","","",32,{"inputs":[{"name":"xorshiftrng"},{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",33,null],[11,"from_seed","","",33,null],[11,"clone","","",34,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",34,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",34,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",34,null]],"paths":[[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"Open01"],[3,"Closed01"],[4,"Option"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex['num_cpus'] = {"items":[[0,"","num_cpus","Replaces the deprecated functionality of std::os::num_cpus.",null,null],[5,"get","","Returns the number of CPUs of the current machine.",null,{"inputs":[],"output":{"name":"usize"}}]],"paths":[]};
searchIndex['log'] = {"items":[[0,"","log","A lightweight logging facade.",null,null],[3,"LogRecord","","The \"payload\" of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Trace` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,{"inputs":[{"name":"log"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"inputs":[{"name":"log"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[6,"Err","","",null,null],[11,"from_str","","",0,{"inputs":[{"name":"loglevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[6,"Err","","",null,null],[11,"from_str","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"args","","The message body.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"str"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"str"}}],[11,"fmt","","",5,{"inputs":[{"name":"loglocation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"loglocation"}}],[11,"module_path","","The module path of the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"file","","The source file containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"line","","The line containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"u32"}}],[11,"fmt","","",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"inputs":[{"name":"maxloglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"setloggererror"}],"output":{"name":"str"}}],[11,"new","alloc::boxed","Allocates memory on the heap and then moves `x` into it.",8,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",8,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"default","","",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",8,null],[11,"eq","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Target","log","",null,null],[11,"deref","alloc::boxed","",8,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",8,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[6,"Item","log","",null,null],[11,"next","alloc::boxed","",8,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",8,null],[11,"next_back","","",8,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[6,"Output","log","",null,null],[6,"Output","","",null,null],[11,"call_once","alloc::boxed","",8,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[6,"Output","log","",null,null],[11,"call_once","alloc::boxed","",8,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"fmt","alloc::arc","",9,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Arc<T>`.",10,{"inputs":[{"name":"arc"},{"name":"t"}],"output":{"name":"arc"}}],[11,"downgrade","","Downgrades the `Arc<T>` to a `Weak<T>` reference.",10,{"inputs":[{"name":"arc"}],"output":{"name":"weak"}}],[11,"clone","","Makes a clone of the `Arc<T>`.",10,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[6,"Target","log","",null,null],[11,"deref","alloc::arc","",10,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"make_unique","","Make a mutable reference from the given `Arc<T>`.",10,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Arc<T>`.",10,null],[11,"upgrade","","Upgrades a weak reference to a strong reference.",9,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"clone","","Makes a clone of the `Weak<T>`.",9,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"drop","","Drops the `Weak<T>`.",9,null],[11,"eq","","Equality for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"cmp","","",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"ordering"}}],[11,"fmt","","",10,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",10,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"hash","","",10,null],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",11,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",11,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"make_unique","","Make a mutable reference from the given `Rc<T>`.",11,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[6,"Target","log","",null,null],[11,"deref","alloc::rc","",11,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",11,null],[11,"clone","","Makes a clone of the `Rc<T>`.",11,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",11,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",12,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",12,null],[11,"clone","","Makes a clone of the `Weak<T>`.",12,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",12,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"log!","log","The standard logging macro.",null,null],[14,"error!","","Logs a message at the error level.",null,null],[14,"warn!","","Logs a message at the warn level.",null,null],[14,"info!","","Logs a message at the info level.",null,null],[14,"debug!","","Logs a message at the debug level.",null,null],[14,"trace!","","Logs a message at the trace level.",null,null],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"Box"],[3,"Weak"],[3,"Arc"],[3,"Rc"],[3,"Weak"]]};
searchIndex['quasi_macros'] = {"items":[[0,"","quasi_macros","",null,null],[5,"expand_quote_tokens","","Quasiquoting works via token trees.",null,null],[5,"expand_quote_ty","","",null,null],[5,"expand_quote_expr","","",null,null],[5,"expand_quote_stmt","","",null,null],[5,"expand_quote_attr","","",null,null],[5,"expand_quote_matcher","","",null,null],[5,"expand_quote_pat","","",null,null],[5,"expand_quote_arm","","",null,null],[5,"expand_quote_block","","",null,null],[5,"expand_quote_item","","",null,null],[5,"expand_quote_impl_item","","",null,null]],"paths":[]};
searchIndex['matches'] = {"items":[[0,"","matches","",null,null],[14,"matches!","","",null,null],[14,"_tt_as_expr_hack!","","Work around \"error: unexpected token: `an interpolated tt`\", whatever that means.",null,null]],"paths":[]};
searchIndex['httparse'] = {"items":[[0,"","httparse","",null,null],[3,"Request","","",null,null],[12,"method","","",0,null],[12,"path","","",0,null],[12,"version","","",0,null],[12,"headers","","",0,null],[3,"Response","","",null,null],[12,"version","","",1,null],[12,"code","","",1,null],[12,"reason","","",1,null],[12,"headers","","",1,null],[3,"Header","","",null,null],[12,"name","","",2,null],[12,"value","","",2,null],[4,"Error","","",null,null],[13,"HeaderName","","",3,null],[13,"HeaderValue","","",3,null],[13,"NewLine","","",3,null],[13,"Status","","",3,null],[13,"Token","","",3,null],[13,"TooManyHeaders","","",3,null],[13,"Version","","",3,null],[4,"Status","","",null,null],[13,"Complete","","",4,null],[13,"Partial","","",4,null],[17,"EMPTY_HEADER","","",null,null],[11,"fmt","","",3,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",4,{"inputs":[{"name":"status"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"status"}],"output":{"name":"status"}}],[11,"is_complete","","",4,{"inputs":[{"name":"status"}],"output":{"name":"bool"}}],[11,"is_partial","","",4,{"inputs":[{"name":"status"}],"output":{"name":"bool"}}],[11,"unwrap","","",4,{"inputs":[{"name":"status"}],"output":{"name":"t"}}],[11,"new","","",0,null],[11,"parse","","",0,null],[11,"new","","",1,null],[11,"parse","","",1,null],[11,"fmt","","",2,{"inputs":[{"name":"header"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"header"},{"name":"header"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"header"},{"name":"header"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"header"}],"output":{"name":"header"}}]],"paths":[[3,"Request"],[3,"Response"],[3,"Header"],[4,"Error"],[4,"Status"]]};
searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries",null,null],[0,"types","","",null,null],[0,"common","libc::types","",null,null],[0,"c95","libc::types::common","",null,null],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C.",null,null],[13,"__variant1","","",0,null],[13,"__variant2","","",0,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[0,"c99","libc::types::common","",null,null],[6,"int8_t","libc::types::common::c99","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[0,"posix88","libc::types::common","",null,null],[4,"DIR","libc::types::common::posix88","",null,null],[4,"dirent_t","","",null,null],[0,"os","libc::types","",null,null],[0,"common","libc::types::os","",null,null],[0,"posix01","libc::types::os::common","",null,null],[3,"glob_t","libc::types::os::common::posix01","",null,null],[12,"gl_pathc","","",1,null],[12,"gl_pathv","","",1,null],[12,"gl_offs","","",1,null],[12,"__unused1","","",1,null],[12,"__unused2","","",1,null],[12,"__unused3","","",1,null],[12,"__unused4","","",1,null],[12,"__unused5","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[4,"timezone","","",null,null],[6,"pthread_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sighandler_t","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",2,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[0,"bsd43","libc::types::os::common","",null,null],[3,"rusage","libc::types::os::common::bsd43","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[11,"clone","","",5,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[0,"bsd44","libc::types::os::common","",null,null],[3,"sockaddr","libc::types::os::common::bsd44","",null,null],[12,"sa_family","","",6,null],[12,"sa_data","","",6,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",7,null],[12,"__ss_align","","",7,null],[12,"__ss_pad2","","",7,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",8,null],[12,"sin_port","","",8,null],[12,"sin_addr","","",8,null],[12,"sin_zero","","",8,null],[3,"in_addr","","",null,null],[12,"s_addr","","",9,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",10,null],[12,"sin6_port","","",10,null],[12,"sin6_flowinfo","","",10,null],[12,"sin6_addr","","",10,null],[12,"sin6_scope_id","","",10,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",11,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",12,null],[12,"imr_interface","","",12,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",13,null],[12,"ipv6mr_interface","","",13,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",14,null],[12,"ai_family","","",14,null],[12,"ai_socktype","","",14,null],[12,"ai_protocol","","",14,null],[12,"ai_addrlen","","",14,null],[12,"ai_addr","","",14,null],[12,"ai_canonname","","",14,null],[12,"ai_next","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",16,null],[12,"ifa_name","","",16,null],[12,"ifa_flags","","",16,null],[12,"ifa_addr","","",16,null],[12,"ifa_netmask","","",16,null],[12,"ifa_ifu","","",16,null],[12,"ifa_data","","",16,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"in_port_t","","",null,null],[6,"in_addr_t","","",null,null],[11,"clone","","",6,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",7,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",8,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",9,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",10,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",11,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",12,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",13,{"inputs":[{"name":"ip6_mreq"}],"output":{"name":"ip6_mreq"}}],[11,"clone","","",14,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",16,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[0,"arch","libc::types::os","",null,null],[0,"c95","libc::types::os::arch","",null,null],[6,"c_char","libc::types::os::arch::c95","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"wchar_t","","",null,null],[0,"c99","libc::types::os::arch","",null,null],[6,"c_longlong","libc::types::os::arch::c99","",null,null],[6,"c_ulonglong","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[0,"posix88","libc::types::os::arch","",null,null],[6,"off_t","libc::types::os::arch::posix88","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"mode_t","","",null,null],[6,"ssize_t","","",null,null],[0,"posix01","libc::types::os::arch","",null,null],[3,"stat","libc::types::os::arch::posix01","",null,null],[12,"st_dev","","",17,null],[12,"st_ino","","",17,null],[12,"st_nlink","","",17,null],[12,"st_mode","","",17,null],[12,"st_uid","","",17,null],[12,"st_gid","","",17,null],[12,"__pad0","","",17,null],[12,"st_rdev","","",17,null],[12,"st_size","","",17,null],[12,"st_blksize","","",17,null],[12,"st_blocks","","",17,null],[12,"st_atime","","",17,null],[12,"st_atime_nsec","","",17,null],[12,"st_mtime","","",17,null],[12,"st_mtime_nsec","","",17,null],[12,"st_ctime","","",17,null],[12,"st_ctime_nsec","","",17,null],[12,"__unused","","",17,null],[3,"utimbuf","","",null,null],[12,"actime","","",18,null],[12,"modtime","","",18,null],[3,"pthread_attr_t","","",null,null],[12,"__size","","",19,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[11,"clone","","",17,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",18,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",19,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[0,"extra","libc::types::os::arch","",null,null],[3,"sockaddr_ll","libc::types::os::arch::extra","",null,null],[12,"sll_family","","",20,null],[12,"sll_protocol","","",20,null],[12,"sll_ifindex","","",20,null],[12,"sll_hatype","","",20,null],[12,"sll_pkttype","","",20,null],[12,"sll_halen","","",20,null],[12,"sll_addr","","",20,null],[11,"clone","","",20,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[0,"consts","libc","",null,null],[0,"os","libc::consts","",null,null],[0,"c95","libc::consts::os","",null,null],[17,"EXIT_FAILURE","libc::consts::os::c95","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[0,"posix88","libc::consts::os","",null,null],[17,"O_RDONLY","libc::consts::os::posix88","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EDOTDOT","","",null,null],[17,"EBADMSG","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"ERFKILL","","",null,null],[17,"EHWPOISON","","",null,null],[0,"posix01","libc::consts::os","",null,null],[17,"F_DUPFD","libc::consts::os::posix01","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"SIG_IGN","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[0,"bsd44","libc::consts::os","",null,null],[17,"MADV_NORMAL","libc::consts::os::bsd44","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[0,"extra","libc::consts::os","",null,null],[17,"AF_PACKET","libc::consts::os::extra","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[0,"sysconf","libc::consts::os","",null,null],[17,"_SC_ARG_MAX","libc::consts::os::sysconf","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[0,"funcs","libc","",null,null],[0,"c95","libc::funcs","",null,null],[0,"ctype","libc::funcs::c95","",null,null],[5,"isalnum","libc::funcs::c95::ctype","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[0,"stdio","libc::funcs::c95","",null,null],[5,"fopen","libc::funcs::c95::stdio","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[0,"stdlib","libc::funcs::c95","",null,null],[5,"abs","libc::funcs::c95::stdlib","",null,null],[5,"labs","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[0,"string","libc::funcs::c95","",null,null],[5,"strcpy","libc::funcs::c95::string","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[0,"posix88","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix88","",null,null],[5,"chmod","libc::funcs::posix88::stat_","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"mkfifo","","",null,null],[5,"stat","","",null,null],[0,"stdio","libc::funcs::posix88","",null,null],[5,"popen","libc::funcs::posix88::stdio","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[0,"fcntl","libc::funcs::posix88","",null,null],[5,"open","libc::funcs::posix88::fcntl","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[0,"dirent","libc::funcs::posix88","",null,null],[5,"opendir","libc::funcs::posix88::dirent","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[0,"unistd","libc::funcs::posix88","",null,null],[5,"access","libc::funcs::posix88::unistd","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"getsid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"usleep","","",null,null],[5,"nanosleep","","",null,null],[5,"sysconf","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[0,"signal","libc::funcs::posix88","",null,null],[5,"kill","libc::funcs::posix88::signal","",null,null],[0,"mman","libc::funcs::posix88","",null,null],[5,"mlock","libc::funcs::posix88::mman","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mprotect","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,null],[5,"shm_unlink","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[0,"net","libc::funcs::posix88","",null,null],[5,"if_nametoindex","libc::funcs::posix88::net","",null,null],[0,"posix01","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix01","",null,null],[5,"lstat","libc::funcs::posix01::stat_","",null,null],[0,"unistd","libc::funcs::posix01","",null,null],[5,"readlink","libc::funcs::posix01::unistd","",null,null],[5,"fsync","","",null,null],[5,"fdatasync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"putenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[0,"signal","libc::funcs::posix01","",null,null],[5,"signal","libc::funcs::posix01::signal","",null,null],[0,"glob","libc::funcs::posix01","",null,null],[5,"glob","libc::funcs::posix01::glob","",null,null],[5,"globfree","","",null,null],[0,"mman","libc::funcs::posix01","",null,null],[5,"posix_madvise","libc::funcs::posix01::mman","",null,null],[0,"resource","libc::funcs::posix01","",null,null],[5,"getrlimit","libc::funcs::posix01::resource","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[0,"bsd43","libc::funcs","",null,null],[5,"socket","libc::funcs::bsd43","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"recv","","",null,null],[5,"send","","",null,null],[5,"recvfrom","","",null,null],[5,"sendto","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"shutdown","","",null,null],[0,"bsd44","libc::funcs","",null,null],[5,"getdtablesize","libc::funcs::bsd44","",null,null],[5,"ioctl","","",null,null],[5,"madvise","","",null,null],[5,"mincore","","",null,null]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"]]};
searchIndex['lazy_static'] = {"items":[[0,"","lazy_static","A macro for declaring lazily evaluated statics.",null,null],[14,"lazy_static!","","",null,null]],"paths":[]};
searchIndex['typeable'] = {"items":[[0,"","typeable","Exposes `Typeable`, which exposes the `get_type` method, which gives\nthe `TypeId` of any 'static type.",null,null],[8,"Typeable","","Universal mixin trait for adding a `get_type` method.",null,null],[11,"get_type","","Get the `TypeId` of this object.",0,{"inputs":[{"name":"typeable"}],"output":{"name":"typeid"}}]],"paths":[[8,"Typeable"]]};
searchIndex['gcc'] = {"items":[[0,"","gcc","A library for build scripts to compile custom C code",null,null],[3,"Config","","Extra configuration to pass to gcc.",null,null],[5,"compile_library","","Compile a library from the given set of input C files.",null,null],[11,"new","","Construct a new instance of a blank set of configuration.",0,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"include","","Add a directory to the `-I` or include path for headers",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"define","","Specify a `-D` variable with an optional value.",0,{"inputs":[{"name":"config"},{"name":"str"},{"name":"option"}],"output":{"name":"config"}}],[11,"object","","Add an arbitrary object file to link in",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"flag","","Add an arbitrary flag to the invocation of the compiler",0,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"config"}}],[11,"file","","Add a file which will be compiled",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"cpp","","Set C++ support",0,{"inputs":[{"name":"config"},{"name":"bool"}],"output":{"name":"config"}}],[11,"compile","","Run the compiler, generating the file `output`",0,{"inputs":[{"name":"config"},{"name":"str"}],"output":null}]],"paths":[[3,"Config"]]};
searchIndex['itertools'] = {"items":[[0,"","itertools","Itertools — extra iterator adaptors, functions and macros.",null,null],[3,"Interleave","","An iterator adaptor that alternates elements from two iterators until both\nrun out.",null,null],[3,"Product","","An iterator adaptor that iterates over the cartesian product of\nthe element sets of two iterators **I** and **J**.",null,null],[3,"PutBack","","An iterator adaptor that allows putting back a single\nitem to the front of the iterator.",null,null],[3,"FnMap","","**Deprecated:** Use *.map_fn()* instead.",null,null],[3,"Batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator\nand may pick off as many elements as it likes, to produce the next iterator element.",null,null],[3,"GroupBy","","An iterator adaptor that groups iterator elements. Consecutive elements\nthat map to the same key (“runs”), are returned as the iterator elements.",null,null],[3,"Step","","An iterator adaptor that steps a number elements in the base iterator\nfor each iteration.",null,null],[3,"Merge","","An iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.",null,null],[3,"MultiPeek","","An iterator adaptor that allows the user to peek at multiple *.next()*\nvalues without advancing itself.",null,null],[3,"TakeWhileRef","","An iterator adaptor that borrows from a **Clone**-able iterator\nto only pick off elements while the predicate returns **true**.",null,null],[3,"Coalesce","","An iterator adaptor that may join together adjacent elements.",null,null],[3,"Intersperse","","An iterator adaptor to insert a particular value\nbetween each element of the adapted iterator.",null,null],[3,"ISlice","","An iterator adaptor that yields a subset (a slice) of the base iterator.",null,null],[3,"RepeatN","","An iterator that repeats an element exactly *n* times.",null,null],[3,"RcIter","","A wrapper for **Rc\\<RefCell\\<I\\>\\>**, that implements the **Iterator** trait.",null,null],[12,"rciter","","The boxed iterator.",0,null],[3,"Stride","","An iterator similar to the slice iterator, but with a certain number of steps\n(the stride) skipped per iteration.",null,null],[3,"StrideMut","","The mutable equivalent of Stride.",null,null],[3,"Tee","","One half of an iterator pair where both return the same elements.",null,null],[3,"Times","","A simple iterator to repeat a given number of times",null,null],[3,"Linspace","","An iterator of a sequence of evenly spaced floats.",null,null],[3,"ZipLongest","","An iterator which iterates two other iterators simultaneously",null,null],[3,"Zip","","An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.",null,null],[4,"EitherOrBoth","","A value yielded by `ZipLongest`.\nContains one or two values,\ndepending on which of the input iterators are exhausted.",null,null],[13,"Both","","Neither input iterator is exhausted yet, yielding two values.",1,null],[13,"Left","","The parameter iterator of `.zip_longest()` is exhausted,\nonly yielding a value from the `self` iterator.",1,null],[13,"Right","","The `self` iterator of `.zip_longest()` is exhausted,\nonly yielding a value from the parameter iterator.",1,null],[5,"times","","Return an iterator with `n` elements, for simple repetition\na particular number of times. The iterator yields a counter.",null,{"inputs":[{"name":"usize"}],"output":{"name":"times"}}],[5,"linspace","","Return an iterator with `n` elements, where the first\nelement is `a` and the last element is `b`.",null,{"inputs":[{"name":"f"},{"name":"f"},{"name":"usize"}],"output":{"name":"linspace"}}],[5,"equal","","Return **true** if both iterators produce equal sequences\n(elements pairwise equal and sequences of the same length),\n**false** otherwise.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"bool"}}],[5,"partition","","Partition a sequence using predicate **pred** so that elements\nthat map to **true** are placed before elements which map to **false**.",null,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"usize"}}],[11,"clone","","",2,{"inputs":[{"name":"interleave"}],"output":{"name":"interleave"}}],[11,"new","","Creat a new **Interleave** iterator.",2,{"inputs":[{"name":"interleave"},{"name":"i"},{"name":"j"}],"output":{"name":"interleave"}}],[11,"next","","",2,{"inputs":[{"name":"interleave"}],"output":{"name":"option"}}],[11,"new","","**Deprecated:** Use *.map_fn()* instead.",3,null],[11,"next","","",3,{"inputs":[{"name":"fnmap"}],"output":{"name":"option"}}],[11,"size_hint","","",3,null],[11,"next_back","","",3,{"inputs":[{"name":"fnmap"}],"output":{"name":"option"}}],[11,"clone","","",3,{"inputs":[{"name":"fnmap"}],"output":{"name":"self"}}],[11,"clone","","",4,{"inputs":[{"name":"putback"}],"output":{"name":"putback"}}],[11,"new","","Iterator element type is `A`",4,{"inputs":[{"name":"putback"},{"name":"i"}],"output":{"name":"self"}}],[11,"put_back","","Put back a single value to the front of the iterator.",4,{"inputs":[{"name":"putback"},{"name":"i"}],"output":null}],[11,"next","","",4,{"inputs":[{"name":"putback"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"clone","","",5,{"inputs":[{"name":"product"}],"output":{"name":"product"}}],[11,"new","","Create a new cartesian product iterator",5,{"inputs":[{"name":"product"},{"name":"i"},{"name":"j"}],"output":{"name":"self"}}],[11,"next","","",5,{"inputs":[{"name":"product"}],"output":{"name":"option"}}],[11,"size_hint","","",5,null],[11,"clone","","",6,{"inputs":[{"name":"batching"}],"output":{"name":"batching"}}],[11,"new","","Create a new Batching iterator.",6,{"inputs":[{"name":"batching"},{"name":"i"},{"name":"f"}],"output":{"name":"batching"}}],[11,"next","","",6,{"inputs":[{"name":"batching"}],"output":{"name":"option"}}],[11,"size_hint","","",6,null],[11,"clone","","",7,{"inputs":[{"name":"groupby"}],"output":{"name":"groupby"}}],[11,"new","","Create a new **GroupBy** iterator.",7,{"inputs":[{"name":"groupby"},{"name":"i"},{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",7,{"inputs":[{"name":"groupby"}],"output":{"name":"option"}}],[11,"size_hint","","",7,null],[11,"clone","","",8,{"inputs":[{"name":"step"}],"output":{"name":"step"}}],[11,"new","","Create a **Step** iterator.",8,{"inputs":[{"name":"step"},{"name":"i"},{"name":"usize"}],"output":{"name":"self"}}],[11,"next","","",8,{"inputs":[{"name":"step"}],"output":{"name":"option"}}],[11,"size_hint","","",8,null],[11,"new","","Create a **Merge** iterator.",9,{"inputs":[{"name":"merge"},{"name":"i"},{"name":"j"},{"name":"f"}],"output":{"name":"self"}}],[11,"clone","","",9,{"inputs":[{"name":"merge"}],"output":{"name":"self"}}],[11,"next","","",9,{"inputs":[{"name":"merge"}],"output":{"name":"option"}}],[11,"size_hint","","",9,null],[11,"clone","","",10,{"inputs":[{"name":"multipeek"}],"output":{"name":"multipeek"}}],[11,"new","","Create a **MultiPeek** iterator.",10,{"inputs":[{"name":"multipeek"},{"name":"i"}],"output":{"name":"multipeek"}}],[11,"peek","","Works exactly like *.next()* with the only difference that it doesn't\nadvance itself. *.peek()* can be called multiple times, to peek\nfurther ahead.",10,{"inputs":[{"name":"multipeek"}],"output":{"name":"option"}}],[11,"next","","",10,{"inputs":[{"name":"multipeek"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"clone","","",11,{"inputs":[{"name":"coalesce"}],"output":{"name":"coalesce"}}],[11,"new","","Create a new **Coalesce**.",11,{"inputs":[{"name":"coalesce"},{"name":"i"},{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",11,{"inputs":[{"name":"coalesce"}],"output":{"name":"option"}}],[11,"size_hint","","",11,null],[11,"new","","Create a new **TakeWhileRef** from a reference to clonable iterator.",12,{"inputs":[{"name":"takewhileref"},{"name":"i"},{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",12,{"inputs":[{"name":"takewhileref"}],"output":{"name":"option"}}],[11,"size_hint","","",12,null],[11,"clone","","",13,{"inputs":[{"name":"intersperse"}],"output":{"name":"intersperse"}}],[11,"new","","Create a new Intersperse iterator",13,{"inputs":[{"name":"intersperse"},{"name":"i"},{"name":"i"}],"output":{"name":"self"}}],[11,"next","","",13,{"inputs":[{"name":"intersperse"}],"output":{"name":"option"}}],[11,"size_hint","","",13,null],[11,"clone","","",14,{"inputs":[{"name":"islice"}],"output":{"name":"islice"}}],[11,"new","","Create a new **ISlice**.",14,{"inputs":[{"name":"islice"},{"name":"i"},{"name":"r"}],"output":{"name":"self"}}],[11,"next","","",14,{"inputs":[{"name":"islice"}],"output":{"name":"option"}}],[11,"size_hint","","",14,null],[11,"next","","",15,{"inputs":[{"name":"linspace"}],"output":{"name":"option"}}],[11,"size_hint","","",15,null],[0,"misc","","A module of helper traits and iterators that are not intended to be used\ndirectly.",null,null],[3,"FlatTuples","itertools::misc","A helper iterator that maps an iterator of tuples like\n`((A, B), C)` to an iterator of `(A, B, C)`.",null,null],[8,"IntoIteratorTuple","","Apply **IntoIterator** on each element of a tuple.",null,null],[16,"Output","itertools::misc::IntoIteratorTuple","Tuple of values that implement **Iterator**.",null,null],[10,"into_iterator_tuple","itertools::misc","Return a tuple of iterators.",16,{"inputs":[{"name":"intoiteratortuple"}],"output":{"name":"output"}}],[8,"AppendTuple","","A helper trait for (x, y, z) ++ w => (x, y, z, w),\nused for implementing `iproduct!`.",null,null],[16,"Result","itertools::misc::AppendTuple","Resulting tuple type",null,null],[10,"append","itertools::misc","“Append” value **x** to a tuple.",17,{"inputs":[{"name":"appendtuple"},{"name":"x"}],"output":{"name":"result"}}],[8,"GenericRange","","**GenericRange** is implemented by Rust's built-in range types, produced\nby range syntax like `a..`, `..b` or `c..d`.",null,null],[8,"ToFloat","","Helper trait to convert usize to floating point type.",null,null],[8,"MendSlice","","A trait for items that can *maybe* be joined together.",null,null],[6,"Result","","",null,null],[6,"Result","","",null,null],[6,"Result","","",null,null],[6,"Result","","",null,null],[6,"Result","","",null,null],[6,"Result","","",null,null],[6,"Result","","",null,null],[6,"Result","","",null,null],[6,"Result","","",null,null],[6,"Result","","",null,null],[6,"Result","","",null,null],[6,"Result","","",null,null],[6,"Result","","",null,null],[11,"clone","","",18,{"inputs":[{"name":"flattuples"}],"output":{"name":"flattuples"}}],[6,"Item","","",null,null],[11,"next","","",18,{"inputs":[{"name":"flattuples"}],"output":{"name":"option"}}],[11,"size_hint","","",18,null],[11,"next_back","","",18,{"inputs":[{"name":"flattuples"}],"output":{"name":"option"}}],[11,"start","core::ops","",19,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"end","","",20,{"inputs":[{"name":"rangeto"}],"output":{"name":"option"}}],[11,"start","","",21,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"end","","",21,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"new","itertools","Create a new RcIter.",0,{"inputs":[{"name":"rciter"},{"name":"i"}],"output":{"name":"rciter"}}],[11,"clone","","",0,{"inputs":[{"name":"rciter"}],"output":{"name":"rciter"}}],[11,"next","","",0,{"inputs":[{"name":"rciter"}],"output":{"name":"option"}}],[11,"size_hint","","",0,null],[11,"next_back","","",0,{"inputs":[{"name":"rciter"}],"output":{"name":"option"}}],[11,"new","","Create a new **RepeatN** with **n** repetitions.",22,{"inputs":[{"name":"repeatn"},{"name":"a"},{"name":"usize"}],"output":{"name":"self"}}],[11,"next","","",22,{"inputs":[{"name":"repeatn"}],"output":{"name":"option"}}],[11,"size_hint","","",22,null],[11,"next_back","","",22,{"inputs":[{"name":"repeatn"}],"output":{"name":"option"}}],[0,"size_hint","","Arithmetic on **Iterator** *.size_hint()* values.",null,null],[5,"add_scalar","itertools::size_hint","Add **x** correctly to a **SizeHint**.",null,{"inputs":[{"name":"sizehint"},{"name":"usize"}],"output":{"name":"sizehint"}}],[5,"add","","Add **SizeHint** correctly.",null,{"inputs":[{"name":"sizehint"},{"name":"sizehint"}],"output":{"name":"sizehint"}}],[5,"mul_scalar","","Multiply **x** correctly with a **SizeHint**.",null,{"inputs":[{"name":"sizehint"},{"name":"usize"}],"output":{"name":"sizehint"}}],[5,"mul","","Multiply **SizeHint** correctly",null,{"inputs":[{"name":"sizehint"},{"name":"sizehint"}],"output":{"name":"sizehint"}}],[5,"max","","Return the maximum",null,{"inputs":[{"name":"sizehint"},{"name":"sizehint"}],"output":{"name":"sizehint"}}],[5,"min","","Return the minimum",null,{"inputs":[{"name":"sizehint"},{"name":"sizehint"}],"output":{"name":"sizehint"}}],[6,"SizeHint","","**SizeHint** is the return type of **Iterator::size_hint()**.",null,null],[11,"from_ptr_len","itertools","Create a Stride iterator from a raw pointer.",23,null],[11,"from_ptr_len","","Create a StrideMut iterator from a raw pointer.",24,null],[11,"from_slice","","Create Stride iterator from a slice and the element step count.",23,null],[11,"from_stride","","Create Stride iterator from an existing Stride iterator",23,{"inputs":[{"name":"stride"},{"name":"stride"},{"name":"isize"}],"output":{"name":"stride"}}],[11,"swap_ends","","Swap the begin and end and reverse the stride,\nin effect reversing the iterator.",23,{"inputs":[{"name":"stride"}],"output":null}],[11,"len","","Return the number of elements in the iterator.",23,{"inputs":[{"name":"stride"}],"output":{"name":"usize"}}],[11,"next","","",23,{"inputs":[{"name":"stride"}],"output":{"name":"option"}}],[11,"size_hint","","",23,null],[11,"next_back","","",23,{"inputs":[{"name":"stride"}],"output":{"name":"option"}}],[11,"index","","Return a reference to the element at a given index.",23,{"inputs":[{"name":"stride"},{"name":"usize"}],"output":{"name":"a"}}],[11,"fmt","","",23,{"inputs":[{"name":"stride"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_slice","","Create Stride iterator from a slice and the element step count.",24,null],[11,"from_stride","","Create Stride iterator from an existing Stride iterator",24,{"inputs":[{"name":"stridemut"},{"name":"stridemut"},{"name":"isize"}],"output":{"name":"stridemut"}}],[11,"swap_ends","","Swap the begin and end and reverse the stride,\nin effect reversing the iterator.",24,{"inputs":[{"name":"stridemut"}],"output":null}],[11,"len","","Return the number of elements in the iterator.",24,{"inputs":[{"name":"stridemut"}],"output":{"name":"usize"}}],[11,"next","","",24,{"inputs":[{"name":"stridemut"}],"output":{"name":"option"}}],[11,"size_hint","","",24,null],[11,"next_back","","",24,{"inputs":[{"name":"stridemut"}],"output":{"name":"option"}}],[11,"index","","Return a reference to the element at a given index.",24,{"inputs":[{"name":"stridemut"},{"name":"usize"}],"output":{"name":"a"}}],[11,"fmt","","",24,{"inputs":[{"name":"stridemut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"stride"}],"output":{"name":"stride"}}],[11,"index_mut","","Return a mutable reference to the element at a given index.",24,{"inputs":[{"name":"stridemut"},{"name":"usize"}],"output":{"name":"a"}}],[11,"next","","",25,{"inputs":[{"name":"tee"}],"output":{"name":"option"}}],[11,"size_hint","","",25,null],[11,"clone","","",26,{"inputs":[{"name":"times"}],"output":{"name":"times"}}],[11,"next","","",26,{"inputs":[{"name":"times"}],"output":{"name":"option"}}],[11,"size_hint","","",26,null],[11,"next_back","","",26,{"inputs":[{"name":"times"}],"output":{"name":"option"}}],[11,"clone","","",27,{"inputs":[{"name":"ziplongest"}],"output":{"name":"ziplongest"}}],[11,"new","","Create a new **ZipLongest** iterator.",27,{"inputs":[{"name":"ziplongest"},{"name":"t"},{"name":"u"}],"output":{"name":"ziplongest"}}],[11,"next","","",27,{"inputs":[{"name":"ziplongest"}],"output":{"name":"option"}}],[11,"size_hint","","",27,null],[11,"next_back","","",27,{"inputs":[{"name":"ziplongest"}],"output":{"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"eitherorboth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"eitherorboth"},{"name":"eitherorboth"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"eitherorboth"},{"name":"eitherorboth"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"eitherorboth"}],"output":{"name":"eitherorboth"}}],[11,"clone","","",28,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"new","","Create a new **Zip** from a tuple of iterators.",28,{"inputs":[{"name":"zip"},{"name":"t"}],"output":{"name":"zip"}}],[11,"next","","",28,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next","","",28,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next","","",28,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next","","",28,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next","","",28,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next","","",28,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next","","",28,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next","","",28,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next","","",28,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[6,"CoalesceFn","","An iterator adaptor that may join together adjacent elements.",null,null],[6,"MapFn","","The function pointer map iterator created with *.map_fn()*.",null,null],[6,"MergeAscend","","An ascending order merge iterator created with *.merge()*.",null,null],[8,"Itertools","","The trait **Itertools**: extra iterator adaptors and methods for iterators.",null,null],[11,"interleave","","Alternate elements from two iterators until both\nrun out.",29,{"inputs":[{"name":"itertools"},{"name":"j"}],"output":{"name":"interleave"}}],[11,"intersperse","","An iterator adaptor to insert a particular value\nbetween each element of the adapted iterator.",29,{"inputs":[{"name":"itertools"},{"name":"item"}],"output":{"name":"intersperse"}}],[11,"zip_longest","","Create an iterator which iterates over both this and the specified\niterator simultaneously, yielding pairs of two optional elements.",29,{"inputs":[{"name":"itertools"},{"name":"j"}],"output":{"name":"ziplongest"}}],[11,"batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator\nand may pick off as many elements as it likes, to produce the next iterator element.",29,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":{"name":"batching"}}],[11,"group_by","","Group iterator elements. Consecutive elements that map to the same key (“runs”),\nare returned as the iterator elements of **GroupBy**.",29,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":{"name":"groupby"}}],[11,"tee","","Split into an iterator pair that both yield all elements from\nthe original iterator.",29,null],[11,"slice","","Return a sliced iterator.",29,{"inputs":[{"name":"itertools"},{"name":"r"}],"output":{"name":"islice"}}],[11,"into_rc","","Return an iterator inside a **Rc\\<RefCell\\<_\\>\\>** wrapper.",29,{"inputs":[{"name":"itertools"}],"output":{"name":"rciter"}}],[11,"step","","Return an iterator adaptor that steps **n** elements in the base iterator\nfor each iteration.",29,{"inputs":[{"name":"itertools"},{"name":"usize"}],"output":{"name":"step"}}],[11,"merge","","Return an iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.",29,{"inputs":[{"name":"itertools"},{"name":"j"}],"output":{"name":"mergeascend"}}],[11,"merge_by","","Return an iterator adaptor that merges the two base iterators in order.\nThis is much like *.merge()* but allows for a custom ordering.",29,{"inputs":[{"name":"itertools"},{"name":"j"},{"name":"f"}],"output":{"name":"merge"}}],[11,"cartesian_product","","Return an iterator adaptor that iterates over the cartesian product of\nthe element sets of two iterators **self** and **J**.",29,{"inputs":[{"name":"itertools"},{"name":"j"}],"output":{"name":"product"}}],[11,"multipeek","","Return an iterator adapter that allows peeking multiple values.",29,{"inputs":[{"name":"itertools"}],"output":{"name":"multipeek"}}],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure to\noptionally merge together consecutive elements. For each pair the closure\nis passed the latest two elements, `x`, `y` and may return either `Ok(z)`\nto merge the two values or `Err((x, y))` to indicate they can't be merged.",29,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":{"name":"coalesce"}}],[11,"dedup","","Remove duplicates from sections of consecutive identical elements.\nIf the iterator is sorted, all elements will be unique.",29,{"inputs":[{"name":"itertools"}],"output":{"name":"coalescefn"}}],[11,"mend_slices","","Return an iterator adaptor that joins together adjacent slices if possible.",29,{"inputs":[{"name":"itertools"}],"output":{"name":"coalescefn"}}],[11,"take_while_ref","","Return an iterator adaptor that borrows from a **Clone**-able iterator\nto only pick off elements while the predicate **f** returns **true**.",29,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":{"name":"takewhileref"}}],[11,"map_fn","","Like regular *.map()*, specialized to using a simple function pointer instead,\nso that the resulting **Map** iterator value can be cloned.",29,null],[11,"fn_map","","**Deprecated:** Use *.map_fn()* instead.",29,null],[11,"find_position","","Find the position and value of the first element satisfying a predicate.",29,{"inputs":[{"name":"itertools"},{"name":"p"}],"output":{"name":"option"}}],[11,"dropn","","Consume the first **n** elements of the iterator eagerly.",29,{"inputs":[{"name":"itertools"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"dropping","","Consume the first **n** elements from the iterator eagerly,\nand return the same iterator again.",29,{"inputs":[{"name":"itertools"},{"name":"usize"}],"output":{"name":"self"}}],[11,"dropping_back","","Consume the last **n** elements from the iterator eagerly,\nand return the same iterator again.",29,{"inputs":[{"name":"itertools"},{"name":"usize"}],"output":{"name":"self"}}],[11,"foreach","","Run the closure **f** eagerly on each element of the iterator.",29,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":null}],[11,"collect_vec","","**.collect_vec()** is simply a type specialization of **.collect()**,\nfor convenience.",29,{"inputs":[{"name":"itertools"}],"output":{"name":"vec"}}],[11,"set_from","","Assign to each reference in **self** from the **from** iterator,\nstopping at the shortest of the two iterators.",29,{"inputs":[{"name":"itertools"},{"name":"j"}],"output":{"name":"usize"}}],[11,"join","","Combine all iterator elements into one String, seperated by **sep**.",29,{"inputs":[{"name":"itertools"},{"name":"str"}],"output":{"name":"string"}}],[11,"fold_results","","Fold **Result** values from an iterator.",29,{"inputs":[{"name":"itertools"},{"name":"b"},{"name":"f"}],"output":{"name":"result"}}],[11,"fold1","","Accumulator of the elements in the iterator.",29,{"inputs":[{"name":"itertools"},{"name":"f"}],"output":{"name":"option"}}],[11,"is_empty_hint","","Tell if the iterator is empty or not according to its size hint.\nReturn **None** if the size hint does not tell, or return a **Some**\nvalue with the emptiness if it's possible to tell.",29,{"inputs":[{"name":"itertools"}],"output":{"name":"option"}}],[14,"iproduct!","","Create an iterator over the “cartesian product” of iterators.",null,null],[14,"izip!","","Create an iterator running multiple iterators in lockstep.",null,null],[14,"icompr!","","**Deprecated:** Will hopefully be replaced by a dedicated\nsyntax extension that can offer real convenient python-like syntax.",null,null]],"paths":[[3,"RcIter"],[4,"EitherOrBoth"],[3,"Interleave"],[3,"FnMap"],[3,"PutBack"],[3,"Product"],[3,"Batching"],[3,"GroupBy"],[3,"Step"],[3,"Merge"],[3,"MultiPeek"],[3,"Coalesce"],[3,"TakeWhileRef"],[3,"Intersperse"],[3,"ISlice"],[3,"Linspace"],[8,"IntoIteratorTuple"],[8,"AppendTuple"],[3,"FlatTuples"],[3,"RangeFrom"],[3,"RangeTo"],[3,"Range"],[3,"RepeatN"],[3,"Stride"],[3,"StrideMut"],[3,"Tee"],[3,"Times"],[3,"ZipLongest"],[3,"Zip"],[8,"Itertools"]]};
searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator.",null,null],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex['json_tools'] = {"items":[[0,"","json_tools","For usage examples, please have a look at the *tests* and *benchmarks*.",null,null],[3,"Lexer","","A lexer for utf-8 encoded json data",null,null],[3,"Token","","A lexical token, identifying its kind and span.",null,null],[12,"kind","","The exact type of the token",0,null],[12,"buf","","A buffer representing the bytes of this Token.",0,null],[3,"Span","","A pair of indices into the byte stream returned by our source\niterator.\nIt is an exclusive range.",null,null],[12,"first","","Index of the first the byte",1,null],[12,"end","","Index one past the last byte",1,null],[3,"FilterTypedKeyValuePairs","","Removes tokens matching `,? \"key\": <type> ,?`., where `<type>` is a given\ntoken type. Useful for removing `null` values, or all numbers, for instance.\nIs made in a resilient fashion which doesn't require a sane input token stream.",null,null],[3,"TokenReader","","An adapter to convert a stream of `Token`s into bytes by implementing an\n`std::io::Read` trait.",null,null],[4,"TokenType","","",null,null],[13,"CurlyOpen","","`{`",2,null],[13,"CurlyClose","","`}`",2,null],[13,"BracketOpen","","`[`",2,null],[13,"BracketClose","","`]`",2,null],[13,"Colon","","`:`",2,null],[13,"Comma","","`,`",2,null],[13,"String","","A json string , like `\"foo\"`",2,null],[13,"BooleanTrue","","`true`",2,null],[13,"BooleanFalse","","`false`",2,null],[13,"Number","","A Number, like `1.1234` or `123` or `-0.0` or `-1` or `.0` or `.`",2,null],[13,"Null","","any json number, like `1.24123` or `123`\n`null`",2,null],[13,"Invalid","","The type of the token could not be identified.\nShould be removed if this lexer is ever to be feature complete",2,null],[4,"BufferType","","The type of `Buffer` you want in each `Token`",null,null],[13,"Bytes","","Use a `Buffer::MultiByte` were appropriate. Initialize it with the\ngiven capcity (to obtain higher performance when pushing charcters)",3,null],[13,"Span","","",3,null],[4,"Buffer","","Representation of a buffer containing items making up a `Token`.",null,null],[13,"MultiByte","","Multiple bytes making up a token. Only set for `TokenType::String` and\n`TokenType::Number`.",4,null],[13,"Span","","The span allows to reference back into the source byte stream\nto obtain the string making up the token.\nPlease note that for control characters, booleans and null (i.e\nanything that is not `Buffer::MultiByte` you should use \n`<TokenType as AsRef<str>>::as_ref()`)",4,null],[11,"clone","","",2,{"inputs":[{"name":"tokentype"}],"output":{"name":"tokentype"}}],[11,"eq","","",2,{"inputs":[{"name":"tokentype"},{"name":"tokentype"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"tokentype"},{"name":"tokentype"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"tokentype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",2,{"inputs":[{"name":"tokentype"}],"output":{"name":"str"}}],[11,"default","","",1,{"inputs":[{"name":"span"}],"output":{"name":"span"}}],[11,"clone","","",1,{"inputs":[{"name":"span"}],"output":{"name":"span"}}],[11,"eq","","",1,{"inputs":[{"name":"span"},{"name":"span"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"span"},{"name":"span"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"span"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"token"}],"output":{"name":"token"}}],[11,"eq","","",0,{"inputs":[{"name":"token"},{"name":"token"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"token"},{"name":"token"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"token"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"buffer"}],"output":{"name":"buffer"}}],[11,"eq","","",4,{"inputs":[{"name":"buffer"},{"name":"buffer"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"buffer"},{"name":"buffer"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"buffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"buffertype"}],"output":{"name":"buffertype"}}],[11,"eq","","",3,{"inputs":[{"name":"buffertype"},{"name":"buffertype"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"buffertype"},{"name":"buffertype"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"buffertype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new Lexer from a given byte iterator.",5,{"inputs":[{"name":"lexer"},{"name":"i"},{"name":"buffertype"}],"output":{"name":"lexer"}}],[11,"into_inner","","",5,{"inputs":[{"name":"lexer"}],"output":{"name":"i"}}],[11,"next","","Lex the underlying bytte stream to generate tokens",5,{"inputs":[{"name":"lexer"}],"output":{"name":"option"}}],[11,"new","","Returns a new `FilterTypedKeyValuePairs` instance from a `Token` iterator",6,{"inputs":[{"name":"filtertypedkeyvaluepairs"},{"name":"i"},{"name":"tokentype"}],"output":{"name":"filtertypedkeyvaluepairs"}}],[11,"next","","",6,{"inputs":[{"name":"filtertypedkeyvaluepairs"}],"output":{"name":"option"}}],[11,"new","","Returns a new `TokenReader`\n# Args\n* `iter` - the iterator producing `Token` instances we are to convert\n* `source` - an optional, original string from which the tokens were \n             generated. This offers the best performance when \n             serializing tokens, as they can refer to their original\n             `&str` slice.",7,{"inputs":[{"name":"tokenreader"},{"name":"i"},{"name":"option"}],"output":{"name":"tokenreader"}}],[11,"read","","",7,null],[8,"IteratorExt","","Applies convenience constructors to all `Iterator<Item=Token>` types",null,null],[11,"filter_key_value_by_type","","Returns an Iterator which filters key=value pairs, if `value.kind` matches\nthe given `token_type`.",8,{"inputs":[{"name":"iteratorext"},{"name":"tokentype"}],"output":{"name":"filtertypedkeyvaluepairs"}}],[11,"reader","","Returns a `TokenReader` to produce a byte stream from `Token` instances",8,{"inputs":[{"name":"iteratorext"},{"name":"option"}],"output":{"name":"tokenreader"}}],[11,"filter_key_value_by_type","","Returns an Iterator which filters key=value pairs, if `value.kind` matches\nthe given `token_type`.",8,null],[11,"reader","","Returns a `TokenReader` to produce a byte stream from `Token` instances",8,null]],"paths":[[3,"Token"],[3,"Span"],[4,"TokenType"],[4,"BufferType"],[4,"Buffer"],[3,"Lexer"],[3,"FilterTypedKeyValuePairs"],[3,"TokenReader"],[8,"IteratorExt"]]};
searchIndex['pkg_config'] = {"items":[[0,"","pkg_config","A build dependency for Cargo libraries to find system artifacts through the\n`pkg-config` utility.",null,null],[3,"Config","","",null,null],[3,"Library","","",null,null],[12,"libs","","",0,null],[12,"link_paths","","",0,null],[12,"frameworks","","",0,null],[12,"framework_paths","","",0,null],[12,"include_paths","","",0,null],[5,"target_supported","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"find_library","","Simple shortcut for using all default options for finding a library.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"fmt","","",0,{"inputs":[{"name":"library"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new set of configuration options which are all initially set\nto \"blank\".",1,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"statik","","Indicate whether the `--static` flag should be passed.",1,{"inputs":[{"name":"config"},{"name":"bool"}],"output":{"name":"config"}}],[11,"atleast_version","","Indicate that the library must be at least version `vers`.",1,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"config"}}],[11,"arg","","Add an argument to pass to pkg-config.",1,{"inputs":[{"name":"config"},{"name":"s"}],"output":{"name":"config"}}],[11,"find","","Run `pkg-config` to find the library `name`.",1,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"Library"],[3,"Config"]]};
searchIndex['traitobject'] = {"items":[[0,"","traitobject","# traitobject",null,null],[5,"data","","Get the data pointer from this trait object.",null,null],[5,"data_mut","","Get the data pointer from this trait object, mutably.",null,null]],"paths":[]};
searchIndex['unicase'] = {"items":[[0,"","unicase","# Case",null,null],[3,"UniCase","","Case Insensitive wrapper of strings.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"unicase"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"unicase"}],"output":{"name":"unicase"}}],[6,"Target","","",null,null],[11,"deref","","",0,{"inputs":[{"name":"unicase"}],"output":{"name":"s"}}],[11,"deref_mut","","",0,{"inputs":[{"name":"unicase"}],"output":{"name":"s"}}],[11,"as_ref","","",0,{"inputs":[{"name":"unicase"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"unicase"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"unicase"},{"name":"unicase"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"unicase"},{"name":"s"}],"output":{"name":"bool"}}],[6,"Err","","",null,null],[11,"from_str","","",0,{"inputs":[{"name":"unicase"},{"name":"str"}],"output":{"name":"result"}}],[11,"hash","","",0,{"inputs":[{"name":"unicase"},{"name":"h"}],"output":null}]],"paths":[[3,"UniCase"]]};
searchIndex['rustc_serialize'] = {"items":[[0,"","rustc_serialize","Support code for encoding and decoding types.",null,null],[11,"encode","collections::string","",0,{"inputs":[{"name":"string"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"string"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::boxed","",1,{"inputs":[{"name":"box"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::rc","",2,{"inputs":[{"name":"rc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"rc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec","",3,{"inputs":[{"name":"vec"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"vec"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::option","",4,{"inputs":[{"name":"option"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"option"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::marker","",5,{"inputs":[{"name":"phantomdata"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"phantomdata"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::path","",6,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"result"}}],[11,"encode","","",7,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",7,{"inputs":[{"name":"pathbuf"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::cell","",8,{"inputs":[{"name":"cell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"cell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",9,{"inputs":[{"name":"refcell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",9,{"inputs":[{"name":"refcell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::arc","",10,{"inputs":[{"name":"arc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",10,{"inputs":[{"name":"arc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::linked_list","",11,{"inputs":[{"name":"linkedlist"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",11,{"inputs":[{"name":"linkedlist"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec_deque","",12,{"inputs":[{"name":"vecdeque"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",12,{"inputs":[{"name":"vecdeque"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::map","",13,{"inputs":[{"name":"btreemap"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",13,{"inputs":[{"name":"btreemap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::set","",14,{"inputs":[{"name":"btreeset"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",14,{"inputs":[{"name":"btreeset"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::map","",15,{"inputs":[{"name":"hashmap"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",15,{"inputs":[{"name":"hashmap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::set","",16,{"inputs":[{"name":"hashset"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",16,{"inputs":[{"name":"hashset"},{"name":"d"}],"output":{"name":"result"}}],[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",17,null],[12,"newline","","Newline to use",17,null],[12,"pad","","True to pad output with `=` characters",17,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",17,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",18,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",18,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",19,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",19,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",20,null],[13,"InvalidBase64Length","","The input had an invalid length",20,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",21,{"inputs":[{"name":"tobase64"},{"name":"config"}],"output":{"name":"string"}}],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",22,{"inputs":[{"name":"frombase64"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"characterset"}],"output":{"name":"characterset"}}],[11,"clone","","",19,{"inputs":[{"name":"newline"}],"output":{"name":"newline"}}],[11,"clone","","",17,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"clone","","",20,{"inputs":[{"name":"frombase64error"}],"output":{"name":"frombase64error"}}],[11,"fmt","","",20,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",20,{"inputs":[{"name":"frombase64error"}],"output":{"name":"str"}}],[11,"fmt","","",20,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",23,null],[13,"InvalidHexLength","","The input had an invalid length",23,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",24,{"inputs":[{"name":"tohex"}],"output":{"name":"string"}}],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",25,{"inputs":[{"name":"fromhex"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"fromhexerror"}}],[11,"fmt","","",23,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",23,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"str"}}],[11,"fmt","","",23,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",26,null],[13,"U64","","",26,null],[13,"F64","","",26,null],[13,"String","","",26,null],[13,"Boolean","","",26,null],[13,"Array","","",26,null],[13,"Object","","",26,null],[13,"Null","","",26,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",27,null],[13,"InvalidNumber","","",27,null],[13,"EOFWhileParsingObject","","",27,null],[13,"EOFWhileParsingArray","","",27,null],[13,"EOFWhileParsingValue","","",27,null],[13,"EOFWhileParsingString","","",27,null],[13,"KeyMustBeAString","","",27,null],[13,"ExpectedColon","","",27,null],[13,"TrailingCharacters","","",27,null],[13,"TrailingComma","","",27,null],[13,"InvalidEscape","","",27,null],[13,"InvalidUnicodeCodePoint","","",27,null],[13,"LoneLeadingSurrogateInHexEscape","","",27,null],[13,"UnexpectedEndOfHexEscape","","",27,null],[13,"UnrecognizedHex","","",27,null],[13,"NotFourDigit","","",27,null],[13,"ControlCharacterInString","","",27,null],[13,"NotUtf8","","",27,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",28,null],[13,"IoError","","",28,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",29,null],[13,"ExpectedError","","",29,null],[13,"MissingFieldError","","",29,null],[13,"UnknownVariantError","","",29,null],[13,"ApplicationError","","",29,null],[13,"EOF","","",29,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",30,null],[13,"BadHashmapKey","","",30,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",31,null],[13,"ObjectEnd","","",31,null],[13,"ArrayStart","","",31,null],[13,"ArrayEnd","","",31,null],[13,"BooleanValue","","",31,null],[13,"I64Value","","",31,null],[13,"U64Value","","",31,null],[13,"F64Value","","",31,null],[13,"StringValue","","",31,null],[13,"NullValue","","",31,null],[13,"Error","","",31,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",32,null],[13,"Key","","",32,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",33,{"inputs":[{"name":"tojson"}],"output":{"name":"json"}}],[11,"fmt","","",26,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"option"}}],[11,"lt","","",26,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"le","","",26,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"gt","","",26,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ge","","",26,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"eq","","",26,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"eq","","",27,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"errorcode"}],"output":{"name":"errorcode"}}],[11,"fmt","","",28,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"parsererror"},{"name":"parsererror"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"encodererror"}],"output":{"name":"self"}}],[11,"fmt","","",27,{"inputs":[{"name":"errorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",29,{"inputs":[{"name":"decodererror"}],"output":{"name":"str"}}],[11,"cause","","",29,{"inputs":[{"name":"decodererror"}],"output":{"name":"option"}}],[11,"fmt","","",29,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",28,{"inputs":[{"name":"parsererror"}],"output":{"name":"str"}}],[11,"fmt","","",28,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"encodererror"}],"output":{"name":"str"}}],[11,"fmt","","",30,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",30,{"inputs":[{"name":"encodererror"},{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",34,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",34,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",34,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[6,"Error","","",null,null],[11,"emit_nil","","",34,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_usize","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"encoderesult"}}],[11,"emit_u64","","",34,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"encoderesult"}}],[11,"emit_u32","","",34,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"encoderesult"}}],[11,"emit_u16","","",34,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"encoderesult"}}],[11,"emit_u8","","",34,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"encoderesult"}}],[11,"emit_isize","","",34,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"encoderesult"}}],[11,"emit_i64","","",34,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"encoderesult"}}],[11,"emit_i32","","",34,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"encoderesult"}}],[11,"emit_i16","","",34,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"encoderesult"}}],[11,"emit_i8","","",34,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"encoderesult"}}],[11,"emit_bool","","",34,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"encoderesult"}}],[11,"emit_f64","","",34,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"encoderesult"}}],[11,"emit_f32","","",34,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"encoderesult"}}],[11,"emit_char","","",34,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"encoderesult"}}],[11,"emit_str","","",34,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"encoderesult"}}],[11,"emit_enum","","",34,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant","","",34,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant_arg","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant","","",34,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant_field","","",34,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct","","",34,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct_field","","",34,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_arg","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct","","",34,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct_arg","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option","","",34,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option_none","","",34,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_option_some","","",34,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq_elt","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_key","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_val","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"encode","","",26,{"inputs":[{"name":"json"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",26,{"inputs":[{"name":"json"},{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",26,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",26,{"inputs":[{"name":"json"}],"output":{"name":"prettyjson"}}],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",26,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",26,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",26,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[6,"Output","","",null,null],[11,"index","","",26,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"json"}}],[6,"Output","","",null,null],[11,"index","","",26,{"inputs":[{"name":"json"},{"name":"usize"}],"output":{"name":"json"}}],[11,"fmt","","",31,{"inputs":[{"name":"jsonevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"stackelement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"stackelement"}],"output":{"name":"stackelement"}}],[11,"eq","","",32,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"new","","",35,{"inputs":[{"name":"stack"}],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",35,{"inputs":[{"name":"stack"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the stack is empty.",35,{"inputs":[{"name":"stack"}],"output":{"name":"bool"}}],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",35,{"inputs":[{"name":"stack"},{"name":"usize"}],"output":{"name":"stackelement"}}],[11,"is_equal_to","","Compares this stack with an array of StackElements.",35,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",35,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",35,null],[11,"top","","Returns the top-most element (if any).",35,{"inputs":[{"name":"stack"}],"output":{"name":"option"}}],[6,"Item","","",null,null],[11,"next","","",36,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[11,"new","","Creates the JSON parser.",36,{"inputs":[{"name":"parser"},{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",36,{"inputs":[{"name":"parser"}],"output":{"name":"stack"}}],[11,"new","","Create a JSON Builder.",37,{"inputs":[{"name":"builder"},{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",37,{"inputs":[{"name":"builder"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",38,{"inputs":[{"name":"decoder"},{"name":"json"}],"output":{"name":"decoder"}}],[6,"Error","","",null,null],[11,"read_nil","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_usize","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u8","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u16","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u32","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u64","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_isize","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i8","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i16","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i32","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i64","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f32","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f64","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_bool","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_char","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_str","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_enum","","",38,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_variant","","",38,null],[11,"read_enum_variant_arg","","",38,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_struct_variant","","",38,null],[11,"read_enum_struct_variant_field","","",38,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct","","",38,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct_field","","",38,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple","","",38,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_arg","","",38,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct","","",38,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct_arg","","",38,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_option","","",38,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq","","",38,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq_elt","","",38,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map","","",38,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_key","","",38,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_val","","",38,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"error","","",38,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"decodererror"}}],[11,"to_json","","",26,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"to_json","collections::string","",0,{"inputs":[{"name":"string"}],"output":{"name":"json"}}],[11,"to_json","collections::vec","",3,{"inputs":[{"name":"vec"}],"output":{"name":"json"}}],[11,"to_json","collections::btree::map","",13,{"inputs":[{"name":"btreemap"}],"output":{"name":"json"}}],[11,"to_json","std::collections::hash::map","",15,{"inputs":[{"name":"hashmap"}],"output":{"name":"json"}}],[11,"to_json","core::option","",4,{"inputs":[{"name":"option"}],"output":{"name":"json"}}],[11,"fmt","rustc_serialize::json","Encodes a json value into a string",26,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",39,{"inputs":[{"name":"prettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",40,{"inputs":[{"name":"asjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"indent","","Set the indentation level for the emitted JSON",41,{"inputs":[{"name":"asprettyjson"},{"name":"u32"}],"output":{"name":"asprettyjson"}}],[11,"fmt","","Encodes a json value into a string",41,{"inputs":[{"name":"asprettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",26,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","rustc_serialize::Decoder","",null,null],[10,"read_nil","rustc_serialize","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_usize","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u64","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u32","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u16","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u8","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_isize","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i64","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i32","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i16","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i8","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_bool","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f64","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f32","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_char","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_str","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_enum","","",42,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_variant","","",42,null],[10,"read_enum_variant_arg","","",42,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_struct_variant","","",42,null],[10,"read_enum_struct_variant_field","","",42,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct","","",42,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct_field","","",42,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple","","",42,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_arg","","",42,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct","","",42,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct_arg","","",42,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_option","","",42,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq","","",42,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq_elt","","",42,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map","","",42,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_key","","",42,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_val","","",42,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"error","","",42,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"error"}}],[8,"Encoder","","",null,null],[16,"Error","rustc_serialize::Encoder","",null,null],[10,"emit_nil","rustc_serialize","",43,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_usize","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"result"}}],[10,"emit_u64","","",43,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"result"}}],[10,"emit_u32","","",43,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[10,"emit_u16","","",43,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"result"}}],[10,"emit_u8","","",43,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"result"}}],[10,"emit_isize","","",43,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"result"}}],[10,"emit_i64","","",43,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"result"}}],[10,"emit_i32","","",43,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"result"}}],[10,"emit_i16","","",43,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"result"}}],[10,"emit_i8","","",43,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"result"}}],[10,"emit_bool","","",43,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"result"}}],[10,"emit_f64","","",43,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"result"}}],[10,"emit_f32","","",43,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"result"}}],[10,"emit_char","","",43,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"result"}}],[10,"emit_str","","",43,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"result"}}],[10,"emit_enum","","",43,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant","","",43,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant_arg","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant","","",43,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant_field","","",43,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct","","",43,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct_field","","",43,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_arg","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct","","",43,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct_arg","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option","","",43,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option_none","","",43,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_option_some","","",43,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq_elt","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_key","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_val","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[8,"Decodable","","",null,null],[10,"decode","","",44,{"inputs":[{"name":"decodable"},{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",45,{"inputs":[{"name":"encodable"},{"name":"s"}],"output":{"name":"result"}}],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",46,{"inputs":[{"name":"decoderhelpers"},{"name":"f"}],"output":{"name":"result"}}],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",47,null]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[3,"Vec"],[4,"Option"],[3,"PhantomData"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex['aster'] = {"items":[[0,"","aster","",null,null],[3,"AstBuilder","","",null,null],[0,"attr","","",null,null],[3,"AttrBuilder","aster::attr","",null,null],[3,"AttrListBuilder","","",null,null],[3,"AttrNameValueBuilder","","",null,null],[11,"new","","",0,{"inputs":[{"name":"attrbuilder"}],"output":{"name":"self"}}],[11,"new_with_callback","","",0,{"inputs":[{"name":"attrbuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",0,{"inputs":[{"name":"attrbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"inner","","",0,{"inputs":[{"name":"attrbuilder"}],"output":{"name":"self"}}],[11,"build_meta_item","","",0,{"inputs":[{"name":"attrbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_meta_item_","","",0,{"inputs":[{"name":"attrbuilder"},{"name":"metaitem_"}],"output":{"name":"f"}}],[11,"word","","",0,{"inputs":[{"name":"attrbuilder"},{"name":"t"}],"output":{"name":"f"}}],[11,"list","","",0,{"inputs":[{"name":"attrbuilder"},{"name":"t"}],"output":{"name":"attrlistbuilder"}}],[11,"name_value","","",0,{"inputs":[{"name":"attrbuilder"},{"name":"t"}],"output":{"name":"litbuilder"}}],[11,"automatically_derived","","",0,{"inputs":[{"name":"attrbuilder"}],"output":{"name":"f"}}],[11,"inline","","",0,{"inputs":[{"name":"attrbuilder"}],"output":{"name":"f"}}],[11,"test","","",0,{"inputs":[{"name":"attrbuilder"}],"output":{"name":"f"}}],[11,"allow","","",0,{"inputs":[{"name":"attrbuilder"},{"name":"i"}],"output":{"name":"f"}}],[11,"warn","","",0,{"inputs":[{"name":"attrbuilder"},{"name":"i"}],"output":{"name":"f"}}],[11,"deny","","",0,{"inputs":[{"name":"attrbuilder"},{"name":"i"}],"output":{"name":"f"}}],[11,"features","","",0,{"inputs":[{"name":"attrbuilder"},{"name":"i"}],"output":{"name":"f"}}],[11,"plugins","","",0,{"inputs":[{"name":"attrbuilder"},{"name":"i"}],"output":{"name":"f"}}],[11,"doc","","Create a #[doc = \"...\"] node. Note that callers of this must make sure to prefix their\ncomments with either \"///\" or \"/\\*\\*\" if an outer comment, or \"//!\" or \"/\\*!\" if an inner\ncomment.",0,{"inputs":[{"name":"attrbuilder"},{"name":"t"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",0,{"inputs":[{"name":"attrbuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",0,{"inputs":[{"name":"attrbuilder"},{"name":"metaitem_"}],"output":{"name":"f"}}],[11,"new_with_callback","","",1,{"inputs":[{"name":"attrlistbuilder"},{"name":"t"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",1,{"inputs":[{"name":"attrlistbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_meta_items","","",1,{"inputs":[{"name":"attrlistbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_meta_items_","","",1,{"inputs":[{"name":"attrlistbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_meta_item","","",1,{"inputs":[{"name":"attrlistbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"with_meta_item_","","",1,{"inputs":[{"name":"attrlistbuilder"},{"name":"metaitem_"}],"output":{"name":"self"}}],[11,"words","","",1,{"inputs":[{"name":"attrlistbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"word","","",1,{"inputs":[{"name":"attrlistbuilder"},{"name":"t"}],"output":{"name":"self"}}],[11,"list","","",1,{"inputs":[{"name":"attrlistbuilder"},{"name":"t"}],"output":{"name":"attrlistbuilder"}}],[11,"name_value","","",1,{"inputs":[{"name":"attrlistbuilder"},{"name":"t"}],"output":{"name":"litbuilder"}}],[11,"build","","",1,{"inputs":[{"name":"attrlistbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",1,{"inputs":[{"name":"attrlistbuilder"},{"name":"p"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",1,{"inputs":[{"name":"attrlistbuilder"},{"name":"metaitem_"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",2,{"inputs":[{"name":"attrnamevaluebuilder"},{"name":"p"}],"output":{"name":"f"}}],[0,"block","aster","",null,null],[3,"BlockBuilder","aster::block","",null,null],[11,"new","","",3,{"inputs":[{"name":"blockbuilder"}],"output":{"name":"self"}}],[11,"new_with_callback","","",3,{"inputs":[{"name":"blockbuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",3,{"inputs":[{"name":"blockbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"unsafe_","","",3,{"inputs":[{"name":"blockbuilder"}],"output":{"name":"self"}}],[11,"with_stmts","","",3,{"inputs":[{"name":"blockbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_stmt","","",3,{"inputs":[{"name":"blockbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"stmt","","",3,{"inputs":[{"name":"blockbuilder"}],"output":{"name":"stmtbuilder"}}],[11,"build_expr","","",3,{"inputs":[{"name":"blockbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"expr","","",3,{"inputs":[{"name":"blockbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",3,{"inputs":[{"name":"blockbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",3,{"inputs":[{"name":"blockbuilder"},{"name":"p"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",3,{"inputs":[{"name":"blockbuilder"},{"name":"p"}],"output":{"name":"f"}}],[0,"expr","aster","",null,null],[3,"ExprBuilder","aster::expr","",null,null],[3,"ExprUnaryBuilder","","",null,null],[3,"ExprBinaryLhsBuilder","","",null,null],[3,"ExprBinaryRhsBuilder","","",null,null],[3,"ExprTupleBuilder","","",null,null],[3,"ExprStructBuilder","","",null,null],[3,"ExprStructPathBuilder","","",null,null],[3,"ExprStructFieldBuilder","","",null,null],[3,"ExprCallBuilder","","",null,null],[3,"ExprCallArgsBuilder","","",null,null],[3,"ExprMethodCallBuilder","","",null,null],[3,"ExprMethodCallArgsBuilder","","",null,null],[3,"ExprAddrOfBuilder","","",null,null],[3,"ExprPathBuilder","","",null,null],[3,"ExprParenBuilder","","",null,null],[3,"ExprFieldBuilder","","",null,null],[3,"ExprTupFieldBuilder","","",null,null],[3,"ExprSliceBuilder","","",null,null],[3,"ExprVecBuilder","","",null,null],[11,"new","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"self"}}],[11,"new_with_callback","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"build","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"span","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"build_expr_","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"expr_"}],"output":{"name":"f"}}],[11,"build_path","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"path"}],"output":{"name":"f"}}],[11,"build_qpath","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"qself"},{"name":"path"}],"output":{"name":"f"}}],[11,"path","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"pathbuilder"}}],[11,"qpath","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"qpathbuilder"}}],[11,"id","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"i"}],"output":{"name":"f"}}],[11,"build_lit","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"lit","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"litbuilder"}}],[11,"bool","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"bool"}],"output":{"name":"f"}}],[11,"int","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"i64"}],"output":{"name":"f"}}],[11,"isize","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"isize"}],"output":{"name":"f"}}],[11,"i8","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"i8"}],"output":{"name":"f"}}],[11,"i16","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"i16"}],"output":{"name":"f"}}],[11,"i32","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"i32"}],"output":{"name":"f"}}],[11,"i64","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"i64"}],"output":{"name":"f"}}],[11,"usize","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"usize"}],"output":{"name":"f"}}],[11,"u8","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"u8"}],"output":{"name":"f"}}],[11,"u16","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"u16"}],"output":{"name":"f"}}],[11,"u32","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"u32"}],"output":{"name":"f"}}],[11,"u64","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"u64"}],"output":{"name":"f"}}],[11,"str","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"s"}],"output":{"name":"f"}}],[11,"build_unary","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"unop"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_box","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_deref","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_not","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_neg","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"unary","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"unop"}],"output":{"name":"exprbuilder"}}],[11,"deref","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"not","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"neg","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build_binary","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"binop_"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_add","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_sub","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_mul","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_div","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_rem","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_and","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_or","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_bit_xor","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_bit_and","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_bit_or","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_shl","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_shr","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_eq","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_lt","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_le","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_ne","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_ge","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_gt","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"},{"name":"p"}],"output":{"name":"f"}}],[11,"binary","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"binop_"}],"output":{"name":"exprbuilder"}}],[11,"add","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"sub","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"mul","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"div","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"rem","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"and","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"or","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"bit_xor","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"bit_and","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"bit_or","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"shl","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"shr","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"eq","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"lt","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"le","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"ne","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"ge","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"gt","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"addr_of","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"mut_addr_of","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"unit","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"f"}}],[11,"tuple","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprtuplebuilder"}}],[11,"struct_path","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"exprstructpathbuilder"}}],[11,"struct_","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"pathbuilder"}}],[11,"self_","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"f"}}],[11,"none","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"f"}}],[11,"some","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"ok","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"err","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"phantom_data","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"f"}}],[11,"call","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"method_call","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"i"}],"output":{"name":"exprbuilder"}}],[11,"block","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"blockbuilder"}}],[11,"paren","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"field","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"i"}],"output":{"name":"exprbuilder"}}],[11,"tup_field","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"usize"}],"output":{"name":"exprbuilder"}}],[11,"box_","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"rc","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"arc","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprbuilder"}}],[11,"slice","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprslicebuilder"}}],[11,"vec","","",4,{"inputs":[{"name":"exprbuilder"}],"output":{"name":"exprslicebuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"path"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",4,null],[6,"Result","","",null,null],[11,"invoke","","",4,{"inputs":[{"name":"exprbuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",5,{"inputs":[{"name":"exprunarybuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",6,{"inputs":[{"name":"exprbinarylhsbuilder"},{"name":"p"}],"output":{"name":"exprbuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",7,{"inputs":[{"name":"exprbinaryrhsbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"with_exprs","","",8,{"inputs":[{"name":"exprtuplebuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"expr","","",8,{"inputs":[{"name":"exprtuplebuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",8,{"inputs":[{"name":"exprtuplebuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",8,{"inputs":[{"name":"exprtuplebuilder"},{"name":"p"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",9,{"inputs":[{"name":"exprstructbuilder"},{"name":"path"}],"output":{"name":"exprstructpathbuilder"}}],[11,"span","","",10,{"inputs":[{"name":"exprstructpathbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_fields","","",10,{"inputs":[{"name":"exprstructpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_id_exprs","","",10,{"inputs":[{"name":"exprstructpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"field","","",10,{"inputs":[{"name":"exprstructpathbuilder"},{"name":"i"}],"output":{"name":"exprbuilder"}}],[11,"build_with","","",10,{"inputs":[{"name":"exprstructpathbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",10,{"inputs":[{"name":"exprstructpathbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",10,{"inputs":[{"name":"exprstructpathbuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",11,{"inputs":[{"name":"exprstructfieldbuilder"},{"name":"p"}],"output":{"name":"exprstructpathbuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",12,{"inputs":[{"name":"exprcallbuilder"},{"name":"p"}],"output":{"name":"exprcallargsbuilder"}}],[11,"with_args","","",13,{"inputs":[{"name":"exprcallargsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_arg","","",13,{"inputs":[{"name":"exprcallargsbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"arg","","",13,{"inputs":[{"name":"exprcallargsbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",13,{"inputs":[{"name":"exprcallargsbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",13,{"inputs":[{"name":"exprcallargsbuilder"},{"name":"p"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",14,{"inputs":[{"name":"exprmethodcallbuilder"},{"name":"p"}],"output":{"name":"exprmethodcallargsbuilder"}}],[11,"with_tys","","",15,{"inputs":[{"name":"exprmethodcallargsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_ty","","",15,{"inputs":[{"name":"exprmethodcallargsbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"ty","","",15,{"inputs":[{"name":"exprmethodcallargsbuilder"}],"output":{"name":"tybuilder"}}],[11,"with_args","","",15,{"inputs":[{"name":"exprmethodcallargsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_arg","","",15,{"inputs":[{"name":"exprmethodcallargsbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"arg","","",15,{"inputs":[{"name":"exprmethodcallargsbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",15,{"inputs":[{"name":"exprmethodcallargsbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",15,{"inputs":[{"name":"exprmethodcallargsbuilder"},{"name":"p"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",15,{"inputs":[{"name":"exprmethodcallargsbuilder"},{"name":"p"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",16,{"inputs":[{"name":"expraddrofbuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",17,{"inputs":[{"name":"exprpathbuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",18,{"inputs":[{"name":"exprparenbuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",19,{"inputs":[{"name":"exprfieldbuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",20,{"inputs":[{"name":"exprtupfieldbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"with_exprs","","",21,{"inputs":[{"name":"exprslicebuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"expr","","",21,{"inputs":[{"name":"exprslicebuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",21,{"inputs":[{"name":"exprslicebuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",21,{"inputs":[{"name":"exprslicebuilder"},{"name":"p"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",22,{"inputs":[{"name":"exprvecbuilder"},{"name":"p"}],"output":{"name":"f"}}],[0,"fn_decl","aster","",null,null],[3,"FnDeclBuilder","aster::fn_decl","",null,null],[3,"ArgBuilder","","",null,null],[3,"ArgTyBuilder","","",null,null],[11,"new","","",23,{"inputs":[{"name":"fndeclbuilder"}],"output":{"name":"fndeclbuilder"}}],[11,"new_with_callback","","",23,{"inputs":[{"name":"fndeclbuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",23,{"inputs":[{"name":"fndeclbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"variadic","","",23,{"inputs":[{"name":"fndeclbuilder"}],"output":{"name":"self"}}],[11,"with_arg","","",23,{"inputs":[{"name":"fndeclbuilder"},{"name":"arg"}],"output":{"name":"self"}}],[11,"arg","","",23,{"inputs":[{"name":"fndeclbuilder"},{"name":"i"}],"output":{"name":"argbuilder"}}],[11,"no_return","","",23,{"inputs":[{"name":"fndeclbuilder"}],"output":{"name":"f"}}],[11,"default_return","","",23,{"inputs":[{"name":"fndeclbuilder"}],"output":{"name":"f"}}],[11,"build_return","","",23,{"inputs":[{"name":"fndeclbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"return_","","",23,{"inputs":[{"name":"fndeclbuilder"}],"output":{"name":"tybuilder"}}],[11,"build","","",23,{"inputs":[{"name":"fndeclbuilder"},{"name":"functionretty"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",23,{"inputs":[{"name":"fndeclbuilder"},{"name":"arg"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",23,{"inputs":[{"name":"fndeclbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"new","","",24,{"inputs":[{"name":"argbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"new_with_callback","","",24,{"inputs":[{"name":"argbuilder"},{"name":"i"},{"name":"f"}],"output":{"name":"argbuilder"}}],[11,"span","","",24,{"inputs":[{"name":"argbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"build_ty","","",24,{"inputs":[{"name":"argbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"ty","","",24,{"inputs":[{"name":"argbuilder"}],"output":{"name":"tybuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",25,{"inputs":[{"name":"argtybuilder"},{"name":"p"}],"output":{"name":"f"}}],[0,"generics","aster","",null,null],[3,"GenericsBuilder","aster::generics","",null,null],[11,"new","","",26,{"inputs":[{"name":"genericsbuilder"}],"output":{"name":"self"}}],[11,"from_generics","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"new_with_callback","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"from_generics_with_callback","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"generics"},{"name":"f"}],"output":{"name":"self"}}],[11,"with","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"span","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_lifetimes","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_lifetime_names","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_lifetime","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"lifetimedef"}],"output":{"name":"self"}}],[11,"lifetime_name","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"n"}],"output":{"name":"self"}}],[11,"lifetime","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"n"}],"output":{"name":"lifetimedefbuilder"}}],[11,"with_ty_params","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_ty_param_ids","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_ty_param","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"typaram"}],"output":{"name":"self"}}],[11,"ty_param_id","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"ty_param","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"i"}],"output":{"name":"typarambuilder"}}],[11,"with_predicates","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_predicate","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"wherepredicate"}],"output":{"name":"self"}}],[11,"add_lifetime_bound","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"l"}],"output":{"name":"self"}}],[11,"add_ty_param_bound","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"strip_bounds","","",26,{"inputs":[{"name":"genericsbuilder"}],"output":{"name":"self"}}],[11,"strip_lifetimes","","",26,{"inputs":[{"name":"genericsbuilder"}],"output":{"name":"self"}}],[11,"strip_ty_params","","",26,{"inputs":[{"name":"genericsbuilder"}],"output":{"name":"self"}}],[11,"strip_predicates","","",26,{"inputs":[{"name":"genericsbuilder"}],"output":{"name":"self"}}],[11,"build","","",26,{"inputs":[{"name":"genericsbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"lifetimedef"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",26,{"inputs":[{"name":"genericsbuilder"},{"name":"typaram"}],"output":{"name":"self"}}],[0,"ident","aster","",null,null],[8,"ToIdent","aster::ident","",null,null],[10,"to_ident","","",27,{"inputs":[{"name":"toident"}],"output":{"name":"ident"}}],[11,"to_ident","syntax::ast","",28,{"inputs":[{"name":"ident"}],"output":{"name":"ident"}}],[11,"to_ident","","",29,{"inputs":[{"name":"name"}],"output":{"name":"ident"}}],[11,"to_ident","collections::string","",30,{"inputs":[{"name":"string"}],"output":{"name":"ident"}}],[0,"invoke","aster","",null,null],[3,"Identity","aster::invoke","",null,null],[8,"Invoke","","",null,null],[16,"Result","aster::invoke::Invoke","",null,null],[10,"invoke","aster::invoke","",31,{"inputs":[{"name":"invoke"},{"name":"a"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"identity"}],"output":{"name":"identity"}}],[6,"Result","","",null,null],[11,"invoke","","",32,{"inputs":[{"name":"identity"},{"name":"a"}],"output":{"name":"a"}}],[0,"item","aster","",null,null],[3,"ItemBuilder","aster::item","",null,null],[3,"ItemFnDeclBuilder","","",null,null],[3,"ItemFnBuilder","","",null,null],[3,"ItemUseBuilder","","",null,null],[3,"ItemUsePathBuilder","","",null,null],[3,"ItemUsePathListBuilder","","",null,null],[3,"ItemStructBuilder","","",null,null],[3,"ItemTupleStructBuilder","","",null,null],[3,"ItemEnumBuilder","","",null,null],[11,"new","","",33,{"inputs":[{"name":"itembuilder"}],"output":{"name":"self"}}],[11,"new_with_callback","","",33,{"inputs":[{"name":"itembuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"build","","",33,{"inputs":[{"name":"itembuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"span","","",33,{"inputs":[{"name":"itembuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_attr","","",33,{"inputs":[{"name":"itembuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[11,"attr","","",33,{"inputs":[{"name":"itembuilder"}],"output":{"name":"attrbuilder"}}],[11,"pub_","","",33,{"inputs":[{"name":"itembuilder"}],"output":{"name":"self"}}],[11,"build_item_","","",33,{"inputs":[{"name":"itembuilder"},{"name":"t"},{"name":"item_"}],"output":{"name":"f"}}],[11,"fn_","","",33,{"inputs":[{"name":"itembuilder"},{"name":"t"}],"output":{"name":"fndeclbuilder"}}],[11,"build_use","","",33,{"inputs":[{"name":"itembuilder"},{"name":"viewpath_"}],"output":{"name":"f"}}],[11,"use_","","",33,{"inputs":[{"name":"itembuilder"}],"output":{"name":"pathbuilder"}}],[11,"struct_","","",33,{"inputs":[{"name":"itembuilder"},{"name":"t"}],"output":{"name":"itemstructbuilder"}}],[11,"tuple_struct","","",33,{"inputs":[{"name":"itembuilder"},{"name":"t"}],"output":{"name":"itemtuplestructbuilder"}}],[11,"enum_","","",33,{"inputs":[{"name":"itembuilder"},{"name":"t"}],"output":{"name":"itemenumbuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",33,{"inputs":[{"name":"itembuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",34,{"inputs":[{"name":"itemfndeclbuilder"},{"name":"p"}],"output":{"name":"itemfnbuilder"}}],[11,"unsafe_","","",35,{"inputs":[{"name":"itemfnbuilder"}],"output":{"name":"self"}}],[11,"abi","","",35,{"inputs":[{"name":"itemfnbuilder"},{"name":"abi"}],"output":{"name":"self"}}],[11,"generics","","",35,{"inputs":[{"name":"itemfnbuilder"}],"output":{"name":"genericsbuilder"}}],[11,"build","","",35,{"inputs":[{"name":"itemfnbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"block","","",35,{"inputs":[{"name":"itemfnbuilder"}],"output":{"name":"blockbuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",35,{"inputs":[{"name":"itemfnbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",35,{"inputs":[{"name":"itemfnbuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",36,{"inputs":[{"name":"itemusebuilder"},{"name":"path"}],"output":{"name":"itemusepathbuilder"}}],[11,"as_","","",37,{"inputs":[{"name":"itemusepathbuilder"},{"name":"t"}],"output":{"name":"f"}}],[11,"build","","",37,{"inputs":[{"name":"itemusepathbuilder"}],"output":{"name":"f"}}],[11,"glob","","",37,{"inputs":[{"name":"itemusepathbuilder"}],"output":{"name":"f"}}],[11,"list","","",37,{"inputs":[{"name":"itemusepathbuilder"}],"output":{"name":"itemusepathlistbuilder"}}],[11,"span","","",38,{"inputs":[{"name":"itemusepathlistbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"self_","","",38,{"inputs":[{"name":"itemusepathlistbuilder"}],"output":{"name":"self"}}],[11,"id","","",38,{"inputs":[{"name":"itemusepathlistbuilder"},{"name":"t"}],"output":{"name":"self"}}],[11,"build","","",38,{"inputs":[{"name":"itemusepathlistbuilder"}],"output":{"name":"f"}}],[11,"generics","","",39,{"inputs":[{"name":"itemstructbuilder"}],"output":{"name":"genericsbuilder"}}],[11,"with_field","","",39,{"inputs":[{"name":"itemstructbuilder"},{"name":"structfield"}],"output":{"name":"structdefbuilder"}}],[11,"field","","",39,{"inputs":[{"name":"itemstructbuilder"},{"name":"t"}],"output":{"name":"structfieldbuilder"}}],[11,"build","","",39,{"inputs":[{"name":"itemstructbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",39,{"inputs":[{"name":"itemstructbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",39,{"inputs":[{"name":"itemstructbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"generics","","",40,{"inputs":[{"name":"itemtuplestructbuilder"}],"output":{"name":"genericsbuilder"}}],[11,"with_tys","","",40,{"inputs":[{"name":"itemtuplestructbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"ty","","",40,{"inputs":[{"name":"itemtuplestructbuilder"}],"output":{"name":"tybuilder"}}],[11,"field","","",40,{"inputs":[{"name":"itemtuplestructbuilder"}],"output":{"name":"tybuilder"}}],[11,"build","","",40,{"inputs":[{"name":"itemtuplestructbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",40,{"inputs":[{"name":"itemtuplestructbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",40,{"inputs":[{"name":"itemtuplestructbuilder"},{"name":"p"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",40,{"inputs":[{"name":"itemtuplestructbuilder"},{"name":"structfield"}],"output":{"name":"self"}}],[11,"generics","","",41,{"inputs":[{"name":"itemenumbuilder"}],"output":{"name":"genericsbuilder"}}],[11,"with_variants","","",41,{"inputs":[{"name":"itemenumbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_variant","","",41,{"inputs":[{"name":"itemenumbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"with_variant_","","",41,{"inputs":[{"name":"itemenumbuilder"},{"name":"variant_"}],"output":{"name":"self"}}],[11,"ids","","",41,{"inputs":[{"name":"itemenumbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"id","","",41,{"inputs":[{"name":"itemenumbuilder"},{"name":"t"}],"output":{"name":"self"}}],[11,"tuple","","",41,{"inputs":[{"name":"itemenumbuilder"},{"name":"t"}],"output":{"name":"varianttuplebuilder"}}],[11,"struct_","","",41,{"inputs":[{"name":"itemenumbuilder"},{"name":"t"}],"output":{"name":"structdefbuilder"}}],[11,"variant","","",41,{"inputs":[{"name":"itemenumbuilder"},{"name":"t"}],"output":{"name":"variantbuilder"}}],[11,"build","","",41,{"inputs":[{"name":"itemenumbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",41,{"inputs":[{"name":"itemenumbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",41,{"inputs":[{"name":"itemenumbuilder"},{"name":"p"}],"output":{"name":"self"}}],[0,"lifetime","aster","",null,null],[3,"LifetimeDefBuilder","aster::lifetime","",null,null],[8,"IntoLifetime","","",null,null],[10,"into_lifetime","","",42,{"inputs":[{"name":"intolifetime"}],"output":{"name":"lifetime"}}],[8,"IntoLifetimeDef","","",null,null],[10,"into_lifetime_def","","",43,{"inputs":[{"name":"intolifetimedef"}],"output":{"name":"lifetimedef"}}],[11,"into_lifetime","syntax::ast","",44,{"inputs":[{"name":"lifetime"}],"output":{"name":"lifetime"}}],[11,"into_lifetime_def","","",45,{"inputs":[{"name":"lifetimedef"}],"output":{"name":"lifetimedef"}}],[11,"into_lifetime_def","","",44,{"inputs":[{"name":"lifetime"}],"output":{"name":"lifetimedef"}}],[11,"into_lifetime_def","collections::string","",30,{"inputs":[{"name":"string"}],"output":{"name":"lifetimedef"}}],[11,"new","aster::lifetime","",46,{"inputs":[{"name":"lifetimedefbuilder"},{"name":"n"}],"output":{"name":"self"}}],[11,"new_with_callback","","",46,{"inputs":[{"name":"lifetimedefbuilder"},{"name":"n"},{"name":"f"}],"output":{"name":"self"}}],[11,"bound","","",46,{"inputs":[{"name":"lifetimedefbuilder"},{"name":"n"}],"output":{"name":"self"}}],[11,"build","","",46,{"inputs":[{"name":"lifetimedefbuilder"}],"output":{"name":"f"}}],[0,"lit","aster","",null,null],[3,"LitBuilder","aster::lit","",null,null],[11,"new","","",47,{"inputs":[{"name":"litbuilder"}],"output":{"name":"litbuilder"}}],[11,"new_with_callback","","",47,{"inputs":[{"name":"litbuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",47,{"inputs":[{"name":"litbuilder"},{"name":"span"}],"output":{"name":"litbuilder"}}],[11,"build_lit","","",47,{"inputs":[{"name":"litbuilder"},{"name":"lit_"}],"output":{"name":"f"}}],[11,"bool","","",47,{"inputs":[{"name":"litbuilder"},{"name":"bool"}],"output":{"name":"f"}}],[11,"int","","",47,{"inputs":[{"name":"litbuilder"},{"name":"i64"}],"output":{"name":"f"}}],[11,"isize","","",47,{"inputs":[{"name":"litbuilder"},{"name":"isize"}],"output":{"name":"f"}}],[11,"i8","","",47,{"inputs":[{"name":"litbuilder"},{"name":"i8"}],"output":{"name":"f"}}],[11,"i16","","",47,{"inputs":[{"name":"litbuilder"},{"name":"i16"}],"output":{"name":"f"}}],[11,"i32","","",47,{"inputs":[{"name":"litbuilder"},{"name":"i32"}],"output":{"name":"f"}}],[11,"i64","","",47,{"inputs":[{"name":"litbuilder"},{"name":"i64"}],"output":{"name":"f"}}],[11,"usize","","",47,{"inputs":[{"name":"litbuilder"},{"name":"usize"}],"output":{"name":"f"}}],[11,"u8","","",47,{"inputs":[{"name":"litbuilder"},{"name":"u8"}],"output":{"name":"f"}}],[11,"u16","","",47,{"inputs":[{"name":"litbuilder"},{"name":"u16"}],"output":{"name":"f"}}],[11,"u32","","",47,{"inputs":[{"name":"litbuilder"},{"name":"u32"}],"output":{"name":"f"}}],[11,"u64","","",47,{"inputs":[{"name":"litbuilder"},{"name":"u64"}],"output":{"name":"f"}}],[11,"str","","",47,{"inputs":[{"name":"litbuilder"},{"name":"s"}],"output":{"name":"f"}}],[0,"method","aster","",null,null],[3,"MethodBuilder","aster::method","",null,null],[3,"MethodSelfBuilder","","",null,null],[3,"MethodSelfFnDeclBuilder","","",null,null],[3,"SelfBuilder","","",null,null],[11,"new","","",48,{"inputs":[{"name":"methodbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"new_with_callback","","",48,{"inputs":[{"name":"methodbuilder"},{"name":"i"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",48,{"inputs":[{"name":"methodbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"unsafe_","","",48,{"inputs":[{"name":"methodbuilder"}],"output":{"name":"self"}}],[11,"abi","","",48,{"inputs":[{"name":"methodbuilder"},{"name":"abi"}],"output":{"name":"self"}}],[11,"vis","","",48,{"inputs":[{"name":"methodbuilder"},{"name":"visibility"}],"output":{"name":"self"}}],[11,"generics","","",48,{"inputs":[{"name":"methodbuilder"}],"output":{"name":"genericsbuilder"}}],[11,"self_","","",48,{"inputs":[{"name":"methodbuilder"}],"output":{"name":"selfbuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",48,{"inputs":[{"name":"methodbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",48,{"inputs":[{"name":"methodbuilder"},{"name":"explicitself"}],"output":{"name":"methodselfbuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",49,{"inputs":[{"name":"methodselfbuilder"},{"name":"p"}],"output":{"name":"blockbuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",50,{"inputs":[{"name":"methodselffndeclbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"new_with_callback","","",51,{"inputs":[{"name":"selfbuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"build","","",51,{"inputs":[{"name":"selfbuilder"},{"name":"explicitself"}],"output":{"name":"f"}}],[11,"span","","",51,{"inputs":[{"name":"selfbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"build_self_","","",51,{"inputs":[{"name":"selfbuilder"},{"name":"explicitself_"}],"output":{"name":"f"}}],[11,"static_","","",51,{"inputs":[{"name":"selfbuilder"}],"output":{"name":"f"}}],[11,"value","","",51,{"inputs":[{"name":"selfbuilder"}],"output":{"name":"f"}}],[11,"ref_","","",51,{"inputs":[{"name":"selfbuilder"}],"output":{"name":"f"}}],[11,"ref_lifetime","","",51,{"inputs":[{"name":"selfbuilder"},{"name":"l"}],"output":{"name":"f"}}],[11,"ref_mut","","",51,{"inputs":[{"name":"selfbuilder"}],"output":{"name":"f"}}],[11,"ref_mut_lifetime","","",51,{"inputs":[{"name":"selfbuilder"},{"name":"l"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",51,{"inputs":[{"name":"selfbuilder"},{"name":"p"}],"output":{"name":"f"}}],[0,"name","aster","",null,null],[8,"ToName","aster::name","",null,null],[10,"to_name","","",52,{"inputs":[{"name":"toname"}],"output":{"name":"name"}}],[11,"to_name","syntax::ast","",29,{"inputs":[{"name":"name"}],"output":{"name":"name"}}],[0,"pat","aster","",null,null],[3,"PatBuilder","aster::pat","",null,null],[3,"PatEnumBuilder","","",null,null],[3,"PatEnumPathBuilder","","",null,null],[3,"PatStructBuilder","","",null,null],[3,"PatStructPathBuilder","","",null,null],[3,"PatStructFieldBuilder","","",null,null],[3,"PatExprBuilder","","",null,null],[3,"PatTupleBuilder","","",null,null],[11,"new","","",53,{"inputs":[{"name":"patbuilder"}],"output":{"name":"self"}}],[11,"new_with_callback","","",53,{"inputs":[{"name":"patbuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",53,{"inputs":[{"name":"patbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"build","","",53,{"inputs":[{"name":"patbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"build_pat_","","",53,{"inputs":[{"name":"patbuilder"},{"name":"pat_"}],"output":{"name":"f"}}],[11,"wild","","",53,{"inputs":[{"name":"patbuilder"}],"output":{"name":"f"}}],[11,"wild_multi","","",53,{"inputs":[{"name":"patbuilder"}],"output":{"name":"f"}}],[11,"build_id","","",53,{"inputs":[{"name":"patbuilder"},{"name":"bindingmode"},{"name":"i"},{"name":"option"}],"output":{"name":"f"}}],[11,"id","","",53,{"inputs":[{"name":"patbuilder"},{"name":"i"}],"output":{"name":"f"}}],[11,"mut_id","","",53,{"inputs":[{"name":"patbuilder"},{"name":"i"}],"output":{"name":"f"}}],[11,"ref_id","","",53,{"inputs":[{"name":"patbuilder"},{"name":"i"}],"output":{"name":"f"}}],[11,"ref_mut_id","","",53,{"inputs":[{"name":"patbuilder"},{"name":"i"}],"output":{"name":"f"}}],[11,"enum_","","",53,{"inputs":[{"name":"patbuilder"}],"output":{"name":"pathbuilder"}}],[11,"struct_","","",53,{"inputs":[{"name":"patbuilder"}],"output":{"name":"pathbuilder"}}],[11,"expr","","",53,{"inputs":[{"name":"patbuilder"}],"output":{"name":"exprbuilder"}}],[11,"tuple","","",53,{"inputs":[{"name":"patbuilder"}],"output":{"name":"pattuplebuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",54,{"inputs":[{"name":"patenumbuilder"},{"name":"path"}],"output":{"name":"patenumpathbuilder"}}],[11,"with_pats","","",55,{"inputs":[{"name":"patenumpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"pat","","",55,{"inputs":[{"name":"patenumpathbuilder"}],"output":{"name":"patbuilder"}}],[11,"with_ids","","",55,{"inputs":[{"name":"patenumpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"id","","",55,{"inputs":[{"name":"patenumpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"build","","",55,{"inputs":[{"name":"patenumpathbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",55,{"inputs":[{"name":"patenumpathbuilder"},{"name":"p"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",56,{"inputs":[{"name":"patstructbuilder"},{"name":"path"}],"output":{"name":"patstructpathbuilder"}}],[11,"with_field_pat","","",57,{"inputs":[{"name":"patstructpathbuilder"},{"name":"fieldpat"}],"output":{"name":"self"}}],[11,"with_pats","","",57,{"inputs":[{"name":"patstructpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"pat","","",57,{"inputs":[{"name":"patstructpathbuilder"},{"name":"i"}],"output":{"name":"patbuilder"}}],[11,"with_ids","","",57,{"inputs":[{"name":"patstructpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"id","","",57,{"inputs":[{"name":"patstructpathbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"etc","","",57,{"inputs":[{"name":"patstructpathbuilder"}],"output":{"name":"f"}}],[11,"build","","",57,{"inputs":[{"name":"patstructpathbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",58,{"inputs":[{"name":"patstructfieldbuilder"},{"name":"p"}],"output":{"name":"patstructpathbuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",59,{"inputs":[{"name":"patexprbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"with_pat","","",60,{"inputs":[{"name":"pattuplebuilder"},{"name":"p"}],"output":{"name":"pattuplebuilder"}}],[11,"pat","","",60,{"inputs":[{"name":"pattuplebuilder"}],"output":{"name":"patbuilder"}}],[11,"build","","",60,{"inputs":[{"name":"pattuplebuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",60,{"inputs":[{"name":"pattuplebuilder"},{"name":"p"}],"output":{"name":"self"}}],[0,"path","aster","",null,null],[3,"PathBuilder","aster::path","",null,null],[3,"PathSegmentsBuilder","","",null,null],[3,"PathSegmentBuilder","","",null,null],[8,"IntoPath","","",null,null],[10,"into_path","","",61,{"inputs":[{"name":"intopath"}],"output":{"name":"path"}}],[11,"into_path","syntax::ast","",62,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"into_path","","",28,{"inputs":[{"name":"ident"}],"output":{"name":"path"}}],[11,"into_path","collections::string","",30,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"new","aster::path","",63,{"inputs":[{"name":"pathbuilder"}],"output":{"name":"self"}}],[11,"new_with_callback","","",63,{"inputs":[{"name":"pathbuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"build","","",63,{"inputs":[{"name":"pathbuilder"},{"name":"path"}],"output":{"name":"f"}}],[11,"span","","Update the span to start from this location.",63,{"inputs":[{"name":"pathbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"global","","",63,{"inputs":[{"name":"pathbuilder"}],"output":{"name":"self"}}],[11,"ids","","",63,{"inputs":[{"name":"pathbuilder"},{"name":"i"}],"output":{"name":"pathsegmentsbuilder"}}],[11,"id","","",63,{"inputs":[{"name":"pathbuilder"},{"name":"i"}],"output":{"name":"pathsegmentsbuilder"}}],[11,"segment","","",63,{"inputs":[{"name":"pathbuilder"},{"name":"i"}],"output":{"name":"pathsegmentbuilder"}}],[11,"ids","","",64,{"inputs":[{"name":"pathsegmentsbuilder"},{"name":"i"}],"output":{"name":"pathsegmentsbuilder"}}],[11,"id","","",64,{"inputs":[{"name":"pathsegmentsbuilder"},{"name":"t"}],"output":{"name":"pathsegmentsbuilder"}}],[11,"segment","","",64,{"inputs":[{"name":"pathsegmentsbuilder"},{"name":"t"}],"output":{"name":"pathsegmentbuilder"}}],[11,"build","","",64,{"inputs":[{"name":"pathsegmentsbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",64,{"inputs":[{"name":"pathsegmentsbuilder"},{"name":"pathsegment"}],"output":{"name":"self"}}],[11,"new_with_callback","","",65,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"i"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",65,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_generics","","",65,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"generics"}],"output":{"name":"self"}}],[11,"with_lifetimes","","",65,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_lifetime","","",65,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"l"}],"output":{"name":"self"}}],[11,"lifetime","","",65,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"n"}],"output":{"name":"self"}}],[11,"with_tys","","",65,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_ty","","",65,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"ty","","",65,{"inputs":[{"name":"pathsegmentbuilder"}],"output":{"name":"tybuilder"}}],[11,"build","","",65,{"inputs":[{"name":"pathsegmentbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",65,{"inputs":[{"name":"pathsegmentbuilder"},{"name":"p"}],"output":{"name":"self"}}],[0,"qpath","aster","",null,null],[3,"QPathBuilder","aster::qpath","",null,null],[3,"QPathTyBuilder","","",null,null],[3,"QPathQSelfBuilder","","",null,null],[11,"new","","",66,{"inputs":[{"name":"qpathbuilder"}],"output":{"name":"self"}}],[11,"new_with_callback","","Construct a `QPathBuilder` that will call the `callback` with a constructed `ast::QSelf`\nand `ast::Path`.",66,{"inputs":[{"name":"qpathbuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","Update the span to start from this location.",66,{"inputs":[{"name":"qpathbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"ty","","Build a qualified path first by starting with a type builder.",66,{"inputs":[{"name":"qpathbuilder"}],"output":{"name":"tybuilder"}}],[11,"build","","Build a qualified path with a concrete type and path.",66,{"inputs":[{"name":"qpathbuilder"},{"name":"qself"},{"name":"path"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",66,{"inputs":[{"name":"qpathbuilder"},{"name":"p"}],"output":{"name":"qpathtybuilder"}}],[11,"as_","","Build a qualified path with a path builder.",67,{"inputs":[{"name":"qpathtybuilder"}],"output":{"name":"pathbuilder"}}],[11,"id","","",67,{"inputs":[{"name":"qpathtybuilder"},{"name":"t"}],"output":{"name":"f"}}],[11,"segment","","",67,{"inputs":[{"name":"qpathtybuilder"},{"name":"t"}],"output":{"name":"pathsegmentbuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",67,{"inputs":[{"name":"qpathtybuilder"},{"name":"path"}],"output":{"name":"qpathqselfbuilder"}}],[11,"id","","",68,{"inputs":[{"name":"qpathqselfbuilder"},{"name":"t"}],"output":{"name":"f"}}],[11,"segment","","",68,{"inputs":[{"name":"qpathqselfbuilder"},{"name":"t"}],"output":{"name":"pathsegmentbuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",68,{"inputs":[{"name":"qpathqselfbuilder"},{"name":"pathsegment"}],"output":{"name":"f"}}],[0,"stmt","aster","",null,null],[3,"StmtBuilder","aster::stmt","",null,null],[3,"StmtLetIdBuilder","","",null,null],[3,"StmtExprBuilder","","",null,null],[3,"StmtSemiBuilder","","",null,null],[3,"StmtLetBuilder","","",null,null],[3,"StmtLetTyBuilder","","",null,null],[3,"StmtItemBuilder","","",null,null],[11,"new","","",69,{"inputs":[{"name":"stmtbuilder"}],"output":{"name":"stmtbuilder"}}],[11,"new_with_callback","","",69,{"inputs":[{"name":"stmtbuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"build","","",69,{"inputs":[{"name":"stmtbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"span","","",69,{"inputs":[{"name":"stmtbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"build_stmt_","","",69,{"inputs":[{"name":"stmtbuilder"},{"name":"stmt_"}],"output":{"name":"f"}}],[11,"build_let","","",69,{"inputs":[{"name":"stmtbuilder"},{"name":"p"},{"name":"option"},{"name":"option"}],"output":{"name":"f"}}],[11,"let_","","",69,{"inputs":[{"name":"stmtbuilder"}],"output":{"name":"patbuilder"}}],[11,"let_id","","",69,{"inputs":[{"name":"stmtbuilder"},{"name":"i"}],"output":{"name":"exprbuilder"}}],[11,"build_expr","","",69,{"inputs":[{"name":"stmtbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"expr","","",69,{"inputs":[{"name":"stmtbuilder"}],"output":{"name":"exprbuilder"}}],[11,"semi","","",69,{"inputs":[{"name":"stmtbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build_item","","",69,{"inputs":[{"name":"stmtbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"item","","",69,{"inputs":[{"name":"stmtbuilder"}],"output":{"name":"itembuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",69,{"inputs":[{"name":"stmtbuilder"},{"name":"p"}],"output":{"name":"stmtletbuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",70,{"inputs":[{"name":"stmtletidbuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",71,{"inputs":[{"name":"stmtexprbuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",72,{"inputs":[{"name":"stmtsemibuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"ty","","",73,{"inputs":[{"name":"stmtletbuilder"}],"output":{"name":"tybuilder"}}],[11,"build_expr","","",73,{"inputs":[{"name":"stmtletbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"expr","","",73,{"inputs":[{"name":"stmtletbuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",73,{"inputs":[{"name":"stmtletbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",73,{"inputs":[{"name":"stmtletbuilder"},{"name":"p"}],"output":{"name":"stmtlettybuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",73,{"inputs":[{"name":"stmtletbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"expr","","",74,{"inputs":[{"name":"stmtlettybuilder"}],"output":{"name":"exprbuilder"}}],[11,"build","","",74,{"inputs":[{"name":"stmtlettybuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",74,{"inputs":[{"name":"stmtlettybuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",75,{"inputs":[{"name":"stmtitembuilder"},{"name":"p"}],"output":{"name":"f"}}],[0,"str","aster","",null,null],[8,"ToInternedString","aster::str","",null,null],[10,"to_interned_string","","",76,{"inputs":[{"name":"tointernedstring"}],"output":{"name":"internedstring"}}],[11,"to_interned_string","syntax::parse::token","",77,{"inputs":[{"name":"internedstring"}],"output":{"name":"internedstring"}}],[11,"to_interned_string","syntax::ast","",28,{"inputs":[{"name":"ident"}],"output":{"name":"internedstring"}}],[11,"to_interned_string","","",29,{"inputs":[{"name":"name"}],"output":{"name":"internedstring"}}],[0,"struct_def","aster","",null,null],[3,"StructDefBuilder","aster::struct_def","",null,null],[3,"StructFieldBuilder","","",null,null],[11,"new","","",78,{"inputs":[{"name":"structdefbuilder"}],"output":{"name":"self"}}],[11,"new_with_callback","","",78,{"inputs":[{"name":"structdefbuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",78,{"inputs":[{"name":"structdefbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_field","","",78,{"inputs":[{"name":"structdefbuilder"},{"name":"structfield"}],"output":{"name":"self"}}],[11,"field","","",78,{"inputs":[{"name":"structdefbuilder"},{"name":"t"}],"output":{"name":"structfieldbuilder"}}],[11,"build","","",78,{"inputs":[{"name":"structdefbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",78,{"inputs":[{"name":"structdefbuilder"},{"name":"structfield"}],"output":{"name":"self"}}],[11,"named","","",79,{"inputs":[{"name":"structfieldbuilder"},{"name":"t"}],"output":{"name":"self"}}],[11,"unnamed","","",79,{"inputs":[{"name":"structfieldbuilder"}],"output":{"name":"self"}}],[11,"named_with_callback","","",79,{"inputs":[{"name":"structfieldbuilder"},{"name":"t"},{"name":"f"}],"output":{"name":"self"}}],[11,"unnamed_with_callback","","",79,{"inputs":[{"name":"structfieldbuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",79,{"inputs":[{"name":"structfieldbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"pub_","","",79,{"inputs":[{"name":"structfieldbuilder"}],"output":{"name":"self"}}],[11,"attr","","",79,{"inputs":[{"name":"structfieldbuilder"}],"output":{"name":"attrbuilder"}}],[11,"build_ty","","",79,{"inputs":[{"name":"structfieldbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"ty","","",79,{"inputs":[{"name":"structfieldbuilder"}],"output":{"name":"tybuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",79,{"inputs":[{"name":"structfieldbuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[6,"Result","","",null,null],[11,"invoke","","",79,{"inputs":[{"name":"structfieldbuilder"},{"name":"p"}],"output":{"name":"f"}}],[0,"ty","aster","",null,null],[3,"TyBuilder","aster::ty","",null,null],[3,"TyPathBuilder","","",null,null],[3,"TyQPathBuilder","","",null,null],[3,"TySliceBuilder","","",null,null],[3,"TyRefBuilder","","",null,null],[3,"TyOptionBuilder","","",null,null],[3,"TyResultOkBuilder","","",null,null],[3,"TyResultErrBuilder","","",null,null],[3,"TyPhantomDataBuilder","","",null,null],[3,"TyTupleBuilder","","",null,null],[11,"new","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"self"}}],[11,"new_with_callback","","",80,{"inputs":[{"name":"tybuilder"},{"name":"f"}],"output":{"name":"self"}}],[11,"build","","",80,{"inputs":[{"name":"tybuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"span","","",80,{"inputs":[{"name":"tybuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"build_ty_","","",80,{"inputs":[{"name":"tybuilder"},{"name":"ty_"}],"output":{"name":"f"}}],[11,"id","","",80,{"inputs":[{"name":"tybuilder"},{"name":"i"}],"output":{"name":"f"}}],[11,"build_path","","",80,{"inputs":[{"name":"tybuilder"},{"name":"path"}],"output":{"name":"f"}}],[11,"build_qpath","","",80,{"inputs":[{"name":"tybuilder"},{"name":"qself"},{"name":"path"}],"output":{"name":"f"}}],[11,"path","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"pathbuilder"}}],[11,"qpath","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"qpathbuilder"}}],[11,"isize","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"f"}}],[11,"i8","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"f"}}],[11,"i16","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"f"}}],[11,"i32","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"f"}}],[11,"i64","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"f"}}],[11,"usize","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"f"}}],[11,"u8","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"f"}}],[11,"u16","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"f"}}],[11,"u32","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"f"}}],[11,"u64","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"f"}}],[11,"unit","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"f"}}],[11,"tuple","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"tytuplebuilder"}}],[11,"build_slice","","",80,{"inputs":[{"name":"tybuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"slice","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"tybuilder"}}],[11,"ref_","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"tyrefbuilder"}}],[11,"infer","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"f"}}],[11,"option","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"tybuilder"}}],[11,"result","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"tybuilder"}}],[11,"phantom_data","","",80,{"inputs":[{"name":"tybuilder"}],"output":{"name":"tybuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",81,{"inputs":[{"name":"typathbuilder"},{"name":"path"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",82,null],[6,"Result","","",null,null],[11,"invoke","","",83,{"inputs":[{"name":"tyslicebuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"mut_","","",84,{"inputs":[{"name":"tyrefbuilder"}],"output":{"name":"self"}}],[11,"lifetime","","",84,{"inputs":[{"name":"tyrefbuilder"},{"name":"n"}],"output":{"name":"self"}}],[11,"build_ty","","",84,{"inputs":[{"name":"tyrefbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"ty","","",84,{"inputs":[{"name":"tyrefbuilder"}],"output":{"name":"tybuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",84,{"inputs":[{"name":"tyrefbuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",85,{"inputs":[{"name":"tyoptionbuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",86,{"inputs":[{"name":"tyresultokbuilder"},{"name":"p"}],"output":{"name":"tybuilder"}}],[6,"Result","","",null,null],[11,"invoke","","",87,{"inputs":[{"name":"tyresulterrbuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",88,{"inputs":[{"name":"typhantomdatabuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"with_tys","","",89,{"inputs":[{"name":"tytuplebuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_ty","","",89,{"inputs":[{"name":"tytuplebuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"ty","","",89,{"inputs":[{"name":"tytuplebuilder"}],"output":{"name":"tybuilder"}}],[11,"build","","",89,{"inputs":[{"name":"tytuplebuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",89,{"inputs":[{"name":"tytuplebuilder"},{"name":"p"}],"output":{"name":"self"}}],[0,"ty_param","aster","",null,null],[3,"TyParamBuilder","aster::ty_param","",null,null],[3,"PolyTraitRefBuilder","","",null,null],[11,"new","","",90,{"inputs":[{"name":"typarambuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"from_ty_param","","",90,{"inputs":[{"name":"typarambuilder"},{"name":"typaram"}],"output":{"name":"self"}}],[11,"new_with_callback","","",90,{"inputs":[{"name":"typarambuilder"},{"name":"i"},{"name":"f"}],"output":{"name":"self"}}],[11,"from_ty_param_with_callback","","",90,{"inputs":[{"name":"typarambuilder"},{"name":"f"},{"name":"typaram"}],"output":{"name":"self"}}],[11,"span","","",90,{"inputs":[{"name":"typarambuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_default","","",90,{"inputs":[{"name":"typarambuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"with_trait_bound","","",90,{"inputs":[{"name":"typarambuilder"},{"name":"polytraitref"}],"output":{"name":"self"}}],[11,"trait_bound","","",90,{"inputs":[{"name":"typarambuilder"},{"name":"p"}],"output":{"name":"polytraitrefbuilder"}}],[11,"lifetime_bound","","",90,{"inputs":[{"name":"typarambuilder"},{"name":"l"}],"output":{"name":"self"}}],[11,"build","","",90,{"inputs":[{"name":"typarambuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",90,{"inputs":[{"name":"typarambuilder"},{"name":"polytraitref"}],"output":{"name":"self"}}],[11,"new_with_callback","","",91,{"inputs":[{"name":"polytraitrefbuilder"},{"name":"p"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",91,{"inputs":[{"name":"polytraitrefbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"with_lifetime","","",91,{"inputs":[{"name":"polytraitrefbuilder"},{"name":"l"}],"output":{"name":"self"}}],[11,"lifetime","","",91,{"inputs":[{"name":"polytraitrefbuilder"},{"name":"n"}],"output":{"name":"lifetimedefbuilder"}}],[11,"build","","",91,{"inputs":[{"name":"polytraitrefbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",91,{"inputs":[{"name":"polytraitrefbuilder"},{"name":"lifetimedef"}],"output":{"name":"self"}}],[0,"variant","aster","",null,null],[3,"VariantBuilder","aster::variant","",null,null],[3,"VariantTupleBuilder","","",null,null],[3,"VariantStructBuilder","","",null,null],[11,"new","","",92,{"inputs":[{"name":"variantbuilder"},{"name":"t"}],"output":{"name":"self"}}],[11,"new_with_callback","","",92,{"inputs":[{"name":"variantbuilder"},{"name":"t"},{"name":"f"}],"output":{"name":"self"}}],[11,"span","","",92,{"inputs":[{"name":"variantbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"attr","","",92,{"inputs":[{"name":"variantbuilder"}],"output":{"name":"attrbuilder"}}],[11,"tuple","","",92,{"inputs":[{"name":"variantbuilder"}],"output":{"name":"varianttuplebuilder"}}],[11,"struct_","","",92,{"inputs":[{"name":"variantbuilder"}],"output":{"name":"structdefbuilder"}}],[11,"build_variant_kind","","",92,{"inputs":[{"name":"variantbuilder"},{"name":"variantkind"}],"output":{"name":"f"}}],[11,"build_variant_","","",92,{"inputs":[{"name":"variantbuilder"},{"name":"variant_"}],"output":{"name":"f"}}],[11,"build","","",92,{"inputs":[{"name":"variantbuilder"},{"name":"p"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",92,{"inputs":[{"name":"variantbuilder"},{"name":"attribute"}],"output":{"name":"self"}}],[11,"with_tys","","",93,{"inputs":[{"name":"varianttuplebuilder"},{"name":"i"}],"output":{"name":"self"}}],[11,"with_ty","","",93,{"inputs":[{"name":"varianttuplebuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"ty","","",93,{"inputs":[{"name":"varianttuplebuilder"}],"output":{"name":"tybuilder"}}],[11,"build","","",93,{"inputs":[{"name":"varianttuplebuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",93,{"inputs":[{"name":"varianttuplebuilder"},{"name":"p"}],"output":{"name":"self"}}],[11,"with_field","","",94,{"inputs":[{"name":"variantstructbuilder"},{"name":"structfield"}],"output":{"name":"structdefbuilder"}}],[11,"field","","",94,{"inputs":[{"name":"variantstructbuilder"},{"name":"t"}],"output":{"name":"structfieldbuilder"}}],[11,"build","","",94,{"inputs":[{"name":"variantstructbuilder"}],"output":{"name":"f"}}],[6,"Result","","",null,null],[11,"invoke","","",94,{"inputs":[{"name":"variantstructbuilder"},{"name":"p"}],"output":{"name":"f"}}],[11,"clone","aster","",95,{"inputs":[{"name":"astbuilder"}],"output":{"name":"astbuilder"}}],[11,"new","","",95,{"inputs":[{"name":"astbuilder"}],"output":{"name":"astbuilder"}}],[11,"span","","",95,{"inputs":[{"name":"astbuilder"},{"name":"span"}],"output":{"name":"self"}}],[11,"interned_string","","",95,{"inputs":[{"name":"astbuilder"},{"name":"s"}],"output":{"name":"internedstring"}}],[11,"id","","",95,{"inputs":[{"name":"astbuilder"},{"name":"i"}],"output":{"name":"ident"}}],[11,"name","","",95,{"inputs":[{"name":"astbuilder"},{"name":"n"}],"output":{"name":"name"}}],[11,"lifetime","","",95,{"inputs":[{"name":"astbuilder"},{"name":"l"}],"output":{"name":"lifetime"}}],[11,"attr","","",95,{"inputs":[{"name":"astbuilder"}],"output":{"name":"attrbuilder"}}],[11,"path","","",95,{"inputs":[{"name":"astbuilder"}],"output":{"name":"pathbuilder"}}],[11,"ty","","",95,{"inputs":[{"name":"astbuilder"}],"output":{"name":"tybuilder"}}],[11,"lifetime_def","","",95,{"inputs":[{"name":"astbuilder"},{"name":"n"}],"output":{"name":"lifetimedefbuilder"}}],[11,"ty_param","","",95,{"inputs":[{"name":"astbuilder"},{"name":"i"}],"output":{"name":"typarambuilder"}}],[11,"from_ty_param","","",95,{"inputs":[{"name":"astbuilder"},{"name":"typaram"}],"output":{"name":"typarambuilder"}}],[11,"generics","","",95,{"inputs":[{"name":"astbuilder"}],"output":{"name":"genericsbuilder"}}],[11,"from_generics","","",95,{"inputs":[{"name":"astbuilder"},{"name":"generics"}],"output":{"name":"genericsbuilder"}}],[11,"lit","","",95,{"inputs":[{"name":"astbuilder"}],"output":{"name":"litbuilder"}}],[11,"expr","","",95,{"inputs":[{"name":"astbuilder"}],"output":{"name":"exprbuilder"}}],[11,"stmt","","",95,{"inputs":[{"name":"astbuilder"}],"output":{"name":"stmtbuilder"}}],[11,"block","","",95,{"inputs":[{"name":"astbuilder"}],"output":{"name":"blockbuilder"}}],[11,"pat","","",95,{"inputs":[{"name":"astbuilder"}],"output":{"name":"patbuilder"}}],[11,"fn_decl","","",95,{"inputs":[{"name":"astbuilder"}],"output":{"name":"fndeclbuilder"}}],[11,"method","","",95,{"inputs":[{"name":"astbuilder"},{"name":"i"}],"output":{"name":"methodbuilder"}}],[11,"arg","","",95,{"inputs":[{"name":"astbuilder"},{"name":"i"}],"output":{"name":"argbuilder"}}],[11,"struct_def","","",95,{"inputs":[{"name":"astbuilder"}],"output":{"name":"structdefbuilder"}}],[11,"variant","","",95,{"inputs":[{"name":"astbuilder"},{"name":"t"}],"output":{"name":"variantbuilder"}}],[11,"item","","",95,{"inputs":[{"name":"astbuilder"}],"output":{"name":"itembuilder"}}]],"paths":[[3,"AttrBuilder"],[3,"AttrListBuilder"],[3,"AttrNameValueBuilder"],[3,"BlockBuilder"],[3,"ExprBuilder"],[3,"ExprUnaryBuilder"],[3,"ExprBinaryLhsBuilder"],[3,"ExprBinaryRhsBuilder"],[3,"ExprTupleBuilder"],[3,"ExprStructBuilder"],[3,"ExprStructPathBuilder"],[3,"ExprStructFieldBuilder"],[3,"ExprCallBuilder"],[3,"ExprCallArgsBuilder"],[3,"ExprMethodCallBuilder"],[3,"ExprMethodCallArgsBuilder"],[3,"ExprAddrOfBuilder"],[3,"ExprPathBuilder"],[3,"ExprParenBuilder"],[3,"ExprFieldBuilder"],[3,"ExprTupFieldBuilder"],[3,"ExprSliceBuilder"],[3,"ExprVecBuilder"],[3,"FnDeclBuilder"],[3,"ArgBuilder"],[3,"ArgTyBuilder"],[3,"GenericsBuilder"],[8,"ToIdent"],[3,"Ident"],[3,"Name"],[3,"String"],[8,"Invoke"],[3,"Identity"],[3,"ItemBuilder"],[3,"ItemFnDeclBuilder"],[3,"ItemFnBuilder"],[3,"ItemUseBuilder"],[3,"ItemUsePathBuilder"],[3,"ItemUsePathListBuilder"],[3,"ItemStructBuilder"],[3,"ItemTupleStructBuilder"],[3,"ItemEnumBuilder"],[8,"IntoLifetime"],[8,"IntoLifetimeDef"],[3,"Lifetime"],[3,"LifetimeDef"],[3,"LifetimeDefBuilder"],[3,"LitBuilder"],[3,"MethodBuilder"],[3,"MethodSelfBuilder"],[3,"MethodSelfFnDeclBuilder"],[3,"SelfBuilder"],[8,"ToName"],[3,"PatBuilder"],[3,"PatEnumBuilder"],[3,"PatEnumPathBuilder"],[3,"PatStructBuilder"],[3,"PatStructPathBuilder"],[3,"PatStructFieldBuilder"],[3,"PatExprBuilder"],[3,"PatTupleBuilder"],[8,"IntoPath"],[3,"Path"],[3,"PathBuilder"],[3,"PathSegmentsBuilder"],[3,"PathSegmentBuilder"],[3,"QPathBuilder"],[3,"QPathTyBuilder"],[3,"QPathQSelfBuilder"],[3,"StmtBuilder"],[3,"StmtLetIdBuilder"],[3,"StmtExprBuilder"],[3,"StmtSemiBuilder"],[3,"StmtLetBuilder"],[3,"StmtLetTyBuilder"],[3,"StmtItemBuilder"],[8,"ToInternedString"],[3,"InternedString"],[3,"StructDefBuilder"],[3,"StructFieldBuilder"],[3,"TyBuilder"],[3,"TyPathBuilder"],[3,"TyQPathBuilder"],[3,"TySliceBuilder"],[3,"TyRefBuilder"],[3,"TyOptionBuilder"],[3,"TyResultOkBuilder"],[3,"TyResultErrBuilder"],[3,"TyPhantomDataBuilder"],[3,"TyTupleBuilder"],[3,"TyParamBuilder"],[3,"PolyTraitRefBuilder"],[3,"VariantBuilder"],[3,"VariantTupleBuilder"],[3,"VariantStructBuilder"],[3,"AstBuilder"]]};
searchIndex['quasi'] = {"items":[[0,"","quasi","",null,null],[5,"new_parser_from_tts","","",null,{"inputs":[{"name":"parsesess"},{"name":"vec"},{"name":"vec"}],"output":{"name":"parser"}}],[11,"new","syntax::util::interner","",0,{"inputs":[{"name":"interner"}],"output":{"name":"interner"}}],[11,"prefill","","",0,null],[11,"intern","","",0,{"inputs":[{"name":"interner"},{"name":"t"}],"output":{"name":"name"}}],[11,"gensym","","",0,{"inputs":[{"name":"interner"},{"name":"t"}],"output":{"name":"name"}}],[11,"get","","",0,{"inputs":[{"name":"interner"},{"name":"name"}],"output":{"name":"t"}}],[11,"len","","",0,{"inputs":[{"name":"interner"}],"output":{"name":"usize"}}],[11,"find","","",0,{"inputs":[{"name":"interner"},{"name":"q"}],"output":{"name":"option"}}],[11,"clear","","",0,null],[11,"partial_cmp","","",1,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"eq","","",1,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"rcstr"}],"output":{"name":"rcstr"}}],[11,"new","","",1,{"inputs":[{"name":"rcstr"},{"name":"str"}],"output":{"name":"rcstr"}}],[11,"cmp","","",1,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"ordering"}}],[11,"fmt","","",1,{"inputs":[{"name":"rcstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"rcstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",1,{"inputs":[{"name":"rcstr"}],"output":{"name":"str"}}],[6,"Target","quasi","",null,null],[11,"deref","syntax::util::interner","",1,{"inputs":[{"name":"rcstr"}],"output":{"name":"str"}}],[11,"new","","",2,{"inputs":[{"name":"strinterner"}],"output":{"name":"strinterner"}}],[11,"prefill","","",2,null],[11,"intern","","",2,{"inputs":[{"name":"strinterner"},{"name":"str"}],"output":{"name":"name"}}],[11,"gensym","","",2,{"inputs":[{"name":"strinterner"},{"name":"str"}],"output":{"name":"name"}}],[11,"gensym_copy","","Create a gensym with the same name as an existing\nentry.",2,{"inputs":[{"name":"strinterner"},{"name":"name"}],"output":{"name":"name"}}],[11,"get","","",2,{"inputs":[{"name":"strinterner"},{"name":"name"}],"output":{"name":"rcstr"}}],[11,"len","","",2,{"inputs":[{"name":"strinterner"}],"output":{"name":"usize"}}],[11,"find","","",2,{"inputs":[{"name":"strinterner"},{"name":"q"}],"output":{"name":"option"}}],[11,"clear","","",2,null],[11,"reset","","",2,null],[11,"from_iter","syntax::util::small_vector","",3,{"inputs":[{"name":"smallvector"},{"name":"i"}],"output":{"name":"smallvector"}}],[11,"extend","","",3,null],[11,"zero","","",3,{"inputs":[{"name":"smallvector"}],"output":{"name":"smallvector"}}],[11,"one","","",3,{"inputs":[{"name":"smallvector"},{"name":"t"}],"output":{"name":"smallvector"}}],[11,"many","","",3,{"inputs":[{"name":"smallvector"},{"name":"vec"}],"output":{"name":"smallvector"}}],[11,"as_slice","","",3,null],[11,"pop","","",3,{"inputs":[{"name":"smallvector"}],"output":{"name":"option"}}],[11,"push","","",3,null],[11,"push_all","","",3,null],[11,"get","","",3,{"inputs":[{"name":"smallvector"},{"name":"usize"}],"output":{"name":"t"}}],[11,"expect_one","","",3,{"inputs":[{"name":"smallvector"},{"name":"str"}],"output":{"name":"t"}}],[11,"move_iter","","Deprecated: use `into_iter`.",3,{"inputs":[{"name":"smallvector"}],"output":{"name":"intoiter"}}],[11,"into_iter","","",3,{"inputs":[{"name":"smallvector"}],"output":{"name":"intoiter"}}],[11,"len","","",3,{"inputs":[{"name":"smallvector"}],"output":{"name":"usize"}}],[11,"is_empty","","",3,{"inputs":[{"name":"smallvector"}],"output":{"name":"bool"}}],[6,"Item","quasi","",null,null],[11,"next","syntax::util::small_vector","",4,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"move_map","","",3,{"inputs":[{"name":"smallvector"},{"name":"f"}],"output":{"name":"smallvector"}}],[11,"clone","syntax::diagnostics::registry","",5,{"inputs":[{"name":"registry"}],"output":{"name":"registry"}}],[11,"new","","",5,null],[11,"find_description","","",5,{"inputs":[{"name":"registry"},{"name":"str"}],"output":{"name":"option"}}],[11,"encode","syntax::diagnostics::metadata","",6,{"inputs":[{"name":"errormetadata"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"errormetadata"},{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"errormetadata"},{"name":"errormetadata"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"errormetadata"},{"name":"errormetadata"}],"output":{"name":"bool"}}],[11,"encode","","",7,{"inputs":[{"name":"errorlocation"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",7,{"inputs":[{"name":"errorlocation"},{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"errorlocation"},{"name":"errorlocation"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"errorlocation"},{"name":"errorlocation"}],"output":{"name":"bool"}}],[11,"from_span","","Create an error location from a span.",7,{"inputs":[{"name":"errorlocation"},{"name":"extctxt"},{"name":"span"}],"output":{"name":"errorlocation"}}],[11,"clone","syntax::ext::base","",8,{"inputs":[{"name":"annotatable"}],"output":{"name":"annotatable"}}],[11,"fmt","","",8,{"inputs":[{"name":"annotatable"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"attrs","","",8,null],[11,"fold_attrs","","",8,{"inputs":[{"name":"annotatable"},{"name":"vec"}],"output":{"name":"annotatable"}}],[11,"expect_item","","",8,{"inputs":[{"name":"annotatable"}],"output":{"name":"p"}}],[11,"expect_trait_item","","",8,{"inputs":[{"name":"annotatable"}],"output":{"name":"p"}}],[11,"expect_impl_item","","",8,{"inputs":[{"name":"annotatable"}],"output":{"name":"p"}}],[11,"default","","",9,{"inputs":[{"name":"maceager"}],"output":{"name":"maceager"}}],[11,"expr","","",9,{"inputs":[{"name":"maceager"},{"name":"p"}],"output":{"name":"box"}}],[11,"pat","","",9,{"inputs":[{"name":"maceager"},{"name":"p"}],"output":{"name":"box"}}],[11,"items","","",9,{"inputs":[{"name":"maceager"},{"name":"smallvector"}],"output":{"name":"box"}}],[11,"impl_items","","",9,{"inputs":[{"name":"maceager"},{"name":"smallvector"}],"output":{"name":"box"}}],[11,"stmts","","",9,{"inputs":[{"name":"maceager"},{"name":"smallvector"}],"output":{"name":"box"}}],[11,"make_expr","","",9,{"inputs":[{"name":"maceager"}],"output":{"name":"option"}}],[11,"make_items","","",9,{"inputs":[{"name":"maceager"}],"output":{"name":"option"}}],[11,"make_impl_items","","",9,{"inputs":[{"name":"maceager"}],"output":{"name":"option"}}],[11,"make_stmts","","",9,{"inputs":[{"name":"maceager"}],"output":{"name":"option"}}],[11,"make_pat","","",9,{"inputs":[{"name":"maceager"}],"output":{"name":"option"}}],[11,"clone","","",10,{"inputs":[{"name":"dummyresult"}],"output":{"name":"dummyresult"}}],[11,"any","","Create a default MacResult that can be anything.",10,{"inputs":[{"name":"dummyresult"},{"name":"span"}],"output":{"name":"box"}}],[11,"expr","","Create a default MacResult that can only be an expression.",10,{"inputs":[{"name":"dummyresult"},{"name":"span"}],"output":{"name":"box"}}],[11,"raw_expr","","A plain dummy expression.",10,{"inputs":[{"name":"dummyresult"},{"name":"span"}],"output":{"name":"p"}}],[11,"raw_pat","","A plain dummy pattern.",10,{"inputs":[{"name":"dummyresult"},{"name":"span"}],"output":{"name":"pat"}}],[11,"make_expr","","",10,{"inputs":[{"name":"dummyresult"}],"output":{"name":"option"}}],[11,"make_pat","","",10,{"inputs":[{"name":"dummyresult"}],"output":{"name":"option"}}],[11,"make_items","","",10,{"inputs":[{"name":"dummyresult"}],"output":{"name":"option"}}],[11,"make_impl_items","","",10,{"inputs":[{"name":"dummyresult"}],"output":{"name":"option"}}],[11,"make_stmts","","",10,{"inputs":[{"name":"dummyresult"}],"output":{"name":"option"}}],[11,"new","","",11,{"inputs":[{"name":"blockinfo"}],"output":{"name":"blockinfo"}}],[11,"new","","",12,{"inputs":[{"name":"extctxt"},{"name":"parsesess"},{"name":"vec"},{"name":"expansionconfig"}],"output":{"name":"extctxt"}}],[11,"expand_expr","","",12,{"inputs":[{"name":"extctxt"},{"name":"p"}],"output":{"name":"p"}}],[11,"expander","","Returns a `Folder` for deeply expanding all macros in a AST node.",12,{"inputs":[{"name":"extctxt"}],"output":{"name":"macroexpander"}}],[11,"new_parser_from_tts","","",12,null],[11,"codemap","","",12,{"inputs":[{"name":"extctxt"}],"output":{"name":"codemap"}}],[11,"parse_sess","","",12,{"inputs":[{"name":"extctxt"}],"output":{"name":"parsesess"}}],[11,"cfg","","",12,{"inputs":[{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"call_site","","",12,{"inputs":[{"name":"extctxt"}],"output":{"name":"span"}}],[11,"backtrace","","",12,{"inputs":[{"name":"extctxt"}],"output":{"name":"expnid"}}],[11,"original_span","","",12,{"inputs":[{"name":"extctxt"}],"output":{"name":"span"}}],[11,"original_span_in_file","","",12,{"inputs":[{"name":"extctxt"}],"output":{"name":"span"}}],[11,"mod_push","","",12,null],[11,"mod_pop","","",12,null],[11,"mod_path","","",12,{"inputs":[{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"bt_push","","",12,null],[11,"bt_pop","","",12,null],[11,"insert_macro","","",12,null],[11,"span_fatal","","Emit `msg` attached to `sp`, and stop compilation immediately.",12,null],[11,"span_err","","Emit `msg` attached to `sp`, without immediately stopping\ncompilation.",12,null],[11,"span_warn","","",12,null],[11,"span_unimpl","","",12,null],[11,"span_bug","","",12,null],[11,"span_note","","",12,null],[11,"span_help","","",12,null],[11,"fileline_help","","",12,null],[11,"bug","","",12,null],[11,"trace_macros","","",12,{"inputs":[{"name":"extctxt"}],"output":{"name":"bool"}}],[11,"set_trace_macros","","",12,null],[11,"ident_of","","",12,{"inputs":[{"name":"extctxt"},{"name":"str"}],"output":{"name":"ident"}}],[11,"ident_of_std","","",12,{"inputs":[{"name":"extctxt"},{"name":"str"}],"output":{"name":"ident"}}],[11,"name_of","","",12,{"inputs":[{"name":"extctxt"},{"name":"str"}],"output":{"name":"name"}}],[11,"push_frame","","",13,null],[11,"pop_frame","","",13,null],[11,"find","","",13,{"inputs":[{"name":"syntaxenv"},{"name":"name"}],"output":{"name":"option"}}],[11,"insert","","",13,null],[11,"info","","",13,{"inputs":[{"name":"syntaxenv"}],"output":{"name":"blockinfo"}}],[11,"path","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"}],"output":{"name":"path"}}],[11,"path_ident","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"}],"output":{"name":"path"}}],[11,"path_global","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"}],"output":{"name":"path"}}],[11,"path_all","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"bool"},{"name":"vec"},{"name":"vec"},{"name":"vec"},{"name":"vec"}],"output":{"name":"path"}}],[11,"qpath","","Constructs a qualified path.",12,null],[11,"qpath_all","","Constructs a qualified path.",12,null],[11,"ty_mt","","",12,{"inputs":[{"name":"extctxt"},{"name":"p"},{"name":"mutability"}],"output":{"name":"mutty"}}],[11,"ty","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ty_"}],"output":{"name":"p"}}],[11,"ty_path","","",12,{"inputs":[{"name":"extctxt"},{"name":"path"}],"output":{"name":"p"}}],[11,"ty_sum","","",12,{"inputs":[{"name":"extctxt"},{"name":"path"},{"name":"ownedslice"}],"output":{"name":"p"}}],[11,"ty_ident","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"}],"output":{"name":"p"}}],[11,"ty_rptr","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"option"},{"name":"mutability"}],"output":{"name":"p"}}],[11,"ty_ptr","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"mutability"}],"output":{"name":"p"}}],[11,"ty_option","","",12,{"inputs":[{"name":"extctxt"},{"name":"p"}],"output":{"name":"p"}}],[11,"ty_field_imm","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"p"}],"output":{"name":"typefield"}}],[11,"ty_infer","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"typaram","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"ownedslice"},{"name":"option"}],"output":{"name":"typaram"}}],[11,"ty_vars","","",12,{"inputs":[{"name":"extctxt"},{"name":"ownedslice"}],"output":{"name":"vec"}}],[11,"ty_vars_global","","",12,{"inputs":[{"name":"extctxt"},{"name":"ownedslice"}],"output":{"name":"vec"}}],[11,"trait_ref","","",12,{"inputs":[{"name":"extctxt"},{"name":"path"}],"output":{"name":"traitref"}}],[11,"poly_trait_ref","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"path"}],"output":{"name":"polytraitref"}}],[11,"typarambound","","",12,{"inputs":[{"name":"extctxt"},{"name":"path"}],"output":{"name":"typarambound"}}],[11,"lifetime","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"name"}],"output":{"name":"lifetime"}}],[11,"lifetime_def","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"name"},{"name":"vec"}],"output":{"name":"lifetimedef"}}],[11,"stmt_expr","","",12,{"inputs":[{"name":"extctxt"},{"name":"p"}],"output":{"name":"p"}}],[11,"stmt_let","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"bool"},{"name":"ident"},{"name":"p"}],"output":{"name":"p"}}],[11,"stmt_let_typed","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"bool"},{"name":"ident"},{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[11,"block","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"option"}],"output":{"name":"p"}}],[11,"stmt_item","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"block_expr","","",12,{"inputs":[{"name":"extctxt"},{"name":"p"}],"output":{"name":"p"}}],[11,"block_all","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"option"}],"output":{"name":"p"}}],[11,"expr","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"expr_"}],"output":{"name":"p"}}],[11,"expr_path","","",12,{"inputs":[{"name":"extctxt"},{"name":"path"}],"output":{"name":"p"}}],[11,"expr_qpath","","Constructs a QPath expression.",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"qself"},{"name":"path"}],"output":{"name":"p"}}],[11,"expr_ident","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"}],"output":{"name":"p"}}],[11,"expr_self","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"expr_binary","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"binop_"},{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_deref","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_unary","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"unop"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_field_access","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"ident"}],"output":{"name":"p"}}],[11,"expr_tup_field_access","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"usize"}],"output":{"name":"p"}}],[11,"expr_addr_of","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_mut_addr_of","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_call","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_call_ident","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_call_global","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_method_call","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"ident"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_block","","",12,{"inputs":[{"name":"extctxt"},{"name":"p"}],"output":{"name":"p"}}],[11,"field_imm","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"p"}],"output":{"name":"field"}}],[11,"expr_struct","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"path"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_struct_ident","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_lit","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"lit_"}],"output":{"name":"p"}}],[11,"expr_usize","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"usize"}],"output":{"name":"p"}}],[11,"expr_isize","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"isize"}],"output":{"name":"p"}}],[11,"expr_u32","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"u32"}],"output":{"name":"p"}}],[11,"expr_u8","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"u8"}],"output":{"name":"p"}}],[11,"expr_bool","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"bool"}],"output":{"name":"p"}}],[11,"expr_vec","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_vec_ng","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"expr_vec_slice","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_str","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"internedstring"}],"output":{"name":"p"}}],[11,"expr_cast","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_some","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_none","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"expr_break","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"expr_tuple","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_fail","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"internedstring"}],"output":{"name":"p"}}],[11,"expr_unreachable","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"expr_ok","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_err","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_try","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"pat","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"pat_"}],"output":{"name":"p"}}],[11,"pat_wild","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"pat_lit","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"pat_ident","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"}],"output":{"name":"p"}}],[11,"pat_ident_binding_mode","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"bindingmode"}],"output":{"name":"p"}}],[11,"pat_enum","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"path"},{"name":"vec"}],"output":{"name":"p"}}],[11,"pat_struct","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"path"},{"name":"vec"}],"output":{"name":"p"}}],[11,"pat_tuple","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"}],"output":{"name":"p"}}],[11,"pat_some","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"pat_none","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"pat_ok","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"pat_err","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"arm","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"p"}],"output":{"name":"arm"}}],[11,"arm_unreachable","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"arm"}}],[11,"expr_match","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_if","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"p"},{"name":"option"}],"output":{"name":"p"}}],[11,"expr_loop","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"lambda_fn_decl","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[11,"lambda","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"p"}],"output":{"name":"p"}}],[11,"lambda0","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"lambda1","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"ident"}],"output":{"name":"p"}}],[11,"lambda_expr","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"p"}],"output":{"name":"p"}}],[11,"lambda_expr_0","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"lambda_expr_1","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"ident"}],"output":{"name":"p"}}],[11,"lambda_stmts","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"vec"}],"output":{"name":"p"}}],[11,"lambda_stmts_0","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"}],"output":{"name":"p"}}],[11,"lambda_stmts_1","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"ident"}],"output":{"name":"p"}}],[11,"arg","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"p"}],"output":{"name":"arg"}}],[11,"fn_decl","","",12,{"inputs":[{"name":"extctxt"},{"name":"vec"},{"name":"p"}],"output":{"name":"p"}}],[11,"item","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"vec"},{"name":"item_"}],"output":{"name":"p"}}],[11,"item_fn_poly","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"vec"},{"name":"p"},{"name":"generics"},{"name":"p"}],"output":{"name":"p"}}],[11,"item_fn","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"vec"},{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[11,"variant","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"vec"}],"output":{"name":"spanned"}}],[11,"item_enum_poly","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"enumdef"},{"name":"generics"}],"output":{"name":"p"}}],[11,"item_enum","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"enumdef"}],"output":{"name":"p"}}],[11,"item_struct","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"structdef"}],"output":{"name":"p"}}],[11,"item_struct_poly","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"structdef"},{"name":"generics"}],"output":{"name":"p"}}],[11,"item_mod","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"span"},{"name":"ident"},{"name":"vec"},{"name":"vec"}],"output":{"name":"p"}}],[11,"item_static","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"p"},{"name":"mutability"},{"name":"p"}],"output":{"name":"p"}}],[11,"item_const","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[11,"item_ty_poly","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"p"},{"name":"generics"}],"output":{"name":"p"}}],[11,"item_ty","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"p"}],"output":{"name":"p"}}],[11,"attribute","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"spanned"}}],[11,"meta_word","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"internedstring"}],"output":{"name":"p"}}],[11,"meta_list","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"internedstring"},{"name":"vec"}],"output":{"name":"p"}}],[11,"meta_name_value","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"internedstring"},{"name":"lit_"}],"output":{"name":"p"}}],[11,"item_use","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"visibility"},{"name":"p"}],"output":{"name":"p"}}],[11,"item_use_simple","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"visibility"},{"name":"path"}],"output":{"name":"p"}}],[11,"item_use_simple_","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"visibility"},{"name":"ident"},{"name":"path"}],"output":{"name":"p"}}],[11,"item_use_list","","",12,null],[11,"item_use_glob","","",12,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"visibility"},{"name":"vec"}],"output":{"name":"p"}}],[11,"clone","syntax::ext::deriving::partial_ord","",14,{"inputs":[{"name":"orderingop"}],"output":{"name":"orderingop"}}],[11,"eq","syntax::ext::deriving::generic::ty","",15,{"inputs":[{"name":"ptrty"},{"name":"ptrty"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"ptrty"},{"name":"ptrty"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"ptrty"}],"output":{"name":"ptrty"}}],[11,"eq","","",16,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"new","","",16,{"inputs":[{"name":"path"},{"name":"vec"}],"output":{"name":"path"}}],[11,"new_local","","",16,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"path"}}],[11,"new_","","",16,{"inputs":[{"name":"path"},{"name":"vec"},{"name":"option"},{"name":"vec"},{"name":"bool"}],"output":{"name":"path"}}],[11,"to_ty","","",16,{"inputs":[{"name":"path"},{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"generics"}],"output":{"name":"p"}}],[11,"to_path","","",16,{"inputs":[{"name":"path"},{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"generics"}],"output":{"name":"path"}}],[11,"eq","","",17,{"inputs":[{"name":"ty"},{"name":"ty"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"ty"},{"name":"ty"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"ty"}],"output":{"name":"ty"}}],[11,"to_ty","","",17,{"inputs":[{"name":"ty"},{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"generics"}],"output":{"name":"p"}}],[11,"to_path","","",17,{"inputs":[{"name":"ty"},{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"generics"}],"output":{"name":"path"}}],[11,"clone","","",18,{"inputs":[{"name":"lifetimebounds"}],"output":{"name":"lifetimebounds"}}],[11,"empty","","",18,{"inputs":[{"name":"lifetimebounds"}],"output":{"name":"lifetimebounds"}}],[11,"to_generics","","",18,{"inputs":[{"name":"lifetimebounds"},{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"generics"}],"output":{"name":"generics"}}],[11,"expand","syntax::ext::deriving::generic","",19,null],[11,"eq","","",20,{"inputs":[{"name":"structtype"},{"name":"structtype"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"structtype"},{"name":"structtype"}],"output":{"name":"bool"}}],[11,"clone","syntax::ext::expand","",21,{"inputs":[{"name":"patidentfinder"}],"output":{"name":"patidentfinder"}}],[11,"visit_pat","","",21,null],[11,"fold_ident","","",22,{"inputs":[{"name":"identrenamer"},{"name":"ident"}],"output":{"name":"ident"}}],[11,"fold_mac","","",22,{"inputs":[{"name":"identrenamer"},{"name":"spanned"}],"output":{"name":"spanned"}}],[11,"fold_pat","","",23,{"inputs":[{"name":"patidentrenamer"},{"name":"p"}],"output":{"name":"p"}}],[11,"fold_mac","","",23,{"inputs":[{"name":"patidentrenamer"},{"name":"spanned"}],"output":{"name":"spanned"}}],[11,"new","","",24,{"inputs":[{"name":"macroexpander"},{"name":"extctxt"}],"output":{"name":"macroexpander"}}],[11,"fold_expr","","",24,{"inputs":[{"name":"macroexpander"},{"name":"p"}],"output":{"name":"p"}}],[11,"fold_pat","","",24,{"inputs":[{"name":"macroexpander"},{"name":"p"}],"output":{"name":"p"}}],[11,"fold_item","","",24,{"inputs":[{"name":"macroexpander"},{"name":"p"}],"output":{"name":"smallvector"}}],[11,"fold_item_underscore","","",24,{"inputs":[{"name":"macroexpander"},{"name":"item_"}],"output":{"name":"item_"}}],[11,"fold_stmt","","",24,{"inputs":[{"name":"macroexpander"},{"name":"p"}],"output":{"name":"smallvector"}}],[11,"fold_block","","",24,{"inputs":[{"name":"macroexpander"},{"name":"p"}],"output":{"name":"p"}}],[11,"fold_arm","","",24,{"inputs":[{"name":"macroexpander"},{"name":"arm"}],"output":{"name":"arm"}}],[11,"fold_trait_item","","",24,{"inputs":[{"name":"macroexpander"},{"name":"p"}],"output":{"name":"smallvector"}}],[11,"fold_impl_item","","",24,{"inputs":[{"name":"macroexpander"},{"name":"p"}],"output":{"name":"smallvector"}}],[11,"new_span","","",24,{"inputs":[{"name":"macroexpander"},{"name":"span"}],"output":{"name":"span"}}],[11,"default","","",25,{"inputs":[{"name":"expansionconfig"},{"name":"string"}],"output":{"name":"expansionconfig"}}],[11,"enable_quotes","","",25,{"inputs":[{"name":"expansionconfig"}],"output":{"name":"bool"}}],[11,"enable_asm","","",25,{"inputs":[{"name":"expansionconfig"}],"output":{"name":"bool"}}],[11,"enable_log_syntax","","",25,{"inputs":[{"name":"expansionconfig"}],"output":{"name":"bool"}}],[11,"enable_concat_idents","","",25,{"inputs":[{"name":"expansionconfig"}],"output":{"name":"bool"}}],[11,"enable_trace_macros","","",25,{"inputs":[{"name":"expansionconfig"}],"output":{"name":"bool"}}],[11,"enable_allow_internal_unstable","","",25,{"inputs":[{"name":"expansionconfig"}],"output":{"name":"bool"}}],[11,"enable_custom_derive","","",25,{"inputs":[{"name":"expansionconfig"}],"output":{"name":"bool"}}],[11,"fold_ident","","",26,{"inputs":[{"name":"marker"},{"name":"ident"}],"output":{"name":"ident"}}],[11,"fold_mac","","",26,{"inputs":[{"name":"marker"},{"name":"spanned"}],"output":{"name":"spanned"}}],[11,"visit_mac","","",27,null],[11,"eq","syntax::ext::format","",28,{"inputs":[{"name":"argumenttype"},{"name":"argumenttype"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"argumenttype"},{"name":"argumenttype"}],"output":{"name":"bool"}}],[11,"clone","syntax::ext::mtwt","",29,{"inputs":[{"name":"syntaxcontext_"}],"output":{"name":"syntaxcontext_"}}],[11,"fmt","","",29,{"inputs":[{"name":"syntaxcontext_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",29,null],[11,"decode","","",29,{"inputs":[{"name":"syntaxcontext_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",29,{"inputs":[{"name":"syntaxcontext_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"syntaxcontext_"},{"name":"syntaxcontext_"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"syntaxcontext_"},{"name":"syntaxcontext_"}],"output":{"name":"bool"}}],[11,"to_tokens","syntax::ast","",30,{"inputs":[{"name":"tokentree"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","collections::vec","",31,{"inputs":[{"name":"vec"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::codemap","",32,{"inputs":[{"name":"spanned"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","core::option","",33,{"inputs":[{"name":"option"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ast","",34,{"inputs":[{"name":"ident"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",35,{"inputs":[{"name":"path"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",36,{"inputs":[{"name":"ty"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",37,{"inputs":[{"name":"block"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ptr","",38,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",38,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",38,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",38,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",38,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",38,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ast","",39,{"inputs":[{"name":"arm"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ptr","",38,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::codemap","",32,{"inputs":[{"name":"spanned"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",32,{"inputs":[{"name":"spanned"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"parse_item","syntax::ext::base","",12,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"p"}}],[11,"parse_stmt","","",12,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"p"}}],[11,"parse_expr","","",12,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"p"}}],[11,"parse_tts","","",12,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"vec"}}],[11,"clone","syntax::ext::tt::transcribe","",40,{"inputs":[{"name":"ttframe"}],"output":{"name":"ttframe"}}],[11,"clone","","",41,{"inputs":[{"name":"ttreader"}],"output":{"name":"ttreader"}}],[11,"clone","","",42,{"inputs":[{"name":"lockstepitersize"}],"output":{"name":"lockstepitersize"}}],[6,"Output","quasi","",null,null],[11,"add","syntax::ext::tt::transcribe","",42,{"inputs":[{"name":"lockstepitersize"},{"name":"lockstepitersize"}],"output":{"name":"lockstepitersize"}}],[11,"clone","syntax::ext::tt::macro_parser","",43,{"inputs":[{"name":"tokentreeortokentreevec"}],"output":{"name":"tokentreeortokentreevec"}}],[11,"clone","","",44,{"inputs":[{"name":"matcherttframe"}],"output":{"name":"matcherttframe"}}],[11,"clone","","",45,{"inputs":[{"name":"matcherpos"}],"output":{"name":"matcherpos"}}],[11,"make_expr","syntax::ext::tt::macro_rules","",46,{"inputs":[{"name":"parseranymacro"}],"output":{"name":"option"}}],[11,"make_pat","","",46,{"inputs":[{"name":"parseranymacro"}],"output":{"name":"option"}}],[11,"make_items","","",46,{"inputs":[{"name":"parseranymacro"}],"output":{"name":"option"}}],[11,"make_impl_items","","",46,{"inputs":[{"name":"parseranymacro"}],"output":{"name":"option"}}],[11,"make_stmts","","",46,{"inputs":[{"name":"parseranymacro"}],"output":{"name":"option"}}],[11,"expand","","",47,null],[11,"hash","syntax::parse::parser","",48,null],[11,"cmp","","",48,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",48,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"option"}}],[11,"lt","","",48,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"le","","",48,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"gt","","",48,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"ge","","",48,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"clone","","",48,{"inputs":[{"name":"restrictions"}],"output":{"name":"restrictions"}}],[11,"eq","","",48,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[18,"UNRESTRICTED","quasi","",null,null],[18,"RESTRICTION_STMT_EXPR","","",null,null],[18,"RESTRICTION_NO_STRUCT_LITERAL","","",null,null],[11,"empty","syntax::parse::parser","Returns an empty set of flags.",48,{"inputs":[{"name":"restrictions"}],"output":{"name":"restrictions"}}],[11,"all","","Returns the set containing all flags.",48,{"inputs":[{"name":"restrictions"}],"output":{"name":"restrictions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",48,{"inputs":[{"name":"restrictions"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",48,{"inputs":[{"name":"restrictions"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",48,{"inputs":[{"name":"restrictions"},{"name":"u8"}],"output":{"name":"restrictions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",48,{"inputs":[{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",48,{"inputs":[{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",48,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",48,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",48,null],[11,"remove","","Removes the specified flags in-place.",48,null],[11,"toggle","","Toggles the specified flags in-place.",48,null],[6,"Output","quasi","",null,null],[11,"bitor","syntax::parse::parser","Returns the union of the two sets of flags.",48,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"restrictions"}}],[6,"Output","quasi","",null,null],[11,"bitxor","syntax::parse::parser","Returns the left flags, but with all the right flags toggled.",48,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"restrictions"}}],[6,"Output","quasi","",null,null],[11,"bitand","syntax::parse::parser","Returns the intersection between the two sets of flags.",48,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"restrictions"}}],[6,"Output","quasi","",null,null],[11,"sub","syntax::parse::parser","Returns the set difference of the two sets of flags.",48,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"restrictions"}}],[6,"Output","quasi","",null,null],[11,"not","syntax::parse::parser","Returns the complement of this set of flags.",48,{"inputs":[{"name":"restrictions"}],"output":{"name":"restrictions"}}],[11,"eq","","",49,{"inputs":[{"name":"pathparsingmode"},{"name":"pathparsingmode"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"pathparsingmode"},{"name":"pathparsingmode"}],"output":{"name":"bool"}}],[11,"clone","","",49,{"inputs":[{"name":"pathparsingmode"}],"output":{"name":"pathparsingmode"}}],[11,"eq","","",50,{"inputs":[{"name":"qpathparsingmode"},{"name":"qpathparsingmode"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"qpathparsingmode"},{"name":"qpathparsingmode"}],"output":{"name":"bool"}}],[11,"clone","","",50,{"inputs":[{"name":"qpathparsingmode"}],"output":{"name":"qpathparsingmode"}}],[11,"eq","","",51,{"inputs":[{"name":"boundparsingmode"},{"name":"boundparsingmode"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"boundparsingmode"},{"name":"boundparsingmode"}],"output":{"name":"bool"}}],[11,"clone","","",51,{"inputs":[{"name":"boundparsingmode"}],"output":{"name":"boundparsingmode"}}],[11,"clone","","",52,{"inputs":[{"name":"tokentype"}],"output":{"name":"tokentype"}}],[11,"eq","","",52,{"inputs":[{"name":"tokentype"},{"name":"tokentype"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"tokentype"},{"name":"tokentype"}],"output":{"name":"bool"}}],[11,"new","","",53,{"inputs":[{"name":"parser"},{"name":"parsesess"},{"name":"vec"},{"name":"box"}],"output":{"name":"parser"}}],[11,"parse_expr","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"p"}}],[11,"parse_item","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[11,"parse_pat","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"p"}}],[11,"parse_arm","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"arm"}}],[11,"parse_ty","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"p"}}],[11,"parse_stmt","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[11,"token_to_string","","Convert a token to a string using self's reader",53,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"string"}}],[11,"this_token_to_string","","Convert the current token to a string using self's reader",53,{"inputs":[{"name":"parser"}],"output":{"name":"string"}}],[11,"unexpected_last","","",53,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"fatalerror"}}],[11,"unexpected","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"fatalerror"}}],[11,"expect","","Expect and consume the token t. Signal an error if\nthe next token is not t.",53,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"result"}}],[11,"expect_one_of","","Expect next token to be edible or inedible token.  If edible,\nthen consume it; if inedible, then return without consuming\nanything.  Signal a fatal error if next token is unexpected.",53,null],[11,"check_for_erroneous_unit_struct_expecting","","Check for erroneous `ident { }`; if matches, signal error and\nrecover (without consuming any expected input token).  Returns\ntrue if and only if input was consumed for recovery.",53,null],[11,"commit_expr","","Commit to parsing a complete expression `e` expected to be\nfollowed by some token from the set edible + inedible.  Recover\nfrom anticipated input errors, discarding erroneous characters.",53,null],[11,"commit_expr_expecting","","",53,{"inputs":[{"name":"parser"},{"name":"expr"},{"name":"token"}],"output":{"name":"result"}}],[11,"commit_stmt","","Commit to parsing a complete statement `s`, which expects to be\nfollowed by some token from the set edible + inedible.  Check\nfor recoverable input errors, discarding erroneous characters.",53,null],[11,"commit_stmt_expecting","","",53,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"result"}}],[11,"parse_ident","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_ident_or_self_type","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_path_list_item","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"check","","Check if the next token is `tok`, and return `true` if so.",53,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"bool"}}],[11,"eat","","Consume token 'tok' if it exists. Returns true if the given\ntoken was present, false otherwise.",53,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"result"}}],[11,"check_keyword","","",53,{"inputs":[{"name":"parser"},{"name":"keyword"}],"output":{"name":"bool"}}],[11,"eat_keyword","","If the next token is the given keyword, eat it and return\ntrue. Otherwise, return false.",53,{"inputs":[{"name":"parser"},{"name":"keyword"}],"output":{"name":"result"}}],[11,"eat_keyword_noexpect","","",53,{"inputs":[{"name":"parser"},{"name":"keyword"}],"output":{"name":"result"}}],[11,"expect_keyword","","If the given word is not a keyword, signal an error.\nIf the next token is not the given word, signal an error.\nOtherwise, eat it.",53,{"inputs":[{"name":"parser"},{"name":"keyword"}],"output":{"name":"result"}}],[11,"check_strict_keywords","","Signal an error if the given string is a strict keyword",53,null],[11,"check_reserved_keywords","","Signal an error if the current token is a reserved keyword",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"expect_no_suffix","","",53,null],[11,"expect_gt","","Expect and consume a GT. if a >> is seen, replace it\nwith a single > and continue. If a GT is not seen,\nsignal an error.",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_seq_to_before_gt_or_return","","",53,{"inputs":[{"name":"parser"},{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_seq_to_before_gt","","Parse a sequence bracketed by '<' and '>', stopping\nbefore the '>'.",53,{"inputs":[{"name":"parser"},{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_seq_to_gt","","",53,{"inputs":[{"name":"parser"},{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_seq_to_gt_or_return","","",53,{"inputs":[{"name":"parser"},{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_seq_to_end","","Parse a sequence, including the closing delimiter. The function\nf must consume tokens until reaching the next separator or\nclosing bracket.",53,{"inputs":[{"name":"parser"},{"name":"token"},{"name":"seqsep"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_seq_to_before_end","","Parse a sequence, not including the closing delimiter. The function\nf must consume tokens until reaching the next separator or\nclosing bracket.",53,{"inputs":[{"name":"parser"},{"name":"token"},{"name":"seqsep"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_unspanned_seq","","Parse a sequence, including the closing delimiter. The function\nf must consume tokens until reaching the next separator or\nclosing bracket.",53,{"inputs":[{"name":"parser"},{"name":"token"},{"name":"token"},{"name":"seqsep"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_enum_variant_seq","","Parse a sequence parameter of enum variant. For consistency purposes,\nthese should not be empty.",53,{"inputs":[{"name":"parser"},{"name":"token"},{"name":"token"},{"name":"seqsep"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_seq","","",53,{"inputs":[{"name":"parser"},{"name":"token"},{"name":"token"},{"name":"seqsep"},{"name":"f"}],"output":{"name":"result"}}],[11,"bump","","Advance the parser by one token",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"bump_and_get","","Advance the parser by one token and return the bumped token.",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"replace_token","","EFFECT: replace the current token and span with the given one",53,null],[11,"buffer_length","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"isize"}}],[11,"look_ahead","","",53,{"inputs":[{"name":"parser"},{"name":"usize"},{"name":"f"}],"output":{"name":"r"}}],[11,"fatal","","",53,{"inputs":[{"name":"parser"},{"name":"str"}],"output":{"name":"fatalerror"}}],[11,"span_fatal","","",53,{"inputs":[{"name":"parser"},{"name":"span"},{"name":"str"}],"output":{"name":"fatalerror"}}],[11,"span_fatal_help","","",53,{"inputs":[{"name":"parser"},{"name":"span"},{"name":"str"},{"name":"str"}],"output":{"name":"fatalerror"}}],[11,"span_note","","",53,null],[11,"span_help","","",53,null],[11,"span_suggestion","","",53,null],[11,"fileline_help","","",53,null],[11,"bug","","",53,null],[11,"warn","","",53,null],[11,"span_warn","","",53,null],[11,"span_err","","",53,null],[11,"span_bug","","",53,null],[11,"abort_if_errors","","",53,null],[11,"id_to_interned_str","","",53,{"inputs":[{"name":"parser"},{"name":"ident"}],"output":{"name":"internedstring"}}],[11,"token_is_bare_fn_keyword","","Is the current token one of the keywords that signals a bare function\ntype?",53,{"inputs":[{"name":"parser"}],"output":{"name":"bool"}}],[11,"get_lifetime","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"ident"}}],[11,"parse_for_in_type","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_ty_path","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_ty_bare_fn","","parse a TyBareFn type:",53,{"inputs":[{"name":"parser"},{"name":"vec"}],"output":{"name":"result"}}],[11,"parse_obsolete_closure_kind","","Parses an obsolete closure kind (`&:`, `&mut:`, or `:`).",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_unsafety","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_trait_items","","Parse the items in a trait declaration",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_mt","","Parse a possibly mutable type",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_ret_ty","","Parse optional return type [ -> TY ] in function decl",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_ty_sum","","Parse a type in a context where `T1+T2` is allowed.",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_ty_nopanic","","Parse a type.",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_borrowed_pointee","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_ptr","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"is_named_argument","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"bool"}}],[11,"parse_arg_general","","This version of parse arg doesn't necessarily require\nidentifier names.",53,{"inputs":[{"name":"parser"},{"name":"bool"}],"output":{"name":"result"}}],[11,"parse_arg","","Parse a single function argument",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_fn_block_arg","","Parse an argument in a lambda header e.g. |arg, arg|",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"maybe_parse_fixed_length_of_vec","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"lit_from_token","","Matches token_lit = LIT_INTEGER | ...",53,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"result"}}],[11,"parse_lit","","Matches lit = true | false | token_lit",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_literal_maybe_minus","","matches '-' lit | lit",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_qualified_path","","",53,{"inputs":[{"name":"parser"},{"name":"qpathparsingmode"}],"output":{"name":"result"}}],[11,"parse_path","","Parses a path and optional type parameter bounds, depending on the\nmode. The `mode` parameter determines whether lifetimes, types, and/or\nbounds are permitted and whether `::` must precede type parameter\ngroups.",53,{"inputs":[{"name":"parser"},{"name":"pathparsingmode"}],"output":{"name":"result"}}],[11,"parse_path_segments_without_colons","","Examples:\n- `a::b<T,U>::c<V,W>`\n- `a::b<T,U>::c(V) -> W`\n- `a::b<T,U>::c(V)`",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_path_segments_with_colons","","Examples:\n- `a::b::<T,U>::c`",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_path_segments_without_types","","Examples:\n- `a::b::c`",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_opt_lifetime","","parses 0 or 1 lifetime",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_lifetime","","Parses a single lifetime\nMatches lifetime = LIFETIME",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_lifetime_defs","","Parses `lifetime_defs = [ lifetime_defs { ',' lifetime_defs } ]` where `lifetime_def  =\nlifetime [':' lifetimes]`",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_lifetimes","","matches lifetimes = ( lifetime ) | ( lifetime , lifetimes ) actually, it matches the empty\none too, but putting that in there messes up the grammar....",53,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"result"}}],[11,"parse_mutability","","Parse mutability declaration (mut/const/imm)",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_field","","Parse ident COLON expr",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"mk_expr","","",53,{"inputs":[{"name":"parser"},{"name":"bytepos"},{"name":"bytepos"},{"name":"expr_"}],"output":{"name":"p"}}],[11,"mk_unary","","",53,{"inputs":[{"name":"parser"},{"name":"unop"},{"name":"p"}],"output":{"name":"expr_"}}],[11,"mk_binary","","",53,{"inputs":[{"name":"parser"},{"name":"spanned"},{"name":"p"},{"name":"p"}],"output":{"name":"expr_"}}],[11,"mk_call","","",53,{"inputs":[{"name":"parser"},{"name":"p"},{"name":"vec"}],"output":{"name":"expr_"}}],[11,"mk_index","","",53,{"inputs":[{"name":"parser"},{"name":"p"},{"name":"p"}],"output":{"name":"expr_"}}],[11,"mk_range","","",53,{"inputs":[{"name":"parser"},{"name":"option"},{"name":"option"}],"output":{"name":"expr_"}}],[11,"mk_field","","",53,{"inputs":[{"name":"parser"},{"name":"p"},{"name":"spanned"}],"output":{"name":"expr_"}}],[11,"mk_tup_field","","",53,{"inputs":[{"name":"parser"},{"name":"p"},{"name":"spanned"}],"output":{"name":"expr_"}}],[11,"mk_assign_op","","",53,{"inputs":[{"name":"parser"},{"name":"spanned"},{"name":"p"},{"name":"p"}],"output":{"name":"expr_"}}],[11,"mk_mac_expr","","",53,{"inputs":[{"name":"parser"},{"name":"bytepos"},{"name":"bytepos"},{"name":"mac_"}],"output":{"name":"p"}}],[11,"mk_lit_u32","","",53,{"inputs":[{"name":"parser"},{"name":"u32"}],"output":{"name":"p"}}],[11,"parse_bottom_expr","","At the bottom (top?) of the precedence hierarchy,\nparse things like parenthesized exprs,\nmacros, return, etc.",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_block_expr","","Parse a block or unsafe block",53,{"inputs":[{"name":"parser"},{"name":"bytepos"},{"name":"blockcheckmode"}],"output":{"name":"result"}}],[11,"parse_dot_or_call_expr","","parse a.b or a(13) or a[4] or just a",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_dot_or_call_expr_with","","",53,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"result"}}],[11,"check_unknown_macro_variable","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_sep_and_kleene_op","","Parse an optional separator followed by a Kleene-style\nrepetition token (+ or *).",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_token_tree","","parse a single token tree from the input.",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_all_token_trees","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_prefix_expr","","Parse a prefix-operator expr",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_binops","","Parse an expression of binops",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_more_binops","","Parse an expression of binops of at least min_prec precedence",53,{"inputs":[{"name":"parser"},{"name":"p"},{"name":"usize"}],"output":{"name":"result"}}],[11,"parse_assign_expr","","Parse an assignment expression....\nactually, this seems to be the main entry point for\nparsing an arbitrary expression.",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_assign_expr_with","","",53,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"result"}}],[11,"parse_if_expr","","Parse an 'if' or 'if let' expression ('if' token already eaten)",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_if_let_expr","","Parse an 'if let' expression ('if' token already eaten)",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_lambda_expr","","",53,{"inputs":[{"name":"parser"},{"name":"captureclause"}],"output":{"name":"result"}}],[11,"parse_else_expr","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_for_expr","","Parse a 'for' .. 'in' expression ('for' token already eaten)",53,{"inputs":[{"name":"parser"},{"name":"option"}],"output":{"name":"result"}}],[11,"parse_while_expr","","Parse a 'while' or 'while let' expression ('while' token already eaten)",53,{"inputs":[{"name":"parser"},{"name":"option"}],"output":{"name":"result"}}],[11,"parse_while_let_expr","","Parse a 'while let' expression ('while' token already eaten)",53,{"inputs":[{"name":"parser"},{"name":"option"}],"output":{"name":"result"}}],[11,"parse_loop_expr","","",53,{"inputs":[{"name":"parser"},{"name":"option"}],"output":{"name":"result"}}],[11,"parse_arm_nopanic","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_expr_nopanic","","Parse an expression",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_expr_res","","Parse an expression, subject to the given restrictions",53,{"inputs":[{"name":"parser"},{"name":"restrictions"}],"output":{"name":"result"}}],[11,"parse_pat_nopanic","","Parse a pattern.",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_stmt_nopanic","","Parse a statement. may include decl.",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_block","","Parse a block. No inner attrs are allowed.",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_generics","","Parse a set of optional generic type parameter declarations. Where\nclauses are not parsed here, and must be added later via\n`parse_where_clause()`.",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_where_clause","","Parses an optional `where` clause and places it in `generics`.",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_fn_decl","","Parse the argument list and result type of a function declaration",53,{"inputs":[{"name":"parser"},{"name":"bool"}],"output":{"name":"result"}}],[11,"parse_impl_item","","Parse an impl item.",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_record_struct_body","","",53,{"inputs":[{"name":"parser"},{"name":"ident"}],"output":{"name":"result"}}],[11,"parse_tuple_struct_body","","",53,{"inputs":[{"name":"parser"},{"name":"ident"},{"name":"generics"}],"output":{"name":"result"}}],[11,"parse_single_struct_field","","Parse a structure field declaration",53,{"inputs":[{"name":"parser"},{"name":"visibility"},{"name":"vec"}],"output":{"name":"result"}}],[11,"parse_item_nopanic","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_crate_mod","","Parses a source module as a crate. This is the main\nentry point for the parser.",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_optional_str","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_str","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"eq","syntax::parse::lexer::comments","",54,{"inputs":[{"name":"commentstyle"},{"name":"commentstyle"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"commentstyle"},{"name":"commentstyle"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"commentstyle"}],"output":{"name":"commentstyle"}}],[11,"clone","","",55,{"inputs":[{"name":"comment"}],"output":{"name":"comment"}}],[11,"clone","","",56,{"inputs":[{"name":"literal"}],"output":{"name":"literal"}}],[11,"fmt","syntax::parse::lexer","",57,{"inputs":[{"name":"tokenandspan"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"tokenandspan"},{"name":"tokenandspan"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"tokenandspan"},{"name":"tokenandspan"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"tokenandspan"}],"output":{"name":"tokenandspan"}}],[11,"is_eof","","",58,{"inputs":[{"name":"stringreader"}],"output":{"name":"bool"}}],[11,"next_token","","Return the next token. EFFECT: advances the string_reader.",58,{"inputs":[{"name":"stringreader"}],"output":{"name":"tokenandspan"}}],[11,"fatal","","",58,null],[11,"err","","",58,null],[11,"peek","","",58,{"inputs":[{"name":"stringreader"}],"output":{"name":"tokenandspan"}}],[11,"is_eof","syntax::ext::tt::transcribe","",41,{"inputs":[{"name":"ttreader"}],"output":{"name":"bool"}}],[11,"next_token","","",41,{"inputs":[{"name":"ttreader"}],"output":{"name":"tokenandspan"}}],[11,"fatal","","",41,null],[11,"err","","",41,null],[11,"peek","","",41,{"inputs":[{"name":"ttreader"}],"output":{"name":"tokenandspan"}}],[11,"new_raw","syntax::parse::lexer","For comments.rs, which hackily pokes into pos and curr",58,{"inputs":[{"name":"stringreader"},{"name":"spanhandler"},{"name":"rc"}],"output":{"name":"stringreader"}}],[11,"new","","",58,{"inputs":[{"name":"stringreader"},{"name":"spanhandler"},{"name":"rc"}],"output":{"name":"stringreader"}}],[11,"curr_is","","",58,{"inputs":[{"name":"stringreader"},{"name":"char"}],"output":{"name":"bool"}}],[11,"fatal_span","","Report a fatal lexical error with a given span.",58,null],[11,"err_span","","Report a lexical error with a given span.",58,null],[11,"with_str_from","","Calls `f` with a string slice of the source text spanning from `start`\nup to but excluding `self.last_pos`, meaning the slice does not include\nthe character `self.curr`.",58,{"inputs":[{"name":"stringreader"},{"name":"bytepos"},{"name":"f"}],"output":{"name":"t"}}],[11,"name_from","","Create a Name from a given offset to the current offset, each\nadjusted 1 towards each other (assumes that on either side there is a\nsingle-byte delimiter).",58,{"inputs":[{"name":"stringreader"},{"name":"bytepos"}],"output":{"name":"name"}}],[11,"name_from_to","","As name_from, with an explicit endpoint.",58,{"inputs":[{"name":"stringreader"},{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"name"}}],[11,"bump","","Advance the StringReader by one character. If a newline is\ndiscovered, add it to the FileMap's list of line start offsets.",58,null],[11,"nextch","","",58,{"inputs":[{"name":"stringreader"}],"output":{"name":"option"}}],[11,"nextch_is","","",58,{"inputs":[{"name":"stringreader"},{"name":"char"}],"output":{"name":"bool"}}],[11,"nextnextch","","",58,{"inputs":[{"name":"stringreader"}],"output":{"name":"option"}}],[11,"nextnextch_is","","",58,{"inputs":[{"name":"stringreader"},{"name":"char"}],"output":{"name":"bool"}}],[11,"fmt","syntax::parse::token","",59,{"inputs":[{"name":"binoptoken"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",59,null],[11,"eq","","",59,{"inputs":[{"name":"binoptoken"},{"name":"binoptoken"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"binoptoken"},{"name":"binoptoken"}],"output":{"name":"bool"}}],[11,"decode","","",59,{"inputs":[{"name":"binoptoken"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",59,{"inputs":[{"name":"binoptoken"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"binoptoken"}],"output":{"name":"binoptoken"}}],[11,"fmt","","",60,{"inputs":[{"name":"delimtoken"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",60,null],[11,"eq","","",60,{"inputs":[{"name":"delimtoken"},{"name":"delimtoken"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"delimtoken"},{"name":"delimtoken"}],"output":{"name":"bool"}}],[11,"decode","","",60,{"inputs":[{"name":"delimtoken"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",60,{"inputs":[{"name":"delimtoken"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"delimtoken"}],"output":{"name":"delimtoken"}}],[11,"fmt","","",61,{"inputs":[{"name":"identstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",61,null],[11,"eq","","",61,{"inputs":[{"name":"identstyle"},{"name":"identstyle"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"identstyle"},{"name":"identstyle"}],"output":{"name":"bool"}}],[11,"decode","","",61,{"inputs":[{"name":"identstyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",61,{"inputs":[{"name":"identstyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"identstyle"}],"output":{"name":"identstyle"}}],[11,"fmt","","",62,{"inputs":[{"name":"specialmacrovar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",62,null],[11,"eq","","",62,{"inputs":[{"name":"specialmacrovar"},{"name":"specialmacrovar"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"specialmacrovar"},{"name":"specialmacrovar"}],"output":{"name":"bool"}}],[11,"decode","","",62,{"inputs":[{"name":"specialmacrovar"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",62,{"inputs":[{"name":"specialmacrovar"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"specialmacrovar"}],"output":{"name":"specialmacrovar"}}],[11,"as_str","","",62,{"inputs":[{"name":"specialmacrovar"}],"output":{"name":"str"}}],[11,"fmt","","",63,{"inputs":[{"name":"lit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",63,null],[11,"eq","","",63,{"inputs":[{"name":"lit"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"lit"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"decode","","",63,{"inputs":[{"name":"lit"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",63,{"inputs":[{"name":"lit"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"lit"}],"output":{"name":"lit"}}],[11,"short_name","","",63,{"inputs":[{"name":"lit"}],"output":{"name":"str"}}],[11,"fmt","","",64,{"inputs":[{"name":"token"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",64,null],[11,"eq","","",64,{"inputs":[{"name":"token"},{"name":"token"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"token"},{"name":"token"}],"output":{"name":"bool"}}],[11,"decode","","",64,{"inputs":[{"name":"token"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",64,{"inputs":[{"name":"token"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"token"}],"output":{"name":"token"}}],[11,"is_like_gt","","Returns `true` if the token starts with '>'.",64,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"can_begin_expr","","Returns `true` if the token can appear at the start of an expression.",64,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_lit","","Returns `true` if the token is any literal",64,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_ident","","Returns `true` if the token is an identifier.",64,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_path","","Returns `true` if the token is an interpolated path.",64,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_plain_ident","","Returns `true` if the token is a path that is not followed by a `::`\ntoken.",64,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_lifetime","","Returns `true` if the token is a lifetime.",64,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_mutability","","Returns `true` if the token is either the `mut` or `const` keyword.",64,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"to_binop","","Maps a token to its corresponding binary operator.",64,{"inputs":[{"name":"token"}],"output":{"name":"option"}}],[11,"is_keyword","","Returns `true` if the token is a given keyword, `kw`.",64,{"inputs":[{"name":"token"},{"name":"keyword"}],"output":{"name":"bool"}}],[11,"is_keyword_allow_following_colon","","",64,{"inputs":[{"name":"token"},{"name":"keyword"}],"output":{"name":"bool"}}],[11,"is_any_keyword","","Returns `true` if the token is either a special identifier, or a strict\nor reserved keyword.",64,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_strict_keyword","","Returns `true` if the token may not appear as an identifier.",64,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_reserved_keyword","","Returns `true` if the token is a keyword that has been reserved for\npossible future use.",64,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"mtwt_eq","","Hygienic identifier equality comparison.",64,{"inputs":[{"name":"token"},{"name":"token"}],"output":{"name":"bool"}}],[11,"hash","","",65,null],[11,"eq","","",65,{"inputs":[{"name":"nonterminal"},{"name":"nonterminal"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"nonterminal"},{"name":"nonterminal"}],"output":{"name":"bool"}}],[11,"decode","","",65,{"inputs":[{"name":"nonterminal"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",65,{"inputs":[{"name":"nonterminal"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"nonterminal"}],"output":{"name":"nonterminal"}}],[11,"fmt","","",65,{"inputs":[{"name":"nonterminal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","syntax::parse::token::keywords","",66,{"inputs":[{"name":"keyword"},{"name":"keyword"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"keyword"},{"name":"keyword"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"keyword"}],"output":{"name":"keyword"}}],[11,"to_name","","",66,{"inputs":[{"name":"keyword"}],"output":{"name":"name"}}],[11,"cmp","syntax::parse::token","",67,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",67,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"option"}}],[11,"lt","","",67,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"bool"}}],[11,"le","","",67,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"bool"}}],[11,"gt","","",67,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"bool"}}],[11,"ge","","",67,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"bool"}}],[11,"hash","","",67,null],[11,"eq","","",67,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"internedstring"}],"output":{"name":"internedstring"}}],[11,"new","","",67,{"inputs":[{"name":"internedstring"},{"name":"str"}],"output":{"name":"internedstring"}}],[6,"Target","quasi","",null,null],[11,"deref","syntax::parse::token","",67,{"inputs":[{"name":"internedstring"}],"output":{"name":"str"}}],[11,"fmt","","",67,{"inputs":[{"name":"internedstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"internedstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",67,{"inputs":[{"name":"internedstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"internedstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"decode","","",67,{"inputs":[{"name":"internedstring"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",67,{"inputs":[{"name":"internedstring"},{"name":"s"}],"output":{"name":"result"}}],[11,"parse_outer_attributes","syntax::parse::parser","Parse attributes that appear before an item",53,{"inputs":[{"name":"parser"}],"output":{"name":"vec"}}],[11,"parse_attribute","","Matches `attribute = # ! [ meta_item ]`",53,{"inputs":[{"name":"parser"},{"name":"bool"}],"output":{"name":"spanned"}}],[11,"parse_inner_attributes","","Parse attributes that appear after the opening of an item. These should\nbe preceded by an exclamation mark, but we accept and warn about one\nterminated by a semicolon.\nmatches inner_attrs*",53,{"inputs":[{"name":"parser"}],"output":{"name":"vec"}}],[11,"parse_meta_item","","matches meta_item = IDENT\n| IDENT = lit\n| IDENT meta_seq",53,{"inputs":[{"name":"parser"}],"output":{"name":"p"}}],[11,"parse_meta_seq","","matches meta_seq = ( COMMASEP(meta_item) )",53,{"inputs":[{"name":"parser"}],"output":{"name":"vec"}}],[11,"parse_optional_meta","","",53,{"inputs":[{"name":"parser"}],"output":{"name":"vec"}}],[11,"hash","syntax::parse::obsolete","",68,null],[11,"eq","","",68,{"inputs":[{"name":"obsoletesyntax"},{"name":"obsoletesyntax"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"obsoletesyntax"},{"name":"obsoletesyntax"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"obsoletesyntax"}],"output":{"name":"obsoletesyntax"}}],[11,"obsolete","syntax::parse::parser","Reports an obsolete syntax non-fatal error.",53,null],[11,"obsolete_expr","","Reports an obsolete syntax non-fatal error, and returns\na placeholder expression",53,{"inputs":[{"name":"parser"},{"name":"span"},{"name":"obsoletesyntax"}],"output":{"name":"p"}}],[11,"report","","",53,null],[11,"is_obsolete_ident","","",53,{"inputs":[{"name":"parser"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eat_obsolete_ident","","",53,{"inputs":[{"name":"parser"},{"name":"str"}],"output":{"name":"bool"}}],[11,"next_node_id","syntax::parse","",69,{"inputs":[{"name":"parsesess"}],"output":{"name":"u32"}}],[11,"reserve_node_ids","","",69,{"inputs":[{"name":"parsesess"},{"name":"u32"}],"output":{"name":"u32"}}],[11,"cmp","syntax::ast","",34,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",34,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"option"}}],[11,"lt","","",34,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"le","","",34,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"gt","","",34,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"ge","","",34,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"hash","","",34,null],[11,"clone","","",34,{"inputs":[{"name":"ident"}],"output":{"name":"ident"}}],[11,"new","","Construct an identifier with the given name and an empty context:",34,{"inputs":[{"name":"ident"},{"name":"name"}],"output":{"name":"ident"}}],[11,"as_str","","",34,{"inputs":[{"name":"ident"}],"output":{"name":"str"}}],[11,"fmt","","",34,{"inputs":[{"name":"ident"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",34,{"inputs":[{"name":"ident"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"name"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"name"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"name"}],"output":{"name":"name"}}],[11,"decode","","",70,{"inputs":[{"name":"name"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",70,{"inputs":[{"name":"name"},{"name":"__s"}],"output":{"name":"result"}}],[11,"hash","","",70,null],[11,"partial_cmp","","",70,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"option"}}],[11,"lt","","",70,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"le","","",70,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"gt","","",70,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"ge","","",70,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"eq","","",70,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"cmp","","",70,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"ordering"}}],[11,"as_str","","",70,{"inputs":[{"name":"name"}],"output":{"name":"str"}}],[11,"usize","","",70,{"inputs":[{"name":"name"}],"output":{"name":"usize"}}],[11,"ident","","",70,{"inputs":[{"name":"name"}],"output":{"name":"ident"}}],[11,"encode","","",34,{"inputs":[{"name":"ident"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",34,{"inputs":[{"name":"ident"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",71,{"inputs":[{"name":"lifetime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",71,null],[11,"decode","","",71,{"inputs":[{"name":"lifetime"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",71,{"inputs":[{"name":"lifetime"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",71,{"inputs":[{"name":"lifetime"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"lifetime"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"clone","","",71,{"inputs":[{"name":"lifetime"}],"output":{"name":"lifetime"}}],[11,"fmt","","",72,{"inputs":[{"name":"lifetimedef"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",72,null],[11,"decode","","",72,{"inputs":[{"name":"lifetimedef"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",72,{"inputs":[{"name":"lifetimedef"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"lifetimedef"},{"name":"lifetimedef"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"lifetimedef"},{"name":"lifetimedef"}],"output":{"name":"bool"}}],[11,"clone","","",72,{"inputs":[{"name":"lifetimedef"}],"output":{"name":"lifetimedef"}}],[11,"fmt","","",35,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",35,null],[11,"decode","","",35,{"inputs":[{"name":"path"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",35,{"inputs":[{"name":"path"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"fmt","","",73,{"inputs":[{"name":"pathsegment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",73,null],[11,"decode","","",73,{"inputs":[{"name":"pathsegment"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",73,{"inputs":[{"name":"pathsegment"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"pathsegment"},{"name":"pathsegment"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"pathsegment"},{"name":"pathsegment"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"pathsegment"}],"output":{"name":"pathsegment"}}],[11,"fmt","","",74,{"inputs":[{"name":"pathparameters"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",74,null],[11,"decode","","",74,{"inputs":[{"name":"pathparameters"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",74,{"inputs":[{"name":"pathparameters"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",74,{"inputs":[{"name":"pathparameters"},{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"pathparameters"},{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"clone","","",74,{"inputs":[{"name":"pathparameters"}],"output":{"name":"pathparameters"}}],[11,"none","","",74,{"inputs":[{"name":"pathparameters"}],"output":{"name":"pathparameters"}}],[11,"is_empty","","",74,{"inputs":[{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"has_lifetimes","","",74,{"inputs":[{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"has_types","","",74,{"inputs":[{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"types","","Returns the types that the user wrote. Note that these do not necessarily map to the type\nparameters in the parenthesized case.",74,{"inputs":[{"name":"pathparameters"}],"output":{"name":"vec"}}],[11,"lifetimes","","",74,{"inputs":[{"name":"pathparameters"}],"output":{"name":"vec"}}],[11,"bindings","","",74,{"inputs":[{"name":"pathparameters"}],"output":{"name":"vec"}}],[11,"fmt","","",75,{"inputs":[{"name":"anglebracketedparameterdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",75,null],[11,"decode","","",75,{"inputs":[{"name":"anglebracketedparameterdata"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",75,{"inputs":[{"name":"anglebracketedparameterdata"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",75,{"inputs":[{"name":"anglebracketedparameterdata"},{"name":"anglebracketedparameterdata"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"anglebracketedparameterdata"},{"name":"anglebracketedparameterdata"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"anglebracketedparameterdata"}],"output":{"name":"anglebracketedparameterdata"}}],[11,"fmt","","",76,{"inputs":[{"name":"parenthesizedparameterdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",76,null],[11,"decode","","",76,{"inputs":[{"name":"parenthesizedparameterdata"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",76,{"inputs":[{"name":"parenthesizedparameterdata"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",76,{"inputs":[{"name":"parenthesizedparameterdata"},{"name":"parenthesizedparameterdata"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"parenthesizedparameterdata"},{"name":"parenthesizedparameterdata"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"parenthesizedparameterdata"}],"output":{"name":"parenthesizedparameterdata"}}],[11,"fmt","","",77,{"inputs":[{"name":"defid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",77,null],[11,"decode","","",77,{"inputs":[{"name":"defid"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",77,{"inputs":[{"name":"defid"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",77,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",77,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"option"}}],[11,"lt","","",77,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"bool"}}],[11,"le","","",77,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"bool"}}],[11,"gt","","",77,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"bool"}}],[11,"ge","","",77,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"bool"}}],[11,"cmp","","",77,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"ordering"}}],[11,"clone","","",77,{"inputs":[{"name":"defid"}],"output":{"name":"defid"}}],[11,"local_id","","Read the node id, asserting that this def-id is krate-local.",77,{"inputs":[{"name":"defid"}],"output":{"name":"u32"}}],[11,"fmt","","",78,{"inputs":[{"name":"typarambound"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",78,null],[11,"decode","","",78,{"inputs":[{"name":"typarambound"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",78,{"inputs":[{"name":"typarambound"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",78,{"inputs":[{"name":"typarambound"},{"name":"typarambound"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"typarambound"},{"name":"typarambound"}],"output":{"name":"bool"}}],[11,"clone","","",78,{"inputs":[{"name":"typarambound"}],"output":{"name":"typarambound"}}],[11,"fmt","","",79,{"inputs":[{"name":"traitboundmodifier"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",79,null],[11,"decode","","",79,{"inputs":[{"name":"traitboundmodifier"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",79,{"inputs":[{"name":"traitboundmodifier"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",79,{"inputs":[{"name":"traitboundmodifier"},{"name":"traitboundmodifier"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"traitboundmodifier"},{"name":"traitboundmodifier"}],"output":{"name":"bool"}}],[11,"clone","","",79,{"inputs":[{"name":"traitboundmodifier"}],"output":{"name":"traitboundmodifier"}}],[11,"fmt","","",80,{"inputs":[{"name":"typaram"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",80,null],[11,"decode","","",80,{"inputs":[{"name":"typaram"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",80,{"inputs":[{"name":"typaram"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"typaram"},{"name":"typaram"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"typaram"},{"name":"typaram"}],"output":{"name":"bool"}}],[11,"clone","","",80,{"inputs":[{"name":"typaram"}],"output":{"name":"typaram"}}],[11,"fmt","","",81,{"inputs":[{"name":"generics"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",81,null],[11,"decode","","",81,{"inputs":[{"name":"generics"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",81,{"inputs":[{"name":"generics"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",81,{"inputs":[{"name":"generics"},{"name":"generics"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"generics"},{"name":"generics"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"generics"}],"output":{"name":"generics"}}],[11,"is_lt_parameterized","","",81,{"inputs":[{"name":"generics"}],"output":{"name":"bool"}}],[11,"is_type_parameterized","","",81,{"inputs":[{"name":"generics"}],"output":{"name":"bool"}}],[11,"is_parameterized","","",81,{"inputs":[{"name":"generics"}],"output":{"name":"bool"}}],[11,"fmt","","",82,{"inputs":[{"name":"whereclause"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",82,null],[11,"decode","","",82,{"inputs":[{"name":"whereclause"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",82,{"inputs":[{"name":"whereclause"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",82,{"inputs":[{"name":"whereclause"},{"name":"whereclause"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"whereclause"},{"name":"whereclause"}],"output":{"name":"bool"}}],[11,"clone","","",82,{"inputs":[{"name":"whereclause"}],"output":{"name":"whereclause"}}],[11,"fmt","","",83,{"inputs":[{"name":"wherepredicate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",83,null],[11,"decode","","",83,{"inputs":[{"name":"wherepredicate"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",83,{"inputs":[{"name":"wherepredicate"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",83,{"inputs":[{"name":"wherepredicate"},{"name":"wherepredicate"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"wherepredicate"},{"name":"wherepredicate"}],"output":{"name":"bool"}}],[11,"clone","","",83,{"inputs":[{"name":"wherepredicate"}],"output":{"name":"wherepredicate"}}],[11,"fmt","","",84,{"inputs":[{"name":"whereboundpredicate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",84,null],[11,"decode","","",84,{"inputs":[{"name":"whereboundpredicate"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",84,{"inputs":[{"name":"whereboundpredicate"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",84,{"inputs":[{"name":"whereboundpredicate"},{"name":"whereboundpredicate"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"whereboundpredicate"},{"name":"whereboundpredicate"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"whereboundpredicate"}],"output":{"name":"whereboundpredicate"}}],[11,"fmt","","",85,{"inputs":[{"name":"whereregionpredicate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",85,null],[11,"decode","","",85,{"inputs":[{"name":"whereregionpredicate"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",85,{"inputs":[{"name":"whereregionpredicate"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",85,{"inputs":[{"name":"whereregionpredicate"},{"name":"whereregionpredicate"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"whereregionpredicate"},{"name":"whereregionpredicate"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"whereregionpredicate"}],"output":{"name":"whereregionpredicate"}}],[11,"fmt","","",86,{"inputs":[{"name":"whereeqpredicate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",86,null],[11,"decode","","",86,{"inputs":[{"name":"whereeqpredicate"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",86,{"inputs":[{"name":"whereeqpredicate"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",86,{"inputs":[{"name":"whereeqpredicate"},{"name":"whereeqpredicate"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"whereeqpredicate"},{"name":"whereeqpredicate"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"whereeqpredicate"}],"output":{"name":"whereeqpredicate"}}],[11,"fmt","","",87,{"inputs":[{"name":"crate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",87,null],[11,"decode","","",87,{"inputs":[{"name":"crate"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",87,{"inputs":[{"name":"crate"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",87,{"inputs":[{"name":"crate"},{"name":"crate"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"crate"},{"name":"crate"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"crate"}],"output":{"name":"crate"}}],[11,"fmt","","",88,{"inputs":[{"name":"metaitem_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",88,null],[11,"decode","","",88,{"inputs":[{"name":"metaitem_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",88,{"inputs":[{"name":"metaitem_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"metaitem_"}],"output":{"name":"metaitem_"}}],[11,"eq","","",88,{"inputs":[{"name":"metaitem_"},{"name":"metaitem_"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"block"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",37,null],[11,"decode","","",37,{"inputs":[{"name":"block"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",37,{"inputs":[{"name":"block"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"block"},{"name":"block"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"block"},{"name":"block"}],"output":{"name":"bool"}}],[11,"clone","","",37,{"inputs":[{"name":"block"}],"output":{"name":"block"}}],[11,"fmt","","",89,{"inputs":[{"name":"pat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",89,null],[11,"decode","","",89,{"inputs":[{"name":"pat"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",89,{"inputs":[{"name":"pat"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",89,{"inputs":[{"name":"pat"},{"name":"pat"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"pat"},{"name":"pat"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"pat"}],"output":{"name":"pat"}}],[11,"fmt","","",90,{"inputs":[{"name":"fieldpat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",90,null],[11,"decode","","",90,{"inputs":[{"name":"fieldpat"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",90,{"inputs":[{"name":"fieldpat"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",90,{"inputs":[{"name":"fieldpat"},{"name":"fieldpat"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"fieldpat"},{"name":"fieldpat"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"fieldpat"}],"output":{"name":"fieldpat"}}],[11,"fmt","","",91,{"inputs":[{"name":"bindingmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",91,null],[11,"decode","","",91,{"inputs":[{"name":"bindingmode"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",91,{"inputs":[{"name":"bindingmode"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",91,{"inputs":[{"name":"bindingmode"},{"name":"bindingmode"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"bindingmode"},{"name":"bindingmode"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"bindingmode"}],"output":{"name":"bindingmode"}}],[11,"fmt","","",92,{"inputs":[{"name":"patwildkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",92,null],[11,"decode","","",92,{"inputs":[{"name":"patwildkind"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",92,{"inputs":[{"name":"patwildkind"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",92,{"inputs":[{"name":"patwildkind"},{"name":"patwildkind"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"patwildkind"},{"name":"patwildkind"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"patwildkind"}],"output":{"name":"patwildkind"}}],[11,"fmt","","",93,{"inputs":[{"name":"pat_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",93,null],[11,"decode","","",93,{"inputs":[{"name":"pat_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",93,{"inputs":[{"name":"pat_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",93,{"inputs":[{"name":"pat_"},{"name":"pat_"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"pat_"},{"name":"pat_"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"pat_"}],"output":{"name":"pat_"}}],[11,"fmt","","",94,{"inputs":[{"name":"mutability"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",94,null],[11,"decode","","",94,{"inputs":[{"name":"mutability"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",94,{"inputs":[{"name":"mutability"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",94,{"inputs":[{"name":"mutability"},{"name":"mutability"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"mutability"},{"name":"mutability"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"mutability"}],"output":{"name":"mutability"}}],[11,"fmt","","",95,{"inputs":[{"name":"binop_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",95,null],[11,"decode","","",95,{"inputs":[{"name":"binop_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",95,{"inputs":[{"name":"binop_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",95,{"inputs":[{"name":"binop_"},{"name":"binop_"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"binop_"},{"name":"binop_"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"binop_"}],"output":{"name":"binop_"}}],[11,"fmt","","",96,{"inputs":[{"name":"unop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",96,null],[11,"decode","","",96,{"inputs":[{"name":"unop"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",96,{"inputs":[{"name":"unop"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",96,{"inputs":[{"name":"unop"},{"name":"unop"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"unop"},{"name":"unop"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"unop"}],"output":{"name":"unop"}}],[11,"fmt","","",97,{"inputs":[{"name":"stmt_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",97,null],[11,"decode","","",97,{"inputs":[{"name":"stmt_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",97,{"inputs":[{"name":"stmt_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",97,{"inputs":[{"name":"stmt_"},{"name":"stmt_"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"stmt_"},{"name":"stmt_"}],"output":{"name":"bool"}}],[11,"clone","","",97,{"inputs":[{"name":"stmt_"}],"output":{"name":"stmt_"}}],[11,"fmt","","",98,{"inputs":[{"name":"macstmtstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",98,null],[11,"decode","","",98,{"inputs":[{"name":"macstmtstyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",98,{"inputs":[{"name":"macstmtstyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",98,{"inputs":[{"name":"macstmtstyle"},{"name":"macstmtstyle"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"macstmtstyle"},{"name":"macstmtstyle"}],"output":{"name":"bool"}}],[11,"clone","","",98,{"inputs":[{"name":"macstmtstyle"}],"output":{"name":"macstmtstyle"}}],[11,"fmt","","",99,{"inputs":[{"name":"localsource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",99,null],[11,"decode","","",99,{"inputs":[{"name":"localsource"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",99,{"inputs":[{"name":"localsource"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",99,{"inputs":[{"name":"localsource"},{"name":"localsource"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"localsource"},{"name":"localsource"}],"output":{"name":"bool"}}],[11,"clone","","",99,{"inputs":[{"name":"localsource"}],"output":{"name":"localsource"}}],[11,"fmt","","",100,{"inputs":[{"name":"local"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",100,null],[11,"decode","","",100,{"inputs":[{"name":"local"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",100,{"inputs":[{"name":"local"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",100,{"inputs":[{"name":"local"},{"name":"local"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"local"},{"name":"local"}],"output":{"name":"bool"}}],[11,"clone","","",100,{"inputs":[{"name":"local"}],"output":{"name":"local"}}],[11,"fmt","","",101,{"inputs":[{"name":"decl_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",101,null],[11,"decode","","",101,{"inputs":[{"name":"decl_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",101,{"inputs":[{"name":"decl_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",101,{"inputs":[{"name":"decl_"},{"name":"decl_"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"decl_"},{"name":"decl_"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"decl_"}],"output":{"name":"decl_"}}],[11,"fmt","","",39,{"inputs":[{"name":"arm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",39,null],[11,"decode","","",39,{"inputs":[{"name":"arm"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",39,{"inputs":[{"name":"arm"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"arm"},{"name":"arm"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"arm"},{"name":"arm"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"arm"}],"output":{"name":"arm"}}],[11,"fmt","","",102,{"inputs":[{"name":"field"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",102,null],[11,"decode","","",102,{"inputs":[{"name":"field"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",102,{"inputs":[{"name":"field"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",102,{"inputs":[{"name":"field"},{"name":"field"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"field"},{"name":"field"}],"output":{"name":"bool"}}],[11,"clone","","",102,{"inputs":[{"name":"field"}],"output":{"name":"field"}}],[11,"fmt","","",103,{"inputs":[{"name":"blockcheckmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",103,null],[11,"decode","","",103,{"inputs":[{"name":"blockcheckmode"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",103,{"inputs":[{"name":"blockcheckmode"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",103,{"inputs":[{"name":"blockcheckmode"},{"name":"blockcheckmode"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"blockcheckmode"},{"name":"blockcheckmode"}],"output":{"name":"bool"}}],[11,"clone","","",103,{"inputs":[{"name":"blockcheckmode"}],"output":{"name":"blockcheckmode"}}],[11,"fmt","","",104,{"inputs":[{"name":"unsafesource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",104,null],[11,"decode","","",104,{"inputs":[{"name":"unsafesource"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",104,{"inputs":[{"name":"unsafesource"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",104,{"inputs":[{"name":"unsafesource"},{"name":"unsafesource"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"unsafesource"},{"name":"unsafesource"}],"output":{"name":"bool"}}],[11,"clone","","",104,{"inputs":[{"name":"unsafesource"}],"output":{"name":"unsafesource"}}],[11,"fmt","","",105,{"inputs":[{"name":"expr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",105,null],[11,"decode","","",105,{"inputs":[{"name":"expr"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",105,{"inputs":[{"name":"expr"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",105,{"inputs":[{"name":"expr"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"expr"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"clone","","",105,{"inputs":[{"name":"expr"}],"output":{"name":"expr"}}],[11,"fmt","","",106,{"inputs":[{"name":"expr_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",106,null],[11,"decode","","",106,{"inputs":[{"name":"expr_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",106,{"inputs":[{"name":"expr_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",106,{"inputs":[{"name":"expr_"},{"name":"expr_"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"expr_"},{"name":"expr_"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"expr_"}],"output":{"name":"expr_"}}],[11,"fmt","","",107,{"inputs":[{"name":"qself"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",107,null],[11,"decode","","",107,{"inputs":[{"name":"qself"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",107,{"inputs":[{"name":"qself"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",107,{"inputs":[{"name":"qself"},{"name":"qself"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"qself"},{"name":"qself"}],"output":{"name":"bool"}}],[11,"clone","","",107,{"inputs":[{"name":"qself"}],"output":{"name":"qself"}}],[11,"fmt","","",108,{"inputs":[{"name":"matchsource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",108,null],[11,"decode","","",108,{"inputs":[{"name":"matchsource"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",108,{"inputs":[{"name":"matchsource"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",108,{"inputs":[{"name":"matchsource"},{"name":"matchsource"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"matchsource"},{"name":"matchsource"}],"output":{"name":"bool"}}],[11,"clone","","",108,{"inputs":[{"name":"matchsource"}],"output":{"name":"matchsource"}}],[11,"fmt","","",109,{"inputs":[{"name":"captureclause"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",109,null],[11,"decode","","",109,{"inputs":[{"name":"captureclause"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",109,{"inputs":[{"name":"captureclause"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",109,{"inputs":[{"name":"captureclause"},{"name":"captureclause"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"captureclause"},{"name":"captureclause"}],"output":{"name":"bool"}}],[11,"clone","","",109,{"inputs":[{"name":"captureclause"}],"output":{"name":"captureclause"}}],[11,"fmt","","",110,{"inputs":[{"name":"delimited"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",110,null],[11,"decode","","",110,{"inputs":[{"name":"delimited"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",110,{"inputs":[{"name":"delimited"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",110,{"inputs":[{"name":"delimited"},{"name":"delimited"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"delimited"},{"name":"delimited"}],"output":{"name":"bool"}}],[11,"clone","","",110,{"inputs":[{"name":"delimited"}],"output":{"name":"delimited"}}],[11,"open_token","","Returns the opening delimiter as a token.",110,{"inputs":[{"name":"delimited"}],"output":{"name":"token"}}],[11,"close_token","","Returns the closing delimiter as a token.",110,{"inputs":[{"name":"delimited"}],"output":{"name":"token"}}],[11,"open_tt","","Returns the opening delimiter as a token tree.",110,{"inputs":[{"name":"delimited"}],"output":{"name":"tokentree"}}],[11,"close_tt","","Returns the closing delimiter as a token tree.",110,{"inputs":[{"name":"delimited"}],"output":{"name":"tokentree"}}],[11,"fmt","","",111,{"inputs":[{"name":"sequencerepetition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",111,null],[11,"decode","","",111,{"inputs":[{"name":"sequencerepetition"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",111,{"inputs":[{"name":"sequencerepetition"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",111,{"inputs":[{"name":"sequencerepetition"},{"name":"sequencerepetition"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"sequencerepetition"},{"name":"sequencerepetition"}],"output":{"name":"bool"}}],[11,"clone","","",111,{"inputs":[{"name":"sequencerepetition"}],"output":{"name":"sequencerepetition"}}],[11,"fmt","","",112,{"inputs":[{"name":"kleeneop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",112,null],[11,"decode","","",112,{"inputs":[{"name":"kleeneop"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",112,{"inputs":[{"name":"kleeneop"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",112,{"inputs":[{"name":"kleeneop"},{"name":"kleeneop"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"kleeneop"},{"name":"kleeneop"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"kleeneop"}],"output":{"name":"kleeneop"}}],[11,"fmt","","",30,{"inputs":[{"name":"tokentree"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",30,null],[11,"decode","","",30,{"inputs":[{"name":"tokentree"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",30,{"inputs":[{"name":"tokentree"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"tokentree"},{"name":"tokentree"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"tokentree"},{"name":"tokentree"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"tokentree"}],"output":{"name":"tokentree"}}],[11,"len","","",30,{"inputs":[{"name":"tokentree"}],"output":{"name":"usize"}}],[11,"get_tt","","",30,{"inputs":[{"name":"tokentree"},{"name":"usize"}],"output":{"name":"tokentree"}}],[11,"get_span","","Returns the `Span` corresponding to this token tree.",30,{"inputs":[{"name":"tokentree"}],"output":{"name":"span"}}],[11,"parse","","Use this token tree as a matcher to parse given tts.",30,null],[11,"fmt","","",113,{"inputs":[{"name":"mac_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",113,null],[11,"decode","","",113,{"inputs":[{"name":"mac_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",113,{"inputs":[{"name":"mac_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",113,{"inputs":[{"name":"mac_"},{"name":"mac_"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"mac_"},{"name":"mac_"}],"output":{"name":"bool"}}],[11,"clone","","",113,{"inputs":[{"name":"mac_"}],"output":{"name":"mac_"}}],[11,"fmt","","",114,{"inputs":[{"name":"strstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",114,null],[11,"decode","","",114,{"inputs":[{"name":"strstyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",114,{"inputs":[{"name":"strstyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",114,{"inputs":[{"name":"strstyle"},{"name":"strstyle"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"strstyle"},{"name":"strstyle"}],"output":{"name":"bool"}}],[11,"clone","","",114,{"inputs":[{"name":"strstyle"}],"output":{"name":"strstyle"}}],[11,"fmt","","",115,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",115,null],[11,"decode","","",115,{"inputs":[{"name":"sign"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",115,{"inputs":[{"name":"sign"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",115,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"new","","",115,{"inputs":[{"name":"sign"},{"name":"t"}],"output":{"name":"sign"}}],[11,"fmt","","",116,{"inputs":[{"name":"litinttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",116,null],[11,"decode","","",116,{"inputs":[{"name":"litinttype"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",116,{"inputs":[{"name":"litinttype"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",116,{"inputs":[{"name":"litinttype"},{"name":"litinttype"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"litinttype"},{"name":"litinttype"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"litinttype"}],"output":{"name":"litinttype"}}],[11,"suffix_len","","",116,{"inputs":[{"name":"litinttype"}],"output":{"name":"usize"}}],[11,"fmt","","",117,{"inputs":[{"name":"lit_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",117,null],[11,"decode","","",117,{"inputs":[{"name":"lit_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",117,{"inputs":[{"name":"lit_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",117,{"inputs":[{"name":"lit_"},{"name":"lit_"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"lit_"},{"name":"lit_"}],"output":{"name":"bool"}}],[11,"clone","","",117,{"inputs":[{"name":"lit_"}],"output":{"name":"lit_"}}],[11,"fmt","","",118,{"inputs":[{"name":"mutty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",118,null],[11,"decode","","",118,{"inputs":[{"name":"mutty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",118,{"inputs":[{"name":"mutty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",118,{"inputs":[{"name":"mutty"},{"name":"mutty"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"mutty"},{"name":"mutty"}],"output":{"name":"bool"}}],[11,"clone","","",118,{"inputs":[{"name":"mutty"}],"output":{"name":"mutty"}}],[11,"fmt","","",119,{"inputs":[{"name":"typefield"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",119,null],[11,"decode","","",119,{"inputs":[{"name":"typefield"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",119,{"inputs":[{"name":"typefield"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",119,{"inputs":[{"name":"typefield"},{"name":"typefield"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"typefield"},{"name":"typefield"}],"output":{"name":"bool"}}],[11,"clone","","",119,{"inputs":[{"name":"typefield"}],"output":{"name":"typefield"}}],[11,"fmt","","",120,{"inputs":[{"name":"methodsig"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",120,null],[11,"decode","","",120,{"inputs":[{"name":"methodsig"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",120,{"inputs":[{"name":"methodsig"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",120,{"inputs":[{"name":"methodsig"},{"name":"methodsig"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"methodsig"},{"name":"methodsig"}],"output":{"name":"bool"}}],[11,"clone","","",120,{"inputs":[{"name":"methodsig"}],"output":{"name":"methodsig"}}],[11,"fmt","","",121,{"inputs":[{"name":"traititem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",121,null],[11,"decode","","",121,{"inputs":[{"name":"traititem"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",121,{"inputs":[{"name":"traititem"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",121,{"inputs":[{"name":"traititem"},{"name":"traititem"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"traititem"},{"name":"traititem"}],"output":{"name":"bool"}}],[11,"clone","","",121,{"inputs":[{"name":"traititem"}],"output":{"name":"traititem"}}],[11,"fmt","","",122,{"inputs":[{"name":"traititem_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",122,null],[11,"decode","","",122,{"inputs":[{"name":"traititem_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",122,{"inputs":[{"name":"traititem_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",122,{"inputs":[{"name":"traititem_"},{"name":"traititem_"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"traititem_"},{"name":"traititem_"}],"output":{"name":"bool"}}],[11,"clone","","",122,{"inputs":[{"name":"traititem_"}],"output":{"name":"traititem_"}}],[11,"fmt","","",123,{"inputs":[{"name":"implitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",123,null],[11,"decode","","",123,{"inputs":[{"name":"implitem"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",123,{"inputs":[{"name":"implitem"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",123,{"inputs":[{"name":"implitem"},{"name":"implitem"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"implitem"},{"name":"implitem"}],"output":{"name":"bool"}}],[11,"clone","","",123,{"inputs":[{"name":"implitem"}],"output":{"name":"implitem"}}],[11,"fmt","","",124,{"inputs":[{"name":"implitem_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",124,null],[11,"decode","","",124,{"inputs":[{"name":"implitem_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",124,{"inputs":[{"name":"implitem_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",124,{"inputs":[{"name":"implitem_"},{"name":"implitem_"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"implitem_"},{"name":"implitem_"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"implitem_"}],"output":{"name":"implitem_"}}],[11,"hash","","",125,null],[11,"decode","","",125,{"inputs":[{"name":"intty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",125,{"inputs":[{"name":"intty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",125,{"inputs":[{"name":"intty"},{"name":"intty"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"intty"},{"name":"intty"}],"output":{"name":"bool"}}],[11,"clone","","",125,{"inputs":[{"name":"intty"}],"output":{"name":"intty"}}],[11,"fmt","","",125,{"inputs":[{"name":"intty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",125,{"inputs":[{"name":"intty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"suffix_len","","",125,{"inputs":[{"name":"intty"}],"output":{"name":"usize"}}],[11,"hash","","",126,null],[11,"decode","","",126,{"inputs":[{"name":"uintty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",126,{"inputs":[{"name":"uintty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",126,{"inputs":[{"name":"uintty"},{"name":"uintty"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"uintty"},{"name":"uintty"}],"output":{"name":"bool"}}],[11,"clone","","",126,{"inputs":[{"name":"uintty"}],"output":{"name":"uintty"}}],[11,"suffix_len","","",126,{"inputs":[{"name":"uintty"}],"output":{"name":"usize"}}],[11,"fmt","","",126,{"inputs":[{"name":"uintty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"uintty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",127,null],[11,"decode","","",127,{"inputs":[{"name":"floatty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",127,{"inputs":[{"name":"floatty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",127,{"inputs":[{"name":"floatty"},{"name":"floatty"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"floatty"},{"name":"floatty"}],"output":{"name":"bool"}}],[11,"clone","","",127,{"inputs":[{"name":"floatty"}],"output":{"name":"floatty"}}],[11,"fmt","","",127,{"inputs":[{"name":"floatty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"floatty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"suffix_len","","",127,{"inputs":[{"name":"floatty"}],"output":{"name":"usize"}}],[11,"fmt","","",128,{"inputs":[{"name":"typebinding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",128,null],[11,"decode","","",128,{"inputs":[{"name":"typebinding"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",128,{"inputs":[{"name":"typebinding"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",128,{"inputs":[{"name":"typebinding"},{"name":"typebinding"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"typebinding"},{"name":"typebinding"}],"output":{"name":"bool"}}],[11,"clone","","",128,{"inputs":[{"name":"typebinding"}],"output":{"name":"typebinding"}}],[11,"fmt","","",36,{"inputs":[{"name":"ty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",36,null],[11,"decode","","",36,{"inputs":[{"name":"ty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",36,{"inputs":[{"name":"ty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"ty"},{"name":"ty"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"ty"},{"name":"ty"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"ty"}],"output":{"name":"ty"}}],[11,"fmt","","",129,{"inputs":[{"name":"primty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",129,null],[11,"decode","","",129,{"inputs":[{"name":"primty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",129,{"inputs":[{"name":"primty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",129,{"inputs":[{"name":"primty"},{"name":"primty"}],"output":{"name":"bool"}}],[11,"ne","","",129,{"inputs":[{"name":"primty"},{"name":"primty"}],"output":{"name":"bool"}}],[11,"clone","","",129,{"inputs":[{"name":"primty"}],"output":{"name":"primty"}}],[11,"fmt","","",130,{"inputs":[{"name":"barefnty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",130,null],[11,"decode","","",130,{"inputs":[{"name":"barefnty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",130,{"inputs":[{"name":"barefnty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",130,{"inputs":[{"name":"barefnty"},{"name":"barefnty"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"barefnty"},{"name":"barefnty"}],"output":{"name":"bool"}}],[11,"clone","","",130,{"inputs":[{"name":"barefnty"}],"output":{"name":"barefnty"}}],[11,"fmt","","",131,{"inputs":[{"name":"ty_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",131,null],[11,"decode","","",131,{"inputs":[{"name":"ty_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",131,{"inputs":[{"name":"ty_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",131,{"inputs":[{"name":"ty_"},{"name":"ty_"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"ty_"},{"name":"ty_"}],"output":{"name":"bool"}}],[11,"clone","","",131,{"inputs":[{"name":"ty_"}],"output":{"name":"ty_"}}],[11,"fmt","","",132,{"inputs":[{"name":"asmdialect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",132,null],[11,"decode","","",132,{"inputs":[{"name":"asmdialect"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",132,{"inputs":[{"name":"asmdialect"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",132,{"inputs":[{"name":"asmdialect"},{"name":"asmdialect"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"asmdialect"},{"name":"asmdialect"}],"output":{"name":"bool"}}],[11,"clone","","",132,{"inputs":[{"name":"asmdialect"}],"output":{"name":"asmdialect"}}],[11,"fmt","","",133,{"inputs":[{"name":"inlineasm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",133,null],[11,"decode","","",133,{"inputs":[{"name":"inlineasm"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",133,{"inputs":[{"name":"inlineasm"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",133,{"inputs":[{"name":"inlineasm"},{"name":"inlineasm"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"inlineasm"},{"name":"inlineasm"}],"output":{"name":"bool"}}],[11,"clone","","",133,{"inputs":[{"name":"inlineasm"}],"output":{"name":"inlineasm"}}],[11,"fmt","","",134,{"inputs":[{"name":"arg"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",134,null],[11,"decode","","",134,{"inputs":[{"name":"arg"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",134,{"inputs":[{"name":"arg"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",134,{"inputs":[{"name":"arg"},{"name":"arg"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"arg"},{"name":"arg"}],"output":{"name":"bool"}}],[11,"clone","","",134,{"inputs":[{"name":"arg"}],"output":{"name":"arg"}}],[11,"new_self","","",134,{"inputs":[{"name":"arg"},{"name":"span"},{"name":"mutability"},{"name":"ident"}],"output":{"name":"arg"}}],[11,"fmt","","",135,{"inputs":[{"name":"fndecl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",135,null],[11,"decode","","",135,{"inputs":[{"name":"fndecl"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",135,{"inputs":[{"name":"fndecl"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",135,{"inputs":[{"name":"fndecl"},{"name":"fndecl"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"fndecl"},{"name":"fndecl"}],"output":{"name":"bool"}}],[11,"clone","","",135,{"inputs":[{"name":"fndecl"}],"output":{"name":"fndecl"}}],[11,"fmt","","",136,{"inputs":[{"name":"unsafety"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",136,null],[11,"decode","","",136,{"inputs":[{"name":"unsafety"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",136,{"inputs":[{"name":"unsafety"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",136,{"inputs":[{"name":"unsafety"},{"name":"unsafety"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"unsafety"},{"name":"unsafety"}],"output":{"name":"bool"}}],[11,"clone","","",136,{"inputs":[{"name":"unsafety"}],"output":{"name":"unsafety"}}],[11,"fmt","","",136,{"inputs":[{"name":"unsafety"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",137,null],[11,"decode","","",137,{"inputs":[{"name":"implpolarity"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",137,{"inputs":[{"name":"implpolarity"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",137,{"inputs":[{"name":"implpolarity"},{"name":"implpolarity"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"implpolarity"},{"name":"implpolarity"}],"output":{"name":"bool"}}],[11,"clone","","",137,{"inputs":[{"name":"implpolarity"}],"output":{"name":"implpolarity"}}],[11,"fmt","","",137,{"inputs":[{"name":"implpolarity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",138,{"inputs":[{"name":"functionretty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",138,null],[11,"decode","","",138,{"inputs":[{"name":"functionretty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",138,{"inputs":[{"name":"functionretty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",138,{"inputs":[{"name":"functionretty"},{"name":"functionretty"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"functionretty"},{"name":"functionretty"}],"output":{"name":"bool"}}],[11,"clone","","",138,{"inputs":[{"name":"functionretty"}],"output":{"name":"functionretty"}}],[11,"span","","",138,{"inputs":[{"name":"functionretty"}],"output":{"name":"span"}}],[11,"fmt","","",139,{"inputs":[{"name":"explicitself_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",139,null],[11,"decode","","",139,{"inputs":[{"name":"explicitself_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",139,{"inputs":[{"name":"explicitself_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",139,{"inputs":[{"name":"explicitself_"},{"name":"explicitself_"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"explicitself_"},{"name":"explicitself_"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"explicitself_"}],"output":{"name":"explicitself_"}}],[11,"fmt","","",140,{"inputs":[{"name":"mod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",140,null],[11,"decode","","",140,{"inputs":[{"name":"mod"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",140,{"inputs":[{"name":"mod"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",140,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"mod"}],"output":{"name":"mod"}}],[11,"fmt","","",141,{"inputs":[{"name":"foreignmod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",141,null],[11,"decode","","",141,{"inputs":[{"name":"foreignmod"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",141,{"inputs":[{"name":"foreignmod"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",141,{"inputs":[{"name":"foreignmod"},{"name":"foreignmod"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"foreignmod"},{"name":"foreignmod"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"foreignmod"}],"output":{"name":"foreignmod"}}],[11,"fmt","","",142,{"inputs":[{"name":"variantarg"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",142,null],[11,"decode","","",142,{"inputs":[{"name":"variantarg"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",142,{"inputs":[{"name":"variantarg"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",142,{"inputs":[{"name":"variantarg"},{"name":"variantarg"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"variantarg"},{"name":"variantarg"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"variantarg"}],"output":{"name":"variantarg"}}],[11,"fmt","","",143,{"inputs":[{"name":"variantkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",143,null],[11,"decode","","",143,{"inputs":[{"name":"variantkind"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",143,{"inputs":[{"name":"variantkind"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",143,{"inputs":[{"name":"variantkind"},{"name":"variantkind"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"variantkind"},{"name":"variantkind"}],"output":{"name":"bool"}}],[11,"clone","","",143,{"inputs":[{"name":"variantkind"}],"output":{"name":"variantkind"}}],[11,"fmt","","",144,{"inputs":[{"name":"enumdef"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",144,null],[11,"decode","","",144,{"inputs":[{"name":"enumdef"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",144,{"inputs":[{"name":"enumdef"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",144,{"inputs":[{"name":"enumdef"},{"name":"enumdef"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"enumdef"},{"name":"enumdef"}],"output":{"name":"bool"}}],[11,"clone","","",144,{"inputs":[{"name":"enumdef"}],"output":{"name":"enumdef"}}],[11,"fmt","","",145,{"inputs":[{"name":"variant_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",145,null],[11,"decode","","",145,{"inputs":[{"name":"variant_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",145,{"inputs":[{"name":"variant_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",145,{"inputs":[{"name":"variant_"},{"name":"variant_"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"variant_"},{"name":"variant_"}],"output":{"name":"bool"}}],[11,"clone","","",145,{"inputs":[{"name":"variant_"}],"output":{"name":"variant_"}}],[11,"fmt","","",146,{"inputs":[{"name":"pathlistitem_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",146,null],[11,"decode","","",146,{"inputs":[{"name":"pathlistitem_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",146,{"inputs":[{"name":"pathlistitem_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",146,{"inputs":[{"name":"pathlistitem_"},{"name":"pathlistitem_"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"pathlistitem_"},{"name":"pathlistitem_"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"pathlistitem_"}],"output":{"name":"pathlistitem_"}}],[11,"id","","",146,{"inputs":[{"name":"pathlistitem_"}],"output":{"name":"u32"}}],[11,"fmt","","",147,{"inputs":[{"name":"viewpath_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",147,null],[11,"decode","","",147,{"inputs":[{"name":"viewpath_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",147,{"inputs":[{"name":"viewpath_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",147,{"inputs":[{"name":"viewpath_"},{"name":"viewpath_"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"viewpath_"},{"name":"viewpath_"}],"output":{"name":"bool"}}],[11,"clone","","",147,{"inputs":[{"name":"viewpath_"}],"output":{"name":"viewpath_"}}],[11,"fmt","","",148,{"inputs":[{"name":"attrstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",148,null],[11,"decode","","",148,{"inputs":[{"name":"attrstyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",148,{"inputs":[{"name":"attrstyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",148,{"inputs":[{"name":"attrstyle"},{"name":"attrstyle"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"attrstyle"},{"name":"attrstyle"}],"output":{"name":"bool"}}],[11,"clone","","",148,{"inputs":[{"name":"attrstyle"}],"output":{"name":"attrstyle"}}],[11,"fmt","","",149,{"inputs":[{"name":"attrid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",149,null],[11,"decode","","",149,{"inputs":[{"name":"attrid"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",149,{"inputs":[{"name":"attrid"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",149,{"inputs":[{"name":"attrid"},{"name":"attrid"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"attrid"},{"name":"attrid"}],"output":{"name":"bool"}}],[11,"clone","","",149,{"inputs":[{"name":"attrid"}],"output":{"name":"attrid"}}],[11,"fmt","","",150,{"inputs":[{"name":"attribute_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",150,null],[11,"decode","","",150,{"inputs":[{"name":"attribute_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",150,{"inputs":[{"name":"attribute_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",150,{"inputs":[{"name":"attribute_"},{"name":"attribute_"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"attribute_"},{"name":"attribute_"}],"output":{"name":"bool"}}],[11,"clone","","",150,{"inputs":[{"name":"attribute_"}],"output":{"name":"attribute_"}}],[11,"fmt","","",151,{"inputs":[{"name":"traitref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",151,null],[11,"decode","","",151,{"inputs":[{"name":"traitref"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",151,{"inputs":[{"name":"traitref"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",151,{"inputs":[{"name":"traitref"},{"name":"traitref"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"traitref"},{"name":"traitref"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"traitref"}],"output":{"name":"traitref"}}],[11,"fmt","","",152,{"inputs":[{"name":"polytraitref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",152,null],[11,"decode","","",152,{"inputs":[{"name":"polytraitref"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",152,{"inputs":[{"name":"polytraitref"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",152,{"inputs":[{"name":"polytraitref"},{"name":"polytraitref"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"polytraitref"},{"name":"polytraitref"}],"output":{"name":"bool"}}],[11,"clone","","",152,{"inputs":[{"name":"polytraitref"}],"output":{"name":"polytraitref"}}],[11,"fmt","","",153,{"inputs":[{"name":"visibility"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",153,null],[11,"decode","","",153,{"inputs":[{"name":"visibility"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",153,{"inputs":[{"name":"visibility"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",153,{"inputs":[{"name":"visibility"},{"name":"visibility"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"visibility"},{"name":"visibility"}],"output":{"name":"bool"}}],[11,"clone","","",153,{"inputs":[{"name":"visibility"}],"output":{"name":"visibility"}}],[11,"inherit_from","","",153,{"inputs":[{"name":"visibility"},{"name":"visibility"}],"output":{"name":"visibility"}}],[11,"fmt","","",154,{"inputs":[{"name":"structfield_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",154,null],[11,"decode","","",154,{"inputs":[{"name":"structfield_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",154,{"inputs":[{"name":"structfield_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",154,{"inputs":[{"name":"structfield_"},{"name":"structfield_"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"structfield_"},{"name":"structfield_"}],"output":{"name":"bool"}}],[11,"clone","","",154,{"inputs":[{"name":"structfield_"}],"output":{"name":"structfield_"}}],[11,"ident","","",154,{"inputs":[{"name":"structfield_"}],"output":{"name":"option"}}],[11,"fmt","","",155,{"inputs":[{"name":"structfieldkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",155,null],[11,"decode","","",155,{"inputs":[{"name":"structfieldkind"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",155,{"inputs":[{"name":"structfieldkind"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",155,{"inputs":[{"name":"structfieldkind"},{"name":"structfieldkind"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"structfieldkind"},{"name":"structfieldkind"}],"output":{"name":"bool"}}],[11,"clone","","",155,{"inputs":[{"name":"structfieldkind"}],"output":{"name":"structfieldkind"}}],[11,"is_unnamed","","",155,{"inputs":[{"name":"structfieldkind"}],"output":{"name":"bool"}}],[11,"fmt","","",156,{"inputs":[{"name":"structdef"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",156,null],[11,"decode","","",156,{"inputs":[{"name":"structdef"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",156,{"inputs":[{"name":"structdef"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",156,{"inputs":[{"name":"structdef"},{"name":"structdef"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"structdef"},{"name":"structdef"}],"output":{"name":"bool"}}],[11,"clone","","",156,{"inputs":[{"name":"structdef"}],"output":{"name":"structdef"}}],[11,"fmt","","",157,{"inputs":[{"name":"item"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",157,null],[11,"decode","","",157,{"inputs":[{"name":"item"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",157,{"inputs":[{"name":"item"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",157,{"inputs":[{"name":"item"},{"name":"item"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"item"},{"name":"item"}],"output":{"name":"bool"}}],[11,"clone","","",157,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"fmt","","",158,{"inputs":[{"name":"item_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",158,null],[11,"decode","","",158,{"inputs":[{"name":"item_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",158,{"inputs":[{"name":"item_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",158,{"inputs":[{"name":"item_"},{"name":"item_"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"item_"},{"name":"item_"}],"output":{"name":"bool"}}],[11,"clone","","",158,{"inputs":[{"name":"item_"}],"output":{"name":"item_"}}],[11,"descriptive_variant","","",158,{"inputs":[{"name":"item_"}],"output":{"name":"str"}}],[11,"fmt","","",159,{"inputs":[{"name":"foreignitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",159,null],[11,"decode","","",159,{"inputs":[{"name":"foreignitem"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",159,{"inputs":[{"name":"foreignitem"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",159,{"inputs":[{"name":"foreignitem"},{"name":"foreignitem"}],"output":{"name":"bool"}}],[11,"ne","","",159,{"inputs":[{"name":"foreignitem"},{"name":"foreignitem"}],"output":{"name":"bool"}}],[11,"clone","","",159,{"inputs":[{"name":"foreignitem"}],"output":{"name":"foreignitem"}}],[11,"fmt","","",160,{"inputs":[{"name":"foreignitem_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",160,null],[11,"decode","","",160,{"inputs":[{"name":"foreignitem_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",160,{"inputs":[{"name":"foreignitem_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",160,{"inputs":[{"name":"foreignitem_"},{"name":"foreignitem_"}],"output":{"name":"bool"}}],[11,"ne","","",160,{"inputs":[{"name":"foreignitem_"},{"name":"foreignitem_"}],"output":{"name":"bool"}}],[11,"clone","","",160,{"inputs":[{"name":"foreignitem_"}],"output":{"name":"foreignitem_"}}],[11,"descriptive_variant","","",160,{"inputs":[{"name":"foreignitem_"}],"output":{"name":"str"}}],[11,"fmt","","",161,{"inputs":[{"name":"inlineditem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",161,null],[11,"decode","","",161,{"inputs":[{"name":"inlineditem"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",161,{"inputs":[{"name":"inlineditem"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",161,{"inputs":[{"name":"inlineditem"},{"name":"inlineditem"}],"output":{"name":"bool"}}],[11,"ne","","",161,{"inputs":[{"name":"inlineditem"},{"name":"inlineditem"}],"output":{"name":"bool"}}],[11,"clone","","",161,{"inputs":[{"name":"inlineditem"}],"output":{"name":"inlineditem"}}],[11,"fmt","","",162,{"inputs":[{"name":"macrodef"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",162,null],[11,"decode","","",162,{"inputs":[{"name":"macrodef"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",162,{"inputs":[{"name":"macrodef"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",162,{"inputs":[{"name":"macrodef"},{"name":"macrodef"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"macrodef"},{"name":"macrodef"}],"output":{"name":"bool"}}],[11,"clone","","",162,{"inputs":[{"name":"macrodef"}],"output":{"name":"macrodef"}}],[11,"fmt","syntax::abi","",163,{"inputs":[{"name":"os"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",163,{"inputs":[{"name":"os"},{"name":"os"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"os"},{"name":"os"}],"output":{"name":"bool"}}],[11,"clone","","",163,{"inputs":[{"name":"os"}],"output":{"name":"os"}}],[11,"fmt","","",164,{"inputs":[{"name":"abi"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",164,{"inputs":[{"name":"abi"}],"output":{"name":"abi"}}],[11,"decode","","",164,{"inputs":[{"name":"abi"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",164,{"inputs":[{"name":"abi"},{"name":"__s"}],"output":{"name":"result"}}],[11,"hash","","",164,null],[11,"eq","","",164,{"inputs":[{"name":"abi"},{"name":"abi"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"abi"},{"name":"abi"}],"output":{"name":"bool"}}],[11,"fmt","","",165,{"inputs":[{"name":"architecture"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",165,{"inputs":[{"name":"architecture"},{"name":"architecture"}],"output":{"name":"bool"}}],[11,"ne","","",165,{"inputs":[{"name":"architecture"},{"name":"architecture"}],"output":{"name":"bool"}}],[11,"clone","","",165,{"inputs":[{"name":"architecture"}],"output":{"name":"architecture"}}],[11,"clone","","",166,{"inputs":[{"name":"abidata"}],"output":{"name":"abidata"}}],[11,"clone","","",167,{"inputs":[{"name":"abiarchitecture"}],"output":{"name":"abiarchitecture"}}],[11,"index","","",164,{"inputs":[{"name":"abi"}],"output":{"name":"usize"}}],[11,"data","","",164,{"inputs":[{"name":"abi"}],"output":{"name":"abidata"}}],[11,"name","","",164,{"inputs":[{"name":"abi"}],"output":{"name":"str"}}],[11,"fmt","","",164,{"inputs":[{"name":"abi"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",163,{"inputs":[{"name":"os"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","syntax::ast_map::blocks","",168,{"inputs":[{"name":"fnlikenode"}],"output":{"name":"fnlikenode"}}],[11,"is_fn_like","syntax::ast","",157,{"inputs":[{"name":"item"}],"output":{"name":"bool"}}],[11,"is_fn_like","","",121,{"inputs":[{"name":"traititem"}],"output":{"name":"bool"}}],[11,"is_fn_like","","",105,{"inputs":[{"name":"expr"}],"output":{"name":"bool"}}],[11,"clone","syntax::ast_map::blocks","",169,{"inputs":[{"name":"code"}],"output":{"name":"code"}}],[11,"id","","",169,{"inputs":[{"name":"code"}],"output":{"name":"u32"}}],[11,"from_node","","Attempts to construct a Code from presumed FnLike or Block node input.",169,{"inputs":[{"name":"code"},{"name":"node"}],"output":{"name":"option"}}],[11,"to_fn_parts","","",168,{"inputs":[{"name":"fnlikenode"}],"output":{"name":"fnparts"}}],[11,"body","","",168,{"inputs":[{"name":"fnlikenode"}],"output":{"name":"block"}}],[11,"decl","","",168,{"inputs":[{"name":"fnlikenode"}],"output":{"name":"fndecl"}}],[11,"span","","",168,{"inputs":[{"name":"fnlikenode"}],"output":{"name":"span"}}],[11,"id","","",168,{"inputs":[{"name":"fnlikenode"}],"output":{"name":"u32"}}],[11,"kind","","",168,{"inputs":[{"name":"fnlikenode"}],"output":{"name":"fnkind"}}],[11,"fmt","syntax::ast_map","",170,{"inputs":[{"name":"pathelem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",170,{"inputs":[{"name":"pathelem"},{"name":"pathelem"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"pathelem"},{"name":"pathelem"}],"output":{"name":"bool"}}],[11,"clone","","",170,{"inputs":[{"name":"pathelem"}],"output":{"name":"pathelem"}}],[11,"name","","",170,{"inputs":[{"name":"pathelem"}],"output":{"name":"name"}}],[11,"fmt","","",170,{"inputs":[{"name":"pathelem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",171,{"inputs":[{"name":"linkedpathnode"}],"output":{"name":"linkedpathnode"}}],[11,"clone","","",172,{"inputs":[{"name":"linkedpath"}],"output":{"name":"linkedpath"}}],[11,"empty","","",172,{"inputs":[{"name":"linkedpath"}],"output":{"name":"linkedpath"}}],[11,"from","","",172,{"inputs":[{"name":"linkedpath"},{"name":"linkedpathnode"}],"output":{"name":"linkedpath"}}],[6,"Item","quasi","",null,null],[11,"next","syntax::ast_map","",172,{"inputs":[{"name":"linkedpath"}],"output":{"name":"option"}}],[11,"fmt","","",173,{"inputs":[{"name":"node"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",173,{"inputs":[{"name":"node"}],"output":{"name":"node"}}],[11,"fmt","","",174,{"inputs":[{"name":"mapentry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",174,{"inputs":[{"name":"mapentry"}],"output":{"name":"mapentry"}}],[11,"fmt","","",175,{"inputs":[{"name":"inlinedparent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",176,{"inputs":[{"name":"forest"},{"name":"crate"}],"output":{"name":"forest"}}],[11,"krate","","",176,{"inputs":[{"name":"forest"}],"output":{"name":"crate"}}],[11,"krate","","",177,{"inputs":[{"name":"map"}],"output":{"name":"crate"}}],[11,"get","","Retrieve the Node corresponding to `id`, panicking if it cannot\nbe found.",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"node"}}],[11,"find","","Retrieve the Node corresponding to `id`, returning None if\ncannot be found.",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"option"}}],[11,"get_parent","","Retrieve the parent NodeId for `id`, or `id` itself if no\nparent is registered in this map.",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"u32"}}],[11,"get_parent_did","","",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"defid"}}],[11,"get_foreign_abi","","",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"abi"}}],[11,"get_foreign_vis","","",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"visibility"}}],[11,"expect_item","","",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"item"}}],[11,"expect_struct","","",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"structdef"}}],[11,"expect_variant","","",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"spanned"}}],[11,"expect_foreign_item","","",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"foreignitem"}}],[11,"expect_expr","","",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"expr"}}],[11,"get_path_elem","","returns the name associated with the given NodeId's AST",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"pathelem"}}],[11,"with_path","","",177,{"inputs":[{"name":"map"},{"name":"u32"},{"name":"f"}],"output":{"name":"t"}}],[11,"path_to_string","","",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"string"}}],[11,"attrs","","Given a node ID, get a list of of attributes associated with the AST\ncorresponding to the Node ID",177,null],[11,"nodes_matching_suffix","","Returns an iterator that yields the node id's with paths that\nmatch `parts`.  (Requires `parts` is non-empty.)",177,null],[11,"opt_span","","",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"option"}}],[11,"span","","",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"span"}}],[11,"def_id_span","","",177,{"inputs":[{"name":"map"},{"name":"defid"},{"name":"span"}],"output":{"name":"span"}}],[11,"node_to_string","","",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"string"}}],[11,"node_to_user_string","","",177,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"string"}}],[6,"Item","quasi","",null,null],[11,"next","syntax::ast_map","",178,{"inputs":[{"name":"nodesmatchingsuffix"}],"output":{"name":"option"}}],[11,"name","syntax::codemap","",32,{"inputs":[{"name":"spanned"}],"output":{"name":"name"}}],[11,"name","syntax::ast","",157,{"inputs":[{"name":"item"}],"output":{"name":"name"}}],[11,"name","","",159,{"inputs":[{"name":"foreignitem"}],"output":{"name":"name"}}],[11,"name","","",145,{"inputs":[{"name":"variant_"}],"output":{"name":"name"}}],[11,"name","","",121,{"inputs":[{"name":"traititem"}],"output":{"name":"name"}}],[11,"name","","",123,{"inputs":[{"name":"implitem"}],"output":{"name":"name"}}],[11,"new_id","syntax::ast_map","",179,{"inputs":[{"name":"idandspanupdater"},{"name":"u32"}],"output":{"name":"u32"}}],[11,"new_span","","",179,{"inputs":[{"name":"idandspanupdater"},{"name":"span"}],"output":{"name":"span"}}],[11,"visit_item","","",180,null],[11,"visit_trait_item","","",180,null],[11,"visit_impl_item","","",180,null],[11,"visit_pat","","",180,null],[11,"visit_expr","","",180,null],[11,"visit_stmt","","",180,null],[11,"visit_fn","","",180,null],[11,"visit_ty","","",180,null],[11,"visit_block","","",180,null],[11,"visit_lifetime_ref","","",180,null],[11,"visit_lifetime_def","","",180,null],[11,"print_node","syntax::print::pprust","",181,{"inputs":[{"name":"state"},{"name":"node"}],"output":{"name":"result"}}],[11,"fmt","syntax::ast_util","",182,{"inputs":[{"name":"idrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",182,{"inputs":[{"name":"idrange"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",182,{"inputs":[{"name":"idrange"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",182,{"inputs":[{"name":"idrange"}],"output":{"name":"idrange"}}],[11,"max","","",182,{"inputs":[{"name":"idrange"}],"output":{"name":"idrange"}}],[11,"empty","","",182,{"inputs":[{"name":"idrange"}],"output":{"name":"bool"}}],[11,"add","","",182,null],[11,"visit_mod","","",183,null],[11,"visit_foreign_item","","",183,null],[11,"visit_item","","",183,null],[11,"visit_local","","",183,null],[11,"visit_block","","",183,null],[11,"visit_stmt","","",183,null],[11,"visit_pat","","",183,null],[11,"visit_expr","","",183,null],[11,"visit_ty","","",183,null],[11,"visit_generics","","",183,null],[11,"visit_fn","","",183,null],[11,"visit_struct_field","","",183,null],[11,"visit_struct_def","","",183,null],[11,"visit_trait_item","","",183,null],[11,"visit_impl_item","","",183,null],[11,"visit_lifetime_ref","","",183,null],[11,"visit_lifetime_def","","",183,null],[11,"visit_trait_ref","","",183,null],[11,"visit_id","","",184,null],[11,"check_name","syntax::codemap","",32,{"inputs":[{"name":"spanned"},{"name":"str"}],"output":{"name":"bool"}}],[11,"name","","",32,{"inputs":[{"name":"spanned"}],"output":{"name":"internedstring"}}],[11,"value_str","","",32,{"inputs":[{"name":"spanned"}],"output":{"name":"option"}}],[11,"meta_item_list","","",32,{"inputs":[{"name":"spanned"}],"output":{"name":"option"}}],[11,"span","","",32,{"inputs":[{"name":"spanned"}],"output":{"name":"span"}}],[11,"name","","",32,{"inputs":[{"name":"spanned"}],"output":{"name":"internedstring"}}],[11,"value_str","","",32,{"inputs":[{"name":"spanned"}],"output":{"name":"option"}}],[11,"meta_item_list","","",32,{"inputs":[{"name":"spanned"}],"output":{"name":"option"}}],[11,"span","","",32,{"inputs":[{"name":"spanned"}],"output":{"name":"span"}}],[11,"name","syntax::ptr","",38,{"inputs":[{"name":"p"}],"output":{"name":"internedstring"}}],[11,"value_str","","",38,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[11,"meta_item_list","","",38,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[11,"span","","",38,{"inputs":[{"name":"p"}],"output":{"name":"span"}}],[11,"meta","syntax::codemap","Extract the MetaItem from inside this Attribute.",32,{"inputs":[{"name":"spanned"}],"output":{"name":"spanned"}}],[11,"with_desugared_doc","","Convert self to a normal #[doc=\"foo\"] comment, if it is a\ncomment like `///` or `/** */`. (Returns self unchanged for\nnon-sugared doc attributes.)",32,{"inputs":[{"name":"spanned"},{"name":"f"}],"output":{"name":"t"}}],[11,"eq","syntax::attr","",185,{"inputs":[{"name":"inlineattr"},{"name":"inlineattr"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"inlineattr"},{"name":"inlineattr"}],"output":{"name":"bool"}}],[11,"clone","","",185,{"inputs":[{"name":"inlineattr"}],"output":{"name":"inlineattr"}}],[11,"fmt","","",186,{"inputs":[{"name":"stability"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",186,{"inputs":[{"name":"stability"}],"output":{"name":"stability"}}],[11,"decode","","",186,{"inputs":[{"name":"stability"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",186,{"inputs":[{"name":"stability"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",187,{"inputs":[{"name":"stabilitylevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",187,{"inputs":[{"name":"stabilitylevel"}],"output":{"name":"stabilitylevel"}}],[11,"partial_cmp","","",187,{"inputs":[{"name":"stabilitylevel"},{"name":"stabilitylevel"}],"output":{"name":"option"}}],[11,"lt","","",187,{"inputs":[{"name":"stabilitylevel"},{"name":"stabilitylevel"}],"output":{"name":"bool"}}],[11,"le","","",187,{"inputs":[{"name":"stabilitylevel"},{"name":"stabilitylevel"}],"output":{"name":"bool"}}],[11,"gt","","",187,{"inputs":[{"name":"stabilitylevel"},{"name":"stabilitylevel"}],"output":{"name":"bool"}}],[11,"ge","","",187,{"inputs":[{"name":"stabilitylevel"},{"name":"stabilitylevel"}],"output":{"name":"bool"}}],[11,"eq","","",187,{"inputs":[{"name":"stabilitylevel"},{"name":"stabilitylevel"}],"output":{"name":"bool"}}],[11,"ne","","",187,{"inputs":[{"name":"stabilitylevel"},{"name":"stabilitylevel"}],"output":{"name":"bool"}}],[11,"decode","","",187,{"inputs":[{"name":"stabilitylevel"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",187,{"inputs":[{"name":"stabilitylevel"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",187,{"inputs":[{"name":"stabilitylevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",188,{"inputs":[{"name":"reprattr"}],"output":{"name":"reprattr"}}],[11,"decode","","",188,{"inputs":[{"name":"reprattr"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",188,{"inputs":[{"name":"reprattr"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"reprattr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",188,{"inputs":[{"name":"reprattr"},{"name":"reprattr"}],"output":{"name":"bool"}}],[11,"ne","","",188,{"inputs":[{"name":"reprattr"},{"name":"reprattr"}],"output":{"name":"bool"}}],[11,"is_ffi_safe","","",188,{"inputs":[{"name":"reprattr"}],"output":{"name":"bool"}}],[11,"clone","","",189,{"inputs":[{"name":"inttype"}],"output":{"name":"inttype"}}],[11,"decode","","",189,{"inputs":[{"name":"inttype"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",189,{"inputs":[{"name":"inttype"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",189,{"inputs":[{"name":"inttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",189,{"inputs":[{"name":"inttype"},{"name":"inttype"}],"output":{"name":"bool"}}],[11,"ne","","",189,{"inputs":[{"name":"inttype"},{"name":"inttype"}],"output":{"name":"bool"}}],[11,"hash","","",189,null],[11,"is_signed","","",189,{"inputs":[{"name":"inttype"}],"output":{"name":"bool"}}],[11,"fmt","syntax::codemap","",190,{"inputs":[{"name":"bytepos"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",190,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"option"}}],[11,"lt","","",190,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bool"}}],[11,"le","","",190,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bool"}}],[11,"gt","","",190,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bool"}}],[11,"ge","","",190,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bool"}}],[11,"hash","","",190,null],[11,"eq","","",190,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bool"}}],[11,"ne","","",190,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bool"}}],[11,"clone","","",190,{"inputs":[{"name":"bytepos"}],"output":{"name":"bytepos"}}],[11,"fmt","","",191,{"inputs":[{"name":"charpos"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",191,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"option"}}],[11,"lt","","",191,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"bool"}}],[11,"le","","",191,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"bool"}}],[11,"gt","","",191,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"bool"}}],[11,"ge","","",191,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"bool"}}],[11,"hash","","",191,null],[11,"eq","","",191,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"bool"}}],[11,"ne","","",191,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"bool"}}],[11,"clone","","",191,{"inputs":[{"name":"charpos"}],"output":{"name":"charpos"}}],[11,"from_usize","","",190,{"inputs":[{"name":"bytepos"},{"name":"usize"}],"output":{"name":"bytepos"}}],[11,"to_usize","","",190,{"inputs":[{"name":"bytepos"}],"output":{"name":"usize"}}],[6,"Output","quasi","",null,null],[11,"add","syntax::codemap","",190,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bytepos"}}],[6,"Output","quasi","",null,null],[11,"sub","syntax::codemap","",190,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bytepos"}}],[11,"encode","","",190,{"inputs":[{"name":"bytepos"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",190,{"inputs":[{"name":"bytepos"},{"name":"d"}],"output":{"name":"result"}}],[11,"from_usize","","",191,{"inputs":[{"name":"charpos"},{"name":"usize"}],"output":{"name":"charpos"}}],[11,"to_usize","","",191,{"inputs":[{"name":"charpos"}],"output":{"name":"usize"}}],[6,"Output","quasi","",null,null],[11,"add","syntax::codemap","",191,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"charpos"}}],[6,"Output","quasi","",null,null],[11,"sub","syntax::codemap","",191,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"charpos"}}],[11,"hash","","",192,null],[11,"fmt","","",192,{"inputs":[{"name":"span"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",192,{"inputs":[{"name":"span"}],"output":{"name":"span"}}],[11,"fmt","","",32,{"inputs":[{"name":"spanned"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",32,null],[11,"decode","","",32,{"inputs":[{"name":"spanned"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",32,{"inputs":[{"name":"spanned"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"spanned"},{"name":"spanned"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"spanned"},{"name":"spanned"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"spanned"}],"output":{"name":"spanned"}}],[11,"eq","","",192,{"inputs":[{"name":"span"},{"name":"span"}],"output":{"name":"bool"}}],[11,"ne","","",192,{"inputs":[{"name":"span"},{"name":"span"}],"output":{"name":"bool"}}],[11,"encode","","",192,{"inputs":[{"name":"span"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",192,{"inputs":[{"name":"span"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"loc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",194,{"inputs":[{"name":"locwithopt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",195,{"inputs":[{"name":"filemapandline"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",196,{"inputs":[{"name":"filemapandbytepos"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",197,{"inputs":[{"name":"macroformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",197,null],[11,"clone","","",197,{"inputs":[{"name":"macroformat"}],"output":{"name":"macroformat"}}],[11,"fmt","","",198,{"inputs":[{"name":"nameandspan"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",198,null],[11,"clone","","",198,{"inputs":[{"name":"nameandspan"}],"output":{"name":"nameandspan"}}],[11,"fmt","","",199,{"inputs":[{"name":"expninfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",199,null],[11,"decode","","",200,{"inputs":[{"name":"expnid"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",200,{"inputs":[{"name":"expnid"},{"name":"__s"}],"output":{"name":"result"}}],[11,"hash","","",200,null],[11,"fmt","","",200,{"inputs":[{"name":"expnid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",200,{"inputs":[{"name":"expnid"}],"output":{"name":"expnid"}}],[11,"eq","","",200,{"inputs":[{"name":"expnid"},{"name":"expnid"}],"output":{"name":"bool"}}],[11,"ne","","",200,{"inputs":[{"name":"expnid"},{"name":"expnid"}],"output":{"name":"bool"}}],[11,"from_u32","","",200,{"inputs":[{"name":"expnid"},{"name":"u32"}],"output":{"name":"expnid"}}],[11,"into_u32","","",200,{"inputs":[{"name":"expnid"}],"output":{"name":"u32"}}],[11,"eq","","",201,{"inputs":[{"name":"lineinfo"},{"name":"lineinfo"}],"output":{"name":"bool"}}],[11,"ne","","",201,{"inputs":[{"name":"lineinfo"},{"name":"lineinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",201,{"inputs":[{"name":"lineinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",201,{"inputs":[{"name":"lineinfo"}],"output":{"name":"lineinfo"}}],[11,"eq","","",202,{"inputs":[{"name":"multibytechar"},{"name":"multibytechar"}],"output":{"name":"bool"}}],[11,"ne","","",202,{"inputs":[{"name":"multibytechar"},{"name":"multibytechar"}],"output":{"name":"bool"}}],[11,"decode","","",202,{"inputs":[{"name":"multibytechar"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",202,{"inputs":[{"name":"multibytechar"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",202,{"inputs":[{"name":"multibytechar"}],"output":{"name":"multibytechar"}}],[11,"encode","","",203,{"inputs":[{"name":"filemap"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",203,{"inputs":[{"name":"filemap"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",203,{"inputs":[{"name":"filemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next_line","","EFFECT: register a start-of-line offset in the\ntable of line-beginnings.\nUNCHECKED INVARIANT: these offsets must be added in the right\norder and must be in the right places; there is shared knowledge\nabout what ends a line between this file and parse.rs\nWARNING: pos param here is the offset relative to start of CodeMap,\nand CodeMap will append a newline when adding a filemap without a newline at the end,\nso the safe way to call this is with value calculated as\nfilemap.start_pos + newline_offset_relative_to_the_start_of_filemap.",203,null],[11,"get_line","","get a line from the list of pre-computed line-beginnings.\nline-number here is 0-based.",203,{"inputs":[{"name":"filemap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"record_multibyte_char","","",203,null],[11,"is_real_file","","",203,{"inputs":[{"name":"filemap"}],"output":{"name":"bool"}}],[11,"is_imported","","",203,{"inputs":[{"name":"filemap"}],"output":{"name":"bool"}}],[11,"new","","",204,{"inputs":[{"name":"codemap"}],"output":{"name":"codemap"}}],[11,"new_filemap","","",204,{"inputs":[{"name":"codemap"},{"name":"string"},{"name":"string"}],"output":{"name":"rc"}}],[11,"new_imported_filemap","","Allocates a new FileMap representing a source file from an external\ncrate. The source code of such an \"imported filemap\" is not available,\nbut we still know enough to generate accurate debuginfo location\ninformation for things inlined from other crates.",204,{"inputs":[{"name":"codemap"},{"name":"string"},{"name":"usize"},{"name":"vec"},{"name":"vec"}],"output":{"name":"rc"}}],[11,"mk_substr_filename","","",204,{"inputs":[{"name":"codemap"},{"name":"span"}],"output":{"name":"string"}}],[11,"lookup_char_pos","","Lookup source information about a BytePos",204,{"inputs":[{"name":"codemap"},{"name":"bytepos"}],"output":{"name":"loc"}}],[11,"lookup_char_pos_adj","","",204,{"inputs":[{"name":"codemap"},{"name":"bytepos"}],"output":{"name":"locwithopt"}}],[11,"span_to_string","","",204,{"inputs":[{"name":"codemap"},{"name":"span"}],"output":{"name":"string"}}],[11,"span_to_filename","","",204,{"inputs":[{"name":"codemap"},{"name":"span"}],"output":{"name":"string"}}],[11,"span_to_lines","","",204,{"inputs":[{"name":"codemap"},{"name":"span"}],"output":{"name":"filelines"}}],[11,"span_to_snippet","","",204,{"inputs":[{"name":"codemap"},{"name":"span"}],"output":{"name":"result"}}],[11,"get_filemap","","",204,{"inputs":[{"name":"codemap"},{"name":"str"}],"output":{"name":"rc"}}],[11,"lookup_byte_offset","","For a global BytePos compute the local offset within the containing FileMap",204,{"inputs":[{"name":"codemap"},{"name":"bytepos"}],"output":{"name":"filemapandbytepos"}}],[11,"bytepos_to_file_charpos","","Converts an absolute BytePos to a CharPos relative to the filemap and above.",204,{"inputs":[{"name":"codemap"},{"name":"bytepos"}],"output":{"name":"charpos"}}],[11,"record_expansion","","",204,{"inputs":[{"name":"codemap"},{"name":"expninfo"}],"output":{"name":"expnid"}}],[11,"with_expn_info","","",204,{"inputs":[{"name":"codemap"},{"name":"expnid"},{"name":"f"}],"output":{"name":"t"}}],[11,"span_allows_unstable","","Check if a span is \"internal\" to a macro in which #[unstable]\nitems can be used (that is, a macro marked with\n`#[allow_internal_unstable]`).",204,{"inputs":[{"name":"codemap"},{"name":"span"}],"output":{"name":"bool"}}],[11,"fmt","","",205,{"inputs":[{"name":"spansnippeterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",205,{"inputs":[{"name":"spansnippeterror"},{"name":"spansnippeterror"}],"output":{"name":"bool"}}],[11,"ne","","",205,{"inputs":[{"name":"spansnippeterror"},{"name":"spansnippeterror"}],"output":{"name":"bool"}}],[11,"clone","","",205,{"inputs":[{"name":"spansnippeterror"}],"output":{"name":"spansnippeterror"}}],[11,"fmt","","",206,{"inputs":[{"name":"distinctsources"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",206,{"inputs":[{"name":"distinctsources"},{"name":"distinctsources"}],"output":{"name":"bool"}}],[11,"ne","","",206,{"inputs":[{"name":"distinctsources"},{"name":"distinctsources"}],"output":{"name":"bool"}}],[11,"clone","","",206,{"inputs":[{"name":"distinctsources"}],"output":{"name":"distinctsources"}}],[11,"fmt","","",207,{"inputs":[{"name":"malformedcodemappositions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",207,{"inputs":[{"name":"malformedcodemappositions"},{"name":"malformedcodemappositions"}],"output":{"name":"bool"}}],[11,"ne","","",207,{"inputs":[{"name":"malformedcodemappositions"},{"name":"malformedcodemappositions"}],"output":{"name":"bool"}}],[11,"clone","","",207,{"inputs":[{"name":"malformedcodemappositions"}],"output":{"name":"malformedcodemappositions"}}],[11,"fold_mod","syntax::config","",208,{"inputs":[{"name":"context"},{"name":"mod"}],"output":{"name":"mod"}}],[11,"fold_block","","",208,{"inputs":[{"name":"context"},{"name":"p"}],"output":{"name":"p"}}],[11,"fold_foreign_mod","","",208,{"inputs":[{"name":"context"},{"name":"foreignmod"}],"output":{"name":"foreignmod"}}],[11,"fold_item_underscore","","",208,{"inputs":[{"name":"context"},{"name":"item_"}],"output":{"name":"item_"}}],[11,"fold_expr","","",208,{"inputs":[{"name":"context"},{"name":"p"}],"output":{"name":"p"}}],[11,"fold_mac","","",208,{"inputs":[{"name":"context"},{"name":"spanned"}],"output":{"name":"spanned"}}],[11,"fold_item","","",208,{"inputs":[{"name":"context"},{"name":"p"}],"output":{"name":"smallvector"}}],[11,"fold_attribute","","",209,{"inputs":[{"name":"cfgattrfolder"},{"name":"spanned"}],"output":{"name":"option"}}],[11,"fold_mac","","",209,{"inputs":[{"name":"cfgattrfolder"},{"name":"spanned"}],"output":{"name":"spanned"}}],[11,"clone","syntax::diagnostic","",210,{"inputs":[{"name":"renderspan"}],"output":{"name":"renderspan"}}],[11,"clone","","",211,{"inputs":[{"name":"colorconfig"}],"output":{"name":"colorconfig"}}],[11,"fmt","","",212,{"inputs":[{"name":"fatalerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",212,{"inputs":[{"name":"fatalerror"}],"output":{"name":"fatalerror"}}],[11,"fmt","","",212,{"inputs":[{"name":"fatalerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",212,{"inputs":[{"name":"fatalerror"}],"output":{"name":"str"}}],[11,"fmt","","",213,{"inputs":[{"name":"explicitbug"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",213,{"inputs":[{"name":"explicitbug"}],"output":{"name":"explicitbug"}}],[11,"fmt","","",213,{"inputs":[{"name":"explicitbug"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",213,{"inputs":[{"name":"explicitbug"}],"output":{"name":"str"}}],[11,"span_fatal","","",214,{"inputs":[{"name":"spanhandler"},{"name":"span"},{"name":"str"}],"output":{"name":"fatalerror"}}],[11,"span_fatal_with_code","","",214,{"inputs":[{"name":"spanhandler"},{"name":"span"},{"name":"str"},{"name":"str"}],"output":{"name":"fatalerror"}}],[11,"span_err","","",214,null],[11,"span_err_with_code","","",214,null],[11,"span_warn","","",214,null],[11,"span_warn_with_code","","",214,null],[11,"span_note","","",214,null],[11,"span_end_note","","",214,null],[11,"span_help","","",214,null],[11,"span_suggestion","","Prints out a message with a suggested edit of the code.",214,null],[11,"fileline_note","","",214,null],[11,"fileline_help","","",214,null],[11,"span_bug","","",214,null],[11,"span_unimpl","","",214,null],[11,"handler","","",214,{"inputs":[{"name":"spanhandler"}],"output":{"name":"handler"}}],[11,"fatal","","",215,null],[11,"err","","",215,null],[11,"bump_err_count","","",215,null],[11,"err_count","","",215,{"inputs":[{"name":"handler"}],"output":{"name":"usize"}}],[11,"has_errors","","",215,{"inputs":[{"name":"handler"}],"output":{"name":"bool"}}],[11,"abort_if_errors","","",215,null],[11,"warn","","",215,null],[11,"note","","",215,null],[11,"help","","",215,null],[11,"bug","","",215,null],[11,"unimpl","","",215,null],[11,"emit","","",215,null],[11,"emit_with_code","","",215,null],[11,"custom_emit","","",215,null],[11,"fmt","","",216,{"inputs":[{"name":"level"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",216,{"inputs":[{"name":"level"}],"output":{"name":"level"}}],[11,"eq","","",216,{"inputs":[{"name":"level"},{"name":"level"}],"output":{"name":"bool"}}],[11,"ne","","",216,{"inputs":[{"name":"level"},{"name":"level"}],"output":{"name":"bool"}}],[11,"fmt","","",216,{"inputs":[{"name":"level"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"stderr","","",217,{"inputs":[{"name":"emitterwriter"},{"name":"colorconfig"},{"name":"option"}],"output":{"name":"emitterwriter"}}],[11,"new","","",217,{"inputs":[{"name":"emitterwriter"},{"name":"box"},{"name":"option"}],"output":{"name":"emitterwriter"}}],[11,"write","","",218,null],[11,"flush","","",218,{"inputs":[{"name":"destination"}],"output":{"name":"result"}}],[11,"emit","","",217,null],[11,"custom_emit","","",217,null],[11,"fmt","syntax::feature_gate","",219,{"inputs":[{"name":"attributetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",219,{"inputs":[{"name":"attributetype"}],"output":{"name":"attributetype"}}],[11,"eq","","",219,{"inputs":[{"name":"attributetype"},{"name":"attributetype"}],"output":{"name":"bool"}}],[11,"ne","","",219,{"inputs":[{"name":"attributetype"},{"name":"attributetype"}],"output":{"name":"bool"}}],[11,"new","","",220,{"inputs":[{"name":"features"}],"output":{"name":"features"}}],[11,"visit_mac","","",221,null],[11,"visit_attribute","","",221,null],[11,"visit_attribute","","",222,null],[11,"visit_name","","",222,null],[11,"visit_item","","",222,null],[11,"visit_foreign_item","","",222,null],[11,"visit_expr","","",222,null],[11,"visit_pat","","",222,null],[11,"visit_fn","","",222,null],[11,"visit_trait_item","","",222,null],[11,"visit_impl_item","","",222,null],[11,"move_map","collections::vec","",31,{"inputs":[{"name":"vec"},{"name":"f"}],"output":{"name":"vec"}}],[11,"move_map","syntax::owned_slice","",223,{"inputs":[{"name":"ownedslice"},{"name":"f"}],"output":{"name":"ownedslice"}}],[11,"cmp","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"option"}}],[11,"lt","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"bool"}}],[11,"le","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"bool"}}],[11,"gt","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"bool"}}],[11,"ge","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"bool"}}],[11,"eq","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"bool"}}],[11,"ne","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"bool"}}],[11,"hash","","",223,null],[11,"fmt","","",223,{"inputs":[{"name":"ownedslice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","",223,{"inputs":[{"name":"ownedslice"}],"output":{"name":"ownedslice"}}],[11,"from_vec","","",223,{"inputs":[{"name":"ownedslice"},{"name":"vec"}],"output":{"name":"ownedslice"}}],[11,"into_vec","","",223,{"inputs":[{"name":"ownedslice"}],"output":{"name":"vec"}}],[11,"as_slice","","",223,null],[11,"move_iter","","",223,{"inputs":[{"name":"ownedslice"}],"output":{"name":"intoiter"}}],[11,"map","","",223,{"inputs":[{"name":"ownedslice"},{"name":"f"}],"output":{"name":"ownedslice"}}],[6,"Target","quasi","",null,null],[11,"deref","syntax::owned_slice","",223,null],[11,"default","","",223,{"inputs":[{"name":"ownedslice"}],"output":{"name":"ownedslice"}}],[11,"clone","","",223,{"inputs":[{"name":"ownedslice"}],"output":{"name":"ownedslice"}}],[11,"from_iter","","",223,{"inputs":[{"name":"ownedslice"},{"name":"i"}],"output":{"name":"ownedslice"}}],[11,"encode","","",223,{"inputs":[{"name":"ownedslice"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",223,{"inputs":[{"name":"ownedslice"},{"name":"d"}],"output":{"name":"result"}}],[11,"and_then","syntax::ptr","Move out of the pointer.\nIntended for chaining transformations not covered by `map`.",38,{"inputs":[{"name":"p"},{"name":"f"}],"output":{"name":"u"}}],[11,"map","","Transform the inner value, consuming `self` and producing a new `P<T>`.",38,{"inputs":[{"name":"p"},{"name":"f"}],"output":{"name":"p"}}],[6,"Target","quasi","",null,null],[11,"deref","syntax::ptr","",38,{"inputs":[{"name":"p"}],"output":{"name":"t"}}],[11,"clone","","",38,{"inputs":[{"name":"p"}],"output":{"name":"p"}}],[11,"eq","","",38,{"inputs":[{"name":"p"},{"name":"p"}],"output":{"name":"bool"}}],[11,"fmt","","",38,{"inputs":[{"name":"p"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"p"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"p"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",38,null],[11,"decode","","",38,{"inputs":[{"name":"p"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",38,{"inputs":[{"name":"p"},{"name":"s"}],"output":{"name":"result"}}],[6,"Err","quasi","",null,null],[11,"from_str","syntax::show_span","",224,{"inputs":[{"name":"mode"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_expr","","",225,null],[11,"visit_pat","","",225,null],[11,"visit_ty","","",225,null],[11,"visit_mac","","",225,null],[11,"fold_crate","syntax::std_inject","",226,{"inputs":[{"name":"standardlibraryinjector"},{"name":"crate"}],"output":{"name":"crate"}}],[11,"fold_crate","","",227,{"inputs":[{"name":"preludeinjector"},{"name":"crate"}],"output":{"name":"crate"}}],[11,"fold_item","","",227,{"inputs":[{"name":"preludeinjector"},{"name":"p"}],"output":{"name":"smallvector"}}],[11,"fold_mod","","",227,{"inputs":[{"name":"preludeinjector"},{"name":"mod"}],"output":{"name":"mod"}}],[11,"fold_crate","syntax::test","",228,{"inputs":[{"name":"testharnessgenerator"},{"name":"crate"}],"output":{"name":"crate"}}],[11,"fold_item","","",228,{"inputs":[{"name":"testharnessgenerator"},{"name":"p"}],"output":{"name":"smallvector"}}],[11,"fold_mod","","",228,{"inputs":[{"name":"testharnessgenerator"},{"name":"mod"}],"output":{"name":"mod"}}],[11,"eq","","",229,{"inputs":[{"name":"hastestsignature"},{"name":"hastestsignature"}],"output":{"name":"bool"}}],[11,"ne","","",229,{"inputs":[{"name":"hastestsignature"},{"name":"hastestsignature"}],"output":{"name":"bool"}}],[11,"clone","syntax::visit","",230,{"inputs":[{"name":"fnkind"}],"output":{"name":"fnkind"}}],[11,"eq","syntax::print::pp","",231,{"inputs":[{"name":"breaks"},{"name":"breaks"}],"output":{"name":"bool"}}],[11,"ne","","",231,{"inputs":[{"name":"breaks"},{"name":"breaks"}],"output":{"name":"bool"}}],[11,"clone","","",231,{"inputs":[{"name":"breaks"}],"output":{"name":"breaks"}}],[11,"clone","","",232,{"inputs":[{"name":"breaktoken"}],"output":{"name":"breaktoken"}}],[11,"clone","","",233,{"inputs":[{"name":"begintoken"}],"output":{"name":"begintoken"}}],[11,"clone","","",234,{"inputs":[{"name":"token"}],"output":{"name":"token"}}],[11,"is_eof","","",234,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_hardbreak_tok","","",234,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"clone","","",235,{"inputs":[{"name":"printstackbreak"}],"output":{"name":"printstackbreak"}}],[11,"clone","","",236,{"inputs":[{"name":"printstackelem"}],"output":{"name":"printstackelem"}}],[11,"last_token","","",237,{"inputs":[{"name":"printer"}],"output":{"name":"token"}}],[11,"replace_last_token","","",237,null],[11,"pretty_print","","",237,{"inputs":[{"name":"printer"},{"name":"token"}],"output":{"name":"result"}}],[11,"check_stream","","",237,{"inputs":[{"name":"printer"}],"output":{"name":"result"}}],[11,"scan_push","","",237,null],[11,"scan_pop","","",237,{"inputs":[{"name":"printer"}],"output":{"name":"usize"}}],[11,"scan_top","","",237,{"inputs":[{"name":"printer"}],"output":{"name":"usize"}}],[11,"scan_pop_bottom","","",237,{"inputs":[{"name":"printer"}],"output":{"name":"usize"}}],[11,"advance_right","","",237,null],[11,"advance_left","","",237,{"inputs":[{"name":"printer"}],"output":{"name":"result"}}],[11,"check_stack","","",237,null],[11,"print_newline","","",237,{"inputs":[{"name":"printer"},{"name":"isize"}],"output":{"name":"result"}}],[11,"indent","","",237,null],[11,"get_top","","",237,{"inputs":[{"name":"printer"}],"output":{"name":"printstackelem"}}],[11,"print_str","","",237,{"inputs":[{"name":"printer"},{"name":"str"}],"output":{"name":"result"}}],[11,"print","","",237,{"inputs":[{"name":"printer"},{"name":"token"},{"name":"isize"}],"output":{"name":"result"}}],[11,"clone","syntax::print::pprust","",238,{"inputs":[{"name":"noann"}],"output":{"name":"noann"}}],[11,"clone","","",239,{"inputs":[{"name":"currentcommentandliteral"}],"output":{"name":"currentcommentandliteral"}}],[11,"new_from_input","","",181,{"inputs":[{"name":"state"},{"name":"codemap"},{"name":"spanhandler"},{"name":"string"},{"name":"read"},{"name":"box"},{"name":"ppann"},{"name":"bool"}],"output":{"name":"state"}}],[11,"new","","",181,{"inputs":[{"name":"state"},{"name":"codemap"},{"name":"box"},{"name":"ppann"},{"name":"option"},{"name":"option"}],"output":{"name":"state"}}],[11,"ibox","","",181,{"inputs":[{"name":"state"},{"name":"usize"}],"output":{"name":"result"}}],[11,"end","","",181,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"cbox","","",181,{"inputs":[{"name":"state"},{"name":"usize"}],"output":{"name":"result"}}],[11,"rbox","","",181,{"inputs":[{"name":"state"},{"name":"usize"},{"name":"breaks"}],"output":{"name":"result"}}],[11,"nbsp","","",181,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"word_nbsp","","",181,{"inputs":[{"name":"state"},{"name":"str"}],"output":{"name":"result"}}],[11,"word_space","","",181,{"inputs":[{"name":"state"},{"name":"str"}],"output":{"name":"result"}}],[11,"popen","","",181,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"pclose","","",181,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"head","","",181,{"inputs":[{"name":"state"},{"name":"str"}],"output":{"name":"result"}}],[11,"bopen","","",181,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"bclose_","","",181,{"inputs":[{"name":"state"},{"name":"span"},{"name":"usize"}],"output":{"name":"result"}}],[11,"bclose_maybe_open","","",181,{"inputs":[{"name":"state"},{"name":"span"},{"name":"usize"},{"name":"bool"}],"output":{"name":"result"}}],[11,"bclose","","",181,{"inputs":[{"name":"state"},{"name":"span"}],"output":{"name":"result"}}],[11,"is_begin","","",181,{"inputs":[{"name":"state"}],"output":{"name":"bool"}}],[11,"is_end","","",181,{"inputs":[{"name":"state"}],"output":{"name":"bool"}}],[11,"is_bol","","",181,{"inputs":[{"name":"state"}],"output":{"name":"bool"}}],[11,"in_cbox","","",181,{"inputs":[{"name":"state"}],"output":{"name":"bool"}}],[11,"hardbreak_if_not_bol","","",181,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"space_if_not_bol","","",181,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"break_offset_if_not_bol","","",181,{"inputs":[{"name":"state"},{"name":"usize"},{"name":"isize"}],"output":{"name":"result"}}],[11,"synth_comment","","",181,{"inputs":[{"name":"state"},{"name":"string"}],"output":{"name":"result"}}],[11,"commasep","","",181,null],[11,"commasep_cmnt","","",181,null],[11,"commasep_exprs","","",181,null],[11,"print_mod","","",181,null],[11,"print_foreign_mod","","",181,null],[11,"print_opt_lifetime","","",181,{"inputs":[{"name":"state"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_type","","",181,{"inputs":[{"name":"state"},{"name":"ty"}],"output":{"name":"result"}}],[11,"print_foreign_item","","",181,{"inputs":[{"name":"state"},{"name":"foreignitem"}],"output":{"name":"result"}}],[11,"print_item","","Pretty-print an item",181,{"inputs":[{"name":"state"},{"name":"item"}],"output":{"name":"result"}}],[11,"print_enum_def","","",181,{"inputs":[{"name":"state"},{"name":"enumdef"},{"name":"generics"},{"name":"ident"},{"name":"span"},{"name":"visibility"}],"output":{"name":"result"}}],[11,"print_variants","","",181,null],[11,"print_visibility","","",181,{"inputs":[{"name":"state"},{"name":"visibility"}],"output":{"name":"result"}}],[11,"print_struct","","",181,{"inputs":[{"name":"state"},{"name":"structdef"},{"name":"generics"},{"name":"ident"},{"name":"span"}],"output":{"name":"result"}}],[11,"print_tt","","This doesn't deserve to be called \"pretty\" printing, but it should be\nmeaning-preserving. A quick hack that might help would be to look at the\nspans embedded in the TTs to decide where to put spaces and newlines.\nBut it'd be better to parse these according to the grammar of the\nappropriate macro, transcribe back into the grammar we just parsed from,\nand then pretty-print the resulting AST nodes (so, e.g., we print\nexpression arguments as expressions). It can be done! I think.",181,{"inputs":[{"name":"state"},{"name":"tokentree"}],"output":{"name":"result"}}],[11,"print_tts","","",181,null],[11,"print_variant","","",181,{"inputs":[{"name":"state"},{"name":"spanned"}],"output":{"name":"result"}}],[11,"print_method_sig","","",181,{"inputs":[{"name":"state"},{"name":"ident"},{"name":"methodsig"},{"name":"visibility"}],"output":{"name":"result"}}],[11,"print_trait_item","","",181,{"inputs":[{"name":"state"},{"name":"traititem"}],"output":{"name":"result"}}],[11,"print_impl_item","","",181,{"inputs":[{"name":"state"},{"name":"implitem"}],"output":{"name":"result"}}],[11,"print_outer_attributes","","",181,null],[11,"print_inner_attributes","","",181,null],[11,"print_attribute","","",181,{"inputs":[{"name":"state"},{"name":"spanned"}],"output":{"name":"result"}}],[11,"print_stmt","","",181,{"inputs":[{"name":"state"},{"name":"spanned"}],"output":{"name":"result"}}],[11,"print_block","","",181,{"inputs":[{"name":"state"},{"name":"block"}],"output":{"name":"result"}}],[11,"print_block_unclosed","","",181,{"inputs":[{"name":"state"},{"name":"block"}],"output":{"name":"result"}}],[11,"print_block_unclosed_indent","","",181,{"inputs":[{"name":"state"},{"name":"block"},{"name":"usize"}],"output":{"name":"result"}}],[11,"print_block_with_attrs","","",181,null],[11,"print_block_maybe_unclosed","","",181,null],[11,"print_if","","",181,{"inputs":[{"name":"state"},{"name":"expr"},{"name":"block"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_if_let","","",181,{"inputs":[{"name":"state"},{"name":"pat"},{"name":"expr"},{"name":"block"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_mac","","",181,{"inputs":[{"name":"state"},{"name":"spanned"},{"name":"delimtoken"}],"output":{"name":"result"}}],[11,"print_expr_maybe_paren","","",181,{"inputs":[{"name":"state"},{"name":"expr"}],"output":{"name":"result"}}],[11,"print_expr","","",181,{"inputs":[{"name":"state"},{"name":"expr"}],"output":{"name":"result"}}],[11,"print_local_decl","","",181,{"inputs":[{"name":"state"},{"name":"local"}],"output":{"name":"result"}}],[11,"print_decl","","",181,{"inputs":[{"name":"state"},{"name":"spanned"}],"output":{"name":"result"}}],[11,"print_ident","","",181,{"inputs":[{"name":"state"},{"name":"ident"}],"output":{"name":"result"}}],[11,"print_usize","","",181,{"inputs":[{"name":"state"},{"name":"usize"}],"output":{"name":"result"}}],[11,"print_name","","",181,{"inputs":[{"name":"state"},{"name":"name"}],"output":{"name":"result"}}],[11,"print_for_decl","","",181,{"inputs":[{"name":"state"},{"name":"local"},{"name":"expr"}],"output":{"name":"result"}}],[11,"print_pat","","",181,{"inputs":[{"name":"state"},{"name":"pat"}],"output":{"name":"result"}}],[11,"print_fn","","",181,{"inputs":[{"name":"state"},{"name":"fndecl"},{"name":"unsafety"},{"name":"abi"},{"name":"option"},{"name":"generics"},{"name":"option"},{"name":"visibility"}],"output":{"name":"result"}}],[11,"print_fn_args","","",181,{"inputs":[{"name":"state"},{"name":"fndecl"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_fn_args_and_ret","","",181,{"inputs":[{"name":"state"},{"name":"fndecl"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_fn_block_args","","",181,{"inputs":[{"name":"state"},{"name":"fndecl"}],"output":{"name":"result"}}],[11,"print_capture_clause","","",181,{"inputs":[{"name":"state"},{"name":"captureclause"}],"output":{"name":"result"}}],[11,"print_bounds","","",181,null],[11,"print_lifetime","","",181,{"inputs":[{"name":"state"},{"name":"lifetime"}],"output":{"name":"result"}}],[11,"print_lifetime_def","","",181,{"inputs":[{"name":"state"},{"name":"lifetimedef"}],"output":{"name":"result"}}],[11,"print_generics","","",181,{"inputs":[{"name":"state"},{"name":"generics"}],"output":{"name":"result"}}],[11,"print_ty_param","","",181,{"inputs":[{"name":"state"},{"name":"typaram"}],"output":{"name":"result"}}],[11,"print_where_clause","","",181,{"inputs":[{"name":"state"},{"name":"whereclause"}],"output":{"name":"result"}}],[11,"print_meta_item","","",181,{"inputs":[{"name":"state"},{"name":"spanned"}],"output":{"name":"result"}}],[11,"print_view_path","","",181,{"inputs":[{"name":"state"},{"name":"spanned"}],"output":{"name":"result"}}],[11,"print_mutability","","",181,{"inputs":[{"name":"state"},{"name":"mutability"}],"output":{"name":"result"}}],[11,"print_mt","","",181,{"inputs":[{"name":"state"},{"name":"mutty"}],"output":{"name":"result"}}],[11,"print_arg","","",181,{"inputs":[{"name":"state"},{"name":"arg"}],"output":{"name":"result"}}],[11,"print_fn_output","","",181,{"inputs":[{"name":"state"},{"name":"fndecl"}],"output":{"name":"result"}}],[11,"print_ty_fn","","",181,{"inputs":[{"name":"state"},{"name":"abi"},{"name":"unsafety"},{"name":"fndecl"},{"name":"option"},{"name":"generics"},{"name":"option"}],"output":{"name":"result"}}],[11,"maybe_print_trailing_comment","","",181,{"inputs":[{"name":"state"},{"name":"span"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_remaining_comments","","",181,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"print_literal","","",181,{"inputs":[{"name":"state"},{"name":"spanned"}],"output":{"name":"result"}}],[11,"next_lit","","",181,{"inputs":[{"name":"state"},{"name":"bytepos"}],"output":{"name":"option"}}],[11,"maybe_print_comment","","",181,{"inputs":[{"name":"state"},{"name":"bytepos"}],"output":{"name":"result"}}],[11,"print_comment","","",181,{"inputs":[{"name":"state"},{"name":"comment"}],"output":{"name":"result"}}],[11,"print_string","","",181,{"inputs":[{"name":"state"},{"name":"str"},{"name":"strstyle"}],"output":{"name":"result"}}],[11,"next_comment","","",181,{"inputs":[{"name":"state"}],"output":{"name":"option"}}],[11,"print_opt_abi_and_extern_if_nondefault","","",181,{"inputs":[{"name":"state"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_extern_opt_abi","","",181,{"inputs":[{"name":"state"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_fn_header_info","","",181,{"inputs":[{"name":"state"},{"name":"unsafety"},{"name":"abi"},{"name":"visibility"}],"output":{"name":"result"}}],[11,"print_unsafety","","",181,{"inputs":[{"name":"state"},{"name":"unsafety"}],"output":{"name":"result"}}],[3,"BytePos","quasi","A byte offset. Keep this small (currently 32-bits), as AST contains\na lot of them.",null,null],[3,"Span","","Spans represent a region of code, used for error reporting. Positions in spans\nare *absolute* positions from the beginning of the codemap, not positions\nrelative to FileMaps. Methods on the CodeMap can be used to relate spans back\nto the original source.",null,null],[12,"lo","","",192,null],[12,"hi","","",192,null],[12,"expn_id","","Information about where the macro came from, if this piece of\ncode was created by a macro expansion.",192,null],[5,"dummy_spanned","","",null,{"inputs":[{"name":"t"}],"output":{"name":"spanned"}}],[17,"DUMMY_SP","","",null,null],[8,"ToTokens","","",null,null],[10,"to_tokens","","",240,{"inputs":[{"name":"totokens"},{"name":"extctxt"}],"output":{"name":"vec"}}],[8,"ExtParseUtils","","",null,null],[10,"parse_item","","",241,{"inputs":[{"name":"extparseutils"},{"name":"string"}],"output":{"name":"p"}}],[10,"parse_expr","","",241,{"inputs":[{"name":"extparseutils"},{"name":"string"}],"output":{"name":"p"}}],[10,"parse_stmt","","",241,{"inputs":[{"name":"extparseutils"},{"name":"string"}],"output":{"name":"p"}}],[10,"parse_tts","","",241,{"inputs":[{"name":"extparseutils"},{"name":"string"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ast","",30,{"inputs":[{"name":"tokentree"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","collections::vec","",31,{"inputs":[{"name":"vec"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::codemap","",32,{"inputs":[{"name":"spanned"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","core::option","",33,{"inputs":[{"name":"option"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ast","",34,{"inputs":[{"name":"ident"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",35,{"inputs":[{"name":"path"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",36,{"inputs":[{"name":"ty"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",37,{"inputs":[{"name":"block"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ptr","",38,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",38,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",38,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ast","",81,{"inputs":[{"name":"generics"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",82,{"inputs":[{"name":"whereclause"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ptr","",38,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",38,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",38,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ast","",39,{"inputs":[{"name":"arm"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ptr","",38,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","quasi","",242,{"inputs":[{"name":"attribute"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",243,{"inputs":[{"name":"lit"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"parse_item","syntax::ext::base","",12,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"p"}}],[11,"parse_stmt","","",12,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"p"}}],[11,"parse_expr","","",12,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"p"}}],[11,"parse_tts","","",12,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"vec"}}]],"paths":[[3,"Interner"],[3,"RcStr"],[3,"StrInterner"],[3,"SmallVector"],[3,"IntoIter"],[3,"Registry"],[3,"ErrorMetadata"],[3,"ErrorLocation"],[4,"Annotatable"],[3,"MacEager"],[3,"DummyResult"],[3,"BlockInfo"],[3,"ExtCtxt"],[3,"SyntaxEnv"],[4,"OrderingOp"],[4,"PtrTy"],[3,"Path"],[4,"Ty"],[3,"LifetimeBounds"],[3,"TraitDef"],[4,"StructType"],[3,"PatIdentFinder"],[3,"IdentRenamer"],[3,"PatIdentRenamer"],[3,"MacroExpander"],[3,"ExpansionConfig"],[3,"Marker"],[3,"MacroExterminator"],[4,"ArgumentType"],[4,"SyntaxContext_"],[4,"TokenTree"],[3,"Vec"],[3,"Spanned"],[4,"Option"],[3,"Ident"],[3,"Path"],[3,"Ty"],[3,"Block"],[3,"P"],[3,"Arm"],[3,"TtFrame"],[3,"TtReader"],[4,"LockstepIterSize"],[4,"TokenTreeOrTokenTreeVec"],[3,"MatcherTtFrame"],[3,"MatcherPos"],[3,"ParserAnyMacro"],[3,"MacroRulesMacroExpander"],[3,"Restrictions"],[4,"PathParsingMode"],[4,"QPathParsingMode"],[4,"BoundParsingMode"],[4,"TokenType"],[3,"Parser"],[4,"CommentStyle"],[3,"Comment"],[3,"Literal"],[3,"TokenAndSpan"],[3,"StringReader"],[4,"BinOpToken"],[4,"DelimToken"],[4,"IdentStyle"],[4,"SpecialMacroVar"],[4,"Lit"],[4,"Token"],[4,"Nonterminal"],[4,"Keyword"],[3,"InternedString"],[4,"ObsoleteSyntax"],[3,"ParseSess"],[3,"Name"],[3,"Lifetime"],[3,"LifetimeDef"],[3,"PathSegment"],[4,"PathParameters"],[3,"AngleBracketedParameterData"],[3,"ParenthesizedParameterData"],[3,"DefId"],[4,"TyParamBound"],[4,"TraitBoundModifier"],[3,"TyParam"],[3,"Generics"],[3,"WhereClause"],[4,"WherePredicate"],[3,"WhereBoundPredicate"],[3,"WhereRegionPredicate"],[3,"WhereEqPredicate"],[3,"Crate"],[4,"MetaItem_"],[3,"Pat"],[3,"FieldPat"],[4,"BindingMode"],[4,"PatWildKind"],[4,"Pat_"],[4,"Mutability"],[4,"BinOp_"],[4,"UnOp"],[4,"Stmt_"],[4,"MacStmtStyle"],[4,"LocalSource"],[3,"Local"],[4,"Decl_"],[3,"Field"],[4,"BlockCheckMode"],[4,"UnsafeSource"],[3,"Expr"],[4,"Expr_"],[3,"QSelf"],[4,"MatchSource"],[4,"CaptureClause"],[3,"Delimited"],[3,"SequenceRepetition"],[4,"KleeneOp"],[4,"Mac_"],[4,"StrStyle"],[4,"Sign"],[4,"LitIntType"],[4,"Lit_"],[3,"MutTy"],[3,"TypeField"],[3,"MethodSig"],[3,"TraitItem"],[4,"TraitItem_"],[3,"ImplItem"],[4,"ImplItem_"],[4,"IntTy"],[4,"UintTy"],[4,"FloatTy"],[3,"TypeBinding"],[4,"PrimTy"],[3,"BareFnTy"],[4,"Ty_"],[4,"AsmDialect"],[3,"InlineAsm"],[3,"Arg"],[3,"FnDecl"],[4,"Unsafety"],[4,"ImplPolarity"],[4,"FunctionRetTy"],[4,"ExplicitSelf_"],[3,"Mod"],[3,"ForeignMod"],[3,"VariantArg"],[4,"VariantKind"],[3,"EnumDef"],[3,"Variant_"],[4,"PathListItem_"],[4,"ViewPath_"],[4,"AttrStyle"],[3,"AttrId"],[3,"Attribute_"],[3,"TraitRef"],[3,"PolyTraitRef"],[4,"Visibility"],[3,"StructField_"],[4,"StructFieldKind"],[3,"StructDef"],[3,"Item"],[4,"Item_"],[3,"ForeignItem"],[4,"ForeignItem_"],[4,"InlinedItem"],[3,"MacroDef"],[4,"Os"],[4,"Abi"],[4,"Architecture"],[3,"AbiData"],[4,"AbiArchitecture"],[3,"FnLikeNode"],[4,"Code"],[4,"PathElem"],[3,"LinkedPathNode"],[3,"LinkedPath"],[4,"Node"],[4,"MapEntry"],[3,"InlinedParent"],[3,"Forest"],[3,"Map"],[3,"NodesMatchingSuffix"],[3,"IdAndSpanUpdater"],[3,"NodeCollector"],[3,"State"],[3,"IdRange"],[3,"IdVisitor"],[3,"IdRangeComputingVisitor"],[4,"InlineAttr"],[3,"Stability"],[4,"StabilityLevel"],[4,"ReprAttr"],[4,"IntType"],[3,"BytePos"],[3,"CharPos"],[3,"Span"],[3,"Loc"],[3,"LocWithOpt"],[3,"FileMapAndLine"],[3,"FileMapAndBytePos"],[4,"MacroFormat"],[3,"NameAndSpan"],[3,"ExpnInfo"],[3,"ExpnId"],[3,"LineInfo"],[3,"MultiByteChar"],[3,"FileMap"],[3,"CodeMap"],[4,"SpanSnippetError"],[3,"DistinctSources"],[3,"MalformedCodemapPositions"],[3,"Context"],[3,"CfgAttrFolder"],[4,"RenderSpan"],[4,"ColorConfig"],[3,"FatalError"],[3,"ExplicitBug"],[3,"SpanHandler"],[3,"Handler"],[4,"Level"],[3,"EmitterWriter"],[4,"Destination"],[4,"AttributeType"],[3,"Features"],[3,"MacroVisitor"],[3,"PostExpansionVisitor"],[3,"OwnedSlice"],[4,"Mode"],[3,"ShowSpanVisitor"],[3,"StandardLibraryInjector"],[3,"PreludeInjector"],[3,"TestHarnessGenerator"],[4,"HasTestSignature"],[4,"FnKind"],[4,"Breaks"],[3,"BreakToken"],[3,"BeginToken"],[4,"Token"],[4,"PrintStackBreak"],[3,"PrintStackElem"],[3,"Printer"],[3,"NoAnn"],[3,"CurrentCommentAndLiteral"],[8,"ToTokens"],[8,"ExtParseUtils"],[6,"Attribute"],[6,"Lit"]]};
initSearch(searchIndex);
