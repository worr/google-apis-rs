initSidebarItems({"enum":[["Error",""],["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["DefaultDelegate","A delegate with a conservative default implementation, which is used if no other delegate is set."],["Empty","A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"],["ErrorResponse","A utility to represent detailed errors we might see in case there are BadRequests. The latter happen if the sent parameters or request structures are unsound"],["ListLogServiceIndexesResponse","Result returned from ListLogServiceIndexesRequest."],["ListLogServiceSinksResponse","Result returned from `ListLogServiceSinks`."],["ListLogServicesResponse","Result returned from `ListLogServicesRequest`."],["ListLogSinksResponse","Result returned from `ListLogSinks`."],["ListLogsResponse","Result returned from ListLogs."],["Log","A log object."],["LogEntry","An individual entry in a log."],["LogEntryMetadata","Additional data that is associated with a log entry, set by the service creating the log entry."],["LogError","A problem in a sink or the sink's configuration."],["LogService","A log service object."],["LogSink","An object that describes where a log may be written."],["Logging","Central instance to access all Logging related resource activities"],["MethodInfo","Contains information about an API request."],["MultiPartReader","Provides a `Read` interface that converts multiple parts into the protocol identified by RFC2387. **Note**: This implementation is just as rich as it needs to be to perform uploads to google APIs, and might not be a fully-featured implementation."],["ProjectLogDeleteCall","Deletes the specified log resource and all log entries contained in it."],["ProjectLogEntryWriteCall","Creates one or more log entries in a log. You must supply a list of `LogEntry` objects, named `entries`. Each `LogEntry` object must contain a payload object and a `LogEntryMetadata` object that describes the entry. You must fill in all the fields of the entry, metadata, and payload. You can also supply a map, `commonLabels`, that supplies default (key, value) data for the `entries[].metadata.labels` maps, saving you the trouble of creating identical copies for each entry."],["ProjectLogListCall","Lists log resources belonging to the specified project."],["ProjectLogServiceIndexeListCall","Lists log service indexes associated with a log service."],["ProjectLogServiceListCall","Lists log services associated with log entries ingested for a project."],["ProjectLogServiceSinkCreateCall","Creates the specified log service sink resource."],["ProjectLogServiceSinkDeleteCall","Deletes the specified log service sink."],["ProjectLogServiceSinkGetCall","Gets the specified log service sink resource."],["ProjectLogServiceSinkListCall","Lists log service sinks associated with the specified service."],["ProjectLogServiceSinkUpdateCall","Creates or update the specified log service sink resource."],["ProjectLogSinkCreateCall","Creates the specified log sink resource."],["ProjectLogSinkDeleteCall","Deletes the specified log sink resource."],["ProjectLogSinkGetCall","Gets the specified log sink resource."],["ProjectLogSinkListCall","Lists log sinks associated with the specified log."],["ProjectLogSinkUpdateCall","Creates or updates the specified log sink resource."],["ProjectMethods","A builder providing access to all methods supported on *project* resources. It is not used directly, but through the `Logging` hub."],["Status","Represents the RPC error status for Google APIs. See http://go/errormodel for details."],["WriteLogEntriesRequest","The parameters to WriteLogEntries."],["WriteLogEntriesResponse","Result returned from WriteLogEntries. empty"]],"trait":[["CallBuilder","Identifies types which represent builders for a particular resource method"],["Delegate","A trait specifying functionality to help controlling any request performed by the API. The trait has a conservative default implementation."],["Hub","Identifies the Hub. There is only one per library, this trait is supposed to make intended use more explicit. The hub allows to access all resource methods more easily."],["MethodsBuilder","Identifies types for building methods of a particular resource type"],["NestedType","Identifies types which are only used by other types internally. They have no special meaning, this trait just marks them for completeness."],["Part","Identifies types which are only used as part of other types, which usually are carrying the `Resource` trait."],["ReadSeek","A utility to specify reader types which provide seeking capabilities too"],["RequestValue","Identifies types which are used in API requests."],["Resource","Identifies types which can be inserted and deleted. Types with this trait are most commonly used by clients of this API."],["ResponseResult","Identifies types which are used in API responses."],["ToParts","A trait for all types that can convert themselves into a *parts* string"]],"type":[["Result","A universal result type used as return for all calls."]]});