initSidebarItems({"enum":[["Error",""],["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"struct":[["Bucket","Specifies the minimum and maximum values, the color, opacity, icon and weight of a bucket within a StyleSetting."],["Column","Specifies the details of a column in a table."],["ColumnBaseColumn","Identifier of the base column. If present, this column is derived from the specified base column."],["ColumnDeleteCall","Deletes the specified column."],["ColumnGetCall","Retrieves a specific column by its ID."],["ColumnInsertCall","Adds a new column to the table."],["ColumnList","Represents a list of columns in a table."],["ColumnListCall","Retrieves a list of columns."],["ColumnMethods","A builder providing access to all methods supported on *column* resources. It is not used directly, but through the `Fusiontables` hub."],["ColumnPatchCall","Updates the name or type of an existing column. This method supports patch semantics."],["ColumnUpdateCall","Updates the name or type of an existing column."],["DefaultDelegate","A delegate with a conservative default implementation, which is used if no other delegate is set."],["ErrorResponse","A utility to represent detailed errors we might see in case there are BadRequests. The latter happen if the sent parameters or request structures are unsound"],["Fusiontables","Central instance to access all Fusiontables related resource activities"],["Import","Represents an import request."],["LineStyle","Represents a LineStyle within a StyleSetting"],["MethodInfo","Contains information about an API request."],["MultiPartReader","Provides a `Read` interface that converts multiple parts into the protocol identified by RFC2387. **Note**: This implementation is just as rich as it needs to be to perform uploads to google APIs, and might not be a fully-featured implementation."],["PointStyle","Represents a PointStyle within a StyleSetting"],["PolygonStyle","Represents a PolygonStyle within a StyleSetting"],["QueryMethods","A builder providing access to all methods supported on *query* resources. It is not used directly, but through the `Fusiontables` hub."],["QuerySqlCall","Executes a Fusion Tables SQL statement, which can be any of - SELECT - INSERT - UPDATE - DELETE - SHOW - DESCRIBE - CREATE statement."],["QuerySqlGetCall","Executes a SQL statement which can be any of - SELECT - SHOW - DESCRIBE"],["Sqlresponse","Represents a response to a SQL statement."],["StyleDeleteCall","Deletes a style."],["StyleFunction","Represents a StyleFunction within a StyleSetting"],["StyleFunctionGradient","Gradient function that interpolates a range of colors based on column value."],["StyleFunctionGradientColors","Array with two or more colors."],["StyleGetCall","Gets a specific style."],["StyleInsertCall","Adds a new style for the table."],["StyleListCall","Retrieves a list of styles."],["StyleMethods","A builder providing access to all methods supported on *style* resources. It is not used directly, but through the `Fusiontables` hub."],["StylePatchCall","Updates an existing style. This method supports patch semantics."],["StyleSetting","Represents a complete StyleSettings object. The primary key is a combination of the tableId and a styleId."],["StyleSettingList","Represents a list of styles for a given table."],["StyleUpdateCall","Updates an existing style."],["Table","Represents a table."],["TableCopyCall","Copies a table."],["TableDeleteCall","Deletes a table."],["TableGetCall","Retrieves a specific table by its ID."],["TableImportRowCall","Imports more rows into a table."],["TableImportTableCall","Imports a new table."],["TableInsertCall","Creates a new table."],["TableList","Represents a list of tables."],["TableListCall","Retrieves a list of tables a user owns."],["TableMethods","A builder providing access to all methods supported on *table* resources. It is not used directly, but through the `Fusiontables` hub."],["TablePatchCall","Updates an existing table. Unless explicitly requested, only the name, description, and attribution will be updated. This method supports patch semantics."],["TableReplaceRowCall","Replaces rows of an existing table. Current rows remain visible until all replacement rows are ready."],["TableUpdateCall","Updates an existing table. Unless explicitly requested, only the name, description, and attribution will be updated."],["Task","A background task on a table, initiated for time- or resource-consuming operations such as changing column types or deleting all rows."],["TaskDeleteCall","Deletes a specific task by its ID, unless that task has already started running."],["TaskGetCall","Retrieves a specific task by its ID."],["TaskList","Represents a list of tasks for a table."],["TaskListCall","Retrieves a list of tasks."],["TaskMethods","A builder providing access to all methods supported on *task* resources. It is not used directly, but through the `Fusiontables` hub."],["Template","Represents the contents of InfoWindow templates."],["TemplateDeleteCall","Deletes a template"],["TemplateGetCall","Retrieves a specific template by its id"],["TemplateInsertCall","Creates a new template for the table."],["TemplateList","Represents a list of templates for a given table."],["TemplateListCall","Retrieves a list of templates."],["TemplateMethods","A builder providing access to all methods supported on *template* resources. It is not used directly, but through the `Fusiontables` hub."],["TemplatePatchCall","Updates an existing template. This method supports patch semantics."],["TemplateUpdateCall","Updates an existing template"]],"trait":[["CallBuilder","Identifies types which represent builders for a particular resource method"],["Delegate","A trait specifying functionality to help controlling any request performed by the API. The trait has a conservative default implementation."],["Hub","Identifies the Hub. There is only one per library, this trait is supposed to make intended use more explicit. The hub allows to access all resource methods more easily."],["MethodsBuilder","Identifies types for building methods of a particular resource type"],["NestedType","Identifies types which are only used by other types internally. They have no special meaning, this trait just marks them for completeness."],["Part","Identifies types which are only used as part of other types, which usually are carrying the `Resource` trait."],["ReadSeek","A utility to specify reader types which provide seeking capabilities too"],["RequestValue","Identifies types which are used in API requests."],["Resource","Identifies types which can be inserted and deleted. Types with this trait are most commonly used by clients of this API."],["ResponseResult","Identifies types which are used in API responses."],["ToParts","A trait for all types that can convert themselves into a *parts* string"]],"type":[["Result","A universal result type used as return for all calls."]]});