initSidebarItems({"enum":[["Error",""]],"struct":[["ApiGetRestCall","Retrieve the description of a particular version of an api."],["ApiListCall","Retrieve the list of APIs supported at this endpoint."],["ApiMethods","A builder providing access to all methods supported on *api* resources. It is not used directly, but through the `Discovery` hub."],["DefaultDelegate","A delegate with a conservative default implementation, which is used if no other delegate is set."],["DirectoryList","There is no detailed description."],["DirectoryListItems","The individual directory entries. One entry per api/version pair."],["DirectoryListItemsIcons","Links to 16x16 and 32x32 icons representing the API."],["Discovery","Central instance to access all Discovery related resource activities"],["ErrorResponse","A utility to represent detailed errors we might see in case there are BadRequests. The latter happen if the sent parameters or request structures are unsound"],["JsonSchema","There is no detailed description."],["JsonSchemaAnnotations","Additional information about this property."],["JsonSchemaVariant","In a variant data type, the value of one property is used to determine how to interpret the entire entity. Its value must exist in a map of descriminant values to schema names."],["JsonSchemaVariantMap","The map of discriminant value to schema to use for parsing.."],["MethodInfo","Contains information about an API request."],["MultiPartReader","Provides a `Read` interface that converts multiple parts into the protocol identified by RFC2387. **Note**: This implementation is just as rich as it needs to be to perform uploads to google APIs, and might not be a fully-featured implementation."],["RestDescription","There is no detailed description."],["RestDescriptionAuth","Authentication information."],["RestDescriptionAuthOauth2","OAuth 2.0 authentication information."],["RestDescriptionAuthOauth2Scopes","The scope value."],["RestDescriptionIcons","Links to 16x16 and 32x32 icons representing the API."],["RestMethod","There is no detailed description."],["RestMethodMediaUpload","Media upload parameters."],["RestMethodMediaUploadProtocols","Supported upload protocols."],["RestMethodMediaUploadProtocolsResumable","Supports the Resumable Media Upload protocol."],["RestMethodMediaUploadProtocolsSimple","Supports uploading as a single HTTP request."],["RestMethodRequest","The schema for the request."],["RestMethodResponse","The schema for the response."],["RestResource","There is no detailed description."]],"trait":[["CallBuilder","Identifies types which represent builders for a particular resource method"],["Delegate","A trait specifying functionality to help controlling any request performed by the API. The trait has a conservative default implementation."],["Hub","Identifies the Hub. There is only one per library, this trait is supposed to make intended use more explicit. The hub allows to access all resource methods more easily."],["MethodsBuilder","Identifies types for building methods of a particular resource type"],["NestedType","Identifies types which are only used by other types internally. They have no special meaning, this trait just marks them for completeness."],["Part","Identifies types which are only used as part of other types, which usually are carrying the `Resource` trait."],["ReadSeek","A utility to specify reader types which provide seeking capabilities too"],["RequestValue","Identifies types which are used in API requests."],["Resource","Identifies types which can be inserted and deleted. Types with this trait are most commonly used by clients of this API."],["ResponseResult","Identifies types which are used in API responses."],["ToParts","A trait for all types that can convert themselves into a *parts* string"]],"type":[["Result","A universal result type used as return for all calls."]]});